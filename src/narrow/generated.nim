type enum_GUserDirectory* {.size: sizeof(cuint).} = enum
  G_USER_DIRECTORY_DESKTOP = 0
  G_USER_DIRECTORY_DOCUMENTS = 1
  G_USER_DIRECTORY_DOWNLOAD = 2
  G_USER_DIRECTORY_MUSIC = 3
  G_USER_DIRECTORY_PICTURES = 4
  G_USER_DIRECTORY_PUBLIC_SHARE = 5
  G_USER_DIRECTORY_TEMPLATES = 6
  G_USER_DIRECTORY_VIDEOS = 7
  G_USER_N_DIRECTORIES = 8

type enum_GFormatSizeFlags* {.size: sizeof(cuint).} = enum
  G_FORMAT_SIZE_DEFAULT = 0
  G_FORMAT_SIZE_LONG_FORMAT = 1
  G_FORMAT_SIZE_IEC_UNITS = 2
  G_FORMAT_SIZE_BITS = 4
  G_FORMAT_SIZE_ONLY_VALUE = 8
  G_FORMAT_SIZE_ONLY_UNIT = 16

type enum_GThreadError* {.size: sizeof(cuint).} = enum
  G_THREAD_ERROR_AGAIN = 0

type enum_GOnceStatus* {.size: sizeof(cuint).} = enum
  G_ONCE_STATUS_NOTCALLED = 0
  G_ONCE_STATUS_PROGRESS = 1
  G_ONCE_STATUS_READY = 2

type enum_GTimeType* {.size: sizeof(cuint).} = enum
  G_TIME_TYPE_STANDARD = 0
  G_TIME_TYPE_DAYLIGHT = 1
  G_TIME_TYPE_UNIVERSAL = 2

type enum_GBookmarkFileError* {.size: sizeof(cuint).} = enum
  G_BOOKMARK_FILE_ERROR_INVALID_URI = 0
  G_BOOKMARK_FILE_ERROR_INVALID_VALUE = 1
  G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED = 2
  G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND = 3
  G_BOOKMARK_FILE_ERROR_READ = 4
  G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING = 5
  G_BOOKMARK_FILE_ERROR_WRITE = 6
  G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND = 7

type enum_GChecksumType* {.size: sizeof(cuint).} = enum
  G_CHECKSUM_MD5 = 0
  G_CHECKSUM_SHA1 = 1
  G_CHECKSUM_SHA256 = 2
  G_CHECKSUM_SHA512 = 3
  G_CHECKSUM_SHA384 = 4

type enum_GConvertError* {.size: sizeof(cuint).} = enum
  G_CONVERT_ERROR_NO_CONVERSION = 0
  G_CONVERT_ERROR_ILLEGAL_SEQUENCE = 1
  G_CONVERT_ERROR_FAILED = 2
  G_CONVERT_ERROR_PARTIAL_INPUT = 3
  G_CONVERT_ERROR_BAD_URI = 4
  G_CONVERT_ERROR_NOT_ABSOLUTE_PATH = 5
  G_CONVERT_ERROR_NO_MEMORY = 6
  G_CONVERT_ERROR_EMBEDDED_NUL = 7

type enum_GDateDMY* {.size: sizeof(cuint).} = enum
  G_DATE_DAY_enumval = 0
  G_DATE_MONTH_enumval = 1
  G_DATE_YEAR_enumval = 2

type enum_GDateWeekday* {.size: sizeof(cuint).} = enum
  G_DATE_BAD_WEEKDAY = 0
  G_DATE_MONDAY = 1
  G_DATE_TUESDAY = 2
  G_DATE_WEDNESDAY = 3
  G_DATE_THURSDAY = 4
  G_DATE_FRIDAY = 5
  G_DATE_SATURDAY = 6
  G_DATE_SUNDAY = 7

type enum_GDateMonth* {.size: sizeof(cuint).} = enum
  G_DATE_BAD_MONTH = 0
  G_DATE_JANUARY = 1
  G_DATE_FEBRUARY = 2
  G_DATE_MARCH = 3
  G_DATE_APRIL = 4
  G_DATE_MAY = 5
  G_DATE_JUNE = 6
  G_DATE_JULY = 7
  G_DATE_AUGUST = 8
  G_DATE_SEPTEMBER = 9
  G_DATE_OCTOBER = 10
  G_DATE_NOVEMBER = 11
  G_DATE_DECEMBER = 12

type enum_GFileError* {.size: sizeof(cuint).} = enum
  G_FILE_ERROR_EXIST = 0
  G_FILE_ERROR_ISDIR = 1
  G_FILE_ERROR_ACCES = 2
  G_FILE_ERROR_NAMETOOLONG = 3
  G_FILE_ERROR_NOENT = 4
  G_FILE_ERROR_NOTDIR = 5
  G_FILE_ERROR_NXIO = 6
  G_FILE_ERROR_NODEV = 7
  G_FILE_ERROR_ROFS = 8
  G_FILE_ERROR_TXTBSY = 9
  G_FILE_ERROR_FAULT = 10
  G_FILE_ERROR_LOOP = 11
  G_FILE_ERROR_NOSPC = 12
  G_FILE_ERROR_NOMEM = 13
  G_FILE_ERROR_MFILE = 14
  G_FILE_ERROR_NFILE = 15
  G_FILE_ERROR_BADF = 16
  G_FILE_ERROR_INVAL = 17
  G_FILE_ERROR_PIPE = 18
  G_FILE_ERROR_AGAIN = 19
  G_FILE_ERROR_INTR = 20
  G_FILE_ERROR_IO = 21
  G_FILE_ERROR_PERM = 22
  G_FILE_ERROR_NOSYS = 23
  G_FILE_ERROR_FAILED = 24

type enum_GFileTest* {.size: sizeof(cuint).} = enum
  G_FILE_TEST_IS_REGULAR = 1
  G_FILE_TEST_IS_SYMLINK = 2
  G_FILE_TEST_IS_DIR = 4
  G_FILE_TEST_IS_EXECUTABLE = 8
  G_FILE_TEST_EXISTS = 16

type enum_GFileSetContentsFlags* {.size: sizeof(cuint).} = enum
  G_FILE_SET_CONTENTS_NONE = 0
  G_FILE_SET_CONTENTS_CONSISTENT = 1
  G_FILE_SET_CONTENTS_DURABLE = 2
  G_FILE_SET_CONTENTS_ONLY_EXISTING = 4

type enum_GTraverseFlags* {.size: sizeof(cuint).} = enum
  G_TRAVERSE_LEAVES = 1
  G_TRAVERSE_NON_LEAVES = 2
  G_TRAVERSE_ALL = 3

const G_TRAVERSE_MASK* = enum_GTraverseFlags.G_TRAVERSE_ALL
const G_TRAVERSE_LEAFS* = enum_GTraverseFlags.G_TRAVERSE_LEAVES
const G_TRAVERSE_NON_LEAFS* = enum_GTraverseFlags.G_TRAVERSE_NON_LEAVES
type enum_GTraverseType* {.size: sizeof(cuint).} = enum
  G_IN_ORDER = 0
  G_PRE_ORDER = 1
  G_POST_ORDER = 2
  G_LEVEL_ORDER = 3

type enum_GHookFlagMask* {.size: sizeof(cuint).} = enum
  G_HOOK_FLAG_ACTIVE = 1
  G_HOOK_FLAG_IN_CALL = 2
  G_HOOK_FLAG_MASK_enumval = 15

type enum_GIOCondition* {.size: sizeof(cuint).} = enum
  G_IO_IN = 1
  G_IO_PRI = 2
  G_IO_OUT = 4
  G_IO_ERR = 8
  G_IO_HUP = 16
  G_IO_NVAL = 32

type enum_GMainContextFlags* {.size: sizeof(cuint).} = enum
  G_MAIN_CONTEXT_FLAGS_NONE = 0
  G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING = 1

type enum_GUnicodeType* {.size: sizeof(cuint).} = enum
  G_UNICODE_CONTROL = 0
  G_UNICODE_FORMAT = 1
  G_UNICODE_UNASSIGNED = 2
  G_UNICODE_PRIVATE_USE = 3
  G_UNICODE_SURROGATE = 4
  G_UNICODE_LOWERCASE_LETTER = 5
  G_UNICODE_MODIFIER_LETTER = 6
  G_UNICODE_OTHER_LETTER = 7
  G_UNICODE_TITLECASE_LETTER = 8
  G_UNICODE_UPPERCASE_LETTER = 9
  G_UNICODE_SPACING_MARK = 10
  G_UNICODE_ENCLOSING_MARK = 11
  G_UNICODE_NON_SPACING_MARK = 12
  G_UNICODE_DECIMAL_NUMBER = 13
  G_UNICODE_LETTER_NUMBER = 14
  G_UNICODE_OTHER_NUMBER = 15
  G_UNICODE_CONNECT_PUNCTUATION = 16
  G_UNICODE_DASH_PUNCTUATION = 17
  G_UNICODE_CLOSE_PUNCTUATION = 18
  G_UNICODE_FINAL_PUNCTUATION = 19
  G_UNICODE_INITIAL_PUNCTUATION = 20
  G_UNICODE_OTHER_PUNCTUATION = 21
  G_UNICODE_OPEN_PUNCTUATION = 22
  G_UNICODE_CURRENCY_SYMBOL = 23
  G_UNICODE_MODIFIER_SYMBOL = 24
  G_UNICODE_MATH_SYMBOL = 25
  G_UNICODE_OTHER_SYMBOL = 26
  G_UNICODE_LINE_SEPARATOR = 27
  G_UNICODE_PARAGRAPH_SEPARATOR = 28
  G_UNICODE_SPACE_SEPARATOR = 29

type enum_GUnicodeBreakType* {.size: sizeof(cuint).} = enum
  G_UNICODE_BREAK_MANDATORY = 0
  G_UNICODE_BREAK_CARRIAGE_RETURN = 1
  G_UNICODE_BREAK_LINE_FEED = 2
  G_UNICODE_BREAK_COMBINING_MARK = 3
  G_UNICODE_BREAK_SURROGATE = 4
  G_UNICODE_BREAK_ZERO_WIDTH_SPACE = 5
  G_UNICODE_BREAK_INSEPARABLE = 6
  G_UNICODE_BREAK_NON_BREAKING_GLUE = 7
  G_UNICODE_BREAK_CONTINGENT = 8
  G_UNICODE_BREAK_SPACE = 9
  G_UNICODE_BREAK_AFTER = 10
  G_UNICODE_BREAK_BEFORE = 11
  G_UNICODE_BREAK_BEFORE_AND_AFTER = 12
  G_UNICODE_BREAK_HYPHEN = 13
  G_UNICODE_BREAK_NON_STARTER = 14
  G_UNICODE_BREAK_OPEN_PUNCTUATION = 15
  G_UNICODE_BREAK_CLOSE_PUNCTUATION = 16
  G_UNICODE_BREAK_QUOTATION = 17
  G_UNICODE_BREAK_EXCLAMATION = 18
  G_UNICODE_BREAK_IDEOGRAPHIC = 19
  G_UNICODE_BREAK_NUMERIC = 20
  G_UNICODE_BREAK_INFIX_SEPARATOR = 21
  G_UNICODE_BREAK_SYMBOL = 22
  G_UNICODE_BREAK_ALPHABETIC = 23
  G_UNICODE_BREAK_PREFIX = 24
  G_UNICODE_BREAK_POSTFIX = 25
  G_UNICODE_BREAK_COMPLEX_CONTEXT = 26
  G_UNICODE_BREAK_AMBIGUOUS = 27
  G_UNICODE_BREAK_UNKNOWN = 28
  G_UNICODE_BREAK_NEXT_LINE = 29
  G_UNICODE_BREAK_WORD_JOINER = 30
  G_UNICODE_BREAK_HANGUL_L_JAMO = 31
  G_UNICODE_BREAK_HANGUL_V_JAMO = 32
  G_UNICODE_BREAK_HANGUL_T_JAMO = 33
  G_UNICODE_BREAK_HANGUL_LV_SYLLABLE = 34
  G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE = 35
  G_UNICODE_BREAK_CLOSE_PARANTHESIS = 36
  G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER = 37
  G_UNICODE_BREAK_HEBREW_LETTER = 38
  G_UNICODE_BREAK_REGIONAL_INDICATOR = 39
  G_UNICODE_BREAK_EMOJI_BASE = 40
  G_UNICODE_BREAK_EMOJI_MODIFIER = 41
  G_UNICODE_BREAK_ZERO_WIDTH_JOINER = 42
  G_UNICODE_BREAK_AKSARA = 43
  G_UNICODE_BREAK_AKSARA_PRE_BASE = 44
  G_UNICODE_BREAK_AKSARA_START = 45
  G_UNICODE_BREAK_VIRAMA_FINAL = 46
  G_UNICODE_BREAK_VIRAMA = 47

const G_UNICODE_BREAK_CLOSE_PARENTHESIS* =
  enum_GUnicodeBreakType.G_UNICODE_BREAK_CLOSE_PARANTHESIS
type enum_GUnicodeScript* {.size: sizeof(cint).} = enum
  G_UNICODE_SCRIPT_INVALID_CODE = -1
  G_UNICODE_SCRIPT_COMMON = 0
  G_UNICODE_SCRIPT_INHERITED = 1
  G_UNICODE_SCRIPT_ARABIC = 2
  G_UNICODE_SCRIPT_ARMENIAN = 3
  G_UNICODE_SCRIPT_BENGALI = 4
  G_UNICODE_SCRIPT_BOPOMOFO = 5
  G_UNICODE_SCRIPT_CHEROKEE = 6
  G_UNICODE_SCRIPT_COPTIC = 7
  G_UNICODE_SCRIPT_CYRILLIC = 8
  G_UNICODE_SCRIPT_DESERET = 9
  G_UNICODE_SCRIPT_DEVANAGARI = 10
  G_UNICODE_SCRIPT_ETHIOPIC = 11
  G_UNICODE_SCRIPT_GEORGIAN = 12
  G_UNICODE_SCRIPT_GOTHIC = 13
  G_UNICODE_SCRIPT_GREEK = 14
  G_UNICODE_SCRIPT_GUJARATI = 15
  G_UNICODE_SCRIPT_GURMUKHI = 16
  G_UNICODE_SCRIPT_HAN = 17
  G_UNICODE_SCRIPT_HANGUL = 18
  G_UNICODE_SCRIPT_HEBREW = 19
  G_UNICODE_SCRIPT_HIRAGANA = 20
  G_UNICODE_SCRIPT_KANNADA = 21
  G_UNICODE_SCRIPT_KATAKANA = 22
  G_UNICODE_SCRIPT_KHMER = 23
  G_UNICODE_SCRIPT_LAO = 24
  G_UNICODE_SCRIPT_LATIN = 25
  G_UNICODE_SCRIPT_MALAYALAM = 26
  G_UNICODE_SCRIPT_MONGOLIAN = 27
  G_UNICODE_SCRIPT_MYANMAR = 28
  G_UNICODE_SCRIPT_OGHAM = 29
  G_UNICODE_SCRIPT_OLD_ITALIC = 30
  G_UNICODE_SCRIPT_ORIYA = 31
  G_UNICODE_SCRIPT_RUNIC = 32
  G_UNICODE_SCRIPT_SINHALA = 33
  G_UNICODE_SCRIPT_SYRIAC = 34
  G_UNICODE_SCRIPT_TAMIL = 35
  G_UNICODE_SCRIPT_TELUGU = 36
  G_UNICODE_SCRIPT_THAANA = 37
  G_UNICODE_SCRIPT_THAI = 38
  G_UNICODE_SCRIPT_TIBETAN = 39
  G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL = 40
  G_UNICODE_SCRIPT_YI = 41
  G_UNICODE_SCRIPT_TAGALOG = 42
  G_UNICODE_SCRIPT_HANUNOO = 43
  G_UNICODE_SCRIPT_BUHID = 44
  G_UNICODE_SCRIPT_TAGBANWA = 45
  G_UNICODE_SCRIPT_BRAILLE = 46
  G_UNICODE_SCRIPT_CYPRIOT = 47
  G_UNICODE_SCRIPT_LIMBU = 48
  G_UNICODE_SCRIPT_OSMANYA = 49
  G_UNICODE_SCRIPT_SHAVIAN = 50
  G_UNICODE_SCRIPT_LINEAR_B = 51
  G_UNICODE_SCRIPT_TAI_LE = 52
  G_UNICODE_SCRIPT_UGARITIC = 53
  G_UNICODE_SCRIPT_NEW_TAI_LUE = 54
  G_UNICODE_SCRIPT_BUGINESE = 55
  G_UNICODE_SCRIPT_GLAGOLITIC = 56
  G_UNICODE_SCRIPT_TIFINAGH = 57
  G_UNICODE_SCRIPT_SYLOTI_NAGRI = 58
  G_UNICODE_SCRIPT_OLD_PERSIAN = 59
  G_UNICODE_SCRIPT_KHAROSHTHI = 60
  G_UNICODE_SCRIPT_UNKNOWN = 61
  G_UNICODE_SCRIPT_BALINESE = 62
  G_UNICODE_SCRIPT_CUNEIFORM = 63
  G_UNICODE_SCRIPT_PHOENICIAN = 64
  G_UNICODE_SCRIPT_PHAGS_PA = 65
  G_UNICODE_SCRIPT_NKO = 66
  G_UNICODE_SCRIPT_KAYAH_LI = 67
  G_UNICODE_SCRIPT_LEPCHA = 68
  G_UNICODE_SCRIPT_REJANG = 69
  G_UNICODE_SCRIPT_SUNDANESE = 70
  G_UNICODE_SCRIPT_SAURASHTRA = 71
  G_UNICODE_SCRIPT_CHAM = 72
  G_UNICODE_SCRIPT_OL_CHIKI = 73
  G_UNICODE_SCRIPT_VAI = 74
  G_UNICODE_SCRIPT_CARIAN = 75
  G_UNICODE_SCRIPT_LYCIAN = 76
  G_UNICODE_SCRIPT_LYDIAN = 77
  G_UNICODE_SCRIPT_AVESTAN = 78
  G_UNICODE_SCRIPT_BAMUM = 79
  G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS = 80
  G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC = 81
  G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI = 82
  G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN = 83
  G_UNICODE_SCRIPT_JAVANESE = 84
  G_UNICODE_SCRIPT_KAITHI = 85
  G_UNICODE_SCRIPT_LISU = 86
  G_UNICODE_SCRIPT_MEETEI_MAYEK = 87
  G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN = 88
  G_UNICODE_SCRIPT_OLD_TURKIC = 89
  G_UNICODE_SCRIPT_SAMARITAN = 90
  G_UNICODE_SCRIPT_TAI_THAM = 91
  G_UNICODE_SCRIPT_TAI_VIET = 92
  G_UNICODE_SCRIPT_BATAK = 93
  G_UNICODE_SCRIPT_BRAHMI = 94
  G_UNICODE_SCRIPT_MANDAIC = 95
  G_UNICODE_SCRIPT_CHAKMA = 96
  G_UNICODE_SCRIPT_MEROITIC_CURSIVE = 97
  G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS = 98
  G_UNICODE_SCRIPT_MIAO = 99
  G_UNICODE_SCRIPT_SHARADA = 100
  G_UNICODE_SCRIPT_SORA_SOMPENG = 101
  G_UNICODE_SCRIPT_TAKRI = 102
  G_UNICODE_SCRIPT_BASSA_VAH = 103
  G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN = 104
  G_UNICODE_SCRIPT_DUPLOYAN = 105
  G_UNICODE_SCRIPT_ELBASAN = 106
  G_UNICODE_SCRIPT_GRANTHA = 107
  G_UNICODE_SCRIPT_KHOJKI = 108
  G_UNICODE_SCRIPT_KHUDAWADI = 109
  G_UNICODE_SCRIPT_LINEAR_A = 110
  G_UNICODE_SCRIPT_MAHAJANI = 111
  G_UNICODE_SCRIPT_MANICHAEAN = 112
  G_UNICODE_SCRIPT_MENDE_KIKAKUI = 113
  G_UNICODE_SCRIPT_MODI = 114
  G_UNICODE_SCRIPT_MRO = 115
  G_UNICODE_SCRIPT_NABATAEAN = 116
  G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN = 117
  G_UNICODE_SCRIPT_OLD_PERMIC = 118
  G_UNICODE_SCRIPT_PAHAWH_HMONG = 119
  G_UNICODE_SCRIPT_PALMYRENE = 120
  G_UNICODE_SCRIPT_PAU_CIN_HAU = 121
  G_UNICODE_SCRIPT_PSALTER_PAHLAVI = 122
  G_UNICODE_SCRIPT_SIDDHAM = 123
  G_UNICODE_SCRIPT_TIRHUTA = 124
  G_UNICODE_SCRIPT_WARANG_CITI = 125
  G_UNICODE_SCRIPT_AHOM = 126
  G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS = 127
  G_UNICODE_SCRIPT_HATRAN = 128
  G_UNICODE_SCRIPT_MULTANI = 129
  G_UNICODE_SCRIPT_OLD_HUNGARIAN = 130
  G_UNICODE_SCRIPT_SIGNWRITING = 131
  G_UNICODE_SCRIPT_ADLAM = 132
  G_UNICODE_SCRIPT_BHAIKSUKI = 133
  G_UNICODE_SCRIPT_MARCHEN = 134
  G_UNICODE_SCRIPT_NEWA = 135
  G_UNICODE_SCRIPT_OSAGE = 136
  G_UNICODE_SCRIPT_TANGUT = 137
  G_UNICODE_SCRIPT_MASARAM_GONDI = 138
  G_UNICODE_SCRIPT_NUSHU = 139
  G_UNICODE_SCRIPT_SOYOMBO = 140
  G_UNICODE_SCRIPT_ZANABAZAR_SQUARE = 141
  G_UNICODE_SCRIPT_DOGRA = 142
  G_UNICODE_SCRIPT_GUNJALA_GONDI = 143
  G_UNICODE_SCRIPT_HANIFI_ROHINGYA = 144
  G_UNICODE_SCRIPT_MAKASAR = 145
  G_UNICODE_SCRIPT_MEDEFAIDRIN = 146
  G_UNICODE_SCRIPT_OLD_SOGDIAN = 147
  G_UNICODE_SCRIPT_SOGDIAN = 148
  G_UNICODE_SCRIPT_ELYMAIC = 149
  G_UNICODE_SCRIPT_NANDINAGARI = 150
  G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG = 151
  G_UNICODE_SCRIPT_WANCHO = 152
  G_UNICODE_SCRIPT_CHORASMIAN = 153
  G_UNICODE_SCRIPT_DIVES_AKURU = 154
  G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT = 155
  G_UNICODE_SCRIPT_YEZIDI = 156
  G_UNICODE_SCRIPT_CYPRO_MINOAN = 157
  G_UNICODE_SCRIPT_OLD_UYGHUR = 158
  G_UNICODE_SCRIPT_TANGSA = 159
  G_UNICODE_SCRIPT_TOTO = 160
  G_UNICODE_SCRIPT_VITHKUQI = 161
  G_UNICODE_SCRIPT_MATH = 162
  G_UNICODE_SCRIPT_KAWI = 163
  G_UNICODE_SCRIPT_NAG_MUNDARI = 164
  G_UNICODE_SCRIPT_TODHRI = 165
  G_UNICODE_SCRIPT_GARAY = 166
  G_UNICODE_SCRIPT_TULU_TIGALARI = 167
  G_UNICODE_SCRIPT_SUNUWAR = 168
  G_UNICODE_SCRIPT_GURUNG_KHEMA = 169
  G_UNICODE_SCRIPT_KIRAT_RAI = 170
  G_UNICODE_SCRIPT_OL_ONAL = 171

type enum_GNormalizeMode* {.size: sizeof(cuint).} = enum
  G_NORMALIZE_DEFAULT = 0
  G_NORMALIZE_DEFAULT_COMPOSE = 1
  G_NORMALIZE_ALL = 2
  G_NORMALIZE_ALL_COMPOSE = 3

const G_NORMALIZE_NFD* = enum_GNormalizeMode.G_NORMALIZE_DEFAULT
const G_NORMALIZE_NFC* = enum_GNormalizeMode.G_NORMALIZE_DEFAULT_COMPOSE
const G_NORMALIZE_NFKD* = enum_GNormalizeMode.G_NORMALIZE_ALL
const G_NORMALIZE_NFKC* = enum_GNormalizeMode.G_NORMALIZE_ALL_COMPOSE
type enum_GAsciiType* {.size: sizeof(cuint).} = enum
  G_ASCII_ALNUM = 1
  G_ASCII_ALPHA = 2
  G_ASCII_CNTRL = 4
  G_ASCII_DIGIT = 8
  G_ASCII_GRAPH = 16
  G_ASCII_LOWER = 32
  G_ASCII_PRINT = 64
  G_ASCII_PUNCT = 128
  G_ASCII_SPACE = 256
  G_ASCII_UPPER = 512
  G_ASCII_XDIGIT = 1024

type enum_GNumberParserError* {.size: sizeof(cuint).} = enum
  G_NUMBER_PARSER_ERROR_INVALID = 0
  G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS = 1

type enum_GIOError* {.size: sizeof(cuint).} = enum
  G_IO_ERROR_NONE = 0
  G_IO_ERROR_AGAIN = 1
  G_IO_ERROR_INVAL = 2
  G_IO_ERROR_UNKNOWN = 3

type enum_GIOChannelError* {.size: sizeof(cuint).} = enum
  G_IO_CHANNEL_ERROR_FBIG = 0
  G_IO_CHANNEL_ERROR_INVAL = 1
  G_IO_CHANNEL_ERROR_IO = 2
  G_IO_CHANNEL_ERROR_ISDIR = 3
  G_IO_CHANNEL_ERROR_NOSPC = 4
  G_IO_CHANNEL_ERROR_NXIO = 5
  G_IO_CHANNEL_ERROR_OVERFLOW = 6
  G_IO_CHANNEL_ERROR_PIPE = 7
  G_IO_CHANNEL_ERROR_FAILED = 8

type enum_GIOStatus* {.size: sizeof(cuint).} = enum
  G_IO_STATUS_ERROR = 0
  G_IO_STATUS_NORMAL = 1
  G_IO_STATUS_EOF = 2
  G_IO_STATUS_AGAIN = 3

type enum_GSeekType* {.size: sizeof(cuint).} = enum
  G_SEEK_CUR = 0
  G_SEEK_SET = 1
  G_SEEK_END = 2

type enum_GIOFlags* {.size: sizeof(cuint).} = enum
  G_IO_FLAG_NONE = 0
  G_IO_FLAG_APPEND = 1
  G_IO_FLAG_NONBLOCK = 2
  G_IO_FLAG_SET_MASK = 3
  G_IO_FLAG_IS_READABLE = 4
  G_IO_FLAG_IS_WRITABLE = 8
  G_IO_FLAG_IS_SEEKABLE = 16
  G_IO_FLAG_MASK = 31

const G_IO_FLAG_IS_WRITEABLE* = enum_GIOFlags.G_IO_FLAG_IS_WRITABLE
const G_IO_FLAG_GET_MASK* = enum_GIOFlags.G_IO_FLAG_MASK
type enum_GKeyFileError* {.size: sizeof(cuint).} = enum
  G_KEY_FILE_ERROR_UNKNOWN_ENCODING = 0
  G_KEY_FILE_ERROR_PARSE = 1
  G_KEY_FILE_ERROR_NOT_FOUND = 2
  G_KEY_FILE_ERROR_KEY_NOT_FOUND = 3
  G_KEY_FILE_ERROR_GROUP_NOT_FOUND = 4
  G_KEY_FILE_ERROR_INVALID_VALUE = 5

type enum_GKeyFileFlags* {.size: sizeof(cuint).} = enum
  G_KEY_FILE_NONE = 0
  G_KEY_FILE_KEEP_COMMENTS = 1
  G_KEY_FILE_KEEP_TRANSLATIONS = 2

type enum_GMarkupError* {.size: sizeof(cuint).} = enum
  G_MARKUP_ERROR_BAD_UTF8 = 0
  G_MARKUP_ERROR_EMPTY = 1
  G_MARKUP_ERROR_PARSE = 2
  G_MARKUP_ERROR_UNKNOWN_ELEMENT = 3
  G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE = 4
  G_MARKUP_ERROR_INVALID_CONTENT = 5
  G_MARKUP_ERROR_MISSING_ATTRIBUTE = 6

type enum_GMarkupParseFlags* {.size: sizeof(cuint).} = enum
  G_MARKUP_DEFAULT_FLAGS = 0
  G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG = 1
  G_MARKUP_TREAT_CDATA_AS_TEXT = 2
  G_MARKUP_PREFIX_ERROR_POSITION = 4
  G_MARKUP_IGNORE_QUALIFIED = 8

type enum_GMarkupCollectType* {.size: sizeof(cuint).} = enum
  G_MARKUP_COLLECT_INVALID = 0
  G_MARKUP_COLLECT_STRING = 1
  G_MARKUP_COLLECT_STRDUP = 2
  G_MARKUP_COLLECT_BOOLEAN = 3
  G_MARKUP_COLLECT_TRISTATE = 4
  G_MARKUP_COLLECT_OPTIONAL = 65536

type enum_GVariantClass* {.size: sizeof(cuint).} = enum
  G_VARIANT_CLASS_TUPLE = 40
  G_VARIANT_CLASS_ARRAY = 97
  G_VARIANT_CLASS_BOOLEAN = 98
  G_VARIANT_CLASS_DOUBLE = 100
  G_VARIANT_CLASS_SIGNATURE = 103
  G_VARIANT_CLASS_HANDLE = 104
  G_VARIANT_CLASS_INT32 = 105
  G_VARIANT_CLASS_MAYBE = 109
  G_VARIANT_CLASS_INT16 = 110
  G_VARIANT_CLASS_OBJECT_PATH = 111
  G_VARIANT_CLASS_UINT16 = 113
  G_VARIANT_CLASS_STRING = 115
  G_VARIANT_CLASS_UINT64 = 116
  G_VARIANT_CLASS_UINT32 = 117
  G_VARIANT_CLASS_VARIANT = 118
  G_VARIANT_CLASS_INT64 = 120
  G_VARIANT_CLASS_BYTE = 121
  G_VARIANT_CLASS_DICT_ENTRY = 123

type enum_GVariantParseError* {.size: sizeof(cuint).} = enum
  G_VARIANT_PARSE_ERROR_FAILED = 0
  G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED = 1
  G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE = 2
  G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED = 3
  G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END = 4
  G_VARIANT_PARSE_ERROR_INVALID_CHARACTER = 5
  G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING = 6
  G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH = 7
  G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE = 8
  G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING = 9
  G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE = 10
  G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE = 11
  G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG = 12
  G_VARIANT_PARSE_ERROR_TYPE_ERROR = 13
  G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN = 14
  G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD = 15
  G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT = 16
  G_VARIANT_PARSE_ERROR_VALUE_EXPECTED = 17
  G_VARIANT_PARSE_ERROR_RECURSION = 18

type enum_GLogLevelFlags* {.size: sizeof(cint).} = enum
  G_LOG_LEVEL_MASK = -4
  G_LOG_FLAG_RECURSION = 1
  G_LOG_FLAG_FATAL = 2
  G_LOG_LEVEL_ERROR = 4
  G_LOG_LEVEL_CRITICAL = 8
  G_LOG_LEVEL_WARNING = 16
  G_LOG_LEVEL_MESSAGE = 32
  G_LOG_LEVEL_INFO = 64
  G_LOG_LEVEL_DEBUG = 128

type enum_GLogWriterOutput* {.size: sizeof(cuint).} = enum
  G_LOG_WRITER_UNHANDLED = 0
  G_LOG_WRITER_HANDLED = 1

type enum_GOptionFlags* {.size: sizeof(cuint).} = enum
  G_OPTION_FLAG_NONE = 0
  G_OPTION_FLAG_HIDDEN = 1
  G_OPTION_FLAG_IN_MAIN = 2
  G_OPTION_FLAG_REVERSE = 4
  G_OPTION_FLAG_NO_ARG = 8
  G_OPTION_FLAG_FILENAME = 16
  G_OPTION_FLAG_OPTIONAL_ARG = 32
  G_OPTION_FLAG_NOALIAS = 64
  G_OPTION_FLAG_DEPRECATED = 128

type enum_GOptionArg* {.size: sizeof(cuint).} = enum
  G_OPTION_ARG_NONE = 0
  G_OPTION_ARG_STRING = 1
  G_OPTION_ARG_INT = 2
  G_OPTION_ARG_CALLBACK = 3
  G_OPTION_ARG_FILENAME = 4
  G_OPTION_ARG_STRING_ARRAY = 5
  G_OPTION_ARG_FILENAME_ARRAY = 6
  G_OPTION_ARG_DOUBLE = 7
  G_OPTION_ARG_INT64 = 8

type enum_GOptionError* {.size: sizeof(cuint).} = enum
  G_OPTION_ERROR_UNKNOWN_OPTION = 0
  G_OPTION_ERROR_BAD_VALUE = 1
  G_OPTION_ERROR_FAILED = 2

type enum_GRegexError* {.size: sizeof(cuint).} = enum
  G_REGEX_ERROR_COMPILE = 0
  G_REGEX_ERROR_OPTIMIZE = 1
  G_REGEX_ERROR_REPLACE = 2
  G_REGEX_ERROR_MATCH = 3
  G_REGEX_ERROR_INTERNAL = 4
  G_REGEX_ERROR_STRAY_BACKSLASH = 101
  G_REGEX_ERROR_MISSING_CONTROL_CHAR = 102
  G_REGEX_ERROR_UNRECOGNIZED_ESCAPE = 103
  G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER = 104
  G_REGEX_ERROR_QUANTIFIER_TOO_BIG = 105
  G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS = 106
  G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS = 107
  G_REGEX_ERROR_RANGE_OUT_OF_ORDER = 108
  G_REGEX_ERROR_NOTHING_TO_REPEAT = 109
  G_REGEX_ERROR_UNRECOGNIZED_CHARACTER = 112
  G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS = 113
  G_REGEX_ERROR_UNMATCHED_PARENTHESIS = 114
  G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE = 115
  G_REGEX_ERROR_UNTERMINATED_COMMENT = 118
  G_REGEX_ERROR_EXPRESSION_TOO_LARGE = 120
  G_REGEX_ERROR_MEMORY_ERROR = 121
  G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND = 125
  G_REGEX_ERROR_MALFORMED_CONDITION = 126
  G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES = 127
  G_REGEX_ERROR_ASSERTION_EXPECTED = 128
  G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME = 130
  G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED = 131
  G_REGEX_ERROR_HEX_CODE_TOO_LARGE = 134
  G_REGEX_ERROR_INVALID_CONDITION = 135
  G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND = 136
  G_REGEX_ERROR_INFINITE_LOOP = 140
  G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR = 142
  G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME = 143
  G_REGEX_ERROR_MALFORMED_PROPERTY = 146
  G_REGEX_ERROR_UNKNOWN_PROPERTY = 147
  G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG = 148
  G_REGEX_ERROR_TOO_MANY_SUBPATTERNS = 149
  G_REGEX_ERROR_INVALID_OCTAL_VALUE = 151
  G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE = 154
  G_REGEX_ERROR_DEFINE_REPETION = 155
  G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS = 156
  G_REGEX_ERROR_MISSING_BACK_REFERENCE = 157
  G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE = 158
  G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN = 159
  G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB = 160
  G_REGEX_ERROR_NUMBER_TOO_BIG = 161
  G_REGEX_ERROR_MISSING_SUBPATTERN_NAME = 162
  G_REGEX_ERROR_MISSING_DIGIT = 163
  G_REGEX_ERROR_INVALID_DATA_CHARACTER = 164
  G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME = 165
  G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED = 166
  G_REGEX_ERROR_INVALID_CONTROL_CHAR = 168
  G_REGEX_ERROR_MISSING_NAME = 169
  G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS = 171
  G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES = 172
  G_REGEX_ERROR_NAME_TOO_LONG = 175
  G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE = 176

type enum_GRegexCompileFlags* {.size: sizeof(cuint).} = enum
  G_REGEX_DEFAULT = 0
  G_REGEX_CASELESS = 1
  G_REGEX_MULTILINE = 2
  G_REGEX_DOTALL = 4
  G_REGEX_EXTENDED = 8
  G_REGEX_ANCHORED = 16
  G_REGEX_DOLLAR_ENDONLY = 32
  G_REGEX_UNGREEDY = 512
  G_REGEX_RAW = 2048
  G_REGEX_NO_AUTO_CAPTURE = 4096
  G_REGEX_OPTIMIZE = 8192
  G_REGEX_FIRSTLINE = 262144
  G_REGEX_DUPNAMES = 524288
  G_REGEX_NEWLINE_CR = 1048576
  G_REGEX_NEWLINE_LF = 2097152
  G_REGEX_NEWLINE_CRLF = 3145728
  G_REGEX_NEWLINE_ANYCRLF = 5242880
  G_REGEX_BSR_ANYCRLF = 8388608
  G_REGEX_JAVASCRIPT_COMPAT = 33554432

type enum_GRegexMatchFlags* {.size: sizeof(cuint).} = enum
  G_REGEX_MATCH_DEFAULT = 0
  G_REGEX_MATCH_ANCHORED = 16
  G_REGEX_MATCH_NOTBOL = 128
  G_REGEX_MATCH_NOTEOL = 256
  G_REGEX_MATCH_NOTEMPTY = 1024
  G_REGEX_MATCH_PARTIAL = 32768
  G_REGEX_MATCH_NEWLINE_CR = 1048576
  G_REGEX_MATCH_NEWLINE_LF = 2097152
  G_REGEX_MATCH_NEWLINE_CRLF = 3145728
  G_REGEX_MATCH_NEWLINE_ANY = 4194304
  G_REGEX_MATCH_NEWLINE_ANYCRLF = 5242880
  G_REGEX_MATCH_BSR_ANYCRLF = 8388608
  G_REGEX_MATCH_BSR_ANY = 16777216
  G_REGEX_MATCH_PARTIAL_HARD = 134217728
  G_REGEX_MATCH_NOTEMPTY_ATSTART = 268435456

const G_REGEX_MATCH_PARTIAL_SOFT* = enum_GRegexMatchFlags.G_REGEX_MATCH_PARTIAL
type enum_GErrorType* {.size: sizeof(cuint).} = enum
  G_ERR_UNKNOWN = 0
  G_ERR_UNEXP_EOF = 1
  G_ERR_UNEXP_EOF_IN_STRING = 2
  G_ERR_UNEXP_EOF_IN_COMMENT = 3
  G_ERR_NON_DIGIT_IN_CONST = 4
  G_ERR_DIGIT_RADIX = 5
  G_ERR_FLOAT_RADIX = 6
  G_ERR_FLOAT_MALFORMED = 7

type enum_GTokenType* {.size: sizeof(cuint).} = enum
  G_TOKEN_EOF = 0
  G_TOKEN_LEFT_PAREN = 40
  G_TOKEN_RIGHT_PAREN = 41
  G_TOKEN_COMMA = 44
  G_TOKEN_EQUAL_SIGN = 61
  G_TOKEN_LEFT_BRACE = 91
  G_TOKEN_RIGHT_BRACE = 93
  G_TOKEN_LEFT_CURLY = 123
  G_TOKEN_RIGHT_CURLY = 125
  G_TOKEN_NONE = 256
  G_TOKEN_ERROR = 257
  G_TOKEN_CHAR = 258
  G_TOKEN_BINARY = 259
  G_TOKEN_OCTAL = 260
  G_TOKEN_INT = 261
  G_TOKEN_HEX = 262
  G_TOKEN_FLOAT = 263
  G_TOKEN_STRING = 264
  G_TOKEN_SYMBOL = 265
  G_TOKEN_IDENTIFIER = 266
  G_TOKEN_IDENTIFIER_NULL = 267
  G_TOKEN_COMMENT_SINGLE = 268
  G_TOKEN_COMMENT_MULTI = 269
  G_TOKEN_LAST = 270

type enum_GShellError* {.size: sizeof(cuint).} = enum
  G_SHELL_ERROR_BAD_QUOTING = 0
  G_SHELL_ERROR_EMPTY_STRING = 1
  G_SHELL_ERROR_FAILED = 2

type enum_GSliceConfig* {.size: sizeof(cuint).} = enum
  G_SLICE_CONFIG_ALWAYS_MALLOC = 1
  G_SLICE_CONFIG_BYPASS_MAGAZINES = 2
  G_SLICE_CONFIG_WORKING_SET_MSECS = 3
  G_SLICE_CONFIG_COLOR_INCREMENT = 4
  G_SLICE_CONFIG_CHUNK_SIZES = 5
  G_SLICE_CONFIG_CONTENTION_COUNTER = 6

type enum_GSpawnError* {.size: sizeof(cuint).} = enum
  G_SPAWN_ERROR_FORK = 0
  G_SPAWN_ERROR_READ = 1
  G_SPAWN_ERROR_CHDIR = 2
  G_SPAWN_ERROR_ACCES = 3
  G_SPAWN_ERROR_PERM = 4
  G_SPAWN_ERROR_TOO_BIG = 5
  G_SPAWN_ERROR_NOEXEC = 6
  G_SPAWN_ERROR_NAMETOOLONG = 7
  G_SPAWN_ERROR_NOENT = 8
  G_SPAWN_ERROR_NOMEM = 9
  G_SPAWN_ERROR_NOTDIR = 10
  G_SPAWN_ERROR_LOOP = 11
  G_SPAWN_ERROR_TXTBUSY = 12
  G_SPAWN_ERROR_IO = 13
  G_SPAWN_ERROR_NFILE = 14
  G_SPAWN_ERROR_MFILE = 15
  G_SPAWN_ERROR_INVAL = 16
  G_SPAWN_ERROR_ISDIR = 17
  G_SPAWN_ERROR_LIBBAD = 18
  G_SPAWN_ERROR_FAILED = 19

const G_SPAWN_ERROR_2BIG* = enum_GSpawnError.G_SPAWN_ERROR_TOO_BIG
type enum_GSpawnFlags* {.size: sizeof(cuint).} = enum
  G_SPAWN_DEFAULT = 0
  G_SPAWN_LEAVE_DESCRIPTORS_OPEN = 1
  G_SPAWN_DO_NOT_REAP_CHILD = 2
  G_SPAWN_SEARCH_PATH = 4
  G_SPAWN_STDOUT_TO_DEV_NULL = 8
  G_SPAWN_STDERR_TO_DEV_NULL = 16
  G_SPAWN_CHILD_INHERITS_STDIN = 32
  G_SPAWN_FILE_AND_ARGV_ZERO = 64
  G_SPAWN_SEARCH_PATH_FROM_ENVP = 128
  G_SPAWN_CLOEXEC_PIPES = 256
  G_SPAWN_CHILD_INHERITS_STDOUT = 512
  G_SPAWN_CHILD_INHERITS_STDERR = 1024
  G_SPAWN_STDIN_FROM_DEV_NULL = 2048

type enum_GTestTrapFlags* {.size: sizeof(cuint).} = enum
  G_TEST_TRAP_DEFAULT = 0
  G_TEST_TRAP_SILENCE_STDOUT = 128
  G_TEST_TRAP_SILENCE_STDERR = 256
  G_TEST_TRAP_INHERIT_STDIN = 512

type enum_GTestSubprocessFlags* {.size: sizeof(cuint).} = enum
  G_TEST_SUBPROCESS_DEFAULT = 0
  G_TEST_SUBPROCESS_INHERIT_STDIN = 1
  G_TEST_SUBPROCESS_INHERIT_STDOUT = 2
  G_TEST_SUBPROCESS_INHERIT_STDERR = 4

type enum_GTestResult* {.size: sizeof(cuint).} = enum
  G_TEST_RUN_SUCCESS = 0
  G_TEST_RUN_SKIPPED = 1
  G_TEST_RUN_FAILURE = 2
  G_TEST_RUN_INCOMPLETE = 3

type enum_GTestLogType* {.size: sizeof(cuint).} = enum
  G_TEST_LOG_NONE = 0
  G_TEST_LOG_ERROR = 1
  G_TEST_LOG_START_BINARY = 2
  G_TEST_LOG_LIST_CASE = 3
  G_TEST_LOG_SKIP_CASE = 4
  G_TEST_LOG_START_CASE = 5
  G_TEST_LOG_STOP_CASE = 6
  G_TEST_LOG_MIN_RESULT = 7
  G_TEST_LOG_MAX_RESULT = 8
  G_TEST_LOG_MESSAGE = 9
  G_TEST_LOG_START_SUITE = 10
  G_TEST_LOG_STOP_SUITE = 11

type enum_GTestFileType* {.size: sizeof(cuint).} = enum
  G_TEST_DIST = 0
  G_TEST_BUILT = 1

type enum_GUriFlags* {.size: sizeof(cuint).} = enum
  G_URI_FLAGS_NONE = 0
  G_URI_FLAGS_PARSE_RELAXED = 1
  G_URI_FLAGS_HAS_PASSWORD = 2
  G_URI_FLAGS_HAS_AUTH_PARAMS = 4
  G_URI_FLAGS_ENCODED = 8
  G_URI_FLAGS_NON_DNS = 16
  G_URI_FLAGS_ENCODED_QUERY = 32
  G_URI_FLAGS_ENCODED_PATH = 64
  G_URI_FLAGS_ENCODED_FRAGMENT = 128
  G_URI_FLAGS_SCHEME_NORMALIZE = 256

type enum_GUriHideFlags* {.size: sizeof(cuint).} = enum
  G_URI_HIDE_NONE = 0
  G_URI_HIDE_USERINFO = 1
  G_URI_HIDE_PASSWORD = 2
  G_URI_HIDE_AUTH_PARAMS = 4
  G_URI_HIDE_QUERY = 8
  G_URI_HIDE_FRAGMENT = 16

type enum_GUriParamsFlags* {.size: sizeof(cuint).} = enum
  G_URI_PARAMS_NONE = 0
  G_URI_PARAMS_CASE_INSENSITIVE = 1
  G_URI_PARAMS_WWW_FORM = 2
  G_URI_PARAMS_PARSE_RELAXED = 4

type enum_GUriError* {.size: sizeof(cuint).} = enum
  G_URI_ERROR_FAILED = 0
  G_URI_ERROR_BAD_SCHEME = 1
  G_URI_ERROR_BAD_USER = 2
  G_URI_ERROR_BAD_PASSWORD = 3
  G_URI_ERROR_BAD_AUTH_PARAMS = 4
  G_URI_ERROR_BAD_HOST = 5
  G_URI_ERROR_BAD_PORT = 6
  G_URI_ERROR_BAD_PATH = 7
  G_URI_ERROR_BAD_QUERY = 8
  G_URI_ERROR_BAD_FRAGMENT = 9

type enum_GThreadPriority* {.size: sizeof(cuint).} = enum
  G_THREAD_PRIORITY_LOW = 0
  G_THREAD_PRIORITY_NORMAL = 1
  G_THREAD_PRIORITY_HIGH = 2
  G_THREAD_PRIORITY_URGENT = 3

type enum_GTypeDebugFlags* {.size: sizeof(cuint).} = enum
  G_TYPE_DEBUG_NONE = 0
  G_TYPE_DEBUG_OBJECTS = 1
  G_TYPE_DEBUG_SIGNALS = 2
  G_TYPE_DEBUG_INSTANCE_COUNT = 4
  G_TYPE_DEBUG_MASK = 7

type enum_GTypeFundamentalFlags* {.size: sizeof(cuint).} = enum
  G_TYPE_FLAG_CLASSED = 1
  G_TYPE_FLAG_INSTANTIATABLE = 2
  G_TYPE_FLAG_DERIVABLE = 4
  G_TYPE_FLAG_DEEP_DERIVABLE = 8

type enum_GTypeFlags* {.size: sizeof(cuint).} = enum
  G_TYPE_FLAG_NONE = 0
  G_TYPE_FLAG_ABSTRACT = 16
  G_TYPE_FLAG_VALUE_ABSTRACT = 32
  G_TYPE_FLAG_FINAL = 64
  G_TYPE_FLAG_DEPRECATED = 128

type enum_GParamFlags* {.size: sizeof(cint).} = enum
  G_PARAM_DEPRECATED = -2147483648
  G_PARAM_READABLE = 1
  G_PARAM_WRITABLE = 2
  G_PARAM_READWRITE = 3
  G_PARAM_CONSTRUCT = 4
  G_PARAM_CONSTRUCT_ONLY = 8
  G_PARAM_LAX_VALIDATION = 16
  G_PARAM_STATIC_NAME = 32
  G_PARAM_STATIC_NICK = 64
  G_PARAM_STATIC_BLURB = 128
  G_PARAM_EXPLICIT_NOTIFY = 1073741824

const G_PARAM_PRIVATE* = enum_GParamFlags.G_PARAM_STATIC_NAME
type enum_GSignalFlags* {.size: sizeof(cuint).} = enum
  G_SIGNAL_RUN_FIRST = 1
  G_SIGNAL_RUN_LAST = 2
  G_SIGNAL_RUN_CLEANUP = 4
  G_SIGNAL_NO_RECURSE = 8
  G_SIGNAL_DETAILED = 16
  G_SIGNAL_ACTION = 32
  G_SIGNAL_NO_HOOKS = 64
  G_SIGNAL_MUST_COLLECT = 128
  G_SIGNAL_DEPRECATED = 256
  G_SIGNAL_ACCUMULATOR_FIRST_RUN = 131072

type enum_GConnectFlags* {.size: sizeof(cuint).} = enum
  G_CONNECT_DEFAULT = 0
  G_CONNECT_AFTER = 1
  G_CONNECT_SWAPPED = 2

type enum_GSignalMatchType* {.size: sizeof(cuint).} = enum
  G_SIGNAL_MATCH_ID = 1
  G_SIGNAL_MATCH_DETAIL = 2
  G_SIGNAL_MATCH_CLOSURE = 4
  G_SIGNAL_MATCH_FUNC = 8
  G_SIGNAL_MATCH_DATA = 16
  G_SIGNAL_MATCH_UNBLOCKED = 32

type enum_GBindingFlags* {.size: sizeof(cuint).} = enum
  G_BINDING_DEFAULT = 0
  G_BINDING_BIDIRECTIONAL = 1
  G_BINDING_SYNC_CREATE = 2
  G_BINDING_INVERT_BOOLEAN = 4

type enum_GArrowType* {.size: sizeof(cuint).} = enum
  GARROW_TYPE_NA = 0
  GARROW_TYPE_BOOLEAN = 1
  GARROW_TYPE_UINT8 = 2
  GARROW_TYPE_INT8 = 3
  GARROW_TYPE_UINT16 = 4
  GARROW_TYPE_INT16 = 5
  GARROW_TYPE_UINT32 = 6
  GARROW_TYPE_INT32 = 7
  GARROW_TYPE_UINT64 = 8
  GARROW_TYPE_INT64 = 9
  GARROW_TYPE_HALF_FLOAT = 10
  GARROW_TYPE_FLOAT = 11
  GARROW_TYPE_DOUBLE = 12
  GARROW_TYPE_STRING = 13
  GARROW_TYPE_BINARY = 14
  GARROW_TYPE_FIXED_SIZE_BINARY = 15
  GARROW_TYPE_DATE32 = 16
  GARROW_TYPE_DATE64 = 17
  GARROW_TYPE_TIMESTAMP = 18
  GARROW_TYPE_TIME32 = 19
  GARROW_TYPE_TIME64 = 20
  GARROW_TYPE_MONTH_INTERVAL = 21
  GARROW_TYPE_DAY_TIME_INTERVAL = 22
  GARROW_TYPE_DECIMAL128 = 23
  GARROW_TYPE_DECIMAL256 = 24
  GARROW_TYPE_LIST = 25
  GARROW_TYPE_STRUCT = 26
  GARROW_TYPE_SPARSE_UNION = 27
  GARROW_TYPE_DENSE_UNION = 28
  GARROW_TYPE_DICTIONARY = 29
  GARROW_TYPE_MAP = 30
  GARROW_TYPE_EXTENSION = 31
  GARROW_TYPE_FIXED_SIZE_LIST = 32
  GARROW_TYPE_DURATION = 33
  GARROW_TYPE_LARGE_STRING = 34
  GARROW_TYPE_LARGE_BINARY = 35
  GARROW_TYPE_LARGE_LIST = 36
  GARROW_TYPE_MONTH_DAY_NANO_INTERVAL = 37
  GARROW_TYPE_RUN_END_ENCODED = 38
  GARROW_TYPE_STRING_VIEW = 39
  GARROW_TYPE_BINARY_VIEW = 40
  GARROW_TYPE_DECIMAL32 = 43
  GARROW_TYPE_DECIMAL64 = 44

type enum_GArrowTimeUnit* {.size: sizeof(cuint).} = enum
  GARROW_TIME_UNIT_SECOND = 0
  GARROW_TIME_UNIT_MILLI = 1
  GARROW_TIME_UNIT_MICRO = 2
  GARROW_TIME_UNIT_NANO = 3

type enum_GArrowIntervalType* {.size: sizeof(cuint).} = enum
  GARROW_INTERVAL_TYPE_MONTH = 0
  GARROW_INTERVAL_TYPE_DAY_TIME = 1
  GARROW_INTERVAL_TYPE_MONTH_DAY_NANO = 2

type enum_GArrowCompressionType* {.size: sizeof(cuint).} = enum
  GARROW_COMPRESSION_TYPE_UNCOMPRESSED = 0
  GARROW_COMPRESSION_TYPE_SNAPPY = 1
  GARROW_COMPRESSION_TYPE_GZIP = 2
  GARROW_COMPRESSION_TYPE_BROTLI = 3
  GARROW_COMPRESSION_TYPE_ZSTD = 4
  GARROW_COMPRESSION_TYPE_LZ4 = 5
  GARROW_COMPRESSION_TYPE_LZO = 6
  GARROW_COMPRESSION_TYPE_BZ2 = 7

type enum_GAppInfoCreateFlags* {.size: sizeof(cuint).} = enum
  G_APP_INFO_CREATE_NONE = 0
  G_APP_INFO_CREATE_NEEDS_TERMINAL = 1
  G_APP_INFO_CREATE_SUPPORTS_URIS = 2
  G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION = 4

type enum_GConverterFlags* {.size: sizeof(cuint).} = enum
  G_CONVERTER_NO_FLAGS = 0
  G_CONVERTER_INPUT_AT_END = 1
  G_CONVERTER_FLUSH = 2

type enum_GConverterResult* {.size: sizeof(cuint).} = enum
  G_CONVERTER_ERROR = 0
  G_CONVERTER_CONVERTED = 1
  G_CONVERTER_FINISHED = 2
  G_CONVERTER_FLUSHED = 3

type enum_GDataStreamByteOrder* {.size: sizeof(cuint).} = enum
  G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN = 0
  G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN = 1
  G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN = 2

type enum_GDataStreamNewlineType* {.size: sizeof(cuint).} = enum
  G_DATA_STREAM_NEWLINE_TYPE_LF = 0
  G_DATA_STREAM_NEWLINE_TYPE_CR = 1
  G_DATA_STREAM_NEWLINE_TYPE_CR_LF = 2
  G_DATA_STREAM_NEWLINE_TYPE_ANY = 3

type enum_GFileAttributeType* {.size: sizeof(cuint).} = enum
  G_FILE_ATTRIBUTE_TYPE_INVALID = 0
  G_FILE_ATTRIBUTE_TYPE_STRING = 1
  G_FILE_ATTRIBUTE_TYPE_BYTE_STRING = 2
  G_FILE_ATTRIBUTE_TYPE_BOOLEAN = 3
  G_FILE_ATTRIBUTE_TYPE_UINT32 = 4
  G_FILE_ATTRIBUTE_TYPE_INT32 = 5
  G_FILE_ATTRIBUTE_TYPE_UINT64 = 6
  G_FILE_ATTRIBUTE_TYPE_INT64 = 7
  G_FILE_ATTRIBUTE_TYPE_OBJECT = 8
  G_FILE_ATTRIBUTE_TYPE_STRINGV = 9

type enum_GFileAttributeInfoFlags* {.size: sizeof(cuint).} = enum
  G_FILE_ATTRIBUTE_INFO_NONE = 0
  G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE = 1
  G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED = 2

type enum_GFileAttributeStatus* {.size: sizeof(cuint).} = enum
  G_FILE_ATTRIBUTE_STATUS_UNSET = 0
  G_FILE_ATTRIBUTE_STATUS_SET = 1
  G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING = 2

type enum_GFileQueryInfoFlags* {.size: sizeof(cuint).} = enum
  G_FILE_QUERY_INFO_NONE = 0
  G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS = 1

type enum_GFileCreateFlags* {.size: sizeof(cuint).} = enum
  G_FILE_CREATE_NONE = 0
  G_FILE_CREATE_PRIVATE = 1
  G_FILE_CREATE_REPLACE_DESTINATION = 2

type enum_GFileMeasureFlags* {.size: sizeof(cuint).} = enum
  G_FILE_MEASURE_NONE = 0
  G_FILE_MEASURE_REPORT_ANY_ERROR = 2
  G_FILE_MEASURE_APPARENT_SIZE = 4
  G_FILE_MEASURE_NO_XDEV = 8

type enum_GMountMountFlags* {.size: sizeof(cuint).} = enum
  G_MOUNT_MOUNT_NONE = 0

type enum_GMountUnmountFlags* {.size: sizeof(cuint).} = enum
  G_MOUNT_UNMOUNT_NONE = 0
  G_MOUNT_UNMOUNT_FORCE = 1

type enum_GDriveStartFlags* {.size: sizeof(cuint).} = enum
  G_DRIVE_START_NONE = 0

type enum_GDriveStartStopType* {.size: sizeof(cuint).} = enum
  G_DRIVE_START_STOP_TYPE_UNKNOWN = 0
  G_DRIVE_START_STOP_TYPE_SHUTDOWN = 1
  G_DRIVE_START_STOP_TYPE_NETWORK = 2
  G_DRIVE_START_STOP_TYPE_MULTIDISK = 3
  G_DRIVE_START_STOP_TYPE_PASSWORD = 4

type enum_GFileCopyFlags* {.size: sizeof(cuint).} = enum
  G_FILE_COPY_NONE = 0
  G_FILE_COPY_OVERWRITE = 1
  G_FILE_COPY_BACKUP = 2
  G_FILE_COPY_NOFOLLOW_SYMLINKS = 4
  G_FILE_COPY_ALL_METADATA = 8
  G_FILE_COPY_NO_FALLBACK_FOR_MOVE = 16
  G_FILE_COPY_TARGET_DEFAULT_PERMS = 32
  G_FILE_COPY_TARGET_DEFAULT_MODIFIED_TIME = 64

type enum_GFileMonitorFlags* {.size: sizeof(cuint).} = enum
  G_FILE_MONITOR_NONE = 0
  G_FILE_MONITOR_WATCH_MOUNTS = 1
  G_FILE_MONITOR_SEND_MOVED = 2
  G_FILE_MONITOR_WATCH_HARD_LINKS = 4
  G_FILE_MONITOR_WATCH_MOVES = 8

type enum_GFileType* {.size: sizeof(cuint).} = enum
  G_FILE_TYPE_UNKNOWN = 0
  G_FILE_TYPE_REGULAR = 1
  G_FILE_TYPE_DIRECTORY = 2
  G_FILE_TYPE_SYMBOLIC_LINK = 3
  G_FILE_TYPE_SPECIAL = 4
  G_FILE_TYPE_SHORTCUT = 5
  G_FILE_TYPE_MOUNTABLE = 6

type enum_GFilesystemPreviewType* {.size: sizeof(cuint).} = enum
  G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS = 0
  G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL = 1
  G_FILESYSTEM_PREVIEW_TYPE_NEVER = 2

type enum_GFileMonitorEvent* {.size: sizeof(cuint).} = enum
  G_FILE_MONITOR_EVENT_CHANGED = 0
  G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT = 1
  G_FILE_MONITOR_EVENT_DELETED = 2
  G_FILE_MONITOR_EVENT_CREATED = 3
  G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED = 4
  G_FILE_MONITOR_EVENT_PRE_UNMOUNT = 5
  G_FILE_MONITOR_EVENT_UNMOUNTED = 6
  G_FILE_MONITOR_EVENT_MOVED = 7
  G_FILE_MONITOR_EVENT_RENAMED = 8
  G_FILE_MONITOR_EVENT_MOVED_IN = 9
  G_FILE_MONITOR_EVENT_MOVED_OUT = 10

type enum_GIOErrorEnum* {.size: sizeof(cuint).} = enum
  G_IO_ERROR_FAILED = 0
  G_IO_ERROR_NOT_FOUND = 1
  G_IO_ERROR_EXISTS = 2
  G_IO_ERROR_IS_DIRECTORY = 3
  G_IO_ERROR_NOT_DIRECTORY = 4
  G_IO_ERROR_NOT_EMPTY = 5
  G_IO_ERROR_NOT_REGULAR_FILE = 6
  G_IO_ERROR_NOT_SYMBOLIC_LINK = 7
  G_IO_ERROR_NOT_MOUNTABLE_FILE = 8
  G_IO_ERROR_FILENAME_TOO_LONG = 9
  G_IO_ERROR_INVALID_FILENAME = 10
  G_IO_ERROR_TOO_MANY_LINKS = 11
  G_IO_ERROR_NO_SPACE = 12
  G_IO_ERROR_INVALID_ARGUMENT = 13
  G_IO_ERROR_PERMISSION_DENIED = 14
  G_IO_ERROR_NOT_SUPPORTED = 15
  G_IO_ERROR_NOT_MOUNTED = 16
  G_IO_ERROR_ALREADY_MOUNTED = 17
  G_IO_ERROR_CLOSED = 18
  G_IO_ERROR_CANCELLED = 19
  G_IO_ERROR_PENDING = 20
  G_IO_ERROR_READ_ONLY = 21
  G_IO_ERROR_CANT_CREATE_BACKUP = 22
  G_IO_ERROR_WRONG_ETAG = 23
  G_IO_ERROR_TIMED_OUT = 24
  G_IO_ERROR_WOULD_RECURSE = 25
  G_IO_ERROR_BUSY = 26
  G_IO_ERROR_WOULD_BLOCK = 27
  G_IO_ERROR_HOST_NOT_FOUND = 28
  G_IO_ERROR_WOULD_MERGE = 29
  G_IO_ERROR_FAILED_HANDLED = 30
  G_IO_ERROR_TOO_MANY_OPEN_FILES = 31
  G_IO_ERROR_NOT_INITIALIZED = 32
  G_IO_ERROR_ADDRESS_IN_USE = 33
  G_IO_ERROR_PARTIAL_INPUT = 34
  G_IO_ERROR_INVALID_DATA = 35
  G_IO_ERROR_DBUS_ERROR = 36
  G_IO_ERROR_HOST_UNREACHABLE = 37
  G_IO_ERROR_NETWORK_UNREACHABLE = 38
  G_IO_ERROR_CONNECTION_REFUSED = 39
  G_IO_ERROR_PROXY_FAILED = 40
  G_IO_ERROR_PROXY_AUTH_FAILED = 41
  G_IO_ERROR_PROXY_NEED_AUTH = 42
  G_IO_ERROR_PROXY_NOT_ALLOWED = 43
  G_IO_ERROR_BROKEN_PIPE = 44
  G_IO_ERROR_NOT_CONNECTED = 45
  G_IO_ERROR_MESSAGE_TOO_LARGE = 46
  G_IO_ERROR_NO_SUCH_DEVICE = 47
  G_IO_ERROR_DESTINATION_UNSET = 48

const G_IO_ERROR_CONNECTION_CLOSED* = enum_GIOErrorEnum.G_IO_ERROR_BROKEN_PIPE
type enum_GAskPasswordFlags* {.size: sizeof(cuint).} = enum
  G_ASK_PASSWORD_NEED_PASSWORD = 1
  G_ASK_PASSWORD_NEED_USERNAME = 2
  G_ASK_PASSWORD_NEED_DOMAIN = 4
  G_ASK_PASSWORD_SAVING_SUPPORTED = 8
  G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = 16
  G_ASK_PASSWORD_TCRYPT = 32

type enum_GPasswordSave* {.size: sizeof(cuint).} = enum
  G_PASSWORD_SAVE_NEVER = 0
  G_PASSWORD_SAVE_FOR_SESSION = 1
  G_PASSWORD_SAVE_PERMANENTLY = 2

type enum_GMountOperationResult* {.size: sizeof(cuint).} = enum
  G_MOUNT_OPERATION_HANDLED = 0
  G_MOUNT_OPERATION_ABORTED = 1
  G_MOUNT_OPERATION_UNHANDLED = 2

type enum_GOutputStreamSpliceFlags* {.size: sizeof(cuint).} = enum
  G_OUTPUT_STREAM_SPLICE_NONE = 0
  G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE = 1
  G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET = 2

type enum_GIOStreamSpliceFlags* {.size: sizeof(cuint).} = enum
  G_IO_STREAM_SPLICE_NONE = 0
  G_IO_STREAM_SPLICE_CLOSE_STREAM1 = 1
  G_IO_STREAM_SPLICE_CLOSE_STREAM2 = 2
  G_IO_STREAM_SPLICE_WAIT_FOR_BOTH = 4

type enum_GEmblemOrigin* {.size: sizeof(cuint).} = enum
  G_EMBLEM_ORIGIN_UNKNOWN = 0
  G_EMBLEM_ORIGIN_DEVICE = 1
  G_EMBLEM_ORIGIN_LIVEMETADATA = 2
  G_EMBLEM_ORIGIN_TAG = 3

type enum_GResolverError* {.size: sizeof(cuint).} = enum
  G_RESOLVER_ERROR_NOT_FOUND = 0
  G_RESOLVER_ERROR_TEMPORARY_FAILURE = 1
  G_RESOLVER_ERROR_INTERNAL = 2

type enum_GResolverRecordType* {.size: sizeof(cuint).} = enum
  G_RESOLVER_RECORD_SRV = 1
  G_RESOLVER_RECORD_MX = 2
  G_RESOLVER_RECORD_TXT = 3
  G_RESOLVER_RECORD_SOA = 4
  G_RESOLVER_RECORD_NS = 5

type enum_GResourceError* {.size: sizeof(cuint).} = enum
  G_RESOURCE_ERROR_NOT_FOUND = 0
  G_RESOURCE_ERROR_INTERNAL = 1

type enum_GResourceFlags* {.size: sizeof(cuint).} = enum
  G_RESOURCE_FLAGS_NONE = 0
  G_RESOURCE_FLAGS_COMPRESSED = 1

type enum_GResourceLookupFlags* {.size: sizeof(cuint).} = enum
  G_RESOURCE_LOOKUP_FLAGS_NONE = 0

type enum_GSocketFamily* {.size: sizeof(cuint).} = enum
  G_SOCKET_FAMILY_INVALID = 0
  G_SOCKET_FAMILY_UNIX = 1
  G_SOCKET_FAMILY_IPV4 = 2
  G_SOCKET_FAMILY_IPV6 = 10

type enum_GSocketType* {.size: sizeof(cuint).} = enum
  G_SOCKET_TYPE_INVALID = 0
  G_SOCKET_TYPE_STREAM = 1
  G_SOCKET_TYPE_DATAGRAM = 2
  G_SOCKET_TYPE_SEQPACKET = 3

type enum_GSocketMsgFlags* {.size: sizeof(cuint).} = enum
  G_SOCKET_MSG_NONE = 0
  G_SOCKET_MSG_OOB = 1
  G_SOCKET_MSG_PEEK = 2
  G_SOCKET_MSG_DONTROUTE = 4

type enum_GSocketProtocol* {.size: sizeof(cint).} = enum
  G_SOCKET_PROTOCOL_UNKNOWN = -1
  G_SOCKET_PROTOCOL_DEFAULT = 0
  G_SOCKET_PROTOCOL_TCP = 6
  G_SOCKET_PROTOCOL_UDP = 17
  G_SOCKET_PROTOCOL_SCTP = 132

type enum_GZlibCompressorFormat* {.size: sizeof(cuint).} = enum
  G_ZLIB_COMPRESSOR_FORMAT_ZLIB = 0
  G_ZLIB_COMPRESSOR_FORMAT_GZIP = 1
  G_ZLIB_COMPRESSOR_FORMAT_RAW = 2

type enum_GUnixSocketAddressType* {.size: sizeof(cuint).} = enum
  G_UNIX_SOCKET_ADDRESS_INVALID = 0
  G_UNIX_SOCKET_ADDRESS_ANONYMOUS = 1
  G_UNIX_SOCKET_ADDRESS_PATH = 2
  G_UNIX_SOCKET_ADDRESS_ABSTRACT = 3
  G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED = 4

type enum_GBusType* {.size: sizeof(cint).} = enum
  G_BUS_TYPE_STARTER = -1
  G_BUS_TYPE_NONE = 0
  G_BUS_TYPE_SYSTEM = 1
  G_BUS_TYPE_SESSION = 2

type enum_GBusNameOwnerFlags* {.size: sizeof(cuint).} = enum
  G_BUS_NAME_OWNER_FLAGS_NONE = 0
  G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT = 1
  G_BUS_NAME_OWNER_FLAGS_REPLACE = 2
  G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE = 4

type enum_GBusNameWatcherFlags* {.size: sizeof(cuint).} = enum
  G_BUS_NAME_WATCHER_FLAGS_NONE = 0
  G_BUS_NAME_WATCHER_FLAGS_AUTO_START = 1

type enum_GDBusProxyFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_PROXY_FLAGS_NONE = 0
  G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES = 1
  G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS = 2
  G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START = 4
  G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES = 8
  G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION = 16
  G_DBUS_PROXY_FLAGS_NO_MATCH_RULE = 32

type enum_GDBusError* {.size: sizeof(cuint).} = enum
  G_DBUS_ERROR_FAILED = 0
  G_DBUS_ERROR_NO_MEMORY = 1
  G_DBUS_ERROR_SERVICE_UNKNOWN = 2
  G_DBUS_ERROR_NAME_HAS_NO_OWNER = 3
  G_DBUS_ERROR_NO_REPLY = 4
  G_DBUS_ERROR_IO_ERROR = 5
  G_DBUS_ERROR_BAD_ADDRESS = 6
  G_DBUS_ERROR_NOT_SUPPORTED = 7
  G_DBUS_ERROR_LIMITS_EXCEEDED = 8
  G_DBUS_ERROR_ACCESS_DENIED = 9
  G_DBUS_ERROR_AUTH_FAILED = 10
  G_DBUS_ERROR_NO_SERVER = 11
  G_DBUS_ERROR_TIMEOUT = 12
  G_DBUS_ERROR_NO_NETWORK = 13
  G_DBUS_ERROR_ADDRESS_IN_USE = 14
  G_DBUS_ERROR_DISCONNECTED = 15
  G_DBUS_ERROR_INVALID_ARGS = 16
  G_DBUS_ERROR_FILE_NOT_FOUND = 17
  G_DBUS_ERROR_FILE_EXISTS = 18
  G_DBUS_ERROR_UNKNOWN_METHOD = 19
  G_DBUS_ERROR_TIMED_OUT = 20
  G_DBUS_ERROR_MATCH_RULE_NOT_FOUND = 21
  G_DBUS_ERROR_MATCH_RULE_INVALID = 22
  G_DBUS_ERROR_SPAWN_EXEC_FAILED = 23
  G_DBUS_ERROR_SPAWN_FORK_FAILED = 24
  G_DBUS_ERROR_SPAWN_CHILD_EXITED = 25
  G_DBUS_ERROR_SPAWN_CHILD_SIGNALED = 26
  G_DBUS_ERROR_SPAWN_FAILED = 27
  G_DBUS_ERROR_SPAWN_SETUP_FAILED = 28
  G_DBUS_ERROR_SPAWN_CONFIG_INVALID = 29
  G_DBUS_ERROR_SPAWN_SERVICE_INVALID = 30
  G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND = 31
  G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID = 32
  G_DBUS_ERROR_SPAWN_FILE_INVALID = 33
  G_DBUS_ERROR_SPAWN_NO_MEMORY = 34
  G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN = 35
  G_DBUS_ERROR_INVALID_SIGNATURE = 36
  G_DBUS_ERROR_INVALID_FILE_CONTENT = 37
  G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN = 38
  G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN = 39
  G_DBUS_ERROR_OBJECT_PATH_IN_USE = 40
  G_DBUS_ERROR_UNKNOWN_OBJECT = 41
  G_DBUS_ERROR_UNKNOWN_INTERFACE = 42
  G_DBUS_ERROR_UNKNOWN_PROPERTY = 43
  G_DBUS_ERROR_PROPERTY_READ_ONLY = 44

type enum_GDBusConnectionFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_CONNECTION_FLAGS_NONE = 0
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT = 1
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER = 2
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = 4
  G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION = 8
  G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING = 16
  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER = 32
  G_DBUS_CONNECTION_FLAGS_CROSS_NAMESPACE = 64

type enum_GDBusCapabilityFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_CAPABILITY_FLAGS_NONE = 0
  G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING = 1

type enum_GDBusCallFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_CALL_FLAGS_NONE = 0
  G_DBUS_CALL_FLAGS_NO_AUTO_START = 1
  G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = 2

type enum_GDBusMessageType* {.size: sizeof(cuint).} = enum
  G_DBUS_MESSAGE_TYPE_INVALID = 0
  G_DBUS_MESSAGE_TYPE_METHOD_CALL = 1
  G_DBUS_MESSAGE_TYPE_METHOD_RETURN = 2
  G_DBUS_MESSAGE_TYPE_ERROR = 3
  G_DBUS_MESSAGE_TYPE_SIGNAL = 4

type enum_GDBusMessageFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_MESSAGE_FLAGS_NONE = 0
  G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED = 1
  G_DBUS_MESSAGE_FLAGS_NO_AUTO_START = 2
  G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION = 4

type enum_GDBusMessageHeaderField* {.size: sizeof(cuint).} = enum
  G_DBUS_MESSAGE_HEADER_FIELD_INVALID = 0
  G_DBUS_MESSAGE_HEADER_FIELD_PATH = 1
  G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE = 2
  G_DBUS_MESSAGE_HEADER_FIELD_MEMBER = 3
  G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME = 4
  G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL = 5
  G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION = 6
  G_DBUS_MESSAGE_HEADER_FIELD_SENDER = 7
  G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE = 8
  G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS = 9

type enum_GDBusPropertyInfoFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_PROPERTY_INFO_FLAGS_NONE = 0
  G_DBUS_PROPERTY_INFO_FLAGS_READABLE = 1
  G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE = 2

type enum_GDBusSubtreeFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_SUBTREE_FLAGS_NONE = 0
  G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES = 1

type enum_GDBusServerFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_SERVER_FLAGS_NONE = 0
  G_DBUS_SERVER_FLAGS_RUN_IN_THREAD = 1
  G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS = 2
  G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER = 4

type enum_GDBusSignalFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_SIGNAL_FLAGS_NONE = 0
  G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE = 1
  G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE = 2
  G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH = 4

type enum_GDBusSendMessageFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_SEND_MESSAGE_FLAGS_NONE = 0
  G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL = 1

type enum_GCredentialsType* {.size: sizeof(cuint).} = enum
  G_CREDENTIALS_TYPE_INVALID = 0
  G_CREDENTIALS_TYPE_LINUX_UCRED = 1
  G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED = 2
  G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED = 3
  G_CREDENTIALS_TYPE_SOLARIS_UCRED = 4
  G_CREDENTIALS_TYPE_NETBSD_UNPCBID = 5
  G_CREDENTIALS_TYPE_APPLE_XUCRED = 6
  G_CREDENTIALS_TYPE_WIN32_PID = 7

type enum_GDBusMessageByteOrder* {.size: sizeof(cuint).} = enum
  G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN = 66
  G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN = 108

type enum_GApplicationFlags* {.size: sizeof(cuint).} = enum
  G_APPLICATION_FLAGS_NONE = 0
  G_APPLICATION_IS_SERVICE = 1
  G_APPLICATION_IS_LAUNCHER = 2
  G_APPLICATION_HANDLES_OPEN = 4
  G_APPLICATION_HANDLES_COMMAND_LINE = 8
  G_APPLICATION_SEND_ENVIRONMENT = 16
  G_APPLICATION_NON_UNIQUE = 32
  G_APPLICATION_CAN_OVERRIDE_APP_ID = 64
  G_APPLICATION_ALLOW_REPLACEMENT = 128
  G_APPLICATION_REPLACE = 256

const G_APPLICATION_DEFAULT_FLAGS* = enum_GApplicationFlags.G_APPLICATION_FLAGS_NONE
type enum_GTlsError* {.size: sizeof(cuint).} = enum
  G_TLS_ERROR_UNAVAILABLE = 0
  G_TLS_ERROR_MISC = 1
  G_TLS_ERROR_BAD_CERTIFICATE = 2
  G_TLS_ERROR_NOT_TLS = 3
  G_TLS_ERROR_HANDSHAKE = 4
  G_TLS_ERROR_CERTIFICATE_REQUIRED = 5
  G_TLS_ERROR_EOF = 6
  G_TLS_ERROR_INAPPROPRIATE_FALLBACK = 7
  G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD = 8

type enum_GTlsCertificateFlags* {.size: sizeof(cuint).} = enum
  G_TLS_CERTIFICATE_NO_FLAGS = 0
  G_TLS_CERTIFICATE_UNKNOWN_CA = 1
  G_TLS_CERTIFICATE_BAD_IDENTITY = 2
  G_TLS_CERTIFICATE_NOT_ACTIVATED = 4
  G_TLS_CERTIFICATE_EXPIRED = 8
  G_TLS_CERTIFICATE_REVOKED = 16
  G_TLS_CERTIFICATE_INSECURE = 32
  G_TLS_CERTIFICATE_GENERIC_ERROR = 64
  G_TLS_CERTIFICATE_VALIDATE_ALL = 127

type enum_GTlsAuthenticationMode* {.size: sizeof(cuint).} = enum
  G_TLS_AUTHENTICATION_NONE = 0
  G_TLS_AUTHENTICATION_REQUESTED = 1
  G_TLS_AUTHENTICATION_REQUIRED = 2

type enum_GTlsChannelBindingType* {.size: sizeof(cuint).} = enum
  G_TLS_CHANNEL_BINDING_TLS_UNIQUE = 0
  G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT = 1
  G_TLS_CHANNEL_BINDING_TLS_EXPORTER = 2

type enum_GTlsChannelBindingError* {.size: sizeof(cuint).} = enum
  G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED = 0
  G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE = 1
  G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE = 2
  G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED = 3
  G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR = 4

type enum_GTlsRehandshakeMode* {.size: sizeof(cuint).} = enum
  G_TLS_REHANDSHAKE_NEVER = 0
  G_TLS_REHANDSHAKE_SAFELY = 1
  G_TLS_REHANDSHAKE_UNSAFELY = 2

type enum_GTlsPasswordFlags* {.size: sizeof(cuint).} = enum
  G_TLS_PASSWORD_NONE = 0
  G_TLS_PASSWORD_RETRY = 2
  G_TLS_PASSWORD_MANY_TRIES = 4
  G_TLS_PASSWORD_FINAL_TRY = 8
  G_TLS_PASSWORD_PKCS11_USER = 16
  G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER = 32
  G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC = 64

type enum_GTlsInteractionResult* {.size: sizeof(cuint).} = enum
  G_TLS_INTERACTION_UNHANDLED = 0
  G_TLS_INTERACTION_HANDLED = 1
  G_TLS_INTERACTION_FAILED = 2

type enum_GDBusInterfaceSkeletonFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_INTERFACE_SKELETON_FLAGS_NONE = 0
  G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD = 1

type enum_GDBusObjectManagerClientFlags* {.size: sizeof(cuint).} = enum
  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE = 0
  G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START = 1

type enum_GTlsDatabaseVerifyFlags* {.size: sizeof(cuint).} = enum
  G_TLS_DATABASE_VERIFY_NONE = 0

type enum_GTlsDatabaseLookupFlags* {.size: sizeof(cuint).} = enum
  G_TLS_DATABASE_LOOKUP_NONE = 0
  G_TLS_DATABASE_LOOKUP_KEYPAIR = 1

type enum_GTlsCertificateRequestFlags* {.size: sizeof(cuint).} = enum
  G_TLS_CERTIFICATE_REQUEST_NONE = 0

type enum_GTlsProtocolVersion* {.size: sizeof(cuint).} = enum
  G_TLS_PROTOCOL_VERSION_UNKNOWN = 0
  G_TLS_PROTOCOL_VERSION_SSL_3_0 = 1
  G_TLS_PROTOCOL_VERSION_TLS_1_0 = 2
  G_TLS_PROTOCOL_VERSION_TLS_1_1 = 3
  G_TLS_PROTOCOL_VERSION_TLS_1_2 = 4
  G_TLS_PROTOCOL_VERSION_TLS_1_3 = 5
  G_TLS_PROTOCOL_VERSION_DTLS_1_0 = 201
  G_TLS_PROTOCOL_VERSION_DTLS_1_2 = 202

type enum_GIOModuleScopeFlags* {.size: sizeof(cuint).} = enum
  G_IO_MODULE_SCOPE_NONE = 0
  G_IO_MODULE_SCOPE_BLOCK_DUPLICATES = 1

type enum_GSocketClientEvent* {.size: sizeof(cuint).} = enum
  G_SOCKET_CLIENT_RESOLVING = 0
  G_SOCKET_CLIENT_RESOLVED = 1
  G_SOCKET_CLIENT_CONNECTING = 2
  G_SOCKET_CLIENT_CONNECTED = 3
  G_SOCKET_CLIENT_PROXY_NEGOTIATING = 4
  G_SOCKET_CLIENT_PROXY_NEGOTIATED = 5
  G_SOCKET_CLIENT_TLS_HANDSHAKING = 6
  G_SOCKET_CLIENT_TLS_HANDSHAKED = 7
  G_SOCKET_CLIENT_COMPLETE = 8

type enum_GSocketListenerEvent* {.size: sizeof(cuint).} = enum
  G_SOCKET_LISTENER_BINDING = 0
  G_SOCKET_LISTENER_BOUND = 1
  G_SOCKET_LISTENER_LISTENING = 2
  G_SOCKET_LISTENER_LISTENED = 3

type enum_GTestDBusFlags* {.size: sizeof(cuint).} = enum
  G_TEST_DBUS_NONE = 0

type enum_GSubprocessFlags* {.size: sizeof(cuint).} = enum
  G_SUBPROCESS_FLAGS_NONE = 0
  G_SUBPROCESS_FLAGS_STDIN_PIPE = 1
  G_SUBPROCESS_FLAGS_STDIN_INHERIT = 2
  G_SUBPROCESS_FLAGS_STDOUT_PIPE = 4
  G_SUBPROCESS_FLAGS_STDOUT_SILENCE = 8
  G_SUBPROCESS_FLAGS_STDERR_PIPE = 16
  G_SUBPROCESS_FLAGS_STDERR_SILENCE = 32
  G_SUBPROCESS_FLAGS_STDERR_MERGE = 64
  G_SUBPROCESS_FLAGS_INHERIT_FDS = 128
  G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP = 256

type enum_GNotificationPriority* {.size: sizeof(cuint).} = enum
  G_NOTIFICATION_PRIORITY_NORMAL = 0
  G_NOTIFICATION_PRIORITY_LOW = 1
  G_NOTIFICATION_PRIORITY_HIGH = 2
  G_NOTIFICATION_PRIORITY_URGENT = 3

type enum_GNetworkConnectivity* {.size: sizeof(cuint).} = enum
  G_NETWORK_CONNECTIVITY_LOCAL = 1
  G_NETWORK_CONNECTIVITY_LIMITED = 2
  G_NETWORK_CONNECTIVITY_PORTAL = 3
  G_NETWORK_CONNECTIVITY_FULL = 4

type enum_GPollableReturn* {.size: sizeof(cint).} = enum
  G_POLLABLE_RETURN_WOULD_BLOCK = -27
  G_POLLABLE_RETURN_FAILED = 0
  G_POLLABLE_RETURN_OK = 1

type enum_GMemoryMonitorWarningLevel* {.size: sizeof(cuint).} = enum
  G_MEMORY_MONITOR_WARNING_LEVEL_LOW = 50
  G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM = 100
  G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL = 255

type enum_GModuleFlags* {.size: sizeof(cuint).} = enum
  G_MODULE_BIND_LAZY = 1
  G_MODULE_BIND_LOCAL = 2
  G_MODULE_BIND_MASK = 3

type enum_GModuleError* {.size: sizeof(cuint).} = enum
  G_MODULE_ERROR_FAILED = 0
  G_MODULE_ERROR_CHECK_FAILED = 1

type enum_GResolverNameLookupFlags* {.size: sizeof(cuint).} = enum
  G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT = 0
  G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY = 1
  G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY = 2

type enum_GSettingsBindFlags* {.size: sizeof(cuint).} = enum
  G_SETTINGS_BIND_DEFAULT = 0
  G_SETTINGS_BIND_GET = 1
  G_SETTINGS_BIND_SET = 2
  G_SETTINGS_BIND_NO_SENSITIVITY = 4
  G_SETTINGS_BIND_GET_NO_CHANGES = 8
  G_SETTINGS_BIND_INVERT_BOOLEAN = 16

type enum_GArrowMetadataVersion* {.size: sizeof(cuint).} = enum
  GARROW_METADATA_VERSION_V1 = 0
  GARROW_METADATA_VERSION_V2 = 1
  GARROW_METADATA_VERSION_V3 = 2

type enum_GArrowJSONReadUnexpectedFieldBehavior* {.size: sizeof(cuint).} = enum
  GARROW_JSON_READ_IGNORE = 0
  GARROW_JSON_READ_ERROR = 1
  GARROW_JSON_READ_INFER_TYPE = 2

type enum_GArrowJoinType* {.size: sizeof(cuint).} = enum
  GARROW_JOIN_TYPE_LEFT_SEMI = 0
  GARROW_JOIN_TYPE_RIGHT_SEMI = 1
  GARROW_JOIN_TYPE_LEFT_ANTI = 2
  GARROW_JOIN_TYPE_RIGHT_ANTI = 3
  GARROW_JOIN_TYPE_INNER = 4
  GARROW_JOIN_TYPE_LEFT_OUTER = 5
  GARROW_JOIN_TYPE_RIGHT_OUTER = 6
  GARROW_JOIN_TYPE_FULL_OUTER = 7

type enum_GArrowCountMode* {.size: sizeof(cuint).} = enum
  GARROW_COUNT_MODE_ONLY_VALID = 0
  GARROW_COUNT_MODE_ONLY_NULL = 1
  GARROW_COUNT_MODE_ALL = 2

type enum_GArrowFilterNullSelectionBehavior* {.size: sizeof(cuint).} = enum
  GARROW_FILTER_NULL_SELECTION_DROP = 0
  GARROW_FILTER_NULL_SELECTION_EMIT_NULL = 1

type enum_GArrowSortOrder* {.size: sizeof(cuint).} = enum
  GARROW_SORT_ORDER_ASCENDING = 0
  GARROW_SORT_ORDER_DESCENDING = 1

type enum_GArrowNullPlacement* {.size: sizeof(cuint).} = enum
  GARROW_NULL_PLACEMENT_AT_START = 0
  GARROW_NULL_PLACEMENT_AT_END = 1

type enum_GArrowRoundMode* {.size: sizeof(cuint).} = enum
  GARROW_ROUND_DOWN = 0
  GARROW_ROUND_UP = 1
  GARROW_ROUND_TOWARDS_ZERO = 2
  GARROW_ROUND_TOWARDS_INFINITY = 3
  GARROW_ROUND_HALF_DOWN = 4
  GARROW_ROUND_HALF_UP = 5
  GARROW_ROUND_HALF_TOWARDS_ZERO = 6
  GARROW_ROUND_HALF_TOWARDS_INFINITY = 7
  GARROW_ROUND_HALF_TO_EVEN = 8
  GARROW_ROUND_HALF_TO_ODD = 9

type enum_GArrowUTF8NormalizeForm* {.size: sizeof(cuint).} = enum
  GARROW_UTF8_NORMALIZE_FORM_NFC = 0
  GARROW_UTF8_NORMALIZE_FORM_NFKC = 1
  GARROW_UTF8_NORMALIZE_FORM_NFD = 2
  GARROW_UTF8_NORMALIZE_FORM_NFKD = 3

type enum_GArrowQuantileInterpolation* {.size: sizeof(cuint).} = enum
  GARROW_QUANTILE_INTERPOLATION_LINEAR = 0
  GARROW_QUANTILE_INTERPOLATION_LOWER = 1
  GARROW_QUANTILE_INTERPOLATION_HIGHER = 2
  GARROW_QUANTILE_INTERPOLATION_NEAREST = 3
  GARROW_QUANTILE_INTERPOLATION_MIDPOINT = 4

type enum_GArrowRankTiebreaker* {.size: sizeof(cuint).} = enum
  GARROW_RANK_TIEBREAKER_MIN = 0
  GARROW_RANK_TIEBREAKER_MAX = 1
  GARROW_RANK_TIEBREAKER_FIRST = 2
  GARROW_RANK_TIEBREAKER_DENSE = 3

type enum_GArrowError* {.size: sizeof(cuint).} = enum
  GARROW_ERROR_OUT_OF_MEMORY = 1
  GARROW_ERROR_KEY = 2
  GARROW_ERROR_TYPE = 3
  GARROW_ERROR_INVALID = 4
  GARROW_ERROR_IO = 5
  GARROW_ERROR_CAPACITY = 6
  GARROW_ERROR_INDEX = 7
  GARROW_ERROR_UNKNOWN = 9
  GARROW_ERROR_NOT_IMPLEMENTED = 10
  GARROW_ERROR_SERIALIZATION = 11
  GARROW_ERROR_CODE_GENERATION = 40
  GARROW_ERROR_EXPRESSION_VALIDATION = 41
  GARROW_ERROR_EXECUTION = 42
  GARROW_ERROR_ALREADY_EXISTS = 45

type enum_GArrowFileMode* {.size: sizeof(cuint).} = enum
  GARROW_FILE_MODE_READ = 0
  GARROW_FILE_MODE_WRITE = 1
  GARROW_FILE_MODE_READWRITE = 2

type enum_GArrowFileType* {.size: sizeof(cuint).} = enum
  GARROW_FILE_TYPE_NOT_FOUND = 0
  GARROW_FILE_TYPE_UNKNOWN = 1
  GARROW_FILE_TYPE_FILE = 2
  GARROW_FILE_TYPE_DIR = 3

type enum_GArrowS3LogLevel* {.size: sizeof(cuint).} = enum
  GARROW_S3_LOG_LEVEL_OFF = 0
  GARROW_S3_LOG_LEVEL_FATAL = 1
  GARROW_S3_LOG_LEVEL_ERROR = 2
  GARROW_S3_LOG_LEVEL_WARN = 3
  GARROW_S3_LOG_LEVEL_INFO = 4
  GARROW_S3_LOG_LEVEL_DEBUG = 5
  GARROW_S3_LOG_LEVEL_TRACE = 6

type compiler_has_extension* = object
type struct_GEmblem* = object
type compiler_FLT_MAX_10_EXP_private* = object
type struct_GRemoteActionGroup* = object
type struct_GEmblemClass* = object
type struct_GMenuAttributeIterPrivate* = object
type struct_GVolume* = object
type compiler_FLT_MANT_DIG_private* = object
type struct_GSourcePrivate* = object
type struct_GSocketListenerPrivate* = object
type compiler_FLT_EPSILON_private* = object
type struct_GSequence* = object
type struct_GDir* = object
type struct_GResolverPrivate* = object
type struct_GDBusObjectProxyPrivate* = object
type struct_GZlibDecompressor* = object
type compiler_LDBL_MAX_EXP_private* = object
type struct_GSocketConnectionPrivate* = object
type struct_GTcpWrapperConnectionPrivate* = object
type compiler_LDBL_MAX_private* = object
type struct_GMatchInfo* = object
type struct_GTimer* = object
type struct_GResource* = object
type compiler_LDBL_MIN_EXP_private* = object
type internal_GIO_EXTERN* = object
type struct_GSocketConnectable* = object
type struct_GDBusMethodInvocation* = object
type struct_GArrowWritableInterface* = object
type struct_GMainContext* = object
type struct_GFileInputStreamPrivate* = object
type compiler_DECIMAL_DIG_private* = object
type compiler_LDBL_MIN_private* = object
type struct_GInetSocketAddressPrivate* = object
type struct_GStringChunk* = object
type struct_GTlsConnectionPrivate* = object
type compiler_INT_MAX_private* = object
type struct_GMountOperationPrivate* = object
type struct_GIConv* = object
type struct_GNativeSocketAddressPrivate* = object
type struct_GThemedIcon* = object
type compiler_DBL_MAX_EXP_private* = object
type struct_GMarkupParseContext* = object
type struct_GThreadedSocketServicePrivate* = object
type GLIB_DEPRECATED* = object
type compiler_DBL_HAS_DENORM_private* = object
type compiler_DBL_MIN_EXP_private* = object
type compiler_DBL_MIN_private* = object
type struct_GSimpleIOStream* = object
type struct_GNetworkMonitor* = object
type compiler_LDBL_MIN_10_EXP_private* = object
type struct_GSocketControlMessagePrivate* = object
type compiler_FLT_EVAL_METHOD_private* = object
type struct_GFileIconClass* = object
type struct_GFileOutputStreamPrivate* = object
type struct_GDateTime* = object
type struct_GInputStreamPrivate* = object
type struct_GTcpConnectionPrivate* = object
type struct_GAppInfoMonitor* = object
type struct_GSignalGroup* = object
type struct_GUnixCredentialsMessagePrivate* = object
type struct_GMenuModelPrivate* = object
type struct_GTimeZone* = object
type struct_GFileAttributeMatcher* = object
type struct_GTree* = object
type struct_GSocketServicePrivate* = object
type compiler_extension_private* = object
type struct_GDebugController* = object
type struct_GUnixFDListPrivate* = object
type struct_GArrowWritableFile* = object
type struct_GInitable* = object
type struct_GNetworkAddressPrivate* = object
type struct_GApplicationCommandLinePrivate* = object
type compiler_FLT_MIN_private* = object
type extern* = object
type struct_GSimpleAction* = object
type struct_GFileInfo* = object
type struct_GSettingsPrivate* = object
type compiler_LDBL_DENORM_MIN_private* = object
type struct_GTlsInteractionPrivate* = object
type struct_GDataInputStreamPrivate* = object
type struct_GVariant* = object
type struct_GIOModuleClass* = object
type struct_GBinding* = object
type struct_GTlsFileDatabase* = object
type struct_GFileInfoClass* = object
type GARROW_EXTERN* = object
type struct_GTlsCertificatePrivate* = object
type USHRT_MAX* = object
type struct_GActionGroup* = object
type struct_GOptionContext* = object
type struct_GHmac* = object
type struct_GMappedFile* = object
type struct_GConverter* = object
type struct_GDBusActionGroup* = object
type struct_GMount* = object
type TRUE* = object
type struct_GDBusAuthObserver* = object
type G_MININT64* = object
type struct_GAction* = object
type struct_GCredentialsClass* = object
type compiler_FLT_MIN_10_EXP_private* = object
type G_DEPRECATED* = object
type struct_GInetAddressPrivate* = object
type struct_GFile* = object
type struct_GFileEnumeratorPrivate* = object
type struct_GAllocator* = object
type compiler_DBL_DENORM_MIN_private* = object
type internal_GOBJECT_EXTERN* = object
type struct_GPatternSpec* = object
type GLIB_DEPRECATED_MACRO* = object
type compiler_FLT_MAX_private* = object
type internal_GMODULE_EXTERN* = object
type struct_GCredentials* = object
type struct_GDBusObjectManagerServerPrivate* = object
type ULONG_MAX* = object
type struct_GSettingsSchema* = object
type struct_GSimpleProxyResolverPrivate* = object
type struct_GBindingGroup* = object
type struct_GSubprocessLauncher* = object
type struct_GTlsServerConnection* = object
type struct_GDtlsConnection* = object
type struct_GTestSuite* = object
type compiler_has_feature* = object
type struct_GSubprocess* = object
type SCHAR_MIN* = object
type struct_GTask* = object
type struct_GFileIOStreamPrivate* = object
type struct_GFileMonitorPrivate* = object
type struct_GInetAddressMaskPrivate* = object
type struct_GUnixConnectionPrivate* = object
type compiler_DBL_MIN_10_EXP_private* = object
type compiler_DBL_EPSILON_private* = object
type struct_GActionMap* = object
type struct_GRelation* = object
type struct_GDBusObjectManager* = object
type struct_GSimpleAsyncResultClass* = object
type SHRT_MIN* = object
type struct_GIOExtensionPoint* = object
type struct_GDBusProxyPrivate* = object
type struct_GCancellablePrivate* = object
type struct_GDBusMenuModel* = object
type struct_GSimpleAsyncResult* = object
type compiler_LDBL_DECIMAL_DIG_private* = object
type struct_GBytesIcon* = object
type struct_GAppInfo* = object
type struct_GTlsDatabasePrivate* = object
type struct_GMemoryOutputStreamPrivate* = object
type struct_GDtlsClientConnection* = object
type struct_GPermissionPrivate* = object
type compiler_LDBL_MAX_10_EXP_private* = object
type struct_GNetworkServicePrivate* = object
type compiler_CHAR_BIT_private* = object
type compiler_LONG_MAX_private* = object
type compiler_FLT_DECIMAL_DIG_private* = object
type compiler_FLT_HAS_DENORM_private* = object
type struct_GDBusObjectSkeletonPrivate* = object
type struct_GSettingsSchemaKey* = object
type struct_GMenuItem* = object
type struct_GArrowReadableInterface* = object
type struct_GArrowWritable* = object
type GIO_DEPRECATED* = object
type struct_GMenu* = object
type struct_GDBusServer* = object
type struct_GMenuLinkIterPrivate* = object
type struct_GNotification* = object
type struct_GAppLaunchContextPrivate* = object
type struct_GEmblemedIconPrivate* = object
type internal_GMODULE_IMPORT* = object
type struct_GDtlsServerConnection* = object
type struct_GMemChunk* = object
type struct_GUri* = object
type struct_GHashTable* = object
type struct_GPropertyAction* = object
type internal_GLIB_EXTERN* = object
type struct_GFileIcon* = object
type struct_GPollableInputStream* = object
type struct_GMemoryMonitor* = object
type struct_GThemedIconClass* = object
type struct_GArrowFile* = object
type struct_GIOModule* = object
type struct_GCharsetConverter* = object
type struct_GSequenceNode* = object
type struct_GUnixSocketAddressPrivate* = object
type internal_GIO_IMPORT* = object
type struct_GMainLoop* = object
type GLIB_VERSION_CUR_STABLE* = object
type GARROW_IMPORT* = object
type struct_GPollableOutputStream* = object
type compiler_FLT_DENORM_MIN_private* = object
type G_TYPE_FLAG_RESERVED_ID_BIT* = object
type struct_GBookmarkFile* = object
type struct_GOptionGroup* = object
type compiler_FLT_MAX_EXP_private* = object
type compiler_has_builtin* = object
type G_MAXINT64* = object
type GOBJECT_DEPRECATED* = object
type struct_GRand* = object
type struct_GSimplePermission* = object
type compiler_DBL_MAX_private* = object
type struct_GZlibCompressor* = object
type struct_GTreeNode* = object
type struct_GSettingsBackend* = object
type compiler_LDBL_HAS_DENORM_private* = object
type struct_GTlsClientConnection* = object
type compiler_DBL_MANT_DIG_private* = object
type compiler_LONG_LONG_MAX_private* = object
type struct_GDBusInterface* = object
type compiler_LDBL_MANT_DIG_private* = object
type compiler_STDC_VERSION_private* = object
type struct_GProxyAddressPrivate* = object
type struct_GTypePlugin* = object
type struct_GProxyAddressEnumeratorPrivate* = object
type struct_GBufferedOutputStreamPrivate* = object
type struct_GSimpleActionGroupPrivate* = object
type struct_GSocketPrivate* = object
type UINT_MAX* = object
type struct_GTlsBackend* = object
type struct_GIOSchedulerJob* = object
type struct_GArrowReadable* = object
type struct_GDatagramBased* = object
type struct_GModule* = object
type union_GTypeCValue* = object
type struct_GKeyFile* = object
type compiler_DBL_DECIMAL_DIG_private* = object
type struct_GIOStreamPrivate* = object
type struct_GIOStreamAdapter* = object
type struct_GListStore* = object
type struct_GCache* = object
type compiler_DBL_DIG_private* = object
type struct_GAsyncInitable* = object
type struct_GTestDBus* = object
type compiler_DBL_MAX_10_EXP_private* = object
type INT_MIN* = object
type struct_GAsyncResult* = object
type compiler_FLT_RADIX_private* = object
type struct_GTestCase* = object
type struct_GFilenameCompleter* = object
type va_copy* = object
type struct_GArrowWritableFileInterface* = object
type struct_GLoadableIcon* = object
type struct_GTlsPasswordPrivate* = object
type struct_GStrvBuilder* = object
type compiler_FLT_MIN_EXP_private* = object
type struct_GDBusConnection* = object
type struct_GDataOutputStreamPrivate* = object
type GMODULE_DEPRECATED* = object
type struct_GDBusObjectManagerClientPrivate* = object
type struct_GMemoryInputStreamPrivate* = object
type compiler_LDBL_DIG_private* = object
type struct_GConverterInputStreamPrivate* = object
type struct_GChecksum* = object
type struct_GDBusInterfaceSkeletonPrivate* = object
type internal_GOBJECT_IMPORT* = object
type struct_GDBusMessage* = object
type struct_GSettingsSchemaSource* = object
type struct_GSeekable* = object
type compiler_FLT_DIG_private* = object
type struct_GRegex* = object
type struct_GArrowFileInterface* = object
type struct_GAsyncQueue* = object
type struct_GIOModuleScope* = object
type struct_GIOExtension* = object
type struct_GData* = object
type struct_GDrive* = object
type struct_GSrvTarget* = object
type compiler_builtin_va_list* = object
type struct_GDBusObject* = object
type struct_GSocketClientPrivate* = object
type struct_GBytes* = object
type struct_GConverterOutputStreamPrivate* = object
type internal_GLIB_IMPORT* = object
type struct_GBufferedInputStreamPrivate* = object
type compiler_LDBL_EPSILON_private* = object
type struct_GIcon* = object
type struct_GApplicationPrivate* = object
type compiler_SCHAR_MAX_private* = object
type compiler_SHRT_MAX_private* = object
type struct_GProxyResolver* = object
type compiler_has_attribute* = object
type struct_GPowerProfileMonitor* = object
type LONG_MIN* = object
type struct_GListModel* = object
type struct_GOutputStreamPrivate* = object
type struct_GTaskClass* = object
type struct_GProxy* = object
type struct_GVariantType* = object
type struct_GParamSpecPool* = object
type
  GType* = gsize ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:427:41
  ptrdiff_t* = clong
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stddef.h:160:26
  size_t* = culong
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stddef.h:229:23
  wchar_t* = cint
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stddef.h:344:24
  struct_max_align_t* {.pure, inheritable, bycopy.} = object
    compiler_max_align_ll*: clonglong
      ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stddef.h:440:9
    compiler_max_align_ld*: clongdouble

  max_align_t* = struct_max_align_t
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stddef.h:451:3
  gint8* = cschar ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:45:21
  guint8* = uint8 ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:46:23
  gint16* = cshort ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:48:22
  guint16* = cushort ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:49:24
  gint32* = cint ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:56:20
  guint32* = cuint ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:57:22
  gint64* = clong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:66:21
  guint64* = culong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:67:23
  gssize* = clong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:82:21
  gsize* = culong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:83:23
  goffset* = gint64 ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:93:16
  gintptr* = clong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:109:21
  guintptr* = culong ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:110:23
  GPid* = cint ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:201:13
  gchar* = cschar ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:52:16
  gshort* = cshort ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:53:16
  glong* = clong ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:54:16
  gint* = cint ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:55:16
  gboolean* = gint ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:56:16
  guchar* = uint8 ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:58:25
  gushort* = cushort ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:59:25
  gulong* = culong ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:60:25
  guint* = cuint ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:61:25
  gfloat* = cfloat ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:63:17
  gdouble* = cdouble ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:64:17
  gpointer* = pointer ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:109:15
  gconstpointer* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:110:21
  GCompareFunc* = proc(a0: gconstpointer, a1: gconstpointer): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:112:27
  GCompareDataFunc* =
    proc(a0: gconstpointer, a1: gconstpointer, a2: gpointer): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:114:27
  GEqualFunc* = proc(a0: gconstpointer, a1: gconstpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:117:27
  GEqualFuncFull* =
    proc(a0: gconstpointer, a1: gconstpointer, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:136:27
  GDestroyNotify* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:140:27
  GFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:141:27
  GHashFunc* = proc(a0: gconstpointer): guint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:143:27
  GHFunc* = proc(a0: gpointer, a1: gpointer, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:144:27
  GCopyFunc* = proc(a0: gconstpointer, a1: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:160:20
  GFreeFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:170:27
  GTranslateFunc* = proc(a0: cstring, a1: gpointer): cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:184:27
  GDoubleIEEE754* = union_GDoubleIEEE754
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:528:32
  union_GDoubleIEEE754_mpn_t* {.pure, inheritable, bycopy.} = object
    mantissa_low* {.bitsize: 32'i64.}: guint
    mantissa_high* {.bitsize: 20'i64.}: guint
    biased_exponent* {.bitsize: 11'i64.}: guint
    sign* {.bitsize: 1'i64.}: guint

  union_GDoubleIEEE754* {.union, bycopy.} = object
    v_double*: gdouble ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:544:7
    mpn*: union_GDoubleIEEE754_mpn_t

  GFloatIEEE754* = union_GFloatIEEE754
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:529:31
  union_GFloatIEEE754_mpn_t* {.pure, inheritable, bycopy.} = object
    mantissa* {.bitsize: 23'i64.}: guint
    biased_exponent* {.bitsize: 8'i64.}: guint
    sign* {.bitsize: 1'i64.}: guint

  union_GFloatIEEE754* {.union, bycopy.} = object
    v_float*: gfloat ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:535:7
    mpn*: union_GFloatIEEE754_mpn_t

  GTimeVal* = struct_GTimeVal
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:578:26
  struct_GTimeVal* {.pure, inheritable, bycopy.} = object
    tv_sec*: glong ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:580:8
    tv_usec*: glong

  grefcount* = gint ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:586:14
  gatomicrefcount* = gint
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:587:14
  GBytes* = struct_GBytes ## Generated based on /usr/include/glib-2.0/glib/garray.h:38:33
  GArray* = struct_GArray ## Generated based on /usr/include/glib-2.0/glib/garray.h:39:25
  struct_GArray* {.pure, inheritable, bycopy.} = object
    data*: cstring ## Generated based on /usr/include/glib-2.0/glib/garray.h:43:8
    len*: guint

  GByteArray* = struct_GByteArray
    ## Generated based on /usr/include/glib-2.0/glib/garray.h:40:28
  struct_GByteArray* {.pure, inheritable, bycopy.} = object
    data*: ptr guint8 ## Generated based on /usr/include/glib-2.0/glib/garray.h:49:8
    len*: guint

  GPtrArray* = struct_GPtrArray
    ## Generated based on /usr/include/glib-2.0/glib/garray.h:41:27
  struct_GPtrArray* {.pure, inheritable, bycopy.} = object
    pdata*: ptr gpointer ## Generated based on /usr/include/glib-2.0/glib/garray.h:55:8
    len*: guint

  compiler_gnuc_va_list* = compiler_builtin_va_list
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stdarg.h:40:27
  va_list* = compiler_gnuc_va_list
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/stdarg.h:103:24
  GQuark* = guint32 ## Generated based on /usr/include/glib-2.0/glib/gquark.h:38:17
  GError* = struct_GError ## Generated based on /usr/include/glib-2.0/glib/gerror.h:43:24
  struct_GError* {.pure, inheritable, bycopy.} = object
    domain*: GQuark ## Generated based on /usr/include/glib-2.0/glib/gerror.h:45:8
    code*: gint
    message*: cstring

  GErrorInitFunc* = proc(a0: ptr GError): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gerror.h:142:16
  GErrorCopyFunc* = proc(a0: ptr GError, a1: ptr GError): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gerror.h:160:16
  GErrorClearFunc* = proc(a0: ptr GError): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gerror.h:175:16
  GUserDirectory* = enum_GUserDirectory
    ## Generated based on /usr/include/glib-2.0/glib/gutils.h:252:3
  GDebugKey* = struct_GDebugKey
    ## Generated based on /usr/include/glib-2.0/glib/gutils.h:265:27
  struct_GDebugKey* {.pure, inheritable, bycopy.} = object
    key*: cstring ## Generated based on /usr/include/glib-2.0/glib/gutils.h:266:8
    value*: guint

  GFormatSizeFlags* = enum_GFormatSizeFlags
    ## Generated based on /usr/include/glib-2.0/glib/gutils.h:302:3
  GVoidFunc* = proc(): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gutils.h:324:16
  GThreadError* = enum_GThreadError
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:47:3
  GThreadFunc* = proc(a0: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:49:20
  GThread* = struct_GThread
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:51:33
  struct_GThread* {.pure, inheritable, bycopy.} = object
    func_field*: GThreadFunc
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:48:9
    data*: gpointer
    joinable*: gboolean
    priority*: GThreadPriority

  GMutex* = union_GMutex ## Generated based on /usr/include/glib-2.0/glib/gthread.h:53:33
  union_GMutex* {.union, bycopy.} = object
    p*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gthread.h:60:7
    i*: array[2'i64, guint]

  GRecMutex* = struct_GRecMutex
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:54:33
  struct_GRecMutex* {.pure, inheritable, bycopy.} = object
    p*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gthread.h:81:8
    i*: array[2'i64, guint]

  GRWLock* = struct_GRWLock
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:55:33
  struct_GRWLock* {.pure, inheritable, bycopy.} = object
    p*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gthread.h:67:8
    i*: array[2'i64, guint]

  GCond* = struct_GCond ## Generated based on /usr/include/glib-2.0/glib/gthread.h:56:33
  struct_GCond* {.pure, inheritable, bycopy.} = object
    p*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gthread.h:74:8
    i*: array[2'i64, guint]

  GPrivate* = struct_GPrivate
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:57:33
  struct_GPrivate* {.pure, inheritable, bycopy.} = object
    p*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gthread.h:89:8
    notify*: GDestroyNotify
    future*: array[2'i64, gpointer]

  GOnce* = struct_GOnce ## Generated based on /usr/include/glib-2.0/glib/gthread.h:58:33
  struct_GOnce* {.pure, inheritable, bycopy.} = object
    status*: GOnceStatus ## Generated based on /usr/include/glib-2.0/glib/gthread.h:105:8
    retval*: gpointer

  GOnceStatus* = enum_GOnceStatus
    ## Generated based on /usr/include/glib-2.0/glib/gthread.h:102:3
  GAsyncQueue* = struct_GAsyncQueue
    ## Generated based on /usr/include/glib-2.0/glib/gasyncqueue.h:38:29
  GTimeZone* = struct_GTimeZone
    ## Generated based on /usr/include/glib-2.0/glib/gtimezone.h:34:27
  GTimeType* = enum_GTimeType
    ## Generated based on /usr/include/glib-2.0/glib/gtimezone.h:56:3
  GTimeSpan* = gint64 ## Generated based on /usr/include/glib-2.0/glib/gdatetime.h:89:16
  GDateTime* = struct_GDateTime
    ## Generated based on /usr/include/glib-2.0/glib/gdatetime.h:122:27
  GBookmarkFileError* = enum_GBookmarkFileError
    ## Generated based on /usr/include/glib-2.0/glib/gbookmarkfile.h:70:3
  GBookmarkFile* = struct_GBookmarkFile
    ## Generated based on /usr/include/glib-2.0/glib/gbookmarkfile.h:118:31
  time_t* = compiler_time_t ## Generated based on /usr/include/bits/types/time_t.h:10:18
  GChecksumType* = enum_GChecksumType
    ## Generated based on /usr/include/glib-2.0/glib/gchecksum.h:55:3
  GChecksum* = struct_GChecksum
    ## Generated based on /usr/include/glib-2.0/glib/gchecksum.h:57:33
  GConvertError* = enum_GConvertError
    ## Generated based on /usr/include/glib-2.0/glib/gconvert.h:66:3
  GIConv* = ptr struct_GIConv
    ## Generated based on /usr/include/glib-2.0/glib/gconvert.h:85:25
  GData* = struct_GData ## Generated based on /usr/include/glib-2.0/glib/gdataset.h:38:33
  GDataForeachFunc* = proc(a0: GQuark, a1: gpointer, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gdataset.h:40:27
  GDuplicateFunc* = proc(a0: gpointer, a1: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gdataset.h:63:20
  GTime* = gint32 ## Generated based on /usr/include/glib-2.0/glib/gdate.h:41:17
  GDateYear* = guint16 ## Generated based on /usr/include/glib-2.0/glib/gdate.h:42:17
  GDateDay* = guint8 ## Generated based on /usr/include/glib-2.0/glib/gdate.h:43:17
  GDate* = struct_GDate ## Generated based on /usr/include/glib-2.0/glib/gdate.h:44:23
  struct_GDate* {.pure, inheritable, bycopy.} = object
    julian_days* {.bitsize: 32'i64.}: guint
      ## Generated based on /usr/include/glib-2.0/glib/gdate.h:92:8
    julian* {.bitsize: 1'i64.}: guint
    dmy* {.bitsize: 1'i64.}: guint
    day* {.bitsize: 6'i64.}: guint
    month* {.bitsize: 4'i64.}: guint
    year* {.bitsize: 16'i64.}: guint

  GDateDMY* = enum_GDateDMY ## Generated based on /usr/include/glib-2.0/glib/gdate.h:52:3
  GDateWeekday* = enum_GDateWeekday
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:65:3
  GDateMonth* = enum_GDateMonth
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:81:3
  struct_tm* {.pure, inheritable, bycopy.} = object
    tm_sec*: cint ## Generated based on /usr/include/bits/types/struct_tm.h:7:8
    tm_min*: cint
    tm_hour*: cint
    tm_mday*: cint
    tm_mon*: cint
    tm_year*: cint
    tm_wday*: cint
    tm_yday*: cint
    tm_isdst*: cint
    tm_gmtoff*: clong
    tm_zone*: cstring

  GDir* = struct_GDir ## Generated based on /usr/include/glib-2.0/glib/gdir.h:39:22
  GFileError* = enum_GFileError
    ## Generated based on /usr/include/glib-2.0/glib/gfileutils.h:62:3
  GFileTest* = enum_GFileTest
    ## Generated based on /usr/include/glib-2.0/glib/gfileutils.h:75:3
  GFileSetContentsFlags* = enum_GFileSetContentsFlags
    ## Generated based on /usr/include/glib-2.0/glib/gfileutils.h:107:3
  GMemVTable* = struct_GMemVTable
    ## Generated based on /usr/include/glib-2.0/glib/gmem.h:54:28
  struct_GMemVTable* {.pure, inheritable, bycopy.} = object
    malloc*: proc(a0: gsize): gpointer {.cdecl.}
      ## Generated based on /usr/include/glib-2.0/glib/gmem.h:401:8
    realloc*: proc(a0: gpointer, a1: gsize): gpointer {.cdecl.}
    free*: proc(a0: gpointer): void {.cdecl.}
    calloc*: proc(a0: gsize, a1: gsize): gpointer {.cdecl.}
    try_malloc*: proc(a0: gsize): gpointer {.cdecl.}
    try_realloc*: proc(a0: gpointer, a1: gsize): gpointer {.cdecl.}

  GNode* = struct_GNode ## Generated based on /usr/include/glib-2.0/glib/gnode.h:38:24
  struct_GNode* {.pure, inheritable, bycopy.} = object
    data*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gnode.h:67:8
    next*: ptr GNode
    prev*: ptr GNode
    parent*: ptr GNode
    children*: ptr GNode

  GTraverseFlags* = enum_GTraverseFlags
    ## Generated based on /usr/include/glib-2.0/glib/gnode.h:49:3
  GTraverseType* = enum_GTraverseType
    ## Generated based on /usr/include/glib-2.0/glib/gnode.h:58:3
  GNodeTraverseFunc* = proc(a0: ptr GNode, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gnode.h:60:20
  GNodeForeachFunc* = proc(a0: ptr GNode, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gnode.h:62:17
  GList* = struct_GList ## Generated based on /usr/include/glib-2.0/glib/glist.h:39:23
  struct_GList* {.pure, inheritable, bycopy.} = object
    data*: gpointer ## Generated based on /usr/include/glib-2.0/glib/glist.h:41:8
    next*: ptr GList
    prev*: ptr GList

  GHashTable* = struct_GHashTable
    ## Generated based on /usr/include/glib-2.0/glib/ghash.h:40:29
  GHRFunc* = proc(a0: gpointer, a1: gpointer, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghash.h:42:21
  GHashTableIter* = struct_GHashTableIter
    ## Generated based on /usr/include/glib-2.0/glib/ghash.h:46:32
  struct_GHashTableIter* {.pure, inheritable, bycopy.} = object
    dummy1*: gpointer ## Generated based on /usr/include/glib-2.0/glib/ghash.h:48:8
    dummy2*: gpointer
    dummy3*: gpointer
    dummy4*: cint
    dummy5*: gboolean
    dummy6*: gpointer

  GHmac* = struct_GHmac ## Generated based on /usr/include/glib-2.0/glib/ghmac.h:33:29
  GHook* = struct_GHook ## Generated based on /usr/include/glib-2.0/glib/ghook.h:40:24
  struct_GHook* {.pure, inheritable, bycopy.} = object
    data*: gpointer ## Generated based on /usr/include/glib-2.0/glib/ghook.h:75:8
    next*: ptr GHook
    prev*: ptr GHook
    ref_count*: guint
    hook_id*: gulong
    flags*: guint
    func_field*: gpointer
    destroy*: GDestroyNotify

  GHookList* = struct_GHookList
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:41:27
  struct_GHookList* {.pure, inheritable, bycopy.} = object
    seq_id*: gulong ## Generated based on /usr/include/glib-2.0/glib/ghook.h:65:8
    hook_size* {.bitsize: 16'i64.}: guint
    is_setup* {.bitsize: 1'i64.}: guint
    hooks*: ptr GHook
    dummy3*: gpointer
    finalize_hook*: GHookFinalizeFunc
    dummy*: array[2'i64, gpointer]

  GHookCompareFunc* = proc(a0: ptr GHook, a1: ptr GHook): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:43:17
  GHookFindFunc* = proc(a0: ptr GHook, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:45:20
  GHookMarshaller* = proc(a0: ptr GHook, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:47:17
  GHookCheckMarshaller* = proc(a0: ptr GHook, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:49:20
  GHookFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:51:17
  GHookCheckFunc* = proc(a0: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:52:20
  GHookFinalizeFunc* = proc(a0: ptr GHookList, a1: ptr GHook): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:53:17
  GHookFlagMask* = enum_GHookFlagMask
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:60:3
  GPollFD* = struct_GPollFD
    ## Generated based on /usr/include/glib-2.0/glib/gpoll.h:61:25
  struct_GPollFD* {.pure, inheritable, bycopy.} = object
    fd*: gint ## Generated based on /usr/include/glib-2.0/glib/gpoll.h:93:8
    events*: gushort
    revents*: gushort

  GPollFunc* = proc(a0: ptr GPollFD, a1: guint, a2: gint): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gpoll.h:76:19
  GSList* = struct_GSList ## Generated based on /usr/include/glib-2.0/glib/gslist.h:39:24
  struct_GSList* {.pure, inheritable, bycopy.} = object
    data*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gslist.h:41:8
    next*: ptr GSList

  GIOCondition* = enum_GIOCondition
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:41:3
  GMainContextFlags* = enum_GMainContextFlags
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:61:3
  GMainContext* = struct_GMainContext
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:70:41
  GMainLoop* = struct_GMainLoop
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:78:41
  GSource* = struct_GSource
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:86:41
  struct_GSource* {.pure, inheritable, bycopy.} = object
    callback_data*: gpointer
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:266:8
    callback_funcs*: ptr GSourceCallbackFuncs
    source_funcs*: ptr GSourceFuncs
    ref_count*: guint
    context*: ptr GMainContext
    priority*: gint
    flags*: guint
    source_id*: guint
    poll_fds*: ptr GSList
    prev*: ptr GSource
    next*: ptr GSource
    name*: cstring
    priv*: ptr GSourcePrivate

  GSourcePrivate* = struct_GSourcePrivate
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:87:41
  GSourceCallbackFuncs* = struct_GSourceCallbackFuncs
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:99:41
  struct_GSourceCallbackFuncs* {.pure, inheritable, bycopy.} = object
    ref_field*: proc(a0: gpointer): void {.cdecl.}
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:291:8
    unref*: proc(a0: gpointer): void {.cdecl.}
    get*: proc(a0: gpointer, a1: ptr GSource, a2: GSourceFunc, a3: ptr gpointer): void {.
      cdecl
    .}

  GSourceFuncs* = struct_GSourceFuncs
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:157:41
  struct_GSourceFuncs* {.pure, inheritable, bycopy.} = object
    prepare*: GSourceFuncsPrepareFunc
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:398:8
    check*: GSourceFuncsCheckFunc
    dispatch*: GSourceFuncsDispatchFunc
    finalize*: GSourceFuncsFinalizeFunc
    closure_callback*: GSourceFunc
    closure_marshal*: GSourceDummyMarshal

  GSourceFunc* = proc(a0: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:199:20
  GSourceOnceFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:213:17
  GChildWatchFunc* = proc(a0: GPid, a1: gint, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:249:20
  GSourceDisposeFunc* = proc(a0: ptr GSource): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:264:16
  GSourceDummyMarshal* = proc(): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:307:16
  GSourceFuncsPrepareFunc* = proc(a0: ptr GSource, a1: ptr gint): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:333:20
  GSourceFuncsCheckFunc* = proc(a0: ptr GSource): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:354:20
  GSourceFuncsDispatchFunc* =
    proc(a0: ptr GSource, a1: GSourceFunc, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:379:20
  GSourceFuncsFinalizeFunc* = proc(a0: ptr GSource): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:396:16
  GClearHandleFunc* = proc(a0: guint): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:854:17
  gunichar* = guint32 ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:61:17
  gunichar2* = guint16 ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:79:17
  GUnicodeType* = enum_GUnicodeType
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:150:3
  GUnicodeBreakType* = enum_GUnicodeBreakType
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:271:3
  GUnicodeScript* = enum_GUnicodeScript
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:681:3
  GNormalizeMode* = enum_GNormalizeMode
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:977:3
  GAsciiType* = enum_GAsciiType
    ## Generated based on /usr/include/glib-2.0/glib/gstrfuncs.h:57:3
  GStrv* = ptr cstring
    ## Generated based on /usr/include/glib-2.0/glib/gstrfuncs.h:354:17
  GNumberParserError* = enum_GNumberParserError
    ## Generated based on /usr/include/glib-2.0/glib/gstrfuncs.h:414:5
  GString* = struct_GString
    ## Generated based on /usr/include/glib-2.0/glib/gstring.h:43:33
  struct_GString* {.pure, inheritable, bycopy.} = object
    str*: cstring ## Generated based on /usr/include/glib-2.0/glib/gstring.h:45:8
    len*: gsize
    allocated_len*: gsize

  GIOChannel* = struct_GIOChannel
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:43:28
  struct_GIOChannel* {.pure, inheritable, bycopy.} = object
    ref_count*: gint ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:100:8
    funcs*: ptr GIOFuncs
    encoding*: cstring
    read_cd*: GIConv
    write_cd*: GIConv
    line_term*: cstring
    line_term_len*: guint
    buf_size*: gsize
    read_buf*: ptr GString
    encoded_read_buf*: ptr GString
    write_buf*: ptr GString
    partial_write_buf*: array[6'i64, gchar]
    use_buffer* {.bitsize: 1'i64.}: guint
    do_encode* {.bitsize: 1'i64.}: guint
    close_on_unref* {.bitsize: 1'i64.}: guint
    is_readable* {.bitsize: 1'i64.}: guint
    is_writeable* {.bitsize: 1'i64.}: guint
    is_seekable* {.bitsize: 1'i64.}: guint
    reserved1*: gpointer
    reserved2*: gpointer

  GIOFuncs* = struct_GIOFuncs
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:44:33
  struct_GIOFuncs* {.pure, inheritable, bycopy.} = object
    io_read*: proc(
      a0: ptr GIOChannel, a1: cstring, a2: gsize, a3: ptr gsize, a4: ptr ptr GError
    ): GIOStatus {.cdecl.}
      ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:134:8
    io_write*: proc(
      a0: ptr GIOChannel, a1: cstring, a2: gsize, a3: ptr gsize, a4: ptr ptr GError
    ): GIOStatus {.cdecl.}
    io_seek*: proc(
      a0: ptr GIOChannel, a1: gint64, a2: GSeekType, a3: ptr ptr GError
    ): GIOStatus {.cdecl.}
    io_close*: proc(a0: ptr GIOChannel, a1: ptr ptr GError): GIOStatus {.cdecl.}
    io_create_watch*: proc(a0: ptr GIOChannel, a1: GIOCondition): ptr GSource {.cdecl.}
    io_free*: proc(a0: ptr GIOChannel): void {.cdecl.}
    io_set_flags*:
      proc(a0: ptr GIOChannel, a1: GIOFlags, a2: ptr ptr GError): GIOStatus {.cdecl.}
    io_get_flags*: proc(a0: ptr GIOChannel): GIOFlags {.cdecl.}

  GIOError* = enum_GIOError
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:52:3
  GIOChannelError* = enum_GIOChannelError
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:69:3
  GIOStatus* = enum_GIOStatus
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:77:3
  GSeekType* = enum_GSeekType
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:84:3
  GIOFlags* = enum_GIOFlags
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:98:3
  GIOFunc* =
    proc(a0: ptr GIOChannel, a1: GIOCondition, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/giochannel.h:131:20
  GKeyFileError* = enum_GKeyFileError
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:43:3
  GKeyFile* = struct_GKeyFile
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:50:26
  GKeyFileFlags* = enum_GKeyFileFlags
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:57:3
  GMappedFile* = struct_GMappedFile
    ## Generated based on /usr/include/glib-2.0/glib/gmappedfile.h:34:29
  GMarkupError* = enum_GMarkupError
    ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:63:3
  GMarkupParseFlags* = enum_GMarkupParseFlags
    ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:105:3
  GMarkupParseContext* = struct_GMarkupParseContext
    ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:116:37
  GMarkupParser* = struct_GMarkupParser
    ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:117:31
  struct_GMarkupParser* {.pure, inheritable, bycopy.} = object
    start_element*: proc(
      a0: ptr GMarkupParseContext,
      a1: cstring,
      a2: ptr cstring,
      a3: ptr cstring,
      a4: gpointer,
      a5: ptr ptr GError,
    ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:147:8
    end_element*: proc(
      a0: ptr GMarkupParseContext, a1: cstring, a2: gpointer, a3: ptr ptr GError
    ): void {.cdecl.}
    text*: proc(
      a0: ptr GMarkupParseContext,
      a1: cstring,
      a2: gsize,
      a3: gpointer,
      a4: ptr ptr GError,
    ): void {.cdecl.}
    passthrough*: proc(
      a0: ptr GMarkupParseContext,
      a1: cstring,
      a2: gsize,
      a3: gpointer,
      a4: ptr ptr GError,
    ): void {.cdecl.}
    error*:
      proc(a0: ptr GMarkupParseContext, a1: ptr GError, a2: gpointer): void {.cdecl.}

  GMarkupCollectType* = enum_GMarkupCollectType
    ## Generated based on /usr/include/glib-2.0/glib/gmarkup.h:250:3
  GVariantType* = struct_GVariantType
    ## Generated based on /usr/include/glib-2.0/glib/gvarianttype.h:34:30
  GVariant* = struct_GVariant
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:36:33
  GVariantClass* = enum_GVariantClass
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:58:3
  GVariantIter* = struct_GVariantIter
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:270:30
  struct_GVariantIter* {.pure, inheritable, bycopy.} = object
    x*: array[16'i64, guintptr]
      ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:271:8

  GVariantBuilder* = struct_GVariantBuilder
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:299:33
  struct_GVariantBuilder_u_t_s_t* {.pure, inheritable, bycopy.} = object
    partial_magic*: gsize
    type_field*: ptr GVariantType
    y*: array[14'i64, guintptr]

  struct_GVariantBuilder_u_t* {.union, bycopy.} = object
    s*: struct_GVariantBuilder_u_t_s_t
    x*: array[16'i64, guintptr]

  struct_GVariantBuilder* {.pure, inheritable, bycopy.} = object
    u*: struct_GVariantBuilder_u_t
      ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:300:8

  GVariantParseError* = enum_GVariantParseError
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:334:3
  GVariantDict* = struct_GVariantDict
    ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:485:30
  struct_GVariantDict_u_t_s_t* {.pure, inheritable, bycopy.} = object
    asv*: ptr GVariant
    partial_magic*: gsize
    y*: array[14'i64, guintptr]

  struct_GVariantDict_u_t* {.union, bycopy.} = object
    s*: struct_GVariantDict_u_t_s_t
    x*: array[16'i64, guintptr]

  struct_GVariantDict* {.pure, inheritable, bycopy.} = object
    u*: struct_GVariantDict_u_t
      ## Generated based on /usr/include/glib-2.0/glib/gvariant.h:486:8

  GLogLevelFlags* = enum_GLogLevelFlags
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:70:3
  GLogFunc* =
    proc(a0: cstring, a1: GLogLevelFlags, a2: cstring, a3: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:75:27
  GLogWriterOutput* = enum_GLogWriterOutput
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:140:3
  GLogField* = struct_GLogField
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:158:27
  struct_GLogField* {.pure, inheritable, bycopy.} = object
    key*: cstring ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:159:8
    value*: gconstpointer
    length*: gssize

  GLogWriterFunc* = proc(
    a0: GLogLevelFlags, a1: ptr GLogField, a2: gsize, a3: gpointer
  ): GLogWriterOutput {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:197:28
  GPrintFunc* = proc(a0: cstring): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:525:19
  GOptionContext* = struct_GOptionContext
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:40:32
  GOptionGroup* = struct_GOptionGroup
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:53:32
  GOptionEntry* = struct_GOptionEntry
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:54:32
  struct_GOptionEntry* {.pure, inheritable, bycopy.} = object
    long_name*: cstring ## Generated based on /usr/include/glib-2.0/glib/goption.h:283:8
    short_name*: gchar
    flags*: gint
    arg*: GOptionArg
    arg_data*: gpointer
    description*: cstring
    arg_description*: cstring

  GOptionFlags* = enum_GOptionFlags
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:114:3
  GOptionArg* = enum_GOptionArg
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:153:3
  GOptionArgFunc* =
    proc(a0: cstring, a1: cstring, a2: gpointer, a3: ptr ptr GError): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:172:20
  GOptionParseFunc* = proc(
    a0: ptr GOptionContext, a1: ptr GOptionGroup, a2: gpointer, a3: ptr ptr GError
  ): gboolean {.cdecl.} ## Generated based on /usr/include/glib-2.0/glib/goption.h:190:20
  GOptionErrorFunc* = proc(
    a0: ptr GOptionContext, a1: ptr GOptionGroup, a2: gpointer, a3: ptr ptr GError
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/glib/goption.h:205:16
  GOptionError* = enum_GOptionError
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:234:3
  GPathBuf* = struct_GPathBuf
    ## Generated based on /usr/include/glib-2.0/glib/gpathbuf.h:17:27
  struct_GPathBuf* {.pure, inheritable, bycopy.} = object
    dummy*: array[8'i64, gpointer]
      ## Generated based on /usr/include/glib-2.0/glib/gpathbuf.h:19:8

  GPatternSpec* = struct_GPatternSpec
    ## Generated based on /usr/include/glib-2.0/glib/gpattern.h:32:33
  GQueue* = struct_GQueue ## Generated based on /usr/include/glib-2.0/glib/gqueue.h:38:24
  struct_GQueue* {.pure, inheritable, bycopy.} = object
    head*: ptr GList ## Generated based on /usr/include/glib-2.0/glib/gqueue.h:49:8
    tail*: ptr GList
    length*: guint

  GRand* = struct_GRand ## Generated based on /usr/include/glib-2.0/glib/grand.h:38:33
  GRefString* = cschar
    ## Generated based on /usr/include/glib-2.0/glib/grefstring.h:57:14
  GRegexError* = enum_GRegexError
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:203:3
  GRegexCompileFlags* = enum_GRegexCompileFlags
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:325:3
  GRegexMatchFlags* = enum_GRegexMatchFlags
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:414:3
  GRegex* = struct_GRegex
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:416:25
  GMatchInfo* = struct_GMatchInfo
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:425:28
  GRegexEvalCallback* =
    proc(a0: ptr GMatchInfo, a1: ptr GString, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gregex.h:444:20
  GScanner* = struct_GScanner
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:39:26
  struct_GScanner* {.pure, inheritable, bycopy.} = object
    user_data*: gpointer
      ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:171:8
    max_parse_errors*: guint
    parse_errors*: guint
    input_name*: cstring
    qdata*: ptr GData
    config*: ptr GScannerConfig
    token*: GTokenType
    value*: GTokenValue
    line*: guint
    position*: guint
    next_token*: GTokenType
    next_value*: GTokenValue
    next_line*: guint
    next_position*: guint
    symbol_table*: ptr GHashTable
    input_fd*: gint
    text*: cstring
    text_end*: cstring
    buffer*: cstring
    scope_id*: guint
    msg_handler*: GScannerMsgFunc

  GScannerConfig* = struct_GScannerConfig
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:40:32
  struct_GScannerConfig* {.pure, inheritable, bycopy.} = object
    cset_skip_characters*: cstring
      ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:129:8
    cset_identifier_first*: cstring
    cset_identifier_nth*: cstring
    cpair_comment_single*: cstring
    case_sensitive* {.bitsize: 1'i64.}: guint
    skip_comment_multi* {.bitsize: 1'i64.}: guint
    skip_comment_single* {.bitsize: 1'i64.}: guint
    scan_comment_multi* {.bitsize: 1'i64.}: guint
    scan_identifier* {.bitsize: 1'i64.}: guint
    scan_identifier_1char* {.bitsize: 1'i64.}: guint
    scan_identifier_NULL* {.bitsize: 1'i64.}: guint
    scan_symbols* {.bitsize: 1'i64.}: guint
    scan_binary* {.bitsize: 1'i64.}: guint
    scan_octal* {.bitsize: 1'i64.}: guint
    scan_float* {.bitsize: 1'i64.}: guint
    scan_hex* {.bitsize: 1'i64.}: guint
    scan_hex_dollar* {.bitsize: 1'i64.}: guint
    scan_string_sq* {.bitsize: 1'i64.}: guint
    scan_string_dq* {.bitsize: 1'i64.}: guint
    numbers_2_int* {.bitsize: 1'i64.}: guint
    int_2_float* {.bitsize: 1'i64.}: guint
    identifier_2_string* {.bitsize: 1'i64.}: guint
    char_2_token* {.bitsize: 1'i64.}: guint
    symbol_2_token* {.bitsize: 1'i64.}: guint
    scope_0_fallback* {.bitsize: 1'i64.}: guint
    store_int64* {.bitsize: 1'i64.}: guint
    padding_dummy*: guint

  GTokenValue* = union_GTokenValue
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:41:33
  union_GTokenValue* {.union, bycopy.} = object
    v_symbol*: gpointer ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:113:7
    v_identifier*: cstring
    v_binary*: gulong
    v_octal*: gulong
    v_int*: gulong
    v_int64*: guint64
    v_float*: gdouble
    v_hex*: gulong
    v_string*: cstring
    v_comment*: cstring
    v_char*: guchar
    v_error*: guint

  GScannerMsgFunc* = proc(a0: ptr GScanner, a1: cstring, a2: gboolean): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:43:17
  GErrorType* = enum_GErrorType
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:74:3
  GTokenType* = enum_GTokenType
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:111:3
  GSequence* = struct_GSequence
    ## Generated based on /usr/include/glib-2.0/glib/gsequence.h:32:32
  GSequenceIter* = struct_GSequenceNode
    ## Generated based on /usr/include/glib-2.0/glib/gsequence.h:33:32
  GSequenceIterCompareFunc* =
    proc(a0: ptr GSequenceIter, a1: ptr GSequenceIter, a2: gpointer): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gsequence.h:35:17
  GShellError* = enum_GShellError
    ## Generated based on /usr/include/glib-2.0/glib/gshell.h:41:3
  GSliceConfig* = enum_GSliceConfig
    ## Generated based on /usr/include/glib-2.0/glib/gslice.h:101:3
  GSpawnError* = enum_GSpawnError
    ## Generated based on /usr/include/glib-2.0/glib/gspawn.h:95:3
  GSpawnChildSetupFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gspawn.h:140:17
  GSpawnFlags* = enum_GSpawnFlags
    ## Generated based on /usr/include/glib-2.0/glib/gspawn.h:217:3
  GStringChunk* = struct_GStringChunk
    ## Generated based on /usr/include/glib-2.0/glib/gstringchunk.h:38:30
  GStrvBuilder* = struct_GStrvBuilder
    ## Generated based on /usr/include/glib-2.0/glib/gstrvbuilder.h:33:30
  GTestCase* = struct_GTestCase
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:38:27
  GTestSuite* = struct_GTestSuite
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:39:27
  GTestFunc* = proc(): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:40:16
  GTestDataFunc* = proc(a0: gconstpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:41:16
  GTestFixtureFunc* = proc(a0: gpointer, a1: gconstpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:42:16
  GTestTrapFlags* = enum_GTestTrapFlags
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:529:3
  GTestSubprocessFlags* = enum_GTestSubprocessFlags
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:544:3
  struct_GTestConfig* {.pure, inheritable, bycopy.} = object
    test_initialized*: gboolean
      ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:686:9
    test_quick*: gboolean
    test_perf*: gboolean
    test_verbose*: gboolean
    test_quiet*: gboolean
    test_undefined*: gboolean

  GTestConfig* = struct_GTestConfig
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:693:3
  GTestResult* = enum_GTestResult
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:702:3
  GTestLogType* = enum_GTestLogType
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:717:3
  struct_GTestLogMsg* {.pure, inheritable, bycopy.} = object
    log_type*: GTestLogType
      ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:719:9
    n_strings*: guint
    strings*: ptr cstring
    n_nums*: guint
    nums*: ptr clongdouble

  GTestLogMsg* = struct_GTestLogMsg
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:725:3
  struct_GTestLogBuffer* {.pure, inheritable, bycopy.} = object
    data*: ptr GString
      ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:726:9
    msgs*: ptr GSList

  GTestLogBuffer* = struct_GTestLogBuffer
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:730:3
  GTestLogFatalFunc* =
    proc(a0: cstring, a1: GLogLevelFlags, a2: cstring, a3: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:760:27
  GTestFileType* = enum_GTestFileType
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:783:3
  GThreadPool* = struct_GThreadPool
    ## Generated based on /usr/include/glib-2.0/glib/gthreadpool.h:38:29
  struct_GThreadPool* {.pure, inheritable, bycopy.} = object
    func_field*: GFunc
      ## Generated based on /usr/include/glib-2.0/glib/gthreadpool.h:43:8
    user_data*: gpointer
    exclusive*: gboolean

  GTimer* = struct_GTimer ## Generated based on /usr/include/glib-2.0/glib/gtimer.h:42:25
  GTrashStack* = struct_GTrashStack
    ## Generated based on /usr/include/glib-2.0/glib/gtrashstack.h:40:29
  struct_GTrashStack* {.pure, inheritable, bycopy.} = object
    next*: ptr GTrashStack
      ## Generated based on /usr/include/glib-2.0/glib/gtrashstack.h:41:8

  GTree* = struct_GTree ## Generated based on /usr/include/glib-2.0/glib/gtree.h:40:24
  GTreeNode* = struct_GTreeNode
    ## Generated based on /usr/include/glib-2.0/glib/gtree.h:49:27
  GTraverseFunc* = proc(a0: gpointer, a1: gpointer, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtree.h:51:20
  GTraverseNodeFunc* = proc(a0: ptr GTreeNode, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/gtree.h:68:20
  GUri* = struct_GUri ## Generated based on /usr/include/glib-2.0/glib/guri.h:33:22
  GUriFlags* = enum_GUriFlags
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:93:3
  GUriHideFlags* = enum_GUriHideFlags
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:214:3
  GUriParamsFlags* = enum_GUriParamsFlags
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:264:3
  GUriParamsIter* = struct_GUriParamsIter
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:273:32
  struct_GUriParamsIter* {.pure, inheritable, bycopy.} = object
    dummy0*: gint ## Generated based on /usr/include/glib-2.0/glib/guri.h:275:8
    dummy1*: gpointer
    dummy2*: gpointer
    dummy3*: array[256'i64, guint8]

  GUriError* = enum_GUriError
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:339:3
  GAllocator* = struct_GAllocator
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:27:28
  GMemChunk* = struct_GMemChunk
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:28:28
  GCache* = struct_GCache
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcache.h:38:33
  GCacheNewFunc* = proc(a0: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcache.h:40:27
  GCacheDupFunc* = proc(a0: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcache.h:41:27
  GCacheDestroyFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcache.h:42:27
  GCompletion* = struct_GCompletion
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcompletion.h:38:33
  struct_GCompletion* {.pure, inheritable, bycopy.} = object
    items*: ptr GList
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcompletion.h:49:8
    func_field*: GCompletionFunc
    prefix*: cstring
    cache*: ptr GList
    strncmp_func*: GCompletionStrncmpFunc

  GCompletionFunc* = proc(a0: gpointer): cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcompletion.h:40:27
  GCompletionStrncmpFunc* = proc(a0: cstring, a1: cstring, a2: gsize): gint {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gcompletion.h:45:16
  GRelation* = struct_GRelation
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/grel.h:38:33
  GTuples* = struct_GTuples
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/grel.h:39:33
  struct_GTuples* {.pure, inheritable, bycopy.} = object
    len*: guint ## Generated based on /usr/include/glib-2.0/glib/deprecated/grel.h:41:8

  GThreadPriority* = enum_GThreadPriority
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:46:3
  GThreadFunctions* = struct_GThreadFunctions
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:57:34
  struct_GThreadFunctions* {.pure, inheritable, bycopy.} = object
    mutex_new*: proc(): ptr GMutex {.cdecl.}
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:58:8
    mutex_lock*: proc(a0: ptr GMutex): void {.cdecl.}
    mutex_trylock*: proc(a0: ptr GMutex): gboolean {.cdecl.}
    mutex_unlock*: proc(a0: ptr GMutex): void {.cdecl.}
    mutex_free*: proc(a0: ptr GMutex): void {.cdecl.}
    cond_new*: proc(): ptr GCond {.cdecl.}
    cond_signal*: proc(a0: ptr GCond): void {.cdecl.}
    cond_broadcast*: proc(a0: ptr GCond): void {.cdecl.}
    cond_wait*: proc(a0: ptr GCond, a1: ptr GMutex): void {.cdecl.}
    cond_timed_wait*:
      proc(a0: ptr GCond, a1: ptr GMutex, a2: ptr GTimeVal): gboolean {.cdecl.}
    cond_free*: proc(a0: ptr GCond): void {.cdecl.}
    private_new*: proc(a0: GDestroyNotify): ptr GPrivate {.cdecl.}
    private_get*: proc(a0: ptr GPrivate): gpointer {.cdecl.}
    private_set*: proc(a0: ptr GPrivate, a1: gpointer): void {.cdecl.}
    thread_create*: proc(
      a0: GThreadFunc,
      a1: gpointer,
      a2: gulong,
      a3: gboolean,
      a4: gboolean,
      a5: GThreadPriority,
      a6: gpointer,
      a7: ptr ptr GError,
    ): void {.cdecl.}
    thread_yield*: proc(): void {.cdecl.}
    thread_join*: proc(a0: gpointer): void {.cdecl.}
    thread_exit*: proc(): void {.cdecl.}
    thread_set_priority*: proc(a0: gpointer, a1: GThreadPriority): void {.cdecl.}
    thread_self*: proc(a0: gpointer): void {.cdecl.}
    thread_equal*: proc(a0: gpointer, a1: gpointer): gboolean {.cdecl.}

  struct_GStaticMutex* {.pure, inheritable, bycopy.} = object
    mutex*: ptr GMutex
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:135:9
    unused*: pthread_mutex_t

  pthread_mutex_t* = union_pthread_mutex_t
    ## Generated based on /usr/include/bits/pthreadtypes.h:72:3
  GStaticMutex* = struct_GStaticMutex
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:144:3
  GStaticRecMutex* = struct_GStaticRecMutex
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:160:33
  struct_GStaticRecMutex_unused_t* {.union, bycopy.} = object
    owner*: pthread_t
    dummy*: gdouble

  struct_GStaticRecMutex* {.pure, inheritable, bycopy.} = object
    mutex*: GStaticMutex
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:161:8
    depth*: guint
    unused*: struct_GStaticRecMutex_unused_t

  pthread_t* = culong ## Generated based on /usr/include/bits/pthreadtypes.h:27:27
  GStaticRWLock* = struct_GStaticRWLock
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:203:31
  struct_GStaticRWLock* {.pure, inheritable, bycopy.} = object
    mutex*: GStaticMutex
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:204:8
    read_cond*: ptr GCond
    write_cond*: ptr GCond
    read_counter*: guint
    have_writer*: gboolean
    want_to_read*: guint
    want_to_write*: guint

  GStaticPrivate* = struct_GStaticPrivate
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:245:33
  struct_GStaticPrivate* {.pure, inheritable, bycopy.} = object
    index*: guint
      ## Generated based on /usr/include/glib-2.0/glib/deprecated/gthread.h:246:8

  GAsyncQueue_autoptr* = ptr GAsyncQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:49:1
  GAsyncQueue_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:49:1
  GAsyncQueue_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:49:1
  GAsyncQueue_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:49:1
  GBookmarkFile_autoptr* = ptr GBookmarkFile
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:50:1
  GBookmarkFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:50:1
  GBookmarkFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:50:1
  GBookmarkFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:50:1
  GBytes_autoptr* = ptr GBytes
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:51:1
  GBytes_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:51:1
  GBytes_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:51:1
  GBytes_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:51:1
  GChecksum_autoptr* = ptr GChecksum
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:52:1
  GChecksum_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:52:1
  GChecksum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:52:1
  GChecksum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:52:1
  GDateTime_autoptr* = ptr GDateTime
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:53:1
  GDateTime_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:53:1
  GDateTime_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:53:1
  GDateTime_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:53:1
  GDate_autoptr* = ptr GDate
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:54:1
  GDate_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:54:1
  GDate_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:54:1
  GDate_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:54:1
  GDir_autoptr* = ptr GDir
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:55:1
  GDir_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:55:1
  GDir_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:55:1
  GDir_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:55:1
  GError_autoptr* = ptr GError
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:56:1
  GError_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:56:1
  GError_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:56:1
  GError_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:56:1
  GHashTable_autoptr* = ptr GHashTable
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:57:1
  GHashTable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:57:1
  GHashTable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:57:1
  GHashTable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:57:1
  GHmac_autoptr* = ptr GHmac
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:58:1
  GHmac_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:58:1
  GHmac_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:58:1
  GHmac_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:58:1
  GIOChannel_autoptr* = ptr GIOChannel
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:59:1
  GIOChannel_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:59:1
  GIOChannel_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:59:1
  GIOChannel_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:59:1
  GKeyFile_autoptr* = ptr GKeyFile
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:60:1
  GKeyFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:60:1
  GKeyFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:60:1
  GKeyFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:60:1
  GList_autoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:61:1
  GList_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:61:1
  GList_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:61:1
  GList_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:61:1
  GArray_autoptr* = ptr GArray
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:62:1
  GArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:62:1
  GArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:62:1
  GArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:62:1
  GPtrArray_autoptr* = ptr GPtrArray
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:63:1
  GPtrArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:63:1
  GPtrArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:63:1
  GPtrArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:63:1
  GByteArray_autoptr* = ptr GByteArray
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:64:1
  GByteArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:64:1
  GByteArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:64:1
  GByteArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:64:1
  GMainContext_autoptr* = ptr GMainContext
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:65:1
  GMainContext_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:65:1
  GMainContext_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:65:1
  GMainContext_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:65:1
  GMainContextPusher_autoptr* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:66:1
  GMainContextPusher_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:66:1
  GMainContextPusher_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:66:1
  GMainContextPusher_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:66:1
  GMainLoop_autoptr* = ptr GMainLoop
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:67:1
  GMainLoop_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:67:1
  GMainLoop_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:67:1
  GMainLoop_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:67:1
  GSource_autoptr* = ptr GSource
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:68:1
  GSource_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:68:1
  GSource_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:68:1
  GSource_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:68:1
  GMappedFile_autoptr* = ptr GMappedFile
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:69:1
  GMappedFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:69:1
  GMappedFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:69:1
  GMappedFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:69:1
  GMarkupParseContext_autoptr* = ptr GMarkupParseContext
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:70:1
  GMarkupParseContext_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:70:1
  GMarkupParseContext_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:70:1
  GMarkupParseContext_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:70:1
  GNode_autoptr* = ptr GNode
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:71:1
  GNode_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:71:1
  GNode_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:71:1
  GNode_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:71:1
  GOptionContext_autoptr* = ptr GOptionContext
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:72:1
  GOptionContext_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:72:1
  GOptionContext_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:72:1
  GOptionContext_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:72:1
  GOptionGroup_autoptr* = ptr GOptionGroup
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:73:1
  GOptionGroup_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:73:1
  GOptionGroup_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:73:1
  GOptionGroup_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:73:1
  GPatternSpec_autoptr* = ptr GPatternSpec
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:74:1
  GPatternSpec_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:74:1
  GPatternSpec_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:74:1
  GPatternSpec_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:74:1
  GQueue_autoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:75:1
  GQueue_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:75:1
  GQueue_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:75:1
  GQueue_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:75:1
  GRand_autoptr* = ptr GRand
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:77:1
  GRand_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:77:1
  GRand_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:77:1
  GRand_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:77:1
  GRegex_autoptr* = ptr GRegex
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:78:1
  GRegex_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:78:1
  GRegex_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:78:1
  GRegex_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:78:1
  GMatchInfo_autoptr* = ptr GMatchInfo
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:79:1
  GMatchInfo_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:79:1
  GMatchInfo_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:79:1
  GMatchInfo_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:79:1
  GScanner_autoptr* = ptr GScanner
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:80:1
  GScanner_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:80:1
  GScanner_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:80:1
  GScanner_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:80:1
  GSequence_autoptr* = ptr GSequence
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:81:1
  GSequence_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:81:1
  GSequence_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:81:1
  GSequence_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:81:1
  GSList_autoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:82:1
  GSList_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:82:1
  GSList_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:82:1
  GSList_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:82:1
  GString_autoptr* = ptr GString
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:83:1
  GString_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:83:1
  GString_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:83:1
  GString_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:83:1
  GStringChunk_autoptr* = ptr GStringChunk
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:84:1
  GStringChunk_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:84:1
  GStringChunk_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:84:1
  GStringChunk_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:84:1
  GStrvBuilder_autoptr* = ptr GStrvBuilder
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:85:1
  GStrvBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:85:1
  GStrvBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:85:1
  GStrvBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:85:1
  GThread_autoptr* = ptr GThread
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:86:1
  GThread_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:86:1
  GThread_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:86:1
  GThread_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:86:1
  GMutexLocker_autoptr* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:88:1
  GMutexLocker_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:88:1
  GMutexLocker_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:88:1
  GMutexLocker_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:88:1
  GRecMutexLocker_autoptr* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:89:1
  GRecMutexLocker_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:89:1
  GRecMutexLocker_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:89:1
  GRecMutexLocker_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:89:1
  GRWLockWriterLocker_autoptr* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:90:1
  GRWLockWriterLocker_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:90:1
  GRWLockWriterLocker_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:90:1
  GRWLockWriterLocker_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:90:1
  GRWLockReaderLocker_autoptr* = pointer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:91:1
  GRWLockReaderLocker_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:91:1
  GRWLockReaderLocker_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:91:1
  GRWLockReaderLocker_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:91:1
  GTimer_autoptr* = ptr GTimer
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:93:1
  GTimer_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:93:1
  GTimer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:93:1
  GTimer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:93:1
  GTimeZone_autoptr* = ptr GTimeZone
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:94:1
  GTimeZone_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:94:1
  GTimeZone_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:94:1
  GTimeZone_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:94:1
  GTree_autoptr* = ptr GTree
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:95:1
  GTree_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:95:1
  GTree_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:95:1
  GTree_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:95:1
  GVariant_autoptr* = ptr GVariant
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:96:1
  GVariant_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:96:1
  GVariant_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:96:1
  GVariant_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:96:1
  GVariantBuilder_autoptr* = ptr GVariantBuilder
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:97:1
  GVariantBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:97:1
  GVariantBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:97:1
  GVariantBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:97:1
  GVariantIter_autoptr* = ptr GVariantIter
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:99:1
  GVariantIter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:99:1
  GVariantIter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:99:1
  GVariantIter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:99:1
  GVariantDict_autoptr* = ptr GVariantDict
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:100:1
  GVariantDict_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:100:1
  GVariantDict_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:100:1
  GVariantDict_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:100:1
  GVariantType_autoptr* = ptr GVariantType
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:102:1
  GVariantType_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:102:1
  GVariantType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:102:1
  GVariantType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:102:1
  GRefString_autoptr* = cstring
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:104:1
  GRefString_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:104:1
  GRefString_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:104:1
  GRefString_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:104:1
  GUri_autoptr* = ptr GUri
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:105:1
  GUri_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:105:1
  GUri_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:105:1
  GUri_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:105:1
  GPathBuf_autoptr* = ptr GPathBuf
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:106:1
  GPathBuf_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:106:1
  GPathBuf_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:106:1
  GPathBuf_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/glib/glib-autocleanups.h:106:1
  GValue* = struct_GValue
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:431:41
  struct_GValue_data_t* {.union, bycopy.} = object
    v_int*: gint
    v_uint*: guint
    v_long*: glong
    v_ulong*: gulong
    v_int64*: gint64
    v_uint64*: guint64
    v_float*: gfloat
    v_double*: gdouble
    v_pointer*: gpointer

  struct_GValue* {.pure, inheritable, bycopy.} = object
    g_type*: GType ## Generated based on /usr/include/glib-2.0/gobject/gvalue.h:113:8
    data*: array[2'i64, struct_GValue_data_t]

  GTypeCValue* = union_GTypeCValue
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:432:41
  GTypePlugin* = struct_GTypePlugin
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:433:41
  GTypeClass* = struct_GTypeClass
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:434:41
  struct_GTypeClass* {.pure, inheritable, bycopy.} = object
    g_type*: GType ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:451:8

  GTypeInterface* = struct_GTypeInterface
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:435:41
  struct_GTypeInterface* {.pure, inheritable, bycopy.} = object
    g_type*: GType ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:471:8
    g_instance_type*: GType

  GTypeInstance* = struct_GTypeInstance
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:436:41
  struct_GTypeInstance* {.pure, inheritable, bycopy.} = object
    g_class*: ptr GTypeClass
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:461:8

  GTypeInfo* = struct_GTypeInfo
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:437:41
  struct_GTypeInfo* {.pure, inheritable, bycopy.} = object
    class_size*: guint16
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1126:8
    base_init*: GBaseInitFunc
    base_finalize*: GBaseFinalizeFunc
    class_init*: GClassInitFunc
    class_finalize*: GClassFinalizeFunc
    class_data*: gconstpointer
    instance_size*: guint16
    n_preallocs*: guint16
    instance_init*: GInstanceInitFunc
    value_table*: ptr GTypeValueTable

  GTypeFundamentalInfo* = struct_GTypeFundamentalInfo
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:438:41
  struct_GTypeFundamentalInfo* {.pure, inheritable, bycopy.} = object
    type_flags*: GTypeFundamentalFlags
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1154:8

  GInterfaceInfo* = struct_GInterfaceInfo
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:439:41
  struct_GInterfaceInfo* {.pure, inheritable, bycopy.} = object
    interface_init*: GInterfaceInitFunc
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1167:8
    interface_finalize*: GInterfaceFinalizeFunc
    interface_data*: gpointer

  GTypeValueTable* = struct_GTypeValueTable
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:440:41
  struct_GTypeValueTable* {.pure, inheritable, bycopy.} = object
    value_init*: GTypeValueInitFunc
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1445:8
    value_free*: GTypeValueFreeFunc
    value_copy*: GTypeValueCopyFunc
    value_peek_pointer*: GTypeValuePeekPointerFunc
    collect_format*: cstring
    collect_value*: GTypeValueCollectFunc
    lcopy_format*: cstring
    lcopy_value*: GTypeValueLCopyFunc

  GTypeQuery* = struct_GTypeQuery
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:441:29
  struct_GTypeQuery* {.pure, inheritable, bycopy.} = object
    type_field*: GType ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:488:8
    type_name*: cstring
    class_size*: guint
    instance_size*: guint

  GTypeDebugFlags* = enum_GTypeDebugFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:731:3
  GBaseInitFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:829:18
  GBaseFinalizeFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:843:18
  GClassInitFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:947:18
  GClassFinalizeFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:964:18
  GInstanceInitFunc* = proc(a0: ptr GTypeInstance, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:986:18
  GInterfaceInitFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1002:18
  GInterfaceFinalizeFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1014:18
  GTypeClassCacheFunc* = proc(a0: gpointer, a1: ptr GTypeClass): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1036:20
  GTypeInterfaceCheckFunc* = proc(a0: gpointer, a1: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1050:20
  GTypeFundamentalFlags* = enum_GTypeFundamentalFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1070:3
  GTypeFlags* = enum_GTypeFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1094:3
  GTypeValueInitFunc* = proc(a0: ptr GValue): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1193:17
  GTypeValueFreeFunc* = proc(a0: ptr GValue): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1214:17
  GTypeValueCopyFunc* = proc(a0: ptr GValue, a1: ptr GValue): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1237:17
  GTypeValuePeekPointerFunc* = proc(a0: ptr GValue): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1258:21
  GTypeValueCollectFunc* =
    proc(a0: ptr GValue, a1: guint, a2: ptr GTypeCValue, a3: guint): cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1345:20
  GTypeValueLCopyFunc* =
    proc(a0: ptr GValue, a1: guint, a2: ptr GTypeCValue, a3: guint): cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:1407:20
  GValueTransform* = proc(a0: ptr GValue, a1: ptr GValue): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gvalue.h:97:16
  GParamFlags* = enum_GParamFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:172:3
  GParamSpec* = struct_GParamSpec
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:204:33
  struct_GParamSpec* {.pure, inheritable, bycopy.} = object
    g_type_instance*: GTypeInstance
      ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:209:8
    name*: cstring
    flags*: GParamFlags
    value_type*: GType
    owner_type*: GType
    internal_nick*: cstring
    internal_blurb*: cstring
    qdata*: ptr GData
    ref_count*: guint
    param_id*: guint

  GParamSpecClass* = struct_GParamSpecClass
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:205:33
  struct_GParamSpecClass* {.pure, inheritable, bycopy.} = object
    g_type_class*: GTypeClass
      ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:247:8
    value_type*: GType
    finalize*: proc(a0: ptr GParamSpec): void {.cdecl.}
    value_set_default*: proc(a0: ptr GParamSpec, a1: ptr GValue): void {.cdecl.}
    value_validate*: proc(a0: ptr GParamSpec, a1: ptr GValue): gboolean {.cdecl.}
    values_cmp*:
      proc(a0: ptr GParamSpec, a1: ptr GValue, a2: ptr GValue): gint {.cdecl.}
    value_is_valid*: proc(a0: ptr GParamSpec, a1: ptr GValue): gboolean {.cdecl.}
    dummy*: array[3'i64, gpointer]

  GParameter* = struct_GParameter
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:206:28
  struct_GParameter* {.pure, inheritable, bycopy.} = object
    name*: cstring ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:280:8
    value*: GValue

  GParamSpecPool* = struct_GParamSpecPool
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:207:33
  GParamSpecTypeInfo* = struct_GParamSpecTypeInfo
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:363:36
  struct_GParamSpecTypeInfo* {.pure, inheritable, bycopy.} = object
    instance_size*: guint16
      ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:389:8
    n_preallocs*: guint16
    instance_init*: proc(a0: ptr GParamSpec): void {.cdecl.}
    value_type*: GType
    finalize*: proc(a0: ptr GParamSpec): void {.cdecl.}
    value_set_default*: proc(a0: ptr GParamSpec, a1: ptr GValue): void {.cdecl.}
    value_validate*: proc(a0: ptr GParamSpec, a1: ptr GValue): gboolean {.cdecl.}
    values_cmp*:
      proc(a0: ptr GParamSpec, a1: ptr GValue, a2: ptr GValue): gint {.cdecl.}

  GClosure* = struct_GClosure
    ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:77:28
  struct_GClosure* {.pure, inheritable, bycopy.} = object
    ref_count* {.bitsize: 15'i64.}: guint
      ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:173:8
    meta_marshal_nouse* {.bitsize: 1'i64.}: guint
    n_guards* {.bitsize: 1'i64.}: guint
    n_fnotifiers* {.bitsize: 2'i64.}: guint
    n_inotifiers* {.bitsize: 8'i64.}: guint
    in_inotify* {.bitsize: 1'i64.}: guint
    floating* {.bitsize: 1'i64.}: guint
    derivative_flag* {.bitsize: 1'i64.}: guint
    in_marshal* {.bitsize: 1'i64.}: guint
    is_invalid* {.bitsize: 1'i64.}: guint
    marshal*: proc(
      a0: ptr GClosure,
      a1: ptr GValue,
      a2: guint,
      a3: ptr GValue,
      a4: gpointer,
      a5: gpointer,
    ): void {.cdecl.}
    data*: gpointer
    notifiers*: ptr GClosureNotifyData

  GClosureNotifyData* = struct_GClosureNotifyData
    ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:78:37
  struct_GClosureNotifyData* {.pure, inheritable, bycopy.} = object
    data*: gpointer ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:167:8
    notify*: GClosureNotify

  GCallback* = proc(): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:92:17
  GClosureNotify* = proc(a0: gpointer, a1: ptr GClosure): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:101:17
  GClosureMarshal* = proc(
    a0: ptr GClosure,
    a1: ptr GValue,
    a2: guint,
    a3: ptr GValue,
    a4: gpointer,
    a5: gpointer,
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:121:17
  GVaClosureMarshal* = proc(
    a0: ptr GClosure,
    a1: ptr GValue,
    a2: gpointer,
    a3: va_list,
    a4: gpointer,
    a5: cint,
    a6: ptr GType,
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:148:17
  GCClosure* = struct_GCClosure
    ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:163:29
  struct_GCClosure* {.pure, inheritable, bycopy.} = object
    closure*: GClosure
      ## Generated based on /usr/include/glib-2.0/gobject/gclosure.h:214:8
    callback*: gpointer

  GSignalQuery* = struct_GSignalQuery
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:34:32
  struct_GSignalQuery* {.pure, inheritable, bycopy.} = object
    signal_id*: guint ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:293:8
    signal_name*: cstring
    itype*: GType
    signal_flags*: GSignalFlags
    return_type*: GType
    n_params*: guint
    param_types*: ptr GType

  GSignalInvocationHint* = struct_GSignalInvocationHint
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:35:40
  struct_GSignalInvocationHint* {.pure, inheritable, bycopy.} = object
    signal_id*: guint ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:266:8
    detail*: GQuark
    run_type*: GSignalFlags

  GSignalCMarshaller* = GClosureMarshal
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:47:28
  GSignalCVaMarshaller* = GVaClosureMarshal
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:55:29
  GSignalEmissionHook* = proc(
    a0: ptr GSignalInvocationHint, a1: guint, a2: ptr GValue, a3: gpointer
  ): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:75:20
  GSignalAccumulator* = proc(
    a0: ptr GSignalInvocationHint, a1: ptr GValue, a2: ptr GValue, a3: gpointer
  ): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:103:20
  GSignalFlags* = enum_GSignalFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:143:3
  GConnectFlags* = enum_GConnectFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:200:3
  GSignalMatchType* = enum_GSignalMatchType
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:222:3
  GBoxedCopyFunc* = proc(a0: gpointer): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gboxed.h:58:20
  GBoxedFreeFunc* = proc(a0: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gboxed.h:67:16
  GObject* = struct_GObject
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:192:42
  struct_GObject* {.pure, inheritable, bycopy.} = object
    g_type_instance*: GTypeInstance
      ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:252:9
    ref_count*: guint
    qdata*: ptr GData

  GObjectClass* = struct_GObjectClass
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:193:42
  struct_GObjectClass* {.pure, inheritable, bycopy.} = object
    g_type_class*: GTypeClass
      ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:322:9
    construct_properties*: ptr GSList
    constructor*:
      proc(a0: GType, a1: guint, a2: ptr GObjectConstructParam): ptr GObject {.cdecl.}
    set_property*: proc(
      a0: ptr GObject, a1: guint, a2: ptr GValue, a3: ptr GParamSpec
    ): void {.cdecl.}
    get_property*: proc(
      a0: ptr GObject, a1: guint, a2: ptr GValue, a3: ptr GParamSpec
    ): void {.cdecl.}
    dispose*: proc(a0: ptr GObject): void {.cdecl.}
    finalize*: proc(a0: ptr GObject): void {.cdecl.}
    dispatch_properties_changed*:
      proc(a0: ptr GObject, a1: guint, a2: ptr ptr GParamSpec): void {.cdecl.}
    notify*: proc(a0: ptr GObject, a1: ptr GParamSpec): void {.cdecl.}
    constructed*: proc(a0: ptr GObject): void {.cdecl.}
    flags*: gsize
    n_construct_properties*: gsize
    pspecs*: gpointer
    n_pspecs*: gsize
    pdummy*: array[3'i64, gpointer]

  GInitiallyUnowned* = struct_GObject
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:194:42
  GInitiallyUnownedClass* = struct_GObjectClass
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:195:42
  GObjectConstructParam* = struct_GObjectConstructParam
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:196:42
  struct_GObjectConstructParam* {.pure, inheritable, bycopy.} = object
    pspec*: ptr GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:376:8
    value*: ptr GValue

  GObjectGetPropertyFunc* =
    proc(a0: ptr GObject, a1: guint, a2: ptr GValue, a3: ptr GParamSpec): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:207:16
  GObjectSetPropertyFunc* =
    proc(a0: ptr GObject, a1: guint, a2: ptr GValue, a3: ptr GParamSpec): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:221:16
  GObjectFinalizeFunc* = proc(a0: ptr GObject): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:231:16
  GWeakNotify* = proc(a0: gpointer, a1: ptr GObject): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:249:16
  GToggleNotify* = proc(a0: gpointer, a1: ptr GObject, a2: gboolean): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:551:16
  struct_GWeakRef_priv_t* {.union, bycopy.} = object
    p*: gpointer

  struct_GWeakRef* {.pure, inheritable, bycopy.} = object
    priv*: struct_GWeakRef_priv_t
      ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:920:9

  GWeakRef* = struct_GWeakRef
    ## Generated based on /usr/include/glib-2.0/gobject/gobject.h:923:3
  GBinding* = struct_GBinding
    ## Generated based on /usr/include/glib-2.0/gobject/gbinding.h:41:33
  GBindingTransformFunc* = proc(
    a0: ptr GBinding, a1: ptr GValue, a2: ptr GValue, a3: gpointer
  ): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gbinding.h:63:21
  GBindingFlags* = enum_GBindingFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gbinding.h:97:3
  GBindingGroup* = struct_GBindingGroup
    ## Generated based on /usr/include/glib-2.0/gobject/gbindinggroup.h:39:31
  GEnumClass* = struct_GEnumClass
    ## Generated based on /usr/include/glib-2.0/gobject/genums.h:140:29
  struct_GEnumClass* {.pure, inheritable, bycopy.} = object
    g_type_class*: GTypeClass
      ## Generated based on /usr/include/glib-2.0/gobject/genums.h:157:8
    minimum*: gint
    maximum*: gint
    n_values*: guint
    values*: ptr GEnumValue

  GFlagsClass* = struct_GFlagsClass
    ## Generated based on /usr/include/glib-2.0/gobject/genums.h:141:29
  struct_GFlagsClass* {.pure, inheritable, bycopy.} = object
    g_type_class*: GTypeClass
      ## Generated based on /usr/include/glib-2.0/gobject/genums.h:178:8
    mask*: guint
    n_values*: guint
    values*: ptr GFlagsValue

  GEnumValue* = struct_GEnumValue
    ## Generated based on /usr/include/glib-2.0/gobject/genums.h:142:29
  struct_GEnumValue* {.pure, inheritable, bycopy.} = object
    value*: gint ## Generated based on /usr/include/glib-2.0/gobject/genums.h:196:8
    value_name*: cstring
    value_nick*: cstring

  GFlagsValue* = struct_GFlagsValue
    ## Generated based on /usr/include/glib-2.0/gobject/genums.h:143:29
  struct_GFlagsValue* {.pure, inheritable, bycopy.} = object
    value*: guint ## Generated based on /usr/include/glib-2.0/gobject/genums.h:211:8
    value_name*: cstring
    value_nick*: cstring

  GParamSpecChar* = struct_GParamSpecChar
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:588:38
  struct_GParamSpecChar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:621:8
    minimum*: gint8
    maximum*: gint8
    default_value*: gint8

  GParamSpecUChar* = struct_GParamSpecUChar
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:589:38
  struct_GParamSpecUChar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:638:8
    minimum*: guint8
    maximum*: guint8
    default_value*: guint8

  GParamSpecBoolean* = struct_GParamSpecBoolean
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:590:38
  struct_GParamSpecBoolean* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:653:8
    default_value*: gboolean

  GParamSpecInt* = struct_GParamSpecInt
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:591:38
  struct_GParamSpecInt* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:668:8
    minimum*: gint
    maximum*: gint
    default_value*: gint

  GParamSpecUInt* = struct_GParamSpecUInt
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:592:38
  struct_GParamSpecUInt* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:685:8
    minimum*: guint
    maximum*: guint
    default_value*: guint

  GParamSpecLong* = struct_GParamSpecLong
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:593:38
  struct_GParamSpecLong* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:702:8
    minimum*: glong
    maximum*: glong
    default_value*: glong

  GParamSpecULong* = struct_GParamSpecULong
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:594:38
  struct_GParamSpecULong* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:719:8
    minimum*: gulong
    maximum*: gulong
    default_value*: gulong

  GParamSpecInt64* = struct_GParamSpecInt64
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:595:38
  struct_GParamSpecInt64* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:736:8
    minimum*: gint64
    maximum*: gint64
    default_value*: gint64

  GParamSpecUInt64* = struct_GParamSpecUInt64
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:596:38
  struct_GParamSpecUInt64* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:753:8
    minimum*: guint64
    maximum*: guint64
    default_value*: guint64

  GParamSpecUnichar* = struct_GParamSpecUnichar
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:597:38
  struct_GParamSpecUnichar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:768:8
    default_value*: gunichar

  GParamSpecEnum* = struct_GParamSpecEnum
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:598:38
  struct_GParamSpecEnum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:783:8
    enum_class*: ptr GEnumClass
    default_value*: gint

  GParamSpecFlags* = struct_GParamSpecFlags
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:599:38
  struct_GParamSpecFlags* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:799:8
    flags_class*: ptr GFlagsClass
    default_value*: guint

  GParamSpecFloat* = struct_GParamSpecFloat
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:600:38
  struct_GParamSpecFloat* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:817:8
    minimum*: gfloat
    maximum*: gfloat
    default_value*: gfloat
    epsilon*: gfloat

  GParamSpecDouble* = struct_GParamSpecDouble
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:601:38
  struct_GParamSpecDouble* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:837:8
    minimum*: gdouble
    maximum*: gdouble
    default_value*: gdouble
    epsilon*: gdouble

  GParamSpecString* = struct_GParamSpecString
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:602:38
  struct_GParamSpecString* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:859:8
    default_value*: cstring
    cset_first*: cstring
    cset_nth*: cstring
    substitutor*: gchar
    null_fold_if_empty* {.bitsize: 1'i64.}: guint
    ensure_non_null* {.bitsize: 1'i64.}: guint

  GParamSpecParam* = struct_GParamSpecParam
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:603:38
  struct_GParamSpecParam* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:877:8

  GParamSpecBoxed* = struct_GParamSpecBoxed
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:604:38
  struct_GParamSpecBoxed* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:887:8

  GParamSpecPointer* = struct_GParamSpecPointer
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:605:38
  struct_GParamSpecPointer* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:897:8

  GParamSpecValueArray* = struct_GParamSpecValueArray
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:606:38
  struct_GParamSpecValueArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:909:8
    element_spec*: ptr GParamSpec
    fixed_n_elements*: guint

  GParamSpecObject* = struct_GParamSpecObject
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:607:38
  struct_GParamSpecObject* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:921:8

  GParamSpecOverride* = struct_GParamSpecOverride
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:608:38
  struct_GParamSpecOverride* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:942:8
    overridden*: ptr GParamSpec

  GParamSpecGType* = struct_GParamSpecGType
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:609:38
  struct_GParamSpecGType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:957:8
    is_a_type*: GType

  GParamSpecVariant* = struct_GParamSpecVariant
    ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:610:38
  struct_GParamSpecVariant* {.pure, inheritable, bycopy.} = object
    parent_instance*: GParamSpec
      ## Generated based on /usr/include/glib-2.0/gobject/gparamspecs.h:978:8
    type_field*: ptr GVariantType
    default_value*: ptr GVariant
    padding*: array[4'i64, gpointer]

  GSignalGroup* = struct_GSignalGroup
    ## Generated based on /usr/include/glib-2.0/gobject/gsignalgroup.h:39:30
  GTypeModule* = struct_GTypeModule
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:31:34
  struct_GTypeModule* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:43:8
    use_count*: guint
    type_infos*: ptr GSList
    interface_infos*: ptr GSList
    name*: cstring

  GTypeModuleClass* = struct_GTypeModuleClass
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:32:34
  struct_GTypeModuleClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:65:8
    load*: proc(a0: ptr GTypeModule): gboolean {.cdecl.}
    unload*: proc(a0: ptr GTypeModule): void {.cdecl.}
    reserved1*: proc(): void {.cdecl.}
    reserved2*: proc(): void {.cdecl.}
    reserved3*: proc(): void {.cdecl.}
    reserved4*: proc(): void {.cdecl.}

  GTypeModule_autoptr* = ptr GTypeModule
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:41:1
  GTypeModule_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:41:1
  GTypeModule_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:41:1
  GTypeModule_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gtypemodule.h:41:1
  GTypePluginClass* = struct_GTypePluginClass
    ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:40:38
  struct_GTypePluginClass* {.pure, inheritable, bycopy.} = object
    base_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:97:8
    use_plugin*: GTypePluginUse
    unuse_plugin*: GTypePluginUnuse
    complete_type_info*: GTypePluginCompleteTypeInfo
    complete_interface_info*: GTypePluginCompleteInterfaceInfo

  GTypePluginUse* = proc(a0: ptr GTypePlugin): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:48:17
  GTypePluginUnuse* = proc(a0: ptr GTypePlugin): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:55:17
  GTypePluginCompleteTypeInfo* = proc(
    a0: ptr GTypePlugin, a1: GType, a2: ptr GTypeInfo, a3: ptr GTypeValueTable
  ): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:65:17
  GTypePluginCompleteInterfaceInfo* = proc(
    a0: ptr GTypePlugin, a1: GType, a2: GType, a3: ptr GInterfaceInfo
  ): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gobject/gtypeplugin.h:79:17
  GValueArray* = struct_GValueArray
    ## Generated based on /usr/include/glib-2.0/gobject/gvaluearray.h:43:29
  struct_GValueArray* {.pure, inheritable, bycopy.} = object
    n_values*: guint
      ## Generated based on /usr/include/glib-2.0/gobject/gvaluearray.h:44:8
    values*: ptr GValue
    n_prealloced*: guint

  gchararray* = cstring
    ## Generated based on /usr/include/glib-2.0/gobject/gvaluetypes.h:315:16
  GClosure_autoptr* = ptr GClosure
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:28:1
  GClosure_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:28:1
  GClosure_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:28:1
  GClosure_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:28:1
  GEnumClass_autoptr* = ptr GEnumClass
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:29:1
  GEnumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:29:1
  GEnumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:29:1
  GEnumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:29:1
  GFlagsClass_autoptr* = ptr GFlagsClass
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:30:1
  GFlagsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:30:1
  GFlagsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:30:1
  GFlagsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:30:1
  GObject_autoptr* = ptr GObject
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:31:1
  GObject_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:31:1
  GObject_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:31:1
  GObject_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:31:1
  GInitiallyUnowned_autoptr* = ptr GInitiallyUnowned
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:32:1
  GInitiallyUnowned_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:32:1
  GInitiallyUnowned_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:32:1
  GInitiallyUnowned_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:32:1
  GParamSpec_autoptr* = ptr GParamSpec
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:33:1
  GParamSpec_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:33:1
  GParamSpec_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:33:1
  GParamSpec_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:33:1
  GTypeClass_autoptr* = ptr GTypeClass
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:34:1
  GTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:34:1
  GTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:34:1
  GTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-autocleanups.h:34:1
  GArrowArray* = struct_GArrowArray
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  struct_GArrowArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1

  GArrowArrayClass* = struct_GArrowArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  struct_GArrowArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:31:8

  GArrowArray_autoptr* = ptr GArrowArray
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArrayClass_autoptr* = ptr GArrowArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:30:1
  GArrowExtensionArray* = struct_GArrowExtensionArray
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  struct_GArrowExtensionArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1

  GArrowExtensionArrayClass* = struct_GArrowExtensionArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  struct_GArrowExtensionArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:40:8

  GArrowExtensionArray_autoptr* = ptr GArrowExtensionArray
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArrayClass_autoptr* = ptr GArrowExtensionArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowExtensionArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array-definition.h:38:1
  GArrowChunkedArray* = struct_GArrowChunkedArray
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  struct_GArrowChunkedArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1

  GArrowChunkedArrayClass* = struct_GArrowChunkedArrayClass
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  struct_GArrowChunkedArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:30:8

  GArrowChunkedArray_autoptr* = ptr GArrowChunkedArray
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArrayClass_autoptr* = ptr GArrowChunkedArrayClass
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowChunkedArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/chunked-array-definition.h:28:1
  GArrowDecimal32* = struct_GArrowDecimal32
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  struct_GArrowDecimal32* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decimal.h:31:1

  GArrowDecimal32Class* = struct_GArrowDecimal32Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  struct_GArrowDecimal32Class* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decimal.h:33:8

  GArrowDecimal32_autoptr* = ptr GArrowDecimal32
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32Class_autoptr* = ptr GArrowDecimal32Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32Class_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32Class_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal32Class_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:31:1
  GArrowDecimal64* = struct_GArrowDecimal64
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  struct_GArrowDecimal64* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decimal.h:110:1

  GArrowDecimal64Class* = struct_GArrowDecimal64Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  struct_GArrowDecimal64Class* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decimal.h:112:8

  GArrowDecimal64_autoptr* = ptr GArrowDecimal64
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64Class_autoptr* = ptr GArrowDecimal64Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64Class_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64Class_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal64Class_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:110:1
  GArrowDecimal128* = struct_GArrowDecimal128
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  struct_GArrowDecimal128* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decimal.h:189:1

  GArrowDecimal128Class* = struct_GArrowDecimal128Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  struct_GArrowDecimal128Class* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decimal.h:191:8

  GArrowDecimal128_autoptr* = ptr GArrowDecimal128
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128Class_autoptr* = ptr GArrowDecimal128Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128Class_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128Class_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal128Class_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:189:1
  GArrowDecimal256* = struct_GArrowDecimal256
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  struct_GArrowDecimal256* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decimal.h:269:1

  GArrowDecimal256Class* = struct_GArrowDecimal256Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  struct_GArrowDecimal256Class* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decimal.h:271:8

  GArrowDecimal256_autoptr* = ptr GArrowDecimal256
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256Class_autoptr* = ptr GArrowDecimal256Class
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256Class_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256Class_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowDecimal256Class_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decimal.h:269:1
  GArrowType* = enum_GArrowType
    ## Generated based on /usr/include/arrow-glib/type.h:128:3
  GArrowTimeUnit* = enum_GArrowTimeUnit
    ## Generated based on /usr/include/arrow-glib/type.h:144:3
  GArrowIntervalType* = enum_GArrowIntervalType
    ## Generated based on /usr/include/arrow-glib/type.h:162:3
  GArrowDataType* = struct_GArrowDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  struct_GArrowDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1

  GArrowDataTypeClass* = struct_GArrowDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  struct_GArrowDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:33:8

  GArrowDataType_autoptr* = ptr GArrowDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataTypeClass_autoptr* = ptr GArrowDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:32:1
  GArrowFixedWidthDataType* = struct_GArrowFixedWidthDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  struct_GArrowFixedWidthDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1

  GArrowFixedWidthDataTypeClass* = struct_GArrowFixedWidthDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  struct_GArrowFixedWidthDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:69:8

  GArrowFixedWidthDataType_autoptr* = ptr GArrowFixedWidthDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataTypeClass_autoptr* = ptr GArrowFixedWidthDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowFixedWidthDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:64:1
  GArrowNullDataType* = struct_GArrowNullDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  struct_GArrowNullDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1

  GArrowNullDataTypeClass* = struct_GArrowNullDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  struct_GArrowNullDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:86:8

  GArrowNullDataType_autoptr* = ptr GArrowNullDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataTypeClass_autoptr* = ptr GArrowNullDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowNullDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:84:1
  GArrowBooleanDataType* = struct_GArrowBooleanDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  struct_GArrowBooleanDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedWidthDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1

  GArrowBooleanDataTypeClass* = struct_GArrowBooleanDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  struct_GArrowBooleanDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:102:8

  GArrowBooleanDataType_autoptr* = ptr GArrowBooleanDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataTypeClass_autoptr* = ptr GArrowBooleanDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowBooleanDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:97:1
  GArrowNumericDataType* = struct_GArrowNumericDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  struct_GArrowNumericDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedWidthDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1

  GArrowNumericDataTypeClass* = struct_GArrowNumericDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  struct_GArrowNumericDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:118:8

  GArrowNumericDataType_autoptr* = ptr GArrowNumericDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataTypeClass_autoptr* = ptr GArrowNumericDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowNumericDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:113:1
  GArrowIntegerDataType* = struct_GArrowIntegerDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  struct_GArrowIntegerDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1

  GArrowIntegerDataTypeClass* = struct_GArrowIntegerDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  struct_GArrowIntegerDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:130:8

  GArrowIntegerDataType_autoptr* = ptr GArrowIntegerDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataTypeClass_autoptr* = ptr GArrowIntegerDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowIntegerDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:125:1
  GArrowInt8DataType* = struct_GArrowInt8DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  struct_GArrowInt8DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1

  GArrowInt8DataTypeClass* = struct_GArrowInt8DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  struct_GArrowInt8DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:146:8

  GArrowInt8DataType_autoptr* = ptr GArrowInt8DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataTypeClass_autoptr* = ptr GArrowInt8DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowInt8DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:141:1
  GArrowUInt8DataType* = struct_GArrowUInt8DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  struct_GArrowUInt8DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1

  GArrowUInt8DataTypeClass* = struct_GArrowUInt8DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  struct_GArrowUInt8DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:162:8

  GArrowUInt8DataType_autoptr* = ptr GArrowUInt8DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataTypeClass_autoptr* = ptr GArrowUInt8DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowUInt8DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:157:1
  GArrowInt16DataType* = struct_GArrowInt16DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  struct_GArrowInt16DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1

  GArrowInt16DataTypeClass* = struct_GArrowInt16DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  struct_GArrowInt16DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:178:8

  GArrowInt16DataType_autoptr* = ptr GArrowInt16DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataTypeClass_autoptr* = ptr GArrowInt16DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowInt16DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:173:1
  GArrowUInt16DataType* = struct_GArrowUInt16DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  struct_GArrowUInt16DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1

  GArrowUInt16DataTypeClass* = struct_GArrowUInt16DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  struct_GArrowUInt16DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:194:8

  GArrowUInt16DataType_autoptr* = ptr GArrowUInt16DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataTypeClass_autoptr* = ptr GArrowUInt16DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowUInt16DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:189:1
  GArrowInt32DataType* = struct_GArrowInt32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  struct_GArrowInt32DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1

  GArrowInt32DataTypeClass* = struct_GArrowInt32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  struct_GArrowInt32DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:210:8

  GArrowInt32DataType_autoptr* = ptr GArrowInt32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataTypeClass_autoptr* = ptr GArrowInt32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowInt32DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:205:1
  GArrowUInt32DataType* = struct_GArrowUInt32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  struct_GArrowUInt32DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1

  GArrowUInt32DataTypeClass* = struct_GArrowUInt32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  struct_GArrowUInt32DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:226:8

  GArrowUInt32DataType_autoptr* = ptr GArrowUInt32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataTypeClass_autoptr* = ptr GArrowUInt32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowUInt32DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:221:1
  GArrowInt64DataType* = struct_GArrowInt64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  struct_GArrowInt64DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1

  GArrowInt64DataTypeClass* = struct_GArrowInt64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  struct_GArrowInt64DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:242:8

  GArrowInt64DataType_autoptr* = ptr GArrowInt64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataTypeClass_autoptr* = ptr GArrowInt64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowInt64DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:237:1
  GArrowUInt64DataType* = struct_GArrowUInt64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  struct_GArrowUInt64DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntegerDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1

  GArrowUInt64DataTypeClass* = struct_GArrowUInt64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  struct_GArrowUInt64DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntegerDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:258:8

  GArrowUInt64DataType_autoptr* = ptr GArrowUInt64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataTypeClass_autoptr* = ptr GArrowUInt64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowUInt64DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:253:1
  GArrowFloatingPointDataType* = struct_GArrowFloatingPointDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  struct_GArrowFloatingPointDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1

  GArrowFloatingPointDataTypeClass* = struct_GArrowFloatingPointDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  struct_GArrowFloatingPointDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:274:8

  GArrowFloatingPointDataType_autoptr* = ptr GArrowFloatingPointDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataTypeClass_autoptr* = ptr GArrowFloatingPointDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowFloatingPointDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:269:1
  GArrowHalfFloatDataType* = struct_GArrowHalfFloatDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  struct_GArrowHalfFloatDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFloatingPointDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1

  GArrowHalfFloatDataTypeClass* = struct_GArrowHalfFloatDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  struct_GArrowHalfFloatDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFloatingPointDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:286:8

  GArrowHalfFloatDataType_autoptr* = ptr GArrowHalfFloatDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataTypeClass_autoptr* = ptr GArrowHalfFloatDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowHalfFloatDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:281:1
  GArrowFloatDataType* = struct_GArrowFloatDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  struct_GArrowFloatDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFloatingPointDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1

  GArrowFloatDataTypeClass* = struct_GArrowFloatDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  struct_GArrowFloatDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFloatingPointDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:302:8

  GArrowFloatDataType_autoptr* = ptr GArrowFloatDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataTypeClass_autoptr* = ptr GArrowFloatDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowFloatDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:297:1
  GArrowDoubleDataType* = struct_GArrowDoubleDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  struct_GArrowDoubleDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFloatingPointDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1

  GArrowDoubleDataTypeClass* = struct_GArrowDoubleDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  struct_GArrowDoubleDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFloatingPointDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:318:8

  GArrowDoubleDataType_autoptr* = ptr GArrowDoubleDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataTypeClass_autoptr* = ptr GArrowDoubleDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowDoubleDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:313:1
  GArrowBinaryDataType* = struct_GArrowBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  struct_GArrowBinaryDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1

  GArrowBinaryDataTypeClass* = struct_GArrowBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  struct_GArrowBinaryDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:331:8

  GArrowBinaryDataType_autoptr* = ptr GArrowBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataTypeClass_autoptr* = ptr GArrowBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowBinaryDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:329:1
  GArrowFixedSizeBinaryDataType* = struct_GArrowFixedSizeBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  struct_GArrowFixedSizeBinaryDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1

  GArrowFixedSizeBinaryDataTypeClass* = struct_GArrowFixedSizeBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  struct_GArrowFixedSizeBinaryDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:348:8

  GArrowFixedSizeBinaryDataType_autoptr* = ptr GArrowFixedSizeBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataTypeClass_autoptr* = ptr GArrowFixedSizeBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowFixedSizeBinaryDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:343:1
  GArrowLargeBinaryDataType* = struct_GArrowLargeBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  struct_GArrowLargeBinaryDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1

  GArrowLargeBinaryDataTypeClass* = struct_GArrowLargeBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  struct_GArrowLargeBinaryDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:368:8

  GArrowLargeBinaryDataType_autoptr* = ptr GArrowLargeBinaryDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataTypeClass_autoptr* = ptr GArrowLargeBinaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowLargeBinaryDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:363:1
  GArrowStringDataType* = struct_GArrowStringDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  struct_GArrowStringDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBinaryDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1

  GArrowStringDataTypeClass* = struct_GArrowStringDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  struct_GArrowStringDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBinaryDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:384:8

  GArrowStringDataType_autoptr* = ptr GArrowStringDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataTypeClass_autoptr* = ptr GArrowStringDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowStringDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:379:1
  GArrowLargeStringDataType* = struct_GArrowLargeStringDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  struct_GArrowLargeStringDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowLargeBinaryDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1

  GArrowLargeStringDataTypeClass* = struct_GArrowLargeStringDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  struct_GArrowLargeStringDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowLargeBinaryDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:400:8

  GArrowLargeStringDataType_autoptr* = ptr GArrowLargeStringDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataTypeClass_autoptr* = ptr GArrowLargeStringDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowLargeStringDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:395:1
  GArrowTemporalDataType* = struct_GArrowTemporalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  struct_GArrowTemporalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedWidthDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1

  GArrowTemporalDataTypeClass* = struct_GArrowTemporalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  struct_GArrowTemporalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:416:8

  GArrowTemporalDataType_autoptr* = ptr GArrowTemporalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataTypeClass_autoptr* = ptr GArrowTemporalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowTemporalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:411:1
  GArrowDate32DataType* = struct_GArrowDate32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  struct_GArrowDate32DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTemporalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1

  GArrowDate32DataTypeClass* = struct_GArrowDate32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  struct_GArrowDate32DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTemporalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:428:8

  GArrowDate32DataType_autoptr* = ptr GArrowDate32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataTypeClass_autoptr* = ptr GArrowDate32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate32DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:423:1
  GArrowDate64DataType* = struct_GArrowDate64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  struct_GArrowDate64DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTemporalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1

  GArrowDate64DataTypeClass* = struct_GArrowDate64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  struct_GArrowDate64DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTemporalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:444:8

  GArrowDate64DataType_autoptr* = ptr GArrowDate64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataTypeClass_autoptr* = ptr GArrowDate64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowDate64DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:439:1
  GArrowTimestampDataType* = struct_GArrowTimestampDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  struct_GArrowTimestampDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTemporalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1

  GArrowTimestampDataTypeClass* = struct_GArrowTimestampDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  struct_GArrowTimestampDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTemporalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:460:8

  GArrowTimestampDataType_autoptr* = ptr GArrowTimestampDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataTypeClass_autoptr* = ptr GArrowTimestampDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimestampDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:455:1
  GArrowTimeDataType* = struct_GArrowTimeDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  struct_GArrowTimeDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTemporalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1

  GArrowTimeDataTypeClass* = struct_GArrowTimeDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  struct_GArrowTimeDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTemporalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:480:8

  GArrowTimeDataType_autoptr* = ptr GArrowTimeDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataTypeClass_autoptr* = ptr GArrowTimeDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTimeDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:475:1
  GArrowTime32DataType* = struct_GArrowTime32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  struct_GArrowTime32DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTimeDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1

  GArrowTime32DataTypeClass* = struct_GArrowTime32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  struct_GArrowTime32DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTimeDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:496:8

  GArrowTime32DataType_autoptr* = ptr GArrowTime32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataTypeClass_autoptr* = ptr GArrowTime32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime32DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:491:1
  GArrowTime64DataType* = struct_GArrowTime64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  struct_GArrowTime64DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTimeDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1

  GArrowTime64DataTypeClass* = struct_GArrowTime64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  struct_GArrowTime64DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTimeDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:512:8

  GArrowTime64DataType_autoptr* = ptr GArrowTime64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataTypeClass_autoptr* = ptr GArrowTime64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowTime64DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:507:1
  GArrowIntervalDataType* = struct_GArrowIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  struct_GArrowIntervalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTimeDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1

  GArrowIntervalDataTypeClass* = struct_GArrowIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  struct_GArrowIntervalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTimeDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:528:8

  GArrowIntervalDataType_autoptr* = ptr GArrowIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataTypeClass_autoptr* = ptr GArrowIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowIntervalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:523:1
  GArrowMonthIntervalDataType* = struct_GArrowMonthIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  struct_GArrowMonthIntervalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntervalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1

  GArrowMonthIntervalDataTypeClass* = struct_GArrowMonthIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  struct_GArrowMonthIntervalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntervalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:544:8

  GArrowMonthIntervalDataType_autoptr* = ptr GArrowMonthIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataTypeClass_autoptr* = ptr GArrowMonthIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowMonthIntervalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:539:1
  GArrowDayTimeIntervalDataType* = struct_GArrowDayTimeIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  struct_GArrowDayTimeIntervalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntervalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1

  GArrowDayTimeIntervalDataTypeClass* = struct_GArrowDayTimeIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  struct_GArrowDayTimeIntervalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntervalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:561:8

  GArrowDayTimeIntervalDataType_autoptr* = ptr GArrowDayTimeIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataTypeClass_autoptr* = ptr GArrowDayTimeIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowDayTimeIntervalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:556:1
  GArrowMonthDayNanoIntervalDataType* = struct_GArrowMonthDayNanoIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  struct_GArrowMonthDayNanoIntervalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowIntervalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1

  GArrowMonthDayNanoIntervalDataTypeClass* =
    struct_GArrowMonthDayNanoIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  struct_GArrowMonthDayNanoIntervalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowIntervalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:578:8

  GArrowMonthDayNanoIntervalDataType_autoptr* = ptr GArrowMonthDayNanoIntervalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataTypeClass_autoptr* =
    ptr GArrowMonthDayNanoIntervalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowMonthDayNanoIntervalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:573:1
  GArrowDecimalDataType* = struct_GArrowDecimalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  struct_GArrowDecimalDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1

  GArrowDecimalDataTypeClass* = struct_GArrowDecimalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  struct_GArrowDecimalDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:594:8

  GArrowDecimalDataType_autoptr* = ptr GArrowDecimalDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataTypeClass_autoptr* = ptr GArrowDecimalDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimalDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:589:1
  GArrowDecimal32DataType* = struct_GArrowDecimal32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  struct_GArrowDecimal32DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDecimalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1

  GArrowDecimal32DataTypeClass* = struct_GArrowDecimal32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  struct_GArrowDecimal32DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDecimalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:618:8

  GArrowDecimal32DataType_autoptr* = ptr GArrowDecimal32DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataTypeClass_autoptr* = ptr GArrowDecimal32DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal32DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:613:1
  GArrowDecimal64DataType* = struct_GArrowDecimal64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  struct_GArrowDecimal64DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDecimalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1

  GArrowDecimal64DataTypeClass* = struct_GArrowDecimal64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  struct_GArrowDecimal64DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDecimalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:638:8

  GArrowDecimal64DataType_autoptr* = ptr GArrowDecimal64DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataTypeClass_autoptr* = ptr GArrowDecimal64DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal64DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:633:1
  GArrowDecimal128DataType* = struct_GArrowDecimal128DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  struct_GArrowDecimal128DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDecimalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1

  GArrowDecimal128DataTypeClass* = struct_GArrowDecimal128DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  struct_GArrowDecimal128DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDecimalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:658:8

  GArrowDecimal128DataType_autoptr* = ptr GArrowDecimal128DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataTypeClass_autoptr* = ptr GArrowDecimal128DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal128DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:653:1
  GArrowDecimal256DataType* = struct_GArrowDecimal256DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  struct_GArrowDecimal256DataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDecimalDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1

  GArrowDecimal256DataTypeClass* = struct_GArrowDecimal256DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  struct_GArrowDecimal256DataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDecimalDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:678:8

  GArrowDecimal256DataType_autoptr* = ptr GArrowDecimal256DataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataTypeClass_autoptr* = ptr GArrowDecimal256DataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowDecimal256DataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:673:1
  GArrowExtensionDataType* = struct_GArrowExtensionDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  struct_GArrowExtensionDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1

  GArrowExtensionDataTypeClass* = struct_GArrowExtensionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  struct_GArrowExtensionDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:712:8
    get_extension_name*: proc(a0: ptr GArrowExtensionDataType): cstring {.cdecl.}
    equal*: proc(
      a0: ptr GArrowExtensionDataType, a1: ptr GArrowExtensionDataType
    ): gboolean {.cdecl.}
    deserialize*: proc(
      a0: ptr GArrowExtensionDataType,
      a1: ptr GArrowDataType,
      a2: ptr GBytes,
      a3: ptr ptr GError,
    ): ptr GArrowDataType {.cdecl.}
    serialize*: proc(a0: ptr GArrowExtensionDataType): ptr GBytes {.cdecl.}
    get_array_gtype*: proc(a0: ptr GArrowExtensionDataType): GType {.cdecl.}

  GArrowExtensionDataType_autoptr* = ptr GArrowExtensionDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataTypeClass_autoptr* = ptr GArrowExtensionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:693:1
  GArrowExtensionDataTypeRegistry* = struct_GArrowExtensionDataTypeRegistry
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  struct_GArrowExtensionDataTypeRegistry* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1

  GArrowExtensionDataTypeRegistryClass* = struct_GArrowExtensionDataTypeRegistryClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  struct_GArrowExtensionDataTypeRegistryClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:749:8

  GArrowExtensionDataTypeRegistry_autoptr* = ptr GArrowExtensionDataTypeRegistry
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistry_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistry_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistry_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistryClass_autoptr* =
    ptr GArrowExtensionDataTypeRegistryClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistryClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistryClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowExtensionDataTypeRegistryClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:744:1
  GArrowBinaryViewDataType* = struct_GArrowBinaryViewDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  struct_GArrowBinaryViewDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1

  GArrowBinaryViewDataTypeClass* = struct_GArrowBinaryViewDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  struct_GArrowBinaryViewDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:780:8

  GArrowBinaryViewDataType_autoptr* = ptr GArrowBinaryViewDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataTypeClass_autoptr* = ptr GArrowBinaryViewDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowBinaryViewDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:775:1
  GArrowStringViewDataType* = struct_GArrowStringViewDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  struct_GArrowStringViewDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBinaryViewDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1

  GArrowStringViewDataTypeClass* = struct_GArrowStringViewDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  struct_GArrowStringViewDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBinaryViewDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:796:8

  GArrowStringViewDataType_autoptr* = ptr GArrowStringViewDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataTypeClass_autoptr* = ptr GArrowStringViewDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowStringViewDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:791:1
  GArrowFixedShapeTensorDataType* = struct_GArrowFixedShapeTensorDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  struct_GArrowFixedShapeTensorDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExtensionDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1

  GArrowFixedShapeTensorDataTypeClass* = struct_GArrowFixedShapeTensorDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  struct_GArrowFixedShapeTensorDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExtensionDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:813:8

  GArrowFixedShapeTensorDataType_autoptr* = ptr GArrowFixedShapeTensorDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataTypeClass_autoptr* = ptr GArrowFixedShapeTensorDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowFixedShapeTensorDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:808:1
  GArrowUUIDDataType* = struct_GArrowUUIDDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  struct_GArrowUUIDDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExtensionDataType
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1

  GArrowUUIDDataTypeClass* = struct_GArrowUUIDDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  struct_GArrowUUIDDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExtensionDataTypeClass
      ## Generated based on /usr/include/arrow-glib/basic-data-type.h:856:8

  GArrowUUIDDataType_autoptr* = ptr GArrowUUIDDataType
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataTypeClass_autoptr* = ptr GArrowUUIDDataTypeClass
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowUUIDDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-data-type.h:851:1
  GArrowBuffer* = struct_GArrowBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  struct_GArrowBuffer* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/buffer.h:30:1

  GArrowBufferClass* = struct_GArrowBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  struct_GArrowBufferClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/buffer.h:31:8

  GArrowBuffer_autoptr* = ptr GArrowBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBuffer_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBuffer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBuffer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBufferClass_autoptr* = ptr GArrowBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBufferClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBufferClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowBufferClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:30:1
  GArrowMutableBuffer* = struct_GArrowMutableBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  struct_GArrowMutableBuffer* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBuffer
      ## Generated based on /usr/include/arrow-glib/buffer.h:88:1

  GArrowMutableBufferClass* = struct_GArrowMutableBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  struct_GArrowMutableBufferClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBufferClass
      ## Generated based on /usr/include/arrow-glib/buffer.h:90:8

  GArrowMutableBuffer_autoptr* = ptr GArrowMutableBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBuffer_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBuffer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBuffer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBufferClass_autoptr* = ptr GArrowMutableBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBufferClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBufferClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowMutableBufferClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:88:1
  GArrowResizableBuffer* = struct_GArrowResizableBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  struct_GArrowResizableBuffer* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowMutableBuffer
      ## Generated based on /usr/include/arrow-glib/buffer.h:117:1

  GArrowResizableBufferClass* = struct_GArrowResizableBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  struct_GArrowResizableBufferClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowMutableBufferClass
      ## Generated based on /usr/include/arrow-glib/buffer.h:122:8

  GArrowResizableBuffer_autoptr* = ptr GArrowResizableBuffer
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBuffer_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBuffer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBuffer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBufferClass_autoptr* = ptr GArrowResizableBufferClass
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBufferClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBufferClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowResizableBufferClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/buffer.h:117:1
  GArrowDayMillisecond* = struct_GArrowDayMillisecond
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  struct_GArrowDayMillisecond* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/interval.h:30:1

  GArrowDayMillisecondClass* = struct_GArrowDayMillisecondClass
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  struct_GArrowDayMillisecondClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/interval.h:33:8

  GArrowDayMillisecond_autoptr* = ptr GArrowDayMillisecond
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecond_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecond_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecond_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecondClass_autoptr* = ptr GArrowDayMillisecondClass
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecondClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecondClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowDayMillisecondClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/interval.h:30:1
  GArrowMonthDayNano* = struct_GArrowMonthDayNano
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  struct_GArrowMonthDayNano* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/interval.h:52:1

  GArrowMonthDayNanoClass* = struct_GArrowMonthDayNanoClass
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  struct_GArrowMonthDayNanoClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/interval.h:55:8

  GArrowMonthDayNano_autoptr* = ptr GArrowMonthDayNano
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNano_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNano_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNano_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNanoClass_autoptr* = ptr GArrowMonthDayNanoClass
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNanoClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNanoClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowMonthDayNanoClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/interval.h:52:1
  GArrowEqualOptions* = struct_GArrowEqualOptions
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  struct_GArrowEqualOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1

  GArrowEqualOptionsClass* = struct_GArrowEqualOptionsClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  struct_GArrowEqualOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:33:8

  GArrowEqualOptions_autoptr* = ptr GArrowEqualOptions
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptionsClass_autoptr* = ptr GArrowEqualOptionsClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowEqualOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:31:1
  GArrowArrayStatistics* = struct_GArrowArrayStatistics
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  struct_GArrowArrayStatistics* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1

  GArrowArrayStatisticsClass* = struct_GArrowArrayStatisticsClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  struct_GArrowArrayStatisticsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:49:8

  GArrowArrayStatistics_autoptr* = ptr GArrowArrayStatistics
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatistics_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatistics_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatistics_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatisticsClass_autoptr* = ptr GArrowArrayStatisticsClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatisticsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatisticsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowArrayStatisticsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:47:1
  GArrowNullArray* = struct_GArrowNullArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  struct_GArrowNullArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1

  GArrowNullArrayClass* = struct_GArrowNullArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  struct_GArrowNullArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:168:8

  GArrowNullArray_autoptr* = ptr GArrowNullArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArrayClass_autoptr* = ptr GArrowNullArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowNullArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:166:1
  GArrowPrimitiveArray* = struct_GArrowPrimitiveArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  struct_GArrowPrimitiveArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1

  GArrowPrimitiveArrayClass* = struct_GArrowPrimitiveArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  struct_GArrowPrimitiveArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:181:8

  GArrowPrimitiveArray_autoptr* = ptr GArrowPrimitiveArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArrayClass_autoptr* = ptr GArrowPrimitiveArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowPrimitiveArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:179:1
  GArrowBooleanArray* = struct_GArrowBooleanArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  struct_GArrowBooleanArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowPrimitiveArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1

  GArrowBooleanArrayClass* = struct_GArrowBooleanArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  struct_GArrowBooleanArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowPrimitiveArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:200:8

  GArrowBooleanArray_autoptr* = ptr GArrowBooleanArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArrayClass_autoptr* = ptr GArrowBooleanArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowBooleanArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:198:1
  GArrowNumericArray* = struct_GArrowNumericArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  struct_GArrowNumericArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowPrimitiveArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1

  GArrowNumericArrayClass* = struct_GArrowNumericArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  struct_GArrowNumericArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowPrimitiveArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:224:8

  GArrowNumericArray_autoptr* = ptr GArrowNumericArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArrayClass_autoptr* = ptr GArrowNumericArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowNumericArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:222:1
  GArrowInt8Array* = struct_GArrowInt8Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  struct_GArrowInt8Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1

  GArrowInt8ArrayClass* = struct_GArrowInt8ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  struct_GArrowInt8ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:233:8

  GArrowInt8Array_autoptr* = ptr GArrowInt8Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8ArrayClass_autoptr* = ptr GArrowInt8ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowInt8ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:231:1
  GArrowUInt8Array* = struct_GArrowUInt8Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  struct_GArrowUInt8Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1

  GArrowUInt8ArrayClass* = struct_GArrowUInt8ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  struct_GArrowUInt8ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:257:8

  GArrowUInt8Array_autoptr* = ptr GArrowUInt8Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8ArrayClass_autoptr* = ptr GArrowUInt8ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowUInt8ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:255:1
  GArrowInt16Array* = struct_GArrowInt16Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  struct_GArrowInt16Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1

  GArrowInt16ArrayClass* = struct_GArrowInt16ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  struct_GArrowInt16ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:281:8

  GArrowInt16Array_autoptr* = ptr GArrowInt16Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16ArrayClass_autoptr* = ptr GArrowInt16ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowInt16ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:279:1
  GArrowUInt16Array* = struct_GArrowUInt16Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  struct_GArrowUInt16Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1

  GArrowUInt16ArrayClass* = struct_GArrowUInt16ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  struct_GArrowUInt16ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:305:8

  GArrowUInt16Array_autoptr* = ptr GArrowUInt16Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16ArrayClass_autoptr* = ptr GArrowUInt16ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowUInt16ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:303:1
  GArrowInt32Array* = struct_GArrowInt32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  struct_GArrowInt32Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1

  GArrowInt32ArrayClass* = struct_GArrowInt32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  struct_GArrowInt32ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:329:8

  GArrowInt32Array_autoptr* = ptr GArrowInt32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32ArrayClass_autoptr* = ptr GArrowInt32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowInt32ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:327:1
  GArrowUInt32Array* = struct_GArrowUInt32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  struct_GArrowUInt32Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1

  GArrowUInt32ArrayClass* = struct_GArrowUInt32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  struct_GArrowUInt32ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:353:8

  GArrowUInt32Array_autoptr* = ptr GArrowUInt32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32ArrayClass_autoptr* = ptr GArrowUInt32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowUInt32ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:351:1
  GArrowInt64Array* = struct_GArrowInt64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  struct_GArrowInt64Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1

  GArrowInt64ArrayClass* = struct_GArrowInt64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  struct_GArrowInt64ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:377:8

  GArrowInt64Array_autoptr* = ptr GArrowInt64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64ArrayClass_autoptr* = ptr GArrowInt64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowInt64ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:375:1
  GArrowUInt64Array* = struct_GArrowUInt64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  struct_GArrowUInt64Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1

  GArrowUInt64ArrayClass* = struct_GArrowUInt64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  struct_GArrowUInt64ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:401:8

  GArrowUInt64Array_autoptr* = ptr GArrowUInt64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64ArrayClass_autoptr* = ptr GArrowUInt64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowUInt64ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:399:1
  GArrowHalfFloatArray* = struct_GArrowHalfFloatArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  struct_GArrowHalfFloatArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1

  GArrowHalfFloatArrayClass* = struct_GArrowHalfFloatArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  struct_GArrowHalfFloatArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:428:8

  GArrowHalfFloatArray_autoptr* = ptr GArrowHalfFloatArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArrayClass_autoptr* = ptr GArrowHalfFloatArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowHalfFloatArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:423:1
  GArrowFloatArray* = struct_GArrowFloatArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  struct_GArrowFloatArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1

  GArrowFloatArrayClass* = struct_GArrowFloatArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  struct_GArrowFloatArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:451:8

  GArrowFloatArray_autoptr* = ptr GArrowFloatArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArrayClass_autoptr* = ptr GArrowFloatArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowFloatArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:449:1
  GArrowDoubleArray* = struct_GArrowDoubleArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  struct_GArrowDoubleArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1

  GArrowDoubleArrayClass* = struct_GArrowDoubleArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  struct_GArrowDoubleArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:475:8

  GArrowDoubleArray_autoptr* = ptr GArrowDoubleArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArrayClass_autoptr* = ptr GArrowDoubleArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowDoubleArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:473:1
  GArrowBinaryArray* = struct_GArrowBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  struct_GArrowBinaryArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1

  GArrowBinaryArrayClass* = struct_GArrowBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  struct_GArrowBinaryArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:499:8

  GArrowBinaryArray_autoptr* = ptr GArrowBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArrayClass_autoptr* = ptr GArrowBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowBinaryArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:497:1
  GArrowLargeBinaryArray* = struct_GArrowLargeBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  struct_GArrowLargeBinaryArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1

  GArrowLargeBinaryArrayClass* = struct_GArrowLargeBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  struct_GArrowLargeBinaryArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:537:8

  GArrowLargeBinaryArray_autoptr* = ptr GArrowLargeBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArrayClass_autoptr* = ptr GArrowLargeBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowLargeBinaryArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:532:1
  GArrowStringArray* = struct_GArrowStringArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  struct_GArrowStringArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1

  GArrowStringArrayClass* = struct_GArrowStringArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  struct_GArrowStringArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:571:8

  GArrowStringArray_autoptr* = ptr GArrowStringArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArrayClass_autoptr* = ptr GArrowStringArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowStringArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:569:1
  GArrowLargeStringArray* = struct_GArrowLargeStringArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  struct_GArrowLargeStringArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowLargeBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1

  GArrowLargeStringArrayClass* = struct_GArrowLargeStringArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  struct_GArrowLargeStringArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowLargeBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:595:8

  GArrowLargeStringArray_autoptr* = ptr GArrowLargeStringArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArrayClass_autoptr* = ptr GArrowLargeStringArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowLargeStringArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:590:1
  GArrowBinaryViewArray* = struct_GArrowBinaryViewArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  struct_GArrowBinaryViewArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1

  GArrowBinaryViewArrayClass* = struct_GArrowBinaryViewArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  struct_GArrowBinaryViewArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:616:8

  GArrowBinaryViewArray_autoptr* = ptr GArrowBinaryViewArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArrayClass_autoptr* = ptr GArrowBinaryViewArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowBinaryViewArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:614:1
  GArrowStringViewArray* = struct_GArrowStringViewArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  struct_GArrowStringViewArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBinaryViewArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1

  GArrowStringViewArrayClass* = struct_GArrowStringViewArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  struct_GArrowStringViewArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBinaryViewArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:641:8

  GArrowStringViewArray_autoptr* = ptr GArrowStringViewArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArrayClass_autoptr* = ptr GArrowStringViewArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowStringViewArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:636:1
  GArrowDate32Array* = struct_GArrowDate32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  struct_GArrowDate32Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1

  GArrowDate32ArrayClass* = struct_GArrowDate32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  struct_GArrowDate32ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:663:8

  GArrowDate32Array_autoptr* = ptr GArrowDate32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32ArrayClass_autoptr* = ptr GArrowDate32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate32ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:661:1
  GArrowDate64Array* = struct_GArrowDate64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  struct_GArrowDate64Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1

  GArrowDate64ArrayClass* = struct_GArrowDate64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  struct_GArrowDate64ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:687:8

  GArrowDate64Array_autoptr* = ptr GArrowDate64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64ArrayClass_autoptr* = ptr GArrowDate64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowDate64ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:685:1
  GArrowTimestampArray* = struct_GArrowTimestampArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  struct_GArrowTimestampArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1

  GArrowTimestampArrayClass* = struct_GArrowTimestampArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  struct_GArrowTimestampArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:714:8

  GArrowTimestampArray_autoptr* = ptr GArrowTimestampArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArrayClass_autoptr* = ptr GArrowTimestampArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTimestampArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:709:1
  GArrowTime32Array* = struct_GArrowTime32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  struct_GArrowTime32Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1

  GArrowTime32ArrayClass* = struct_GArrowTime32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  struct_GArrowTime32ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:739:8

  GArrowTime32Array_autoptr* = ptr GArrowTime32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32ArrayClass_autoptr* = ptr GArrowTime32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime32ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:737:1
  GArrowTime64Array* = struct_GArrowTime64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  struct_GArrowTime64Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1

  GArrowTime64ArrayClass* = struct_GArrowTime64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  struct_GArrowTime64ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:764:8

  GArrowTime64Array_autoptr* = ptr GArrowTime64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64ArrayClass_autoptr* = ptr GArrowTime64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowTime64ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:762:1
  GArrowMonthIntervalArray* = struct_GArrowMonthIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  struct_GArrowMonthIntervalArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowNumericArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1

  GArrowMonthIntervalArrayClass* = struct_GArrowMonthIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  struct_GArrowMonthIntervalArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowNumericArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:792:8

  GArrowMonthIntervalArray_autoptr* = ptr GArrowMonthIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArrayClass_autoptr* = ptr GArrowMonthIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowMonthIntervalArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:787:1
  GArrowDayTimeIntervalArray* = struct_GArrowDayTimeIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  struct_GArrowDayTimeIntervalArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowPrimitiveArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1

  GArrowDayTimeIntervalArrayClass* = struct_GArrowDayTimeIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  struct_GArrowDayTimeIntervalArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowPrimitiveArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:818:8

  GArrowDayTimeIntervalArray_autoptr* = ptr GArrowDayTimeIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArrayClass_autoptr* = ptr GArrowDayTimeIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowDayTimeIntervalArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:813:1
  GArrowMonthDayNanoIntervalArray* = struct_GArrowMonthDayNanoIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  struct_GArrowMonthDayNanoIntervalArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowPrimitiveArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1

  GArrowMonthDayNanoIntervalArrayClass* = struct_GArrowMonthDayNanoIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  struct_GArrowMonthDayNanoIntervalArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowPrimitiveArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:845:8

  GArrowMonthDayNanoIntervalArray_autoptr* = ptr GArrowMonthDayNanoIntervalArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArrayClass_autoptr* =
    ptr GArrowMonthDayNanoIntervalArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowMonthDayNanoIntervalArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:840:1
  GArrowFixedSizeBinaryArray* = struct_GArrowFixedSizeBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  struct_GArrowFixedSizeBinaryArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowPrimitiveArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1

  GArrowFixedSizeBinaryArrayClass* = struct_GArrowFixedSizeBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  struct_GArrowFixedSizeBinaryArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowPrimitiveArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:871:8

  GArrowFixedSizeBinaryArray_autoptr* = ptr GArrowFixedSizeBinaryArray
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArrayClass_autoptr* = ptr GArrowFixedSizeBinaryArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowFixedSizeBinaryArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:866:1
  GArrowDecimal32Array* = struct_GArrowDecimal32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  struct_GArrowDecimal32Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1

  GArrowDecimal32ArrayClass* = struct_GArrowDecimal32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  struct_GArrowDecimal32ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:902:8

  GArrowDecimal32Array_autoptr* = ptr GArrowDecimal32Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32ArrayClass_autoptr* = ptr GArrowDecimal32ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal32ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:897:1
  GArrowDecimal64Array* = struct_GArrowDecimal64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  struct_GArrowDecimal64Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1

  GArrowDecimal64ArrayClass* = struct_GArrowDecimal64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  struct_GArrowDecimal64ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:922:8

  GArrowDecimal64Array_autoptr* = ptr GArrowDecimal64Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64ArrayClass_autoptr* = ptr GArrowDecimal64ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal64ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:917:1
  GArrowDecimal128Array* = struct_GArrowDecimal128Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  struct_GArrowDecimal128Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1

  GArrowDecimal128ArrayClass* = struct_GArrowDecimal128ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  struct_GArrowDecimal128ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:942:8

  GArrowDecimal128Array_autoptr* = ptr GArrowDecimal128Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128ArrayClass_autoptr* = ptr GArrowDecimal128ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal128ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:937:1
  GArrowDecimal256Array* = struct_GArrowDecimal256Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  struct_GArrowDecimal256Array* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArray
      ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1

  GArrowDecimal256ArrayClass* = struct_GArrowDecimal256ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  struct_GArrowDecimal256ArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayClass
      ## Generated based on /usr/include/arrow-glib/basic-array.h:962:8

  GArrowDecimal256Array_autoptr* = ptr GArrowDecimal256Array
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256Array_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256Array_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256Array_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256ArrayClass_autoptr* = ptr GArrowDecimal256ArrayClass
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256ArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256ArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowDecimal256ArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/basic-array.h:957:1
  GArrowField* = struct_GArrowField
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  struct_GArrowField* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/field.h:28:1

  GArrowFieldClass* = struct_GArrowFieldClass
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  struct_GArrowFieldClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/field.h:29:8

  GArrowField_autoptr* = ptr GArrowField
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowField_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowField_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowField_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowFieldClass_autoptr* = ptr GArrowFieldClass
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowFieldClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowFieldClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowFieldClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/field.h:28:1
  GArrowBaseListDataType* = struct_GArrowBaseListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  struct_GArrowBaseListDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1

  GArrowBaseListDataTypeClass* = struct_GArrowBaseListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  struct_GArrowBaseListDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:36:8

  GArrowBaseListDataType_autoptr* = ptr GArrowBaseListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataTypeClass_autoptr* = ptr GArrowBaseListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowBaseListDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:31:1
  GArrowListDataType* = struct_GArrowListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  struct_GArrowListDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseListDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1

  GArrowListDataTypeClass* = struct_GArrowListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  struct_GArrowListDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseListDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:52:8

  GArrowListDataType_autoptr* = ptr GArrowListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataTypeClass_autoptr* = ptr GArrowListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowListDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:47:1
  GArrowLargeListDataType* = struct_GArrowLargeListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  struct_GArrowLargeListDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1

  GArrowLargeListDataTypeClass* = struct_GArrowLargeListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  struct_GArrowLargeListDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:79:8

  GArrowLargeListDataType_autoptr* = ptr GArrowLargeListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataTypeClass_autoptr* = ptr GArrowLargeListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowLargeListDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:74:1
  GArrowStructDataType* = struct_GArrowStructDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  struct_GArrowStructDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1

  GArrowStructDataTypeClass* = struct_GArrowStructDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  struct_GArrowStructDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:96:8

  GArrowStructDataType_autoptr* = ptr GArrowStructDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataTypeClass_autoptr* = ptr GArrowStructDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowStructDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:94:1
  GArrowMapDataType* = struct_GArrowMapDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  struct_GArrowMapDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowListDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1

  GArrowMapDataTypeClass* = struct_GArrowMapDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  struct_GArrowMapDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowListDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:131:8

  GArrowMapDataType_autoptr* = ptr GArrowMapDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataTypeClass_autoptr* = ptr GArrowMapDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowMapDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:129:1
  GArrowUnionDataType* = struct_GArrowUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  struct_GArrowUnionDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1

  GArrowUnionDataTypeClass* = struct_GArrowUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  struct_GArrowUnionDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:150:8

  GArrowUnionDataType_autoptr* = ptr GArrowUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataTypeClass_autoptr* = ptr GArrowUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowUnionDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:148:1
  GArrowSparseUnionDataType* = struct_GArrowSparseUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  struct_GArrowSparseUnionDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1

  GArrowSparseUnionDataTypeClass* = struct_GArrowSparseUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  struct_GArrowSparseUnionDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:179:8

  GArrowSparseUnionDataType_autoptr* = ptr GArrowSparseUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataTypeClass_autoptr* = ptr GArrowSparseUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowSparseUnionDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:174:1
  GArrowDenseUnionDataType* = struct_GArrowDenseUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  struct_GArrowDenseUnionDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1

  GArrowDenseUnionDataTypeClass* = struct_GArrowDenseUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  struct_GArrowDenseUnionDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:195:8

  GArrowDenseUnionDataType_autoptr* = ptr GArrowDenseUnionDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataTypeClass_autoptr* = ptr GArrowDenseUnionDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDenseUnionDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:190:1
  GArrowDictionaryDataType* = struct_GArrowDictionaryDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  struct_GArrowDictionaryDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedWidthDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1

  GArrowDictionaryDataTypeClass* = struct_GArrowDictionaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  struct_GArrowDictionaryDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:211:8

  GArrowDictionaryDataType_autoptr* = ptr GArrowDictionaryDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataTypeClass_autoptr* = ptr GArrowDictionaryDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowDictionaryDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:206:1
  GArrowRunEndEncodedDataType* = struct_GArrowRunEndEncodedDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  struct_GArrowRunEndEncodedDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedWidthDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1

  GArrowRunEndEncodedDataTypeClass* = struct_GArrowRunEndEncodedDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  struct_GArrowRunEndEncodedDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedWidthDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:244:8

  GArrowRunEndEncodedDataType_autoptr* = ptr GArrowRunEndEncodedDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataTypeClass_autoptr* = ptr GArrowRunEndEncodedDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowRunEndEncodedDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:239:1
  GArrowFixedSizeListDataType* = struct_GArrowFixedSizeListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  struct_GArrowFixedSizeListDataType* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseListDataType
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1

  GArrowFixedSizeListDataTypeClass* = struct_GArrowFixedSizeListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  struct_GArrowFixedSizeListDataTypeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseListDataTypeClass
      ## Generated based on /usr/include/arrow-glib/composite-data-type.h:271:8

  GArrowFixedSizeListDataType_autoptr* = ptr GArrowFixedSizeListDataType
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataType_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataType_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataType_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataTypeClass_autoptr* = ptr GArrowFixedSizeListDataTypeClass
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataTypeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataTypeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowFixedSizeListDataTypeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-data-type.h:266:1
  GArrowListArray* = struct_GArrowListArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  struct_GArrowListArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1

  GArrowListArrayClass* = struct_GArrowListArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  struct_GArrowListArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:33:8

  GArrowListArray_autoptr* = ptr GArrowListArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArrayClass_autoptr* = ptr GArrowListArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowListArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:31:1
  GArrowLargeListArray* = struct_GArrowLargeListArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  struct_GArrowLargeListArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1

  GArrowLargeListArrayClass* = struct_GArrowLargeListArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  struct_GArrowLargeListArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:75:8

  GArrowLargeListArray_autoptr* = ptr GArrowLargeListArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArrayClass_autoptr* = ptr GArrowLargeListArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowLargeListArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:73:1
  GArrowStructArray* = struct_GArrowStructArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  struct_GArrowStructArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1

  GArrowStructArrayClass* = struct_GArrowStructArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  struct_GArrowStructArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:117:8

  GArrowStructArray_autoptr* = ptr GArrowStructArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArrayClass_autoptr* = ptr GArrowStructArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowStructArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:115:1
  GArrowMapArray* = struct_GArrowMapArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  struct_GArrowMapArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowListArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1

  GArrowMapArrayClass* = struct_GArrowMapArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  struct_GArrowMapArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowListArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:146:8

  GArrowMapArray_autoptr* = ptr GArrowMapArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArrayClass_autoptr* = ptr GArrowMapArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowMapArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:144:1
  GArrowUnionArray* = struct_GArrowUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  struct_GArrowUnionArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1

  GArrowUnionArrayClass* = struct_GArrowUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  struct_GArrowUnionArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:170:8

  GArrowUnionArray_autoptr* = ptr GArrowUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArrayClass_autoptr* = ptr GArrowUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowUnionArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:168:1
  GArrowSparseUnionArray* = struct_GArrowSparseUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  struct_GArrowSparseUnionArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1

  GArrowSparseUnionArrayClass* = struct_GArrowSparseUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  struct_GArrowSparseUnionArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:194:8

  GArrowSparseUnionArray_autoptr* = ptr GArrowSparseUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArrayClass_autoptr* = ptr GArrowSparseUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowSparseUnionArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:189:1
  GArrowDenseUnionArray* = struct_GArrowDenseUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  struct_GArrowDenseUnionArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1

  GArrowDenseUnionArrayClass* = struct_GArrowDenseUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  struct_GArrowDenseUnionArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:217:8

  GArrowDenseUnionArray_autoptr* = ptr GArrowDenseUnionArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArrayClass_autoptr* = ptr GArrowDenseUnionArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDenseUnionArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:212:1
  GArrowDictionaryArray* = struct_GArrowDictionaryArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  struct_GArrowDictionaryArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1

  GArrowDictionaryArrayClass* = struct_GArrowDictionaryArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  struct_GArrowDictionaryArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:245:8

  GArrowDictionaryArray_autoptr* = ptr GArrowDictionaryArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArrayClass_autoptr* = ptr GArrowDictionaryArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowDictionaryArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:243:1
  GArrowRunEndEncodedArray* = struct_GArrowRunEndEncodedArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  struct_GArrowRunEndEncodedArray* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArray
      ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1

  GArrowRunEndEncodedArrayClass* = struct_GArrowRunEndEncodedArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  struct_GArrowRunEndEncodedArrayClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayClass
      ## Generated based on /usr/include/arrow-glib/composite-array.h:278:8

  GArrowRunEndEncodedArray_autoptr* = ptr GArrowRunEndEncodedArray
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArray_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArray_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArray_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArrayClass_autoptr* = ptr GArrowRunEndEncodedArrayClass
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArrayClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArrayClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowRunEndEncodedArrayClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/composite-array.h:273:1
  GArrowArrayBuilder* = struct_GArrowArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  struct_GArrowArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1

  GArrowArrayBuilderClass* = struct_GArrowArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  struct_GArrowArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:32:8

  GArrowArrayBuilder_autoptr* = ptr GArrowArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilderClass_autoptr* = ptr GArrowArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:30:1
  GArrowNullArrayBuilder* = struct_GArrowNullArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  struct_GArrowNullArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1

  GArrowNullArrayBuilderClass* = struct_GArrowNullArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  struct_GArrowNullArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:100:8

  GArrowNullArrayBuilder_autoptr* = ptr GArrowNullArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilderClass_autoptr* = ptr GArrowNullArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowNullArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:95:1
  GArrowBooleanArrayBuilder* = struct_GArrowBooleanArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  struct_GArrowBooleanArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1

  GArrowBooleanArrayBuilderClass* = struct_GArrowBooleanArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  struct_GArrowBooleanArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:129:8

  GArrowBooleanArrayBuilder_autoptr* = ptr GArrowBooleanArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilderClass_autoptr* = ptr GArrowBooleanArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowBooleanArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:124:1
  GArrowIntArrayBuilder* = struct_GArrowIntArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  struct_GArrowIntArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1

  GArrowIntArrayBuilderClass* = struct_GArrowIntArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  struct_GArrowIntArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:179:8

  GArrowIntArrayBuilder_autoptr* = ptr GArrowIntArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilderClass_autoptr* = ptr GArrowIntArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowIntArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:174:1
  GArrowUIntArrayBuilder* = struct_GArrowUIntArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  struct_GArrowUIntArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1

  GArrowUIntArrayBuilderClass* = struct_GArrowUIntArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  struct_GArrowUIntArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:230:8

  GArrowUIntArrayBuilder_autoptr* = ptr GArrowUIntArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilderClass_autoptr* = ptr GArrowUIntArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowUIntArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:225:1
  GArrowInt8ArrayBuilder* = struct_GArrowInt8ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  struct_GArrowInt8ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1

  GArrowInt8ArrayBuilderClass* = struct_GArrowInt8ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  struct_GArrowInt8ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:282:8

  GArrowInt8ArrayBuilder_autoptr* = ptr GArrowInt8ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilderClass_autoptr* = ptr GArrowInt8ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowInt8ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:277:1
  GArrowUInt8ArrayBuilder* = struct_GArrowUInt8ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  struct_GArrowUInt8ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1

  GArrowUInt8ArrayBuilderClass* = struct_GArrowUInt8ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  struct_GArrowUInt8ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:334:8

  GArrowUInt8ArrayBuilder_autoptr* = ptr GArrowUInt8ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilderClass_autoptr* = ptr GArrowUInt8ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowUInt8ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:329:1
  GArrowInt16ArrayBuilder* = struct_GArrowInt16ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  struct_GArrowInt16ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1

  GArrowInt16ArrayBuilderClass* = struct_GArrowInt16ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  struct_GArrowInt16ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:386:8

  GArrowInt16ArrayBuilder_autoptr* = ptr GArrowInt16ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilderClass_autoptr* = ptr GArrowInt16ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowInt16ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:381:1
  GArrowUInt16ArrayBuilder* = struct_GArrowUInt16ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  struct_GArrowUInt16ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1

  GArrowUInt16ArrayBuilderClass* = struct_GArrowUInt16ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  struct_GArrowUInt16ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:436:8

  GArrowUInt16ArrayBuilder_autoptr* = ptr GArrowUInt16ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilderClass_autoptr* = ptr GArrowUInt16ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowUInt16ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:431:1
  GArrowInt32ArrayBuilder* = struct_GArrowInt32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  struct_GArrowInt32ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1

  GArrowInt32ArrayBuilderClass* = struct_GArrowInt32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  struct_GArrowInt32ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:489:8

  GArrowInt32ArrayBuilder_autoptr* = ptr GArrowInt32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilderClass_autoptr* = ptr GArrowInt32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowInt32ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:484:1
  GArrowUInt32ArrayBuilder* = struct_GArrowUInt32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  struct_GArrowUInt32ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1

  GArrowUInt32ArrayBuilderClass* = struct_GArrowUInt32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  struct_GArrowUInt32ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:541:8

  GArrowUInt32ArrayBuilder_autoptr* = ptr GArrowUInt32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilderClass_autoptr* = ptr GArrowUInt32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowUInt32ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:536:1
  GArrowInt64ArrayBuilder* = struct_GArrowInt64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  struct_GArrowInt64ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1

  GArrowInt64ArrayBuilderClass* = struct_GArrowInt64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  struct_GArrowInt64ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:594:8

  GArrowInt64ArrayBuilder_autoptr* = ptr GArrowInt64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilderClass_autoptr* = ptr GArrowInt64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowInt64ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:589:1
  GArrowUInt64ArrayBuilder* = struct_GArrowUInt64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  struct_GArrowUInt64ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1

  GArrowUInt64ArrayBuilderClass* = struct_GArrowUInt64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  struct_GArrowUInt64ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:646:8

  GArrowUInt64ArrayBuilder_autoptr* = ptr GArrowUInt64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilderClass_autoptr* = ptr GArrowUInt64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowUInt64ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:641:1
  GArrowHalfFloatArrayBuilder* = struct_GArrowHalfFloatArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  struct_GArrowHalfFloatArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1

  GArrowHalfFloatArrayBuilderClass* = struct_GArrowHalfFloatArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  struct_GArrowHalfFloatArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:699:8

  GArrowHalfFloatArrayBuilder_autoptr* = ptr GArrowHalfFloatArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilderClass_autoptr* = ptr GArrowHalfFloatArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowHalfFloatArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:694:1
  GArrowFloatArrayBuilder* = struct_GArrowFloatArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  struct_GArrowFloatArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1

  GArrowFloatArrayBuilderClass* = struct_GArrowFloatArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  struct_GArrowFloatArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:729:8

  GArrowFloatArrayBuilder_autoptr* = ptr GArrowFloatArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilderClass_autoptr* = ptr GArrowFloatArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowFloatArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:724:1
  GArrowDoubleArrayBuilder* = struct_GArrowDoubleArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  struct_GArrowDoubleArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1

  GArrowDoubleArrayBuilderClass* = struct_GArrowDoubleArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  struct_GArrowDoubleArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:781:8

  GArrowDoubleArrayBuilder_autoptr* = ptr GArrowDoubleArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilderClass_autoptr* = ptr GArrowDoubleArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowDoubleArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:776:1
  GArrowBinaryArrayBuilder* = struct_GArrowBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  struct_GArrowBinaryArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1

  GArrowBinaryArrayBuilderClass* = struct_GArrowBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  struct_GArrowBinaryArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:834:8

  GArrowBinaryArrayBuilder_autoptr* = ptr GArrowBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilderClass_autoptr* = ptr GArrowBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowBinaryArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:829:1
  GArrowLargeBinaryArrayBuilder* = struct_GArrowLargeBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  struct_GArrowLargeBinaryArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1

  GArrowLargeBinaryArrayBuilderClass* = struct_GArrowLargeBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  struct_GArrowLargeBinaryArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:894:8

  GArrowLargeBinaryArrayBuilder_autoptr* = ptr GArrowLargeBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilderClass_autoptr* = ptr GArrowLargeBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowLargeBinaryArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:889:1
  GArrowStringArrayBuilder* = struct_GArrowStringArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  struct_GArrowStringArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1

  GArrowStringArrayBuilderClass* = struct_GArrowStringArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  struct_GArrowStringArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:941:8

  GArrowStringArrayBuilder_autoptr* = ptr GArrowStringArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilderClass_autoptr* = ptr GArrowStringArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowStringArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:936:1
  GArrowLargeStringArrayBuilder* = struct_GArrowLargeStringArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  struct_GArrowLargeStringArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowLargeBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1

  GArrowLargeStringArrayBuilderClass* = struct_GArrowLargeStringArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  struct_GArrowLargeStringArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowLargeBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1007:8

  GArrowLargeStringArrayBuilder_autoptr* = ptr GArrowLargeStringArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilderClass_autoptr* = ptr GArrowLargeStringArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowLargeStringArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1002:1
  GArrowFixedSizeBinaryArrayBuilder* = struct_GArrowFixedSizeBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  struct_GArrowFixedSizeBinaryArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1

  GArrowFixedSizeBinaryArrayBuilderClass* =
    struct_GArrowFixedSizeBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  struct_GArrowFixedSizeBinaryArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1044:8

  GArrowFixedSizeBinaryArrayBuilder_autoptr* = ptr GArrowFixedSizeBinaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilderClass_autoptr* =
    ptr GArrowFixedSizeBinaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowFixedSizeBinaryArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1039:1
  GArrowDate32ArrayBuilder* = struct_GArrowDate32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  struct_GArrowDate32ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1

  GArrowDate32ArrayBuilderClass* = struct_GArrowDate32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  struct_GArrowDate32ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1089:8

  GArrowDate32ArrayBuilder_autoptr* = ptr GArrowDate32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilderClass_autoptr* = ptr GArrowDate32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate32ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1084:1
  GArrowDate64ArrayBuilder* = struct_GArrowDate64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  struct_GArrowDate64ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1

  GArrowDate64ArrayBuilderClass* = struct_GArrowDate64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  struct_GArrowDate64ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1142:8

  GArrowDate64ArrayBuilder_autoptr* = ptr GArrowDate64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilderClass_autoptr* = ptr GArrowDate64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowDate64ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1137:1
  GArrowTimestampArrayBuilder* = struct_GArrowTimestampArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  struct_GArrowTimestampArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1

  GArrowTimestampArrayBuilderClass* = struct_GArrowTimestampArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  struct_GArrowTimestampArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1195:8

  GArrowTimestampArrayBuilder_autoptr* = ptr GArrowTimestampArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilderClass_autoptr* = ptr GArrowTimestampArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTimestampArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1190:1
  GArrowTime32ArrayBuilder* = struct_GArrowTime32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  struct_GArrowTime32ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1

  GArrowTime32ArrayBuilderClass* = struct_GArrowTime32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  struct_GArrowTime32ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1248:8

  GArrowTime32ArrayBuilder_autoptr* = ptr GArrowTime32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilderClass_autoptr* = ptr GArrowTime32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime32ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1243:1
  GArrowTime64ArrayBuilder* = struct_GArrowTime64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  struct_GArrowTime64ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1

  GArrowTime64ArrayBuilderClass* = struct_GArrowTime64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  struct_GArrowTime64ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1301:8

  GArrowTime64ArrayBuilder_autoptr* = ptr GArrowTime64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilderClass_autoptr* = ptr GArrowTime64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowTime64ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1296:1
  GArrowMonthIntervalArrayBuilder* = struct_GArrowMonthIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  struct_GArrowMonthIntervalArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1

  GArrowMonthIntervalArrayBuilderClass* = struct_GArrowMonthIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  struct_GArrowMonthIntervalArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1355:8

  GArrowMonthIntervalArrayBuilder_autoptr* = ptr GArrowMonthIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilderClass_autoptr* =
    ptr GArrowMonthIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowMonthIntervalArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1350:1
  GArrowDayTimeIntervalArrayBuilder* = struct_GArrowDayTimeIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  struct_GArrowDayTimeIntervalArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1

  GArrowDayTimeIntervalArrayBuilderClass* =
    struct_GArrowDayTimeIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  struct_GArrowDayTimeIntervalArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1387:8

  GArrowDayTimeIntervalArrayBuilder_autoptr* = ptr GArrowDayTimeIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilderClass_autoptr* =
    ptr GArrowDayTimeIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowDayTimeIntervalArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1382:1
  GArrowMonthDayNanoIntervalArrayBuilder* =
    struct_GArrowMonthDayNanoIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  struct_GArrowMonthDayNanoIntervalArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1

  GArrowMonthDayNanoIntervalArrayBuilderClass* =
    struct_GArrowMonthDayNanoIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1

  struct_GArrowMonthDayNanoIntervalArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1420:8

  GArrowMonthDayNanoIntervalArrayBuilder_autoptr* =
    ptr GArrowMonthDayNanoIntervalArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilderClass_autoptr* =
    ptr GArrowMonthDayNanoIntervalArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowMonthDayNanoIntervalArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1415:1
  GArrowBinaryDictionaryArrayBuilder* = struct_GArrowBinaryDictionaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  struct_GArrowBinaryDictionaryArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1

  GArrowBinaryDictionaryArrayBuilderClass* =
    struct_GArrowBinaryDictionaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  struct_GArrowBinaryDictionaryArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1453:8

  GArrowBinaryDictionaryArrayBuilder_autoptr* = ptr GArrowBinaryDictionaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilderClass_autoptr* =
    ptr GArrowBinaryDictionaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowBinaryDictionaryArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1448:1
  GArrowStringDictionaryArrayBuilder* = struct_GArrowStringDictionaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  struct_GArrowStringDictionaryArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1

  GArrowStringDictionaryArrayBuilderClass* =
    struct_GArrowStringDictionaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  struct_GArrowStringDictionaryArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1520:8

  GArrowStringDictionaryArrayBuilder_autoptr* = ptr GArrowStringDictionaryArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilderClass_autoptr* =
    ptr GArrowStringDictionaryArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowStringDictionaryArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1515:1
  GArrowListArrayBuilder* = struct_GArrowListArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  struct_GArrowListArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1

  GArrowListArrayBuilderClass* = struct_GArrowListArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  struct_GArrowListArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1579:8

  GArrowListArrayBuilder_autoptr* = ptr GArrowListArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilderClass_autoptr* = ptr GArrowListArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowListArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1574:1
  GArrowLargeListArrayBuilder* = struct_GArrowLargeListArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  struct_GArrowLargeListArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1

  GArrowLargeListArrayBuilderClass* = struct_GArrowLargeListArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  struct_GArrowLargeListArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1615:8

  GArrowLargeListArrayBuilder_autoptr* = ptr GArrowLargeListArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilderClass_autoptr* = ptr GArrowLargeListArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowLargeListArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1610:1
  GArrowStructArrayBuilder* = struct_GArrowStructArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  struct_GArrowStructArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1

  GArrowStructArrayBuilderClass* = struct_GArrowStructArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  struct_GArrowStructArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1645:8

  GArrowStructArrayBuilder_autoptr* = ptr GArrowStructArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilderClass_autoptr* = ptr GArrowStructArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowStructArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1640:1
  GArrowMapArrayBuilder* = struct_GArrowMapArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  struct_GArrowMapArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1

  GArrowMapArrayBuilderClass* = struct_GArrowMapArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  struct_GArrowMapArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1691:8

  GArrowMapArrayBuilder_autoptr* = ptr GArrowMapArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilderClass_autoptr* = ptr GArrowMapArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowMapArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1686:1
  GArrowDecimal32ArrayBuilder* = struct_GArrowDecimal32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  struct_GArrowDecimal32ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1

  GArrowDecimal32ArrayBuilderClass* = struct_GArrowDecimal32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  struct_GArrowDecimal32ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1739:8

  GArrowDecimal32ArrayBuilder_autoptr* = ptr GArrowDecimal32ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilderClass_autoptr* = ptr GArrowDecimal32ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal32ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1734:1
  GArrowDecimal64ArrayBuilder* = struct_GArrowDecimal64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  struct_GArrowDecimal64ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1

  GArrowDecimal64ArrayBuilderClass* = struct_GArrowDecimal64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  struct_GArrowDecimal64ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1769:8

  GArrowDecimal64ArrayBuilder_autoptr* = ptr GArrowDecimal64ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilderClass_autoptr* = ptr GArrowDecimal64ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal64ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1764:1
  GArrowDecimal128ArrayBuilder* = struct_GArrowDecimal128ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  struct_GArrowDecimal128ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1

  GArrowDecimal128ArrayBuilderClass* = struct_GArrowDecimal128ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  struct_GArrowDecimal128ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1799:8

  GArrowDecimal128ArrayBuilder_autoptr* = ptr GArrowDecimal128ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilderClass_autoptr* = ptr GArrowDecimal128ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal128ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1794:1
  GArrowDecimal256ArrayBuilder* = struct_GArrowDecimal256ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  struct_GArrowDecimal256ArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFixedSizeBinaryArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1

  GArrowDecimal256ArrayBuilderClass* = struct_GArrowDecimal256ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  struct_GArrowDecimal256ArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFixedSizeBinaryArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1844:8

  GArrowDecimal256ArrayBuilder_autoptr* = ptr GArrowDecimal256ArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilderClass_autoptr* = ptr GArrowDecimal256ArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowDecimal256ArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1839:1
  GArrowUnionArrayBuilder* = struct_GArrowUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  struct_GArrowUnionArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1

  GArrowUnionArrayBuilderClass* = struct_GArrowUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  struct_GArrowUnionArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1874:8

  GArrowUnionArrayBuilder_autoptr* = ptr GArrowUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilderClass_autoptr* = ptr GArrowUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowUnionArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1869:1
  GArrowDenseUnionArrayBuilder* = struct_GArrowDenseUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  struct_GArrowDenseUnionArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1

  GArrowDenseUnionArrayBuilderClass* = struct_GArrowDenseUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  struct_GArrowDenseUnionArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1899:8

  GArrowDenseUnionArrayBuilder_autoptr* = ptr GArrowDenseUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilderClass_autoptr* = ptr GArrowDenseUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowDenseUnionArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1894:1
  GArrowSparseUnionArrayBuilder* = struct_GArrowSparseUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  struct_GArrowSparseUnionArrayBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionArrayBuilder
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1

  GArrowSparseUnionArrayBuilderClass* = struct_GArrowSparseUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  struct_GArrowSparseUnionArrayBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionArrayBuilderClass
      ## Generated based on /usr/include/arrow-glib/array-builder.h:1916:8

  GArrowSparseUnionArrayBuilder_autoptr* = ptr GArrowSparseUnionArrayBuilder
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilderClass_autoptr* = ptr GArrowSparseUnionArrayBuilderClass
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowSparseUnionArrayBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/array-builder.h:1911:1
  GArrowCompressionType* = enum_GArrowCompressionType
    ## Generated based on /usr/include/arrow-glib/codec.h:50:3
  GArrowCodec* = struct_GArrowCodec
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  struct_GArrowCodec* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/codec.h:54:1

  GArrowCodecClass* = struct_GArrowCodecClass
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  struct_GArrowCodecClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/codec.h:55:8

  GArrowCodec_autoptr* = ptr GArrowCodec
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodec_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodec_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodec_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodecClass_autoptr* = ptr GArrowCodecClass
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodecClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodecClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowCodecClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/codec.h:54:1
  GArrowFunctionOptions* = struct_GArrowFunctionOptions
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  struct_GArrowFunctionOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1

  GArrowFunctionOptionsClass* = struct_GArrowFunctionOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  struct_GArrowFunctionOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:32:8

  GArrowFunctionOptions_autoptr* = ptr GArrowFunctionOptions
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptionsClass_autoptr* = ptr GArrowFunctionOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowFunctionOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:30:1
  GArrowCastOptions* = struct_GArrowCastOptions
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  struct_GArrowCastOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1

  GArrowCastOptionsClass* = struct_GArrowCastOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  struct_GArrowCastOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:41:8

  GArrowCastOptions_autoptr* = ptr GArrowCastOptions
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptionsClass_autoptr* = ptr GArrowCastOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowCastOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:39:1
  GArrowExpression* = struct_GArrowExpression
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  struct_GArrowExpression* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1

  GArrowExpressionClass* = struct_GArrowExpressionClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  struct_GArrowExpressionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute-definition.h:49:8

  GArrowExpression_autoptr* = ptr GArrowExpression
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpression_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpression_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpression_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpressionClass_autoptr* = ptr GArrowExpressionClass
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpressionClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpressionClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowExpressionClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute-definition.h:48:1
  GArrowReadOptions* = struct_GArrowReadOptions
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  struct_GArrowReadOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1

  GArrowReadOptionsClass* = struct_GArrowReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  struct_GArrowReadOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/ipc-options.h:32:8

  GArrowReadOptions_autoptr* = ptr GArrowReadOptions
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptionsClass_autoptr* = ptr GArrowReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowReadOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:30:1
  GArrowWriteOptions* = struct_GArrowWriteOptions
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  struct_GArrowWriteOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1

  GArrowWriteOptionsClass* = struct_GArrowWriteOptionsClass
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  struct_GArrowWriteOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/ipc-options.h:53:8

  GArrowWriteOptions_autoptr* = ptr GArrowWriteOptions
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptionsClass_autoptr* = ptr GArrowWriteOptionsClass
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowWriteOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/ipc-options.h:51:1
  GArrowSchema* = struct_GArrowSchema
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  struct_GArrowSchema* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/schema.h:28:1

  GArrowSchemaClass* = struct_GArrowSchemaClass
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  struct_GArrowSchemaClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/schema.h:29:8

  GArrowSchema_autoptr* = ptr GArrowSchema
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchema_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchema_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchema_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchemaClass_autoptr* = ptr GArrowSchemaClass
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchemaClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchemaClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowSchemaClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/schema.h:28:1
  GArrowRecordBatch* = struct_GArrowRecordBatch
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  struct_GArrowRecordBatch* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1

  GArrowRecordBatchClass* = struct_GArrowRecordBatchClass
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  struct_GArrowRecordBatchClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/record-batch.h:32:8

  GArrowRecordBatch_autoptr* = ptr GArrowRecordBatch
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatch_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatch_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatch_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatchClass_autoptr* = ptr GArrowRecordBatchClass
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatchClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatchClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatchClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/record-batch.h:30:1
  GArrowRecordBatchIterator* = struct_GArrowRecordBatchIterator
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  struct_GArrowRecordBatchIterator* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1

  GArrowRecordBatchIteratorClass* = struct_GArrowRecordBatchIteratorClass
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  struct_GArrowRecordBatchIteratorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/record-batch.h:127:8

  GArrowRecordBatchIterator_autoptr* = ptr GArrowRecordBatchIterator
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIterator_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIterator_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIterator_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIteratorClass_autoptr* = ptr GArrowRecordBatchIteratorClass
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIteratorClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIteratorClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowRecordBatchIteratorClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/record-batch.h:122:1
  GArrowScalar* = struct_GArrowScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  struct_GArrowScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/scalar.h:29:1

  GArrowScalarClass* = struct_GArrowScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  struct_GArrowScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:30:8

  GArrowScalar_autoptr* = ptr GArrowScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalarClass_autoptr* = ptr GArrowScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:29:1
  GArrowNullScalar* = struct_GArrowNullScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  struct_GArrowNullScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:69:1

  GArrowNullScalarClass* = struct_GArrowNullScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  struct_GArrowNullScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:71:8

  GArrowNullScalar_autoptr* = ptr GArrowNullScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalarClass_autoptr* = ptr GArrowNullScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowNullScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:69:1
  GArrowBooleanScalar* = struct_GArrowBooleanScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  struct_GArrowBooleanScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:82:1

  GArrowBooleanScalarClass* = struct_GArrowBooleanScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  struct_GArrowBooleanScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:84:8

  GArrowBooleanScalar_autoptr* = ptr GArrowBooleanScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalarClass_autoptr* = ptr GArrowBooleanScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowBooleanScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:82:1
  GArrowInt8Scalar* = struct_GArrowInt8Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  struct_GArrowInt8Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:98:1

  GArrowInt8ScalarClass* = struct_GArrowInt8ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  struct_GArrowInt8ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:100:8

  GArrowInt8Scalar_autoptr* = ptr GArrowInt8Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8ScalarClass_autoptr* = ptr GArrowInt8ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt8ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:98:1
  GArrowInt16Scalar* = struct_GArrowInt16Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  struct_GArrowInt16Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:114:1

  GArrowInt16ScalarClass* = struct_GArrowInt16ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  struct_GArrowInt16ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:116:8

  GArrowInt16Scalar_autoptr* = ptr GArrowInt16Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16ScalarClass_autoptr* = ptr GArrowInt16ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt16ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:114:1
  GArrowInt32Scalar* = struct_GArrowInt32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  struct_GArrowInt32Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:130:1

  GArrowInt32ScalarClass* = struct_GArrowInt32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  struct_GArrowInt32ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:132:8

  GArrowInt32Scalar_autoptr* = ptr GArrowInt32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32ScalarClass_autoptr* = ptr GArrowInt32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt32ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:130:1
  GArrowInt64Scalar* = struct_GArrowInt64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  struct_GArrowInt64Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:146:1

  GArrowInt64ScalarClass* = struct_GArrowInt64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  struct_GArrowInt64ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:148:8

  GArrowInt64Scalar_autoptr* = ptr GArrowInt64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64ScalarClass_autoptr* = ptr GArrowInt64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowInt64ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:146:1
  GArrowUInt8Scalar* = struct_GArrowUInt8Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  struct_GArrowUInt8Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:162:1

  GArrowUInt8ScalarClass* = struct_GArrowUInt8ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  struct_GArrowUInt8ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:164:8

  GArrowUInt8Scalar_autoptr* = ptr GArrowUInt8Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8ScalarClass_autoptr* = ptr GArrowUInt8ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt8ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:162:1
  GArrowUInt16Scalar* = struct_GArrowUInt16Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  struct_GArrowUInt16Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:178:1

  GArrowUInt16ScalarClass* = struct_GArrowUInt16ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  struct_GArrowUInt16ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:180:8

  GArrowUInt16Scalar_autoptr* = ptr GArrowUInt16Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16ScalarClass_autoptr* = ptr GArrowUInt16ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt16ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:178:1
  GArrowUInt32Scalar* = struct_GArrowUInt32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  struct_GArrowUInt32Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:194:1

  GArrowUInt32ScalarClass* = struct_GArrowUInt32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  struct_GArrowUInt32ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:196:8

  GArrowUInt32Scalar_autoptr* = ptr GArrowUInt32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32ScalarClass_autoptr* = ptr GArrowUInt32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt32ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:194:1
  GArrowUInt64Scalar* = struct_GArrowUInt64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  struct_GArrowUInt64Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:210:1

  GArrowUInt64ScalarClass* = struct_GArrowUInt64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  struct_GArrowUInt64ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:212:8

  GArrowUInt64Scalar_autoptr* = ptr GArrowUInt64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64ScalarClass_autoptr* = ptr GArrowUInt64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowUInt64ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:210:1
  GArrowHalfFloatScalar* = struct_GArrowHalfFloatScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  struct_GArrowHalfFloatScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:226:1

  GArrowHalfFloatScalarClass* = struct_GArrowHalfFloatScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  struct_GArrowHalfFloatScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:231:8

  GArrowHalfFloatScalar_autoptr* = ptr GArrowHalfFloatScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalarClass_autoptr* = ptr GArrowHalfFloatScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowHalfFloatScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:226:1
  GArrowFloatScalar* = struct_GArrowFloatScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  struct_GArrowFloatScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:245:1

  GArrowFloatScalarClass* = struct_GArrowFloatScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  struct_GArrowFloatScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:247:8

  GArrowFloatScalar_autoptr* = ptr GArrowFloatScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalarClass_autoptr* = ptr GArrowFloatScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowFloatScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:245:1
  GArrowDoubleScalar* = struct_GArrowDoubleScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  struct_GArrowDoubleScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:261:1

  GArrowDoubleScalarClass* = struct_GArrowDoubleScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  struct_GArrowDoubleScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:263:8

  GArrowDoubleScalar_autoptr* = ptr GArrowDoubleScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalarClass_autoptr* = ptr GArrowDoubleScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowDoubleScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:261:1
  GArrowBaseBinaryScalar* = struct_GArrowBaseBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  struct_GArrowBaseBinaryScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:277:1

  GArrowBaseBinaryScalarClass* = struct_GArrowBaseBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  struct_GArrowBaseBinaryScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:282:8

  GArrowBaseBinaryScalar_autoptr* = ptr GArrowBaseBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalarClass_autoptr* = ptr GArrowBaseBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBaseBinaryScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:277:1
  GArrowBinaryScalar* = struct_GArrowBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  struct_GArrowBinaryScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseBinaryScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:293:1

  GArrowBinaryScalarClass* = struct_GArrowBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  struct_GArrowBinaryScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseBinaryScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:295:8

  GArrowBinaryScalar_autoptr* = ptr GArrowBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalarClass_autoptr* = ptr GArrowBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowBinaryScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:293:1
  GArrowStringScalar* = struct_GArrowStringScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  struct_GArrowStringScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseBinaryScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:306:1

  GArrowStringScalarClass* = struct_GArrowStringScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  struct_GArrowStringScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseBinaryScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:308:8

  GArrowStringScalar_autoptr* = ptr GArrowStringScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalarClass_autoptr* = ptr GArrowStringScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowStringScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:306:1
  GArrowLargeBinaryScalar* = struct_GArrowLargeBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  struct_GArrowLargeBinaryScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseBinaryScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:319:1

  GArrowLargeBinaryScalarClass* = struct_GArrowLargeBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  struct_GArrowLargeBinaryScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseBinaryScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:324:8

  GArrowLargeBinaryScalar_autoptr* = ptr GArrowLargeBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalarClass_autoptr* = ptr GArrowLargeBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeBinaryScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:319:1
  GArrowLargeStringScalar* = struct_GArrowLargeStringScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  struct_GArrowLargeStringScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseBinaryScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:335:1

  GArrowLargeStringScalarClass* = struct_GArrowLargeStringScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  struct_GArrowLargeStringScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseBinaryScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:340:8

  GArrowLargeStringScalar_autoptr* = ptr GArrowLargeStringScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalarClass_autoptr* = ptr GArrowLargeStringScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowLargeStringScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:335:1
  GArrowFixedSizeBinaryScalar* = struct_GArrowFixedSizeBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  struct_GArrowFixedSizeBinaryScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseBinaryScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:351:1

  GArrowFixedSizeBinaryScalarClass* = struct_GArrowFixedSizeBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  struct_GArrowFixedSizeBinaryScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseBinaryScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:356:8

  GArrowFixedSizeBinaryScalar_autoptr* = ptr GArrowFixedSizeBinaryScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalarClass_autoptr* = ptr GArrowFixedSizeBinaryScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowFixedSizeBinaryScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:351:1
  GArrowDate32Scalar* = struct_GArrowDate32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  struct_GArrowDate32Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:368:1

  GArrowDate32ScalarClass* = struct_GArrowDate32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  struct_GArrowDate32ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:370:8

  GArrowDate32Scalar_autoptr* = ptr GArrowDate32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32ScalarClass_autoptr* = ptr GArrowDate32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate32ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:368:1
  GArrowDate64Scalar* = struct_GArrowDate64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  struct_GArrowDate64Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:384:1

  GArrowDate64ScalarClass* = struct_GArrowDate64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  struct_GArrowDate64ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:386:8

  GArrowDate64Scalar_autoptr* = ptr GArrowDate64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64ScalarClass_autoptr* = ptr GArrowDate64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowDate64ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:384:1
  GArrowTime32Scalar* = struct_GArrowTime32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  struct_GArrowTime32Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:400:1

  GArrowTime32ScalarClass* = struct_GArrowTime32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  struct_GArrowTime32ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:402:8

  GArrowTime32Scalar_autoptr* = ptr GArrowTime32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32ScalarClass_autoptr* = ptr GArrowTime32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime32ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:400:1
  GArrowTime64Scalar* = struct_GArrowTime64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  struct_GArrowTime64Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:416:1

  GArrowTime64ScalarClass* = struct_GArrowTime64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  struct_GArrowTime64ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:418:8

  GArrowTime64Scalar_autoptr* = ptr GArrowTime64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64ScalarClass_autoptr* = ptr GArrowTime64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTime64ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:416:1
  GArrowTimestampScalar* = struct_GArrowTimestampScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  struct_GArrowTimestampScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:432:1

  GArrowTimestampScalarClass* = struct_GArrowTimestampScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  struct_GArrowTimestampScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:434:8

  GArrowTimestampScalar_autoptr* = ptr GArrowTimestampScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalarClass_autoptr* = ptr GArrowTimestampScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowTimestampScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:432:1
  GArrowMonthIntervalScalar* = struct_GArrowMonthIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  struct_GArrowMonthIntervalScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:448:1

  GArrowMonthIntervalScalarClass* = struct_GArrowMonthIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  struct_GArrowMonthIntervalScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:453:8

  GArrowMonthIntervalScalar_autoptr* = ptr GArrowMonthIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalarClass_autoptr* = ptr GArrowMonthIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowMonthIntervalScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:448:1
  GArrowDayTimeIntervalScalar* = struct_GArrowDayTimeIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  struct_GArrowDayTimeIntervalScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:467:1

  GArrowDayTimeIntervalScalarClass* = struct_GArrowDayTimeIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  struct_GArrowDayTimeIntervalScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:472:8

  GArrowDayTimeIntervalScalar_autoptr* = ptr GArrowDayTimeIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalarClass_autoptr* = ptr GArrowDayTimeIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowDayTimeIntervalScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:467:1
  GArrowMonthDayNanoIntervalScalar* = struct_GArrowMonthDayNanoIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  struct_GArrowMonthDayNanoIntervalScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:487:1

  GArrowMonthDayNanoIntervalScalarClass* = struct_GArrowMonthDayNanoIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  struct_GArrowMonthDayNanoIntervalScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:492:8

  GArrowMonthDayNanoIntervalScalar_autoptr* = ptr GArrowMonthDayNanoIntervalScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalarClass_autoptr* =
    ptr GArrowMonthDayNanoIntervalScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowMonthDayNanoIntervalScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:487:1
  GArrowDecimal32Scalar* = struct_GArrowDecimal32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  struct_GArrowDecimal32Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:506:1

  GArrowDecimal32ScalarClass* = struct_GArrowDecimal32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  struct_GArrowDecimal32ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:508:8

  GArrowDecimal32Scalar_autoptr* = ptr GArrowDecimal32Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32ScalarClass_autoptr* = ptr GArrowDecimal32ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal32ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:506:1
  GArrowDecimal64Scalar* = struct_GArrowDecimal64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  struct_GArrowDecimal64Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:522:1

  GArrowDecimal64ScalarClass* = struct_GArrowDecimal64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  struct_GArrowDecimal64ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:524:8

  GArrowDecimal64Scalar_autoptr* = ptr GArrowDecimal64Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64ScalarClass_autoptr* = ptr GArrowDecimal64ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal64ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:522:1
  GArrowDecimal128Scalar* = struct_GArrowDecimal128Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  struct_GArrowDecimal128Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:538:1

  GArrowDecimal128ScalarClass* = struct_GArrowDecimal128ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  struct_GArrowDecimal128ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:543:8

  GArrowDecimal128Scalar_autoptr* = ptr GArrowDecimal128Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128ScalarClass_autoptr* = ptr GArrowDecimal128ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal128ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:538:1
  GArrowDecimal256Scalar* = struct_GArrowDecimal256Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  struct_GArrowDecimal256Scalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:558:1

  GArrowDecimal256ScalarClass* = struct_GArrowDecimal256ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  struct_GArrowDecimal256ScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:563:8

  GArrowDecimal256Scalar_autoptr* = ptr GArrowDecimal256Scalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256Scalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256Scalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256Scalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256ScalarClass_autoptr* = ptr GArrowDecimal256ScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256ScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256ScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowDecimal256ScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:558:1
  GArrowBaseListScalar* = struct_GArrowBaseListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  struct_GArrowBaseListScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:578:1

  GArrowBaseListScalarClass* = struct_GArrowBaseListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  struct_GArrowBaseListScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:580:8

  GArrowBaseListScalar_autoptr* = ptr GArrowBaseListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalarClass_autoptr* = ptr GArrowBaseListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowBaseListScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:578:1
  GArrowListScalar* = struct_GArrowListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  struct_GArrowListScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseListScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:591:1

  GArrowListScalarClass* = struct_GArrowListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  struct_GArrowListScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseListScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:593:8

  GArrowListScalar_autoptr* = ptr GArrowListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalarClass_autoptr* = ptr GArrowListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowListScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:591:1
  GArrowLargeListScalar* = struct_GArrowLargeListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  struct_GArrowLargeListScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseListScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:604:1

  GArrowLargeListScalarClass* = struct_GArrowLargeListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  struct_GArrowLargeListScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseListScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:609:8

  GArrowLargeListScalar_autoptr* = ptr GArrowLargeListScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalarClass_autoptr* = ptr GArrowLargeListScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowLargeListScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:604:1
  GArrowMapScalar* = struct_GArrowMapScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  struct_GArrowMapScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowBaseListScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:620:1

  GArrowMapScalarClass* = struct_GArrowMapScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  struct_GArrowMapScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowBaseListScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:622:8

  GArrowMapScalar_autoptr* = ptr GArrowMapScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalarClass_autoptr* = ptr GArrowMapScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowMapScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:620:1
  GArrowStructScalar* = struct_GArrowStructScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  struct_GArrowStructScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:633:1

  GArrowStructScalarClass* = struct_GArrowStructScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  struct_GArrowStructScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:635:8

  GArrowStructScalar_autoptr* = ptr GArrowStructScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalarClass_autoptr* = ptr GArrowStructScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowStructScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:633:1
  GArrowUnionScalar* = struct_GArrowUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  struct_GArrowUnionScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:649:1

  GArrowUnionScalarClass* = struct_GArrowUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  struct_GArrowUnionScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:651:8

  GArrowUnionScalar_autoptr* = ptr GArrowUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalarClass_autoptr* = ptr GArrowUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowUnionScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:649:1
  GArrowSparseUnionScalar* = struct_GArrowSparseUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  struct_GArrowSparseUnionScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:665:1

  GArrowSparseUnionScalarClass* = struct_GArrowSparseUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  struct_GArrowSparseUnionScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:670:8

  GArrowSparseUnionScalar_autoptr* = ptr GArrowSparseUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalarClass_autoptr* = ptr GArrowSparseUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowSparseUnionScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:665:1
  GArrowDenseUnionScalar* = struct_GArrowDenseUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  struct_GArrowDenseUnionScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowUnionScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:683:1

  GArrowDenseUnionScalarClass* = struct_GArrowDenseUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  struct_GArrowDenseUnionScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowUnionScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:688:8

  GArrowDenseUnionScalar_autoptr* = ptr GArrowDenseUnionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalarClass_autoptr* = ptr GArrowDenseUnionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowDenseUnionScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:683:1
  GArrowExtensionScalar* = struct_GArrowExtensionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  struct_GArrowExtensionScalar* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowScalar
      ## Generated based on /usr/include/arrow-glib/scalar.h:701:1

  GArrowExtensionScalarClass* = struct_GArrowExtensionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  struct_GArrowExtensionScalarClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowScalarClass
      ## Generated based on /usr/include/arrow-glib/scalar.h:703:8

  GArrowExtensionScalar_autoptr* = ptr GArrowExtensionScalar
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalar_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalar_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalar_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalarClass_autoptr* = ptr GArrowExtensionScalarClass
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalarClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalarClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GArrowExtensionScalarClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/scalar.h:701:1
  GAppInfoCreateFlags* = enum_GAppInfoCreateFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:50:3
  GConverterFlags* = enum_GConverterFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:66:3
  GConverterResult* = enum_GConverterResult
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:84:3
  GDataStreamByteOrder* = enum_GDataStreamByteOrder
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:101:3
  GDataStreamNewlineType* = enum_GDataStreamNewlineType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:118:3
  GFileAttributeType* = enum_GFileAttributeType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:147:3
  GFileAttributeInfoFlags* = enum_GFileAttributeInfoFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:162:3
  GFileAttributeStatus* = enum_GFileAttributeStatus
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:177:3
  GFileQueryInfoFlags* = enum_GFileQueryInfoFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:190:3
  GFileCreateFlags* = enum_GFileCreateFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:215:3
  GFileMeasureFlags* = enum_GFileMeasureFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:242:3
  GMountMountFlags* = enum_GMountMountFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:252:3
  GMountUnmountFlags* = enum_GMountUnmountFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:266:3
  GDriveStartFlags* = enum_GDriveStartFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:278:3
  GDriveStartStopType* = enum_GDriveStartStopType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:306:3
  GFileCopyFlags* = enum_GFileCopyFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:331:3
  GFileMonitorFlags* = enum_GFileMonitorFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:359:3
  GFileType* = enum_GFileType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:393:3
  GFilesystemPreviewType* = enum_GFilesystemPreviewType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:410:3
  GFileMonitorEvent* = enum_GFileMonitorEvent
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:448:3
  GIOErrorEnum* = enum_GIOErrorEnum
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:592:3
  GAskPasswordFlags* = enum_GAskPasswordFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:615:3
  GPasswordSave* = enum_GPasswordSave
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:633:3
  GMountOperationResult* = enum_GMountOperationResult
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:652:3
  GOutputStreamSpliceFlags* = enum_GOutputStreamSpliceFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:669:3
  GIOStreamSpliceFlags* = enum_GIOStreamSpliceFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:691:3
  GEmblemOrigin* = enum_GEmblemOrigin
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:710:3
  GResolverError* = enum_GResolverError
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:729:3
  GResolverRecordType* = enum_GResolverRecordType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:778:3
  GResourceError* = enum_GResourceError
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:793:3
  GResourceFlags* = enum_GResourceFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:808:3
  GResourceLookupFlags* = enum_GResourceLookupFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:820:3
  GSocketFamily* = enum_GSocketFamily
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:840:3
  GSocketType* = enum_GSocketType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:862:3
  GSocketMsgFlags* = enum_GSocketMsgFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:887:3
  GSocketProtocol* = enum_GSocketProtocol
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:913:3
  GZlibCompressorFormat* = enum_GZlibCompressorFormat
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:930:3
  GUnixSocketAddressType* = enum_GUnixSocketAddressType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:963:3
  GBusType* = enum_GBusType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:982:3
  GBusNameOwnerFlags* = enum_GBusNameOwnerFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1003:3
  GBusNameWatcherFlags* = enum_GBusNameWatcherFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1022:3
  GDBusProxyFlags* = enum_GDBusProxyFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1054:3
  GDBusError* = enum_GDBusError
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1211:3
  GDBusConnectionFlags* = enum_GDBusConnectionFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1248:3
  GDBusCapabilityFlags* = enum_GDBusCapabilityFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1263:3
  GDBusCallFlags* = enum_GDBusCallFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1282:3
  GDBusMessageType* = enum_GDBusMessageType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1303:3
  GDBusMessageFlags* = enum_GDBusMessageFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1324:3
  GDBusMessageHeaderField* = enum_GDBusMessageHeaderField
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1354:3
  GDBusPropertyInfoFlags* = enum_GDBusPropertyInfoFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1371:3
  GDBusSubtreeFlags* = enum_GDBusSubtreeFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1388:3
  GDBusServerFlags* = enum_GDBusServerFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1411:3
  GDBusSignalFlags* = enum_GDBusSignalFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1435:3
  GDBusSendMessageFlags* = enum_GDBusSendMessageFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1452:3
  GCredentialsType* = enum_GCredentialsType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1480:3
  GDBusMessageByteOrder* = enum_GDBusMessageByteOrder
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1495:3
  GApplicationFlags* = enum_GApplicationFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1570:3
  GTlsError* = enum_GTlsError
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1609:3
  GTlsCertificateFlags* = enum_GTlsCertificateFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1655:3
  GTlsAuthenticationMode* = enum_GTlsAuthenticationMode
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1671:3
  GTlsChannelBindingType* = enum_GTlsChannelBindingType
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1697:3
  GTlsChannelBindingError* = enum_GTlsChannelBindingError
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1730:3
  GTlsRehandshakeMode* = enum_GTlsRehandshakeMode
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1751:3
  GTlsPasswordFlags* = enum_GTlsPasswordFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1782:3
  GTlsInteractionResult* = enum_GTlsInteractionResult
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1802:3
  GDBusInterfaceSkeletonFlags* = enum_GDBusInterfaceSkeletonFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1820:3
  GDBusObjectManagerClientFlags* = enum_GDBusObjectManagerClientFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1838:3
  GTlsDatabaseVerifyFlags* = enum_GTlsDatabaseVerifyFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1850:3
  GTlsDatabaseLookupFlags* = enum_GTlsDatabaseLookupFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1867:3
  GTlsCertificateRequestFlags* = enum_GTlsCertificateRequestFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1881:3
  GTlsProtocolVersion* = enum_GTlsProtocolVersion
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1915:3
  GIOModuleScopeFlags* = enum_GIOModuleScopeFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1931:3
  GSocketClientEvent* = enum_GSocketClientEvent
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1969:3
  GSocketListenerEvent* = enum_GSocketListenerEvent
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:1992:3
  GTestDBusFlags* = enum_GTestDBusFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2004:3
  GSubprocessFlags* = enum_GSubprocessFlags
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2058:3
  GNotificationPriority* = enum_GNotificationPriority
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2084:3
  GNetworkConnectivity* = enum_GNetworkConnectivity
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2108:3
  GPollableReturn* = enum_GPollableReturn
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2132:3
  GMemoryMonitorWarningLevel* = enum_GMemoryMonitorWarningLevel
    ## Generated based on /usr/include/glib-2.0/gio/gioenums.h:2161:3
  GAppLaunchContext* = struct_GAppLaunchContext
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:34:47
  struct_GAppLaunchContext* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:301:8
    priv*: ptr GAppLaunchContextPrivate

  GAppInfo* = struct_GAppInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:35:47
  GAsyncResult* = struct_GAsyncResult
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:36:47
  GAsyncInitable* = struct_GAsyncInitable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:37:47
  GBufferedInputStream* = struct_GBufferedInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:38:47
  struct_GBufferedInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GFilterInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gbufferedinputstream.h:44:8
    priv*: ptr GBufferedInputStreamPrivate

  GBufferedOutputStream* = struct_GBufferedOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:39:47
  struct_GBufferedOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GFilterOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gbufferedoutputstream.h:44:8
    priv*: ptr GBufferedOutputStreamPrivate

  GCancellable* = struct_GCancellable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:40:47
  struct_GCancellable* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gcancellable.h:44:8
    priv*: ptr GCancellablePrivate

  GCharsetConverter* = struct_GCharsetConverter
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:41:47
  GConverter* = struct_GConverter
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:42:47
  GConverterInputStream* = struct_GConverterInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:43:47
  struct_GConverterInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GFilterInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gconverterinputstream.h:45:8
    priv*: ptr GConverterInputStreamPrivate

  GConverterOutputStream* = struct_GConverterOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:44:47
  struct_GConverterOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GFilterOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gconverteroutputstream.h:45:8
    priv*: ptr GConverterOutputStreamPrivate

  GDatagramBased* = struct_GDatagramBased
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:45:47
  GDataInputStream* = struct_GDataInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:46:47
  struct_GDataInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GBufferedInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gdatainputstream.h:44:8
    priv*: ptr GDataInputStreamPrivate

  GSimplePermission* = struct_GSimplePermission
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:47:47
  GZlibCompressor* = struct_GZlibCompressor
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:48:47
  GZlibDecompressor* = struct_GZlibDecompressor
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:49:47
  GSimpleActionGroup* = struct_GSimpleActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:51:47
  struct_GSimpleActionGroup* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsimpleactiongroup.h:49:8
    priv*: ptr GSimpleActionGroupPrivate

  GRemoteActionGroup* = struct_GRemoteActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:52:47
  GDBusActionGroup* = struct_GDBusActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:53:47
  GActionMap* = struct_GActionMap
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:54:47
  GActionGroup* = struct_GActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:55:47
  GPropertyAction* = struct_GPropertyAction
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:56:47
  GSimpleAction* = struct_GSimpleAction
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:57:47
  GAction* = struct_GAction
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:58:47
  GApplication* = struct_GApplication
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:59:47
  struct_GApplication* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gapplication.h:46:8
    priv*: ptr GApplicationPrivate

  GApplicationCommandLine* = struct_GApplicationCommandLine
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:60:47
  struct_GApplicationCommandLine* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gapplicationcommandline.h:52:8
    priv*: ptr GApplicationCommandLinePrivate

  GSettingsBackend* = struct_GSettingsBackend
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:61:47
  GSettings* = struct_GSettings
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:62:47
  struct_GSettings* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:65:8
    priv*: ptr GSettingsPrivate

  GPermission* = struct_GPermission
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:63:47
  struct_GPermission* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gpermission.h:48:8
    priv*: ptr GPermissionPrivate

  GMenuModel* = struct_GMenuModel
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:65:47
  struct_GMenuModel* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:138:8
    priv*: ptr GMenuModelPrivate

  GNotification* = struct_GNotification
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:66:47
  GDrive* = struct_GDrive
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:68:47
  GFileEnumerator* = struct_GFileEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:69:47
  struct_GFileEnumerator* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gfileenumerator.h:44:8
    priv*: ptr GFileEnumeratorPrivate

  GFileMonitor* = struct_GFileMonitor
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:70:47
  struct_GFileMonitor* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gfilemonitor.h:44:8
    priv*: ptr GFileMonitorPrivate

  GFilterInputStream* = struct_GFilterInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:71:47
  struct_GFilterInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gfilterinputstream.h:43:8
    base_stream*: ptr GInputStream

  GFilterOutputStream* = struct_GFilterOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:72:47
  struct_GFilterOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gfilteroutputstream.h:43:8
    base_stream*: ptr GOutputStream

  GFile* = struct_GFile ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:74:47
  GFileInfo* = struct_GFileInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:75:47
  GFileAttributeMatcher* = struct_GFileAttributeMatcher
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:82:47
  GFileAttributeInfo* = struct_GFileAttributeInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:83:47
  struct_GFileAttributeInfo* {.pure, inheritable, bycopy.} = object
    name*: cstring ## Generated based on /usr/include/glib-2.0/gio/gfileattribute.h:42:8
    type_field*: GFileAttributeType
    flags*: GFileAttributeInfoFlags

  GFileAttributeInfoList* = struct_GFileAttributeInfoList
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:84:47
  struct_GFileAttributeInfoList* {.pure, inheritable, bycopy.} = object
    infos*: ptr GFileAttributeInfo
      ## Generated based on /usr/include/glib-2.0/gio/gfileattribute.h:57:8
    n_infos*: cint

  GFileInputStream* = struct_GFileInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:85:47
  struct_GFileInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gfileinputstream.h:44:8
    priv*: ptr GFileInputStreamPrivate

  GFileOutputStream* = struct_GFileOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:86:47
  struct_GFileOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gfileoutputstream.h:44:8
    priv*: ptr GFileOutputStreamPrivate

  GFileIOStream* = struct_GFileIOStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:87:47
  struct_GFileIOStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GIOStream
      ## Generated based on /usr/include/glib-2.0/gio/gfileiostream.h:44:8
    priv*: ptr GFileIOStreamPrivate

  GFileIcon* = struct_GFileIcon
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:88:47
  GFilenameCompleter* = struct_GFilenameCompleter
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:89:47
  GIcon* = struct_GIcon ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:92:47
  GInetAddress* = struct_GInetAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:93:47
  struct_GInetAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/ginetaddress.h:45:8
    priv*: ptr GInetAddressPrivate

  GInetAddressMask* = struct_GInetAddressMask
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:94:47
  struct_GInetAddressMask* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/ginetaddressmask.h:42:8
    priv*: ptr GInetAddressMaskPrivate

  GInetSocketAddress* = struct_GInetSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:95:47
  struct_GInetSocketAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/ginetsocketaddress.h:45:8
    priv*: ptr GInetSocketAddressPrivate

  GNativeSocketAddress* = struct_GNativeSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:96:47
  struct_GNativeSocketAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/gnativesocketaddress.h:45:8
    priv*: ptr GNativeSocketAddressPrivate

  GInputStream* = struct_GInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:97:47
  struct_GInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/ginputstream.h:44:8
    priv*: ptr GInputStreamPrivate

  GInitable* = struct_GInitable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:98:47
  GIOModule* = struct_GIOModule
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:99:47
  GIOExtensionPoint* = struct_GIOExtensionPoint
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:100:47
  GIOExtension* = struct_GIOExtension
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:101:47
  GIOSchedulerJob* = struct_GIOSchedulerJob
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:111:47
  GIOStreamAdapter* = struct_GIOStreamAdapter
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:112:47
  GLoadableIcon* = struct_GLoadableIcon
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:113:47
  GBytesIcon* = struct_GBytesIcon
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:114:47
  GMemoryInputStream* = struct_GMemoryInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:115:47
  struct_GMemoryInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GInputStream
      ## Generated based on /usr/include/glib-2.0/gio/gmemoryinputstream.h:44:8
    priv*: ptr GMemoryInputStreamPrivate

  GMemoryOutputStream* = struct_GMemoryOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:116:47
  struct_GMemoryOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gmemoryoutputstream.h:44:8
    priv*: ptr GMemoryOutputStreamPrivate

  GMount* = struct_GMount
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:118:47
  GMountOperation* = struct_GMountOperation
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:119:47
  struct_GMountOperation* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gmountoperation.h:44:8
    priv*: ptr GMountOperationPrivate

  GNetworkAddress* = struct_GNetworkAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:120:47
  struct_GNetworkAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gnetworkaddress.h:42:8
    priv*: ptr GNetworkAddressPrivate

  GNetworkMonitor* = struct_GNetworkMonitor
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:121:47
  GNetworkService* = struct_GNetworkService
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:122:47
  struct_GNetworkService* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gnetworkservice.h:42:8
    priv*: ptr GNetworkServicePrivate

  GOutputStream* = struct_GOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:123:47
  struct_GOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/goutputstream.h:44:8
    priv*: ptr GOutputStreamPrivate

  GIOStream* = struct_GIOStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:124:47
  struct_GIOStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/giostream.h:43:8
    priv*: ptr GIOStreamPrivate

  GSimpleIOStream* = struct_GSimpleIOStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:125:47
  GPollableInputStream* = struct_GPollableInputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:126:47
  GPollableOutputStream* = struct_GPollableOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:127:47
  GResolver* = struct_GResolver
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:128:47
  struct_GResolver* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gresolver.h:43:8
    priv*: ptr GResolverPrivate

  GResource* = struct_GResource
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:130:47
  GSeekable* = struct_GSeekable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:131:47
  GSimpleAsyncResult* = struct_GSimpleAsyncResult
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:132:47
  GSocket* = struct_GSocket
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:134:47
  struct_GSocket* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocket.h:70:8
    priv*: ptr GSocketPrivate

  GSocketControlMessage* = struct_GSocketControlMessage
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:136:47
  struct_GSocketControlMessage* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:87:8
    priv*: ptr GSocketControlMessagePrivate

  GSocketClient* = struct_GSocketClient
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:137:61
  struct_GSocketClient* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocketclient.h:67:8
    priv*: ptr GSocketClientPrivate

  GSocketConnection* = struct_GSocketConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:138:61
  struct_GSocketConnection* {.pure, inheritable, bycopy.} = object
    parent_instance*: GIOStream
      ## Generated based on /usr/include/glib-2.0/gio/gsocketconnection.h:67:8
    priv*: ptr GSocketConnectionPrivate

  GSocketListener* = struct_GSocketListener
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:139:61
  struct_GSocketListener* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocketlistener.h:78:8
    priv*: ptr GSocketListenerPrivate

  GSocketService* = struct_GSocketService
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:140:61
  struct_GSocketService* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketListener
      ## Generated based on /usr/include/glib-2.0/gio/gsocketservice.h:74:8
    priv*: ptr GSocketServicePrivate

  GSocketAddress* = struct_GSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:141:47
  struct_GSocketAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocketaddress.h:44:8

  GSocketAddressEnumerator* = struct_GSocketAddressEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:142:47
  struct_GSocketAddressEnumerator* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:41:8

  GSocketConnectable* = struct_GSocketConnectable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:143:47
  GSrvTarget* = struct_GSrvTarget
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:144:47
  GTask* = struct_GTask ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:145:47
  GTcpConnection* = struct_GTcpConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:146:61
  struct_GTcpConnection* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketConnection
      ## Generated based on /usr/include/glib-2.0/gio/gtcpconnection.h:54:8
    priv*: ptr GTcpConnectionPrivate

  GTcpWrapperConnection* = struct_GTcpWrapperConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:147:61
  struct_GTcpWrapperConnection* {.pure, inheritable, bycopy.} = object
    parent_instance*: GTcpConnection
      ## Generated based on /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:54:8
    priv*: ptr GTcpWrapperConnectionPrivate

  GThreadedSocketService* = struct_GThreadedSocketService
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:148:61
  struct_GThreadedSocketService* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketService
      ## Generated based on /usr/include/glib-2.0/gio/gthreadedsocketservice.h:70:8
    priv*: ptr GThreadedSocketServicePrivate

  GDtlsConnection* = struct_GDtlsConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:149:47
  GDtlsClientConnection* = struct_GDtlsClientConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:150:47
  GDtlsServerConnection* = struct_GDtlsServerConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:151:47
  GThemedIcon* = struct_GThemedIcon
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:152:47
  GTlsCertificate* = struct_GTlsCertificate
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:153:47
  struct_GTlsCertificate* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gtlscertificate.h:42:8
    priv*: ptr GTlsCertificatePrivate

  GTlsClientConnection* = struct_GTlsClientConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:154:47
  GTlsConnection* = struct_GTlsConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:155:47
  struct_GTlsConnection* {.pure, inheritable, bycopy.} = object
    parent_instance*: GIOStream
      ## Generated based on /usr/include/glib-2.0/gio/gtlsconnection.h:42:8
    priv*: ptr GTlsConnectionPrivate

  GTlsDatabase* = struct_GTlsDatabase
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:156:47
  struct_GTlsDatabase* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:47:8
    priv*: ptr GTlsDatabasePrivate

  GTlsFileDatabase* = struct_GTlsFileDatabase
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:157:47
  GTlsInteraction* = struct_GTlsInteraction
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:158:47
  struct_GTlsInteraction* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gtlsinteraction.h:44:8
    priv*: ptr GTlsInteractionPrivate

  GTlsPassword* = struct_GTlsPassword
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:159:47
  struct_GTlsPassword* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gtlspassword.h:44:8
    priv*: ptr GTlsPasswordPrivate

  GTlsServerConnection* = struct_GTlsServerConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:160:47
  GVfs* = struct_GVfs ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:161:47
  struct_GVfs* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:73:8

  GProxyResolver* = struct_GProxyResolver
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:163:47
  GProxy* = struct_GProxy
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:164:32
  GProxyAddress* = struct_GProxyAddress
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:165:38
  struct_GProxyAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GInetSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/gproxyaddress.h:44:8
    priv*: ptr GProxyAddressPrivate

  GProxyAddressEnumerator* = struct_GProxyAddressEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:166:47
  struct_GProxyAddressEnumerator* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketAddressEnumerator
      ## Generated based on /usr/include/glib-2.0/gio/gproxyaddressenumerator.h:44:8
    priv*: ptr GProxyAddressEnumeratorPrivate

  GVolume* = struct_GVolume
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:168:47
  GVolumeMonitor* = struct_GVolumeMonitor
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:169:47
  struct_GVolumeMonitor* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gvolumemonitor.h:54:8
    priv*: gpointer

  GAsyncReadyCallback* =
    proc(a0: ptr GObject, a1: ptr GAsyncResult, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:190:16
  GFileProgressCallback* = proc(a0: goffset, a1: goffset, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:204:16
  GFileReadMoreCallback* =
    proc(a0: cstring, a1: goffset, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:221:21
  GFileMeasureProgressCallback* = proc(
    a0: gboolean, a1: guint64, a2: guint64, a3: guint64, a4: gpointer
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:263:17
  GIOSchedulerJobFunc* = proc(
    a0: ptr GIOSchedulerJob, a1: ptr GCancellable, a2: gpointer
  ): gboolean {.cdecl.} ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:285:20
  GSimpleAsyncThreadFunc* = proc(
    a0: ptr GSimpleAsyncResult, a1: ptr GObject, a2: ptr GCancellable
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:298:16
  GSocketSourceFunc* =
    proc(a0: ptr GSocket, a1: GIOCondition, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:315:20
  GDatagramBasedSourceFunc* =
    proc(a0: ptr GDatagramBased, a1: GIOCondition, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:333:20
  GInputVector* = struct_GInputVector
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:349:30
  struct_GInputVector* {.pure, inheritable, bycopy.} = object
    buffer*: gpointer ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:351:8
    size*: gsize

  GInputMessage* = struct_GInputMessage
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:395:31
  struct_GInputMessage* {.pure, inheritable, bycopy.} = object
    address*: ptr ptr GSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:397:8
    vectors*: ptr GInputVector
    num_vectors*: guint
    bytes_received*: gsize
    flags*: gint
    control_messages*: ptr ptr ptr GSocketControlMessage
    num_control_messages*: ptr guint

  GOutputVector* = struct_GOutputVector
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:422:31
  struct_GOutputVector* {.pure, inheritable, bycopy.} = object
    buffer*: gconstpointer
      ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:424:8
    size*: gsize

  GOutputMessage* = struct_GOutputMessage
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:450:32
  struct_GOutputMessage* {.pure, inheritable, bycopy.} = object
    address*: ptr GSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:452:8
    vectors*: ptr GOutputVector
    num_vectors*: guint
    bytes_sent*: guint
    control_messages*: ptr ptr GSocketControlMessage
    num_control_messages*: guint

  GCredentials* = struct_GCredentials
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:464:47
  GUnixCredentialsMessage* = struct_GUnixCredentialsMessage
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:465:47
  struct_GUnixCredentialsMessage* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketControlMessage
      ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:61:8
    priv*: ptr GUnixCredentialsMessagePrivate

  GUnixFDList* = struct_GUnixFDList
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:466:47
  struct_GUnixFDList* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:60:8
    priv*: ptr GUnixFDListPrivate

  GDBusMessage* = struct_GDBusMessage
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:467:47
  GDBusConnection* = struct_GDBusConnection
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:468:47
  GDBusProxy* = struct_GDBusProxy
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:469:47
  struct_GDBusProxy* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusproxy.h:45:8
    priv*: ptr GDBusProxyPrivate

  GDBusMethodInvocation* = struct_GDBusMethodInvocation
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:470:47
  GDBusServer* = struct_GDBusServer
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:471:47
  GDBusAuthObserver* = struct_GDBusAuthObserver
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:472:47
  GDBusErrorEntry* = struct_GDBusErrorEntry
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:473:47
  struct_GDBusErrorEntry* {.pure, inheritable, bycopy.} = object
    error_code*: gint ## Generated based on /usr/include/glib-2.0/gio/gdbuserror.h:70:8
    dbus_error_name*: cstring

  GDBusInterfaceVTable* = struct_GDBusInterfaceVTable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:474:47
  struct_GDBusInterfaceVTable* {.pure, inheritable, bycopy.} = object
    method_call*: GDBusInterfaceMethodCallFunc
      ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:402:8
    get_property*: GDBusInterfaceGetPropertyFunc
    set_property*: GDBusInterfaceSetPropertyFunc
    padding*: array[8'i64, gpointer]

  GDBusSubtreeVTable* = struct_GDBusSubtreeVTable
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:475:47
  struct_GDBusSubtreeVTable* {.pure, inheritable, bycopy.} = object
    enumerate*: GDBusSubtreeEnumerateFunc
      ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:548:8
    introspect*: GDBusSubtreeIntrospectFunc
    dispatch*: GDBusSubtreeDispatchFunc
    padding*: array[8'i64, gpointer]

  GDBusAnnotationInfo* = struct_GDBusAnnotationInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:476:47
  struct_GDBusAnnotationInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:45:8
    key*: cstring
    value*: cstring
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusArgInfo* = struct_GDBusArgInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:477:47
  struct_GDBusArgInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:65:8
    name*: cstring
    signature*: cstring
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusMethodInfo* = struct_GDBusMethodInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:478:47
  struct_GDBusMethodInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:86:8
    name*: cstring
    in_args*: ptr ptr GDBusArgInfo
    out_args*: ptr ptr GDBusArgInfo
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusSignalInfo* = struct_GDBusSignalInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:479:47
  struct_GDBusSignalInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:107:8
    name*: cstring
    args*: ptr ptr GDBusArgInfo
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusPropertyInfo* = struct_GDBusPropertyInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:480:47
  struct_GDBusPropertyInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:128:8
    name*: cstring
    signature*: cstring
    flags*: GDBusPropertyInfoFlags
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusInterfaceInfo* = struct_GDBusInterfaceInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:481:47
  struct_GDBusInterfaceInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:151:8
    name*: cstring
    methods*: ptr ptr GDBusMethodInfo
    signals*: ptr ptr GDBusSignalInfo
    properties*: ptr ptr GDBusPropertyInfo
    annotations*: ptr ptr GDBusAnnotationInfo

  GDBusNodeInfo* = struct_GDBusNodeInfo
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:482:47
  struct_GDBusNodeInfo* {.pure, inheritable, bycopy.} = object
    ref_count*: gint
      ## Generated based on /usr/include/glib-2.0/gio/gdbusintrospection.h:174:8
    path*: cstring
    interfaces*: ptr ptr GDBusInterfaceInfo
    nodes*: ptr ptr GDBusNodeInfo
    annotations*: ptr ptr GDBusAnnotationInfo

  GCancellableSourceFunc* = proc(a0: ptr GCancellable, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:496:20
  GPollableSourceFunc* = proc(a0: ptr GObject, a1: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:512:20
  GDBusInterface* = struct_GDBusInterface
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:515:45
  GDBusInterfaceSkeleton* = struct_GDBusInterfaceSkeleton
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:516:45
  struct_GDBusInterfaceSkeleton* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:40:8
    priv*: ptr GDBusInterfaceSkeletonPrivate

  GDBusObject* = struct_GDBusObject
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:517:45
  GDBusObjectSkeleton* = struct_GDBusObjectSkeleton
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:518:45
  struct_GDBusObjectSkeleton* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:40:8
    priv*: ptr GDBusObjectSkeletonPrivate

  GDBusObjectProxy* = struct_GDBusObjectProxy
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:519:45
  struct_GDBusObjectProxy* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectproxy.h:40:8
    priv*: ptr GDBusObjectProxyPrivate

  GDBusObjectManager* = struct_GDBusObjectManager
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:520:45
  GDBusObjectManagerClient* = struct_GDBusObjectManagerClient
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:521:45
  struct_GDBusObjectManagerClient* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:40:8
    priv*: ptr GDBusObjectManagerClientPrivate

  GDBusObjectManagerServer* = struct_GDBusObjectManagerServer
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:522:45
  struct_GDBusObjectManagerServer* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:40:8
    priv*: ptr GDBusObjectManagerServerPrivate

  GDBusProxyTypeFunc* = proc(
    a0: ptr GDBusObjectManagerClient, a1: cstring, a2: cstring, a3: gpointer
  ): GType {.cdecl.} ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:545:17
  GTestDBus* = struct_GTestDBus
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:550:27
  GSubprocess* = struct_GSubprocess
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:552:47
  GSubprocessLauncher* = struct_GSubprocessLauncher
    ## Generated based on /usr/include/glib-2.0/gio/giotypes.h:553:47
  GActionInterface* = struct_GActionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gaction.h:40:61
  struct_GActionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gaction.h:42:8
    get_name*: proc(a0: ptr GAction): cstring {.cdecl.}
    get_parameter_type*: proc(a0: ptr GAction): ptr GVariantType {.cdecl.}
    get_state_type*: proc(a0: ptr GAction): ptr GVariantType {.cdecl.}
    get_state_hint*: proc(a0: ptr GAction): ptr GVariant {.cdecl.}
    get_enabled*: proc(a0: ptr GAction): gboolean {.cdecl.}
    get_state*: proc(a0: ptr GAction): ptr GVariant {.cdecl.}
    change_state*: proc(a0: ptr GAction, a1: ptr GVariant): void {.cdecl.}
    activate*: proc(a0: ptr GAction, a1: ptr GVariant): void {.cdecl.}

  GActionGroupInterface* = struct_GActionGroupInterface
    ## Generated based on /usr/include/glib-2.0/gio/gactiongroup.h:42:61
  struct_GActionGroupInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gactiongroup.h:44:8
    has_action*: proc(a0: ptr GActionGroup, a1: cstring): gboolean {.cdecl.}
    list_actions*: proc(a0: ptr GActionGroup): ptr cstring {.cdecl.}
    get_action_enabled*: proc(a0: ptr GActionGroup, a1: cstring): gboolean {.cdecl.}
    get_action_parameter_type*:
      proc(a0: ptr GActionGroup, a1: cstring): ptr GVariantType {.cdecl.}
    get_action_state_type*:
      proc(a0: ptr GActionGroup, a1: cstring): ptr GVariantType {.cdecl.}
    get_action_state_hint*:
      proc(a0: ptr GActionGroup, a1: cstring): ptr GVariant {.cdecl.}
    get_action_state*: proc(a0: ptr GActionGroup, a1: cstring): ptr GVariant {.cdecl.}
    change_action_state*:
      proc(a0: ptr GActionGroup, a1: cstring, a2: ptr GVariant): void {.cdecl.}
    activate_action*:
      proc(a0: ptr GActionGroup, a1: cstring, a2: ptr GVariant): void {.cdecl.}
    action_added*: proc(a0: ptr GActionGroup, a1: cstring): void {.cdecl.}
    action_removed*: proc(a0: ptr GActionGroup, a1: cstring): void {.cdecl.}
    action_enabled_changed*:
      proc(a0: ptr GActionGroup, a1: cstring, a2: gboolean): void {.cdecl.}
    action_state_changed*:
      proc(a0: ptr GActionGroup, a1: cstring, a2: ptr GVariant): void {.cdecl.}
    query_action*: proc(
      a0: ptr GActionGroup,
      a1: cstring,
      a2: ptr gboolean,
      a3: ptr ptr GVariantType,
      a4: ptr ptr GVariantType,
      a5: ptr ptr GVariant,
      a6: ptr ptr GVariant,
    ): gboolean {.cdecl.}

  GActionMapInterface* = struct_GActionMapInterface
    ## Generated based on /usr/include/glib-2.0/gio/gactionmap.h:42:61
  struct_GActionMapInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gactionmap.h:45:8
    lookup_action*: proc(a0: ptr GActionMap, a1: cstring): ptr GAction {.cdecl.}
    add_action*: proc(a0: ptr GActionMap, a1: ptr GAction): void {.cdecl.}
    remove_action*: proc(a0: ptr GActionMap, a1: cstring): void {.cdecl.}

  GActionEntry* = struct_GActionEntry
    ## Generated based on /usr/include/glib-2.0/gio/gactionmap.h:43:61
  struct_GActionEntry* {.pure, inheritable, bycopy.} = object
    name*: cstring ## Generated based on /usr/include/glib-2.0/gio/gactionmap.h:57:8
    activate*:
      proc(a0: ptr GSimpleAction, a1: ptr GVariant, a2: gpointer): void {.cdecl.}
    parameter_type*: cstring
    state*: cstring
    change_state*:
      proc(a0: ptr GSimpleAction, a1: ptr GVariant, a2: gpointer): void {.cdecl.}
    padding*: array[3'i64, gsize]

  GAppLaunchContextClass* = struct_GAppLaunchContextClass
    ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:46:42
  struct_GAppLaunchContextClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:309:8
    get_display*: proc(
      a0: ptr GAppLaunchContext, a1: ptr GAppInfo, a2: ptr GList
    ): cstring {.cdecl.}
    get_startup_notify_id*: proc(
      a0: ptr GAppLaunchContext, a1: ptr GAppInfo, a2: ptr GList
    ): cstring {.cdecl.}
    launch_failed*: proc(a0: ptr GAppLaunchContext, a1: cstring): void {.cdecl.}
    launched*: proc(a0: ptr GAppLaunchContext, a1: ptr GAppInfo, a2: ptr GVariant): void {.
      cdecl
    .}
    launch_started*: proc(
      a0: ptr GAppLaunchContext, a1: ptr GAppInfo, a2: ptr GVariant
    ): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}

  GAppLaunchContextPrivate* = struct_GAppLaunchContextPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:47:42
  GAppInfoIface* = struct_GAppInfoIface
    ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:96:34
  struct_GAppInfoIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:98:8
    dup*: proc(a0: ptr GAppInfo): ptr GAppInfo {.cdecl.}
    equal*: proc(a0: ptr GAppInfo, a1: ptr GAppInfo): gboolean {.cdecl.}
    get_id*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    get_name*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    get_description*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    get_executable*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    get_icon*: proc(a0: ptr GAppInfo): ptr GIcon {.cdecl.}
    launch*: proc(
      a0: ptr GAppInfo, a1: ptr GList, a2: ptr GAppLaunchContext, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    supports_uris*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    supports_files*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    launch_uris*: proc(
      a0: ptr GAppInfo, a1: ptr GList, a2: ptr GAppLaunchContext, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    should_show*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    set_as_default_for_type*:
      proc(a0: ptr GAppInfo, a1: cstring, a2: ptr ptr GError): gboolean {.cdecl.}
    set_as_default_for_extension*:
      proc(a0: ptr GAppInfo, a1: cstring, a2: ptr ptr GError): gboolean {.cdecl.}
    add_supports_type*:
      proc(a0: ptr GAppInfo, a1: cstring, a2: ptr ptr GError): gboolean {.cdecl.}
    can_remove_supports_type*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    remove_supports_type*:
      proc(a0: ptr GAppInfo, a1: cstring, a2: ptr ptr GError): gboolean {.cdecl.}
    can_delete*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    do_delete*: proc(a0: ptr GAppInfo): gboolean {.cdecl.}
    get_commandline*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    get_display_name*: proc(a0: ptr GAppInfo): cstring {.cdecl.}
    set_as_last_used_for_type*:
      proc(a0: ptr GAppInfo, a1: cstring, a2: ptr ptr GError): gboolean {.cdecl.}
    get_supported_types*: proc(a0: ptr GAppInfo): ptr cstring {.cdecl.}
    launch_uris_async*: proc(
      a0: ptr GAppInfo,
      a1: ptr GList,
      a2: ptr GAppLaunchContext,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    launch_uris_finish*: proc(
      a0: ptr GAppInfo, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}

  GAppInfoMonitor* = struct_GAppInfoMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gappinfo.h:367:61
  GApplicationPrivate* = struct_GApplicationPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gapplication.h:43:61
  GApplicationClass* = struct_GApplicationClass
    ## Generated based on /usr/include/glib-2.0/gio/gapplication.h:44:61
  struct_GApplicationClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gapplication.h:54:8
    startup*: proc(a0: ptr GApplication): void {.cdecl.}
    activate*: proc(a0: ptr GApplication): void {.cdecl.}
    open*: proc(a0: ptr GApplication, a1: ptr ptr GFile, a2: gint, a3: cstring): void {.
      cdecl
    .}
    command_line*:
      proc(a0: ptr GApplication, a1: ptr GApplicationCommandLine): cint {.cdecl.}
    local_command_line*:
      proc(a0: ptr GApplication, a1: ptr ptr cstring, a2: ptr cint): gboolean {.cdecl.}
    before_emit*: proc(a0: ptr GApplication, a1: ptr GVariant): void {.cdecl.}
    after_emit*: proc(a0: ptr GApplication, a1: ptr GVariant): void {.cdecl.}
    add_platform_data*:
      proc(a0: ptr GApplication, a1: ptr GVariantBuilder): void {.cdecl.}
    quit_mainloop*: proc(a0: ptr GApplication): void {.cdecl.}
    run_mainloop*: proc(a0: ptr GApplication): void {.cdecl.}
    shutdown*: proc(a0: ptr GApplication): void {.cdecl.}
    dbus_register*: proc(
      a0: ptr GApplication, a1: ptr GDBusConnection, a2: cstring, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    dbus_unregister*:
      proc(a0: ptr GApplication, a1: ptr GDBusConnection, a2: cstring): void {.cdecl.}
    handle_local_options*:
      proc(a0: ptr GApplication, a1: ptr GVariantDict): gint {.cdecl.}
    name_lost*: proc(a0: ptr GApplication): gboolean {.cdecl.}
    padding*: array[7'i64, gpointer]

  GApplicationCommandLinePrivate* = struct_GApplicationCommandLinePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gapplicationcommandline.h:49:62
  GApplicationCommandLineClass* = struct_GApplicationCommandLineClass
    ## Generated based on /usr/include/glib-2.0/gio/gapplicationcommandline.h:50:62
  struct_GApplicationCommandLineClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gapplicationcommandline.h:60:8
    print_literal*: proc(a0: ptr GApplicationCommandLine, a1: cstring): void {.cdecl.}
    printerr_literal*:
      proc(a0: ptr GApplicationCommandLine, a1: cstring): void {.cdecl.}
    get_stdin*: proc(a0: ptr GApplicationCommandLine): ptr GInputStream {.cdecl.}
    done*: proc(a0: ptr GApplicationCommandLine): void {.cdecl.}
    padding*: array[10'i64, gpointer]

  GInitableIface* = struct_GInitableIface
    ## Generated based on /usr/include/glib-2.0/gio/ginitable.h:40:32
  struct_GInitableIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/ginitable.h:52:8
    init*: proc(a0: ptr GInitable, a1: ptr GCancellable, a2: ptr ptr GError): gboolean {.
      cdecl
    .}

  GAsyncInitableIface* = struct_GAsyncInitableIface
    ## Generated based on /usr/include/glib-2.0/gio/gasyncinitable.h:41:37
  struct_GAsyncInitableIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gasyncinitable.h:54:8
    init_async*: proc(
      a0: ptr GAsyncInitable,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    init_finish*: proc(
      a0: ptr GAsyncInitable, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}

  GAsyncResultIface* = struct_GAsyncResultIface
    ## Generated based on /usr/include/glib-2.0/gio/gasyncresult.h:39:38
  struct_GAsyncResultIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gasyncresult.h:51:8
    get_user_data*: proc(a0: ptr GAsyncResult): gpointer {.cdecl.}
    get_source_object*: proc(a0: ptr GAsyncResult): ptr GObject {.cdecl.}
    is_tagged*: proc(a0: ptr GAsyncResult, a1: gpointer): gboolean {.cdecl.}

  GInputStreamClass* = struct_GInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/ginputstream.h:41:38
  struct_GInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/ginputstream.h:52:8
    read_fn*: proc(
      a0: ptr GInputStream,
      a1: pointer,
      a2: gsize,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gssize {.cdecl.}
    skip*: proc(
      a0: ptr GInputStream, a1: gsize, a2: ptr GCancellable, a3: ptr ptr GError
    ): gssize {.cdecl.}
    close_fn*: proc(
      a0: ptr GInputStream, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    read_async*: proc(
      a0: ptr GInputStream,
      a1: pointer,
      a2: gsize,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    read_finish*: proc(
      a0: ptr GInputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gssize {.cdecl.}
    skip_async*: proc(
      a0: ptr GInputStream,
      a1: gsize,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    skip_finish*: proc(
      a0: ptr GInputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gssize {.cdecl.}
    close_async*: proc(
      a0: ptr GInputStream,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    close_finish*: proc(
      a0: ptr GInputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GInputStreamPrivate* = struct_GInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/ginputstream.h:42:38
  GFilterInputStreamClass* = struct_GFilterInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gfilterinputstream.h:41:44
  struct_GFilterInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gfilterinputstream.h:51:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}

  GBufferedInputStreamClass* = struct_GBufferedInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gbufferedinputstream.h:41:46
  struct_GBufferedInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GFilterInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gbufferedinputstream.h:52:8
    fill*: proc(
      a0: ptr GBufferedInputStream, a1: gssize, a2: ptr GCancellable, a3: ptr ptr GError
    ): gssize {.cdecl.}
    fill_async*: proc(
      a0: ptr GBufferedInputStream,
      a1: gssize,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    fill_finish*: proc(
      a0: ptr GBufferedInputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gssize {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GBufferedInputStreamPrivate* = struct_GBufferedInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gbufferedinputstream.h:42:46
  GOutputStreamClass* = struct_GOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/goutputstream.h:41:39
  struct_GOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/goutputstream.h:53:8
    write_fn*: proc(
      a0: ptr GOutputStream,
      a1: pointer,
      a2: gsize,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gssize {.cdecl.}
    splice*: proc(
      a0: ptr GOutputStream,
      a1: ptr GInputStream,
      a2: GOutputStreamSpliceFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gssize {.cdecl.}
    flush*: proc(
      a0: ptr GOutputStream, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    close_fn*: proc(
      a0: ptr GOutputStream, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    write_async*: proc(
      a0: ptr GOutputStream,
      a1: pointer,
      a2: gsize,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    write_finish*: proc(
      a0: ptr GOutputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gssize {.cdecl.}
    splice_async*: proc(
      a0: ptr GOutputStream,
      a1: ptr GInputStream,
      a2: GOutputStreamSpliceFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    splice_finish*: proc(
      a0: ptr GOutputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gssize {.cdecl.}
    flush_async*: proc(
      a0: ptr GOutputStream,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    flush_finish*: proc(
      a0: ptr GOutputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    close_async*: proc(
      a0: ptr GOutputStream,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    close_finish*: proc(
      a0: ptr GOutputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    writev_fn*: proc(
      a0: ptr GOutputStream,
      a1: ptr GOutputVector,
      a2: gsize,
      a3: ptr gsize,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): gboolean {.cdecl.}
    writev_async*: proc(
      a0: ptr GOutputStream,
      a1: ptr GOutputVector,
      a2: gsize,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    writev_finish*: proc(
      a0: ptr GOutputStream, a1: ptr GAsyncResult, a2: ptr gsize, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}
    internal_g_reserved8*: proc(): void {.cdecl.}

  GOutputStreamPrivate* = struct_GOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/goutputstream.h:42:39
  GFilterOutputStreamClass* = struct_GFilterOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gfilteroutputstream.h:41:45
  struct_GFilterOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gfilteroutputstream.h:51:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}

  GBufferedOutputStreamClass* = struct_GBufferedOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gbufferedoutputstream.h:41:47
  struct_GBufferedOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GFilterOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gbufferedoutputstream.h:52:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}

  GBufferedOutputStreamPrivate* = struct_GBufferedOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gbufferedoutputstream.h:42:47
  GCancellableClass* = struct_GCancellableClass
    ## Generated based on /usr/include/glib-2.0/gio/gcancellable.h:41:37
  struct_GCancellableClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gcancellable.h:52:8
    cancelled*: proc(a0: ptr GCancellable): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GCancellablePrivate* = struct_GCancellablePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gcancellable.h:42:37
  GConverterIface* = struct_GConverterIface
    ## Generated based on /usr/include/glib-2.0/gio/gconverter.h:39:35
  struct_GConverterIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gconverter.h:53:8
    convert*: proc(
      a0: ptr GConverter,
      a1: pointer,
      a2: gsize,
      a3: pointer,
      a4: gsize,
      a5: GConverterFlags,
      a6: ptr gsize,
      a7: ptr gsize,
      a8: ptr ptr GError,
    ): GConverterResult {.cdecl.}
    reset*: proc(a0: ptr GConverter): void {.cdecl.}

  GCharsetConverterClass* = struct_GCharsetConverterClass
    ## Generated based on /usr/include/glib-2.0/gio/gcharsetconverter.h:41:42
  struct_GCharsetConverterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gcharsetconverter.h:43:8

  GConverterInputStreamClass* = struct_GConverterInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gconverterinputstream.h:42:47
  struct_GConverterInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GFilterInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gconverterinputstream.h:53:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GConverterInputStreamPrivate* = struct_GConverterInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gconverterinputstream.h:43:47
  GConverterOutputStreamClass* = struct_GConverterOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gconverteroutputstream.h:42:48
  struct_GConverterOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GFilterOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gconverteroutputstream.h:53:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GConverterOutputStreamPrivate* = struct_GConverterOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gconverteroutputstream.h:43:48
  GCredentialsClass* = struct_GCredentialsClass
    ## Generated based on /usr/include/glib-2.0/gio/gcredentials.h:47:37
  pid_t* = compiler_pid_t ## Generated based on /usr/include/time.h:54:17
  uid_t* = compiler_uid_t ## Generated based on /usr/include/sys/types.h:79:17
  GDatagramBasedInterface* = struct_GDatagramBasedInterface
    ## Generated based on /usr/include/glib-2.0/gio/gdatagrambased.h:44:41
  struct_GDatagramBasedInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdatagrambased.h:64:8
    receive_messages*: proc(
      a0: ptr GDatagramBased,
      a1: ptr GInputMessage,
      a2: guint,
      a3: gint,
      a4: gint64,
      a5: ptr GCancellable,
      a6: ptr ptr GError,
    ): gint {.cdecl.}
    send_messages*: proc(
      a0: ptr GDatagramBased,
      a1: ptr GOutputMessage,
      a2: guint,
      a3: gint,
      a4: gint64,
      a5: ptr GCancellable,
      a6: ptr ptr GError,
    ): gint {.cdecl.}
    create_source*: proc(
      a0: ptr GDatagramBased, a1: GIOCondition, a2: ptr GCancellable
    ): ptr GSource {.cdecl.}
    condition_check*:
      proc(a0: ptr GDatagramBased, a1: GIOCondition): GIOCondition {.cdecl.}
    condition_wait*: proc(
      a0: ptr GDatagramBased,
      a1: GIOCondition,
      a2: gint64,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}

  GDataInputStreamClass* = struct_GDataInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gdatainputstream.h:41:42
  struct_GDataInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GBufferedInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gdatainputstream.h:52:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GDataInputStreamPrivate* = struct_GDataInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdatainputstream.h:42:42
  GDataOutputStream* = struct_GDataOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gdataoutputstream.h:41:43
  struct_GDataOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GFilterOutputStream
      ## Generated based on /usr/include/glib-2.0/gio/gdataoutputstream.h:45:8
    priv*: ptr GDataOutputStreamPrivate

  GDataOutputStreamClass* = struct_GDataOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gdataoutputstream.h:42:43
  struct_GDataOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GFilterOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gdataoutputstream.h:53:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GDataOutputStreamPrivate* = struct_GDataOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdataoutputstream.h:43:43
  GDBusInterfaceMethodCallFunc* = proc(
    a0: ptr GDBusConnection,
    a1: cstring,
    a2: cstring,
    a3: cstring,
    a4: cstring,
    a5: ptr GVariant,
    a6: ptr GDBusMethodInvocation,
    a7: gpointer,
  ): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:289:16
  GDBusInterfaceGetPropertyFunc* = proc(
    a0: ptr GDBusConnection,
    a1: cstring,
    a2: cstring,
    a3: cstring,
    a4: cstring,
    a5: ptr ptr GError,
    a6: gpointer,
  ): ptr GVariant {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:317:21
  GDBusInterfaceSetPropertyFunc* = proc(
    a0: ptr GDBusConnection,
    a1: cstring,
    a2: cstring,
    a3: cstring,
    a4: cstring,
    a5: ptr GVariant,
    a6: ptr ptr GError,
    a7: gpointer,
  ): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:343:21
  GDBusSubtreeEnumerateFunc* = proc(
    a0: ptr GDBusConnection, a1: cstring, a2: cstring, a3: gpointer
  ): ptr cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:469:19
  GDBusSubtreeIntrospectFunc* = proc(
    a0: ptr GDBusConnection, a1: cstring, a2: cstring, a3: cstring, a4: gpointer
  ): ptr ptr GDBusInterfaceInfo {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:505:33
  GDBusSubtreeDispatchFunc* = proc(
    a0: ptr GDBusConnection,
    a1: cstring,
    a2: cstring,
    a3: cstring,
    a4: cstring,
    a5: ptr gpointer,
    a6: gpointer,
  ): ptr GDBusInterfaceVTable {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:530:40
  GDBusSignalCallback* = proc(
    a0: ptr GDBusConnection,
    a1: cstring,
    a2: cstring,
    a3: cstring,
    a4: cstring,
    a5: ptr GVariant,
    a6: gpointer,
  ): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:591:16
  GDBusMessageFilterFunction* = proc(
    a0: ptr GDBusConnection, a1: ptr GDBusMessage, a2: gboolean, a3: gpointer
  ): ptr GDBusMessage {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusconnection.h:731:25
  GDBusInterfaceIface* = struct_GDBusInterfaceIface
    ## Generated based on /usr/include/glib-2.0/gio/gdbusinterface.h:35:37
  struct_GDBusInterfaceIface* {.pure, inheritable, bycopy.} = object
    parent_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdbusinterface.h:49:8
    get_info*: proc(a0: ptr GDBusInterface): ptr GDBusInterfaceInfo {.cdecl.}
    get_object*: proc(a0: ptr GDBusInterface): ptr GDBusObject {.cdecl.}
    set_object*: proc(a0: ptr GDBusInterface, a1: ptr GDBusObject): void {.cdecl.}
    dup_object*: proc(a0: ptr GDBusInterface): ptr GDBusObject {.cdecl.}

  GDBusInterfaceSkeletonClass* = struct_GDBusInterfaceSkeletonClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:37:47
  struct_GDBusInterfaceSkeletonClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:60:8
    get_info*: proc(a0: ptr GDBusInterfaceSkeleton): ptr GDBusInterfaceInfo {.cdecl.}
    get_vtable*:
      proc(a0: ptr GDBusInterfaceSkeleton): ptr GDBusInterfaceVTable {.cdecl.}
    get_properties*: proc(a0: ptr GDBusInterfaceSkeleton): ptr GVariant {.cdecl.}
    flush*: proc(a0: ptr GDBusInterfaceSkeleton): void {.cdecl.}
    vfunc_padding*: array[8'i64, gpointer]
    g_authorize_method*: proc(
      a0: ptr GDBusInterfaceSkeleton, a1: ptr GDBusMethodInvocation
    ): gboolean {.cdecl.}
    signal_padding*: array[8'i64, gpointer]

  GDBusInterfaceSkeletonPrivate* = struct_GDBusInterfaceSkeletonPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusinterfaceskeleton.h:38:47
  GDBusMenuModel* = struct_GDBusMenuModel
    ## Generated based on /usr/include/glib-2.0/gio/gdbusmenumodel.h:35:32
  GBusAcquiredCallback* =
    proc(a0: ptr GDBusConnection, a1: cstring, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusnameowning.h:44:16
  GBusNameAcquiredCallback* =
    proc(a0: ptr GDBusConnection, a1: cstring, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusnameowning.h:59:16
  GBusNameLostCallback* =
    proc(a0: ptr GDBusConnection, a1: cstring, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusnameowning.h:75:16
  GBusNameAppearedCallback* = proc(
    a0: ptr GDBusConnection, a1: cstring, a2: cstring, a3: gpointer
  ): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusnamewatching.h:45:16
  GBusNameVanishedCallback* =
    proc(a0: ptr GDBusConnection, a1: cstring, a2: gpointer): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gdbusnamewatching.h:65:16
  GDBusObjectIface* = struct_GDBusObjectIface
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobject.h:35:34
  struct_GDBusObjectIface* {.pure, inheritable, bycopy.} = object
    parent_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobject.h:50:8
    get_object_path*: proc(a0: ptr GDBusObject): cstring {.cdecl.}
    get_interfaces*: proc(a0: ptr GDBusObject): ptr GList {.cdecl.}
    get_interface*: proc(a0: ptr GDBusObject, a1: cstring): ptr GDBusInterface {.cdecl.}
    interface_added*: proc(a0: ptr GDBusObject, a1: ptr GDBusInterface): void {.cdecl.}
    interface_removed*:
      proc(a0: ptr GDBusObject, a1: ptr GDBusInterface): void {.cdecl.}

  GDBusObjectManagerIface* = struct_GDBusObjectManagerIface
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanager.h:35:41
  struct_GDBusObjectManagerIface* {.pure, inheritable, bycopy.} = object
    parent_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanager.h:53:8
    get_object_path*: proc(a0: ptr GDBusObjectManager): cstring {.cdecl.}
    get_objects*: proc(a0: ptr GDBusObjectManager): ptr GList {.cdecl.}
    get_object*:
      proc(a0: ptr GDBusObjectManager, a1: cstring): ptr GDBusObject {.cdecl.}
    get_interface*: proc(
      a0: ptr GDBusObjectManager, a1: cstring, a2: cstring
    ): ptr GDBusInterface {.cdecl.}
    object_added*: proc(a0: ptr GDBusObjectManager, a1: ptr GDBusObject): void {.cdecl.}
    object_removed*:
      proc(a0: ptr GDBusObjectManager, a1: ptr GDBusObject): void {.cdecl.}
    interface_added*: proc(
      a0: ptr GDBusObjectManager, a1: ptr GDBusObject, a2: ptr GDBusInterface
    ): void {.cdecl.}
    interface_removed*: proc(
      a0: ptr GDBusObjectManager, a1: ptr GDBusObject, a2: ptr GDBusInterface
    ): void {.cdecl.}

  GDBusObjectManagerClientClass* = struct_GDBusObjectManagerClientClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:37:49
  struct_GDBusObjectManagerClientClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:57:8
    interface_proxy_signal*: proc(
      a0: ptr GDBusObjectManagerClient,
      a1: ptr GDBusObjectProxy,
      a2: ptr GDBusProxy,
      a3: cstring,
      a4: cstring,
      a5: ptr GVariant,
    ): void {.cdecl.}
    interface_proxy_properties_changed*: proc(
      a0: ptr GDBusObjectManagerClient,
      a1: ptr GDBusObjectProxy,
      a2: ptr GDBusProxy,
      a3: ptr GVariant,
      a4: ptr cstring,
    ): void {.cdecl.}
    padding*: array[8'i64, gpointer]

  GDBusObjectManagerClientPrivate* = struct_GDBusObjectManagerClientPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerclient.h:38:49
  GDBusObjectManagerServerClass* = struct_GDBusObjectManagerServerClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:37:49
  struct_GDBusObjectManagerServerClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:55:8
    padding*: array[8'i64, gpointer]

  GDBusObjectManagerServerPrivate* = struct_GDBusObjectManagerServerPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectmanagerserver.h:38:49
  GDBusObjectProxyClass* = struct_GDBusObjectProxyClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectproxy.h:37:41
  struct_GDBusObjectProxyClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectproxy.h:55:8
    padding*: array[8'i64, gpointer]

  GDBusObjectProxyPrivate* = struct_GDBusObjectProxyPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectproxy.h:38:41
  GDBusObjectSkeletonClass* = struct_GDBusObjectSkeletonClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:37:44
  struct_GDBusObjectSkeletonClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:56:8
    authorize_method*: proc(
      a0: ptr GDBusObjectSkeleton,
      a1: ptr GDBusInterfaceSkeleton,
      a2: ptr GDBusMethodInvocation,
    ): gboolean {.cdecl.}
    padding*: array[8'i64, gpointer]

  GDBusObjectSkeletonPrivate* = struct_GDBusObjectSkeletonPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusobjectskeleton.h:38:44
  GDBusProxyClass* = struct_GDBusProxyClass
    ## Generated based on /usr/include/glib-2.0/gio/gdbusproxy.h:42:35
  struct_GDBusProxyClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdbusproxy.h:61:8
    g_properties_changed*:
      proc(a0: ptr GDBusProxy, a1: ptr GVariant, a2: ptr cstring): void {.cdecl.}
    g_signal*: proc(
      a0: ptr GDBusProxy, a1: cstring, a2: cstring, a3: ptr GVariant
    ): void {.cdecl.}
    padding*: array[32'i64, gpointer]

  GDBusProxyPrivate* = struct_GDBusProxyPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gdbusproxy.h:43:35
  GDebugController* = struct_GDebugController
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  GDebugControllerInterface* = struct_GDebugControllerInterface
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  struct_GDebugControllerInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:60:8

  GDebugController_autoptr* = ptr GDebugController
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  GDebugController_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  GDebugController_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  GDebugController_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:46:1
  GDebugControllerDBus* = struct_GDebugControllerDBus
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  struct_GDebugControllerDBus* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1

  GDebugControllerDBusClass* = struct_GDebugControllerDBusClass
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  struct_GDebugControllerDBusClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:44:8
    authorize*: proc(
      a0: ptr GDebugControllerDBus, a1: ptr GDBusMethodInvocation
    ): gboolean {.cdecl.}
    padding*: array[12'i64, gpointer]

  GDebugControllerDBus_autoptr* = ptr GDebugControllerDBus
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBus_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBus_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBus_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBusClass_autoptr* = ptr GDebugControllerDBusClass
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBusClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBusClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDebugControllerDBusClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontrollerdbus.h:33:1
  GDriveIface* = struct_GDriveIface
    ## Generated based on /usr/include/glib-2.0/gio/gdrive.h:89:32
  struct_GDriveIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdrive.h:91:8
    changed*: proc(a0: ptr GDrive): void {.cdecl.}
    disconnected*: proc(a0: ptr GDrive): void {.cdecl.}
    eject_button*: proc(a0: ptr GDrive): void {.cdecl.}
    get_name*: proc(a0: ptr GDrive): cstring {.cdecl.}
    get_icon*: proc(a0: ptr GDrive): ptr GIcon {.cdecl.}
    has_volumes*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    get_volumes*: proc(a0: ptr GDrive): ptr GList {.cdecl.}
    is_media_removable*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    has_media*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    is_media_check_automatic*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    can_eject*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    can_poll_for_media*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    eject*: proc(
      a0: ptr GDrive,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    eject_finish*:
      proc(a0: ptr GDrive, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    poll_for_media*: proc(
      a0: ptr GDrive, a1: ptr GCancellable, a2: GAsyncReadyCallback, a3: gpointer
    ): void {.cdecl.}
    poll_for_media_finish*:
      proc(a0: ptr GDrive, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    get_identifier*: proc(a0: ptr GDrive, a1: cstring): cstring {.cdecl.}
    enumerate_identifiers*: proc(a0: ptr GDrive): ptr cstring {.cdecl.}
    get_start_stop_type*: proc(a0: ptr GDrive): GDriveStartStopType {.cdecl.}
    can_start*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    can_start_degraded*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    start*: proc(
      a0: ptr GDrive,
      a1: GDriveStartFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    start_finish*:
      proc(a0: ptr GDrive, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    can_stop*: proc(a0: ptr GDrive): gboolean {.cdecl.}
    stop*: proc(
      a0: ptr GDrive,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    stop_finish*:
      proc(a0: ptr GDrive, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    stop_button*: proc(a0: ptr GDrive): void {.cdecl.}
    eject_with_operation*: proc(
      a0: ptr GDrive,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    eject_with_operation_finish*:
      proc(a0: ptr GDrive, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    get_sort_key*: proc(a0: ptr GDrive): cstring {.cdecl.}
    get_symbolic_icon*: proc(a0: ptr GDrive): ptr GIcon {.cdecl.}
    is_removable*: proc(a0: ptr GDrive): gboolean {.cdecl.}

  GDtlsConnectionInterface* = struct_GDtlsConnectionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gdtlsconnection.h:38:42
  struct_GDtlsConnectionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdtlsconnection.h:58:8
    accept_certificate*: proc(
      a0: ptr GDtlsConnection, a1: ptr GTlsCertificate, a2: GTlsCertificateFlags
    ): gboolean {.cdecl.}
    handshake*: proc(
      a0: ptr GDtlsConnection, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    handshake_async*: proc(
      a0: ptr GDtlsConnection,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    handshake_finish*: proc(
      a0: ptr GDtlsConnection, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    shutdown*: proc(
      a0: ptr GDtlsConnection,
      a1: gboolean,
      a2: gboolean,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    shutdown_async*: proc(
      a0: ptr GDtlsConnection,
      a1: gboolean,
      a2: gboolean,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    shutdown_finish*: proc(
      a0: ptr GDtlsConnection, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    set_advertised_protocols*:
      proc(a0: ptr GDtlsConnection, a1: ptr cstring): void {.cdecl.}
    get_negotiated_protocol*: proc(a0: ptr GDtlsConnection): cstring {.cdecl.}
    get_binding_data*: proc(
      a0: ptr GDtlsConnection,
      a1: GTlsChannelBindingType,
      a2: ptr GByteArray,
      a3: ptr ptr GError,
    ): gboolean {.cdecl.}

  GDtlsClientConnectionInterface* = struct_GDtlsClientConnectionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gdtlsclientconnection.h:38:48
  struct_GDtlsClientConnectionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdtlsclientconnection.h:48:8

  GDtlsServerConnectionInterface* = struct_GDtlsServerConnectionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gdtlsserverconnection.h:38:48
  struct_GDtlsServerConnectionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gdtlsserverconnection.h:48:8

  GIconIface* = struct_GIconIface
    ## Generated based on /usr/include/glib-2.0/gio/gicon.h:39:28
  struct_GIconIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface ## Generated based on /usr/include/glib-2.0/gio/gicon.h:58:8
    hash*: proc(a0: ptr GIcon): guint {.cdecl.}
    equal*: proc(a0: ptr GIcon, a1: ptr GIcon): gboolean {.cdecl.}
    to_tokens*: proc(a0: ptr GIcon, a1: ptr GPtrArray, a2: ptr gint): gboolean {.cdecl.}
    from_tokens*:
      proc(a0: ptr cstring, a1: gint, a2: gint, a3: ptr ptr GError): ptr GIcon {.cdecl.}
    serialize*: proc(a0: ptr GIcon): ptr GVariant {.cdecl.}

  GEmblem* = struct_GEmblem
    ## Generated based on /usr/include/glib-2.0/gio/gemblem.h:40:32
  GEmblemClass* = struct_GEmblemClass
    ## Generated based on /usr/include/glib-2.0/gio/gemblem.h:41:32
  GEmblemedIcon* = struct_GEmblemedIcon
    ## Generated based on /usr/include/glib-2.0/gio/gemblemedicon.h:43:38
  struct_GEmblemedIcon* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gemblemedicon.h:47:8
    priv*: ptr GEmblemedIconPrivate

  GEmblemedIconClass* = struct_GEmblemedIconClass
    ## Generated based on /usr/include/glib-2.0/gio/gemblemedicon.h:44:38
  struct_GEmblemedIconClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gemblemedicon.h:55:8

  GEmblemedIconPrivate* = struct_GEmblemedIconPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gemblemedicon.h:45:38
  GFileIface* = struct_GFileIface
    ## Generated based on /usr/include/glib-2.0/gio/gfile.h:39:33
  struct_GFileIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gfile.h:155:8
    dup*: proc(a0: ptr GFile): ptr GFile {.cdecl.}
    hash*: proc(a0: ptr GFile): guint {.cdecl.}
    equal*: proc(a0: ptr GFile, a1: ptr GFile): gboolean {.cdecl.}
    is_native*: proc(a0: ptr GFile): gboolean {.cdecl.}
    has_uri_scheme*: proc(a0: ptr GFile, a1: cstring): gboolean {.cdecl.}
    get_uri_scheme*: proc(a0: ptr GFile): cstring {.cdecl.}
    get_basename*: proc(a0: ptr GFile): cstring {.cdecl.}
    get_path*: proc(a0: ptr GFile): cstring {.cdecl.}
    get_uri*: proc(a0: ptr GFile): cstring {.cdecl.}
    get_parse_name*: proc(a0: ptr GFile): cstring {.cdecl.}
    get_parent*: proc(a0: ptr GFile): ptr GFile {.cdecl.}
    prefix_matches*: proc(a0: ptr GFile, a1: ptr GFile): gboolean {.cdecl.}
    get_relative_path*: proc(a0: ptr GFile, a1: ptr GFile): cstring {.cdecl.}
    resolve_relative_path*: proc(a0: ptr GFile, a1: cstring): ptr GFile {.cdecl.}
    get_child_for_display_name*:
      proc(a0: ptr GFile, a1: cstring, a2: ptr ptr GError): ptr GFile {.cdecl.}
    enumerate_children*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: GFileQueryInfoFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GFileEnumerator {.cdecl.}
    enumerate_children_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: GFileQueryInfoFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    enumerate_children_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileEnumerator {.cdecl.}
    query_info*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: GFileQueryInfoFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GFileInfo {.cdecl.}
    query_info_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: GFileQueryInfoFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    query_info_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    query_filesystem_info*: proc(
      a0: ptr GFile, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    query_filesystem_info_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    query_filesystem_info_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    find_enclosing_mount*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GMount {.cdecl.}
    find_enclosing_mount_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    find_enclosing_mount_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GMount {.cdecl.}
    set_display_name*: proc(
      a0: ptr GFile, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFile {.cdecl.}
    set_display_name_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    set_display_name_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): ptr GFile {.cdecl.}
    query_settable_attributes*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GFileAttributeInfoList {.cdecl.}
    internal_query_settable_attributes_async*: proc(): void {.cdecl.}
    internal_query_settable_attributes_finish*: proc(): void {.cdecl.}
    query_writable_namespaces*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GFileAttributeInfoList {.cdecl.}
    internal_query_writable_namespaces_async*: proc(): void {.cdecl.}
    internal_query_writable_namespaces_finish*: proc(): void {.cdecl.}
    set_attribute*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: GFileAttributeType,
      a3: gpointer,
      a4: GFileQueryInfoFlags,
      a5: ptr GCancellable,
      a6: ptr ptr GError,
    ): gboolean {.cdecl.}
    set_attributes_from_info*: proc(
      a0: ptr GFile,
      a1: ptr GFileInfo,
      a2: GFileQueryInfoFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    set_attributes_async*: proc(
      a0: ptr GFile,
      a1: ptr GFileInfo,
      a2: GFileQueryInfoFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    set_attributes_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GFileInfo, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    read_fn*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GFileInputStream {.cdecl.}
    read_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    read_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInputStream {.cdecl.}
    append_to*: proc(
      a0: ptr GFile, a1: GFileCreateFlags, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileOutputStream {.cdecl.}
    append_to_async*: proc(
      a0: ptr GFile,
      a1: GFileCreateFlags,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    append_to_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileOutputStream {.cdecl.}
    create*: proc(
      a0: ptr GFile, a1: GFileCreateFlags, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileOutputStream {.cdecl.}
    create_async*: proc(
      a0: ptr GFile,
      a1: GFileCreateFlags,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    create_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileOutputStream {.cdecl.}
    replace*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: gboolean,
      a3: GFileCreateFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): ptr GFileOutputStream {.cdecl.}
    replace_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: gboolean,
      a3: GFileCreateFlags,
      a4: cint,
      a5: ptr GCancellable,
      a6: GAsyncReadyCallback,
      a7: gpointer,
    ): void {.cdecl.}
    replace_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileOutputStream {.cdecl.}
    delete_file*:
      proc(a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError): gboolean {.cdecl.}
    delete_file_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    delete_file_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    trash*:
      proc(a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError): gboolean {.cdecl.}
    trash_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    trash_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    make_directory*:
      proc(a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError): gboolean {.cdecl.}
    make_directory_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    make_directory_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    make_symbolic_link*: proc(
      a0: ptr GFile, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    make_symbolic_link_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    make_symbolic_link_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    copy*: proc(
      a0: ptr GFile,
      a1: ptr GFile,
      a2: GFileCopyFlags,
      a3: ptr GCancellable,
      a4: GFileProgressCallback,
      a5: gpointer,
      a6: ptr ptr GError,
    ): gboolean {.cdecl.}
    copy_async*: proc(
      a0: ptr GFile,
      a1: ptr GFile,
      a2: GFileCopyFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GFileProgressCallback,
      a6: gpointer,
      a7: GAsyncReadyCallback,
      a8: gpointer,
    ): void {.cdecl.}
    copy_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    move*: proc(
      a0: ptr GFile,
      a1: ptr GFile,
      a2: GFileCopyFlags,
      a3: ptr GCancellable,
      a4: GFileProgressCallback,
      a5: gpointer,
      a6: ptr ptr GError,
    ): gboolean {.cdecl.}
    move_async*: proc(
      a0: ptr GFile,
      a1: ptr GFile,
      a2: GFileCopyFlags,
      a3: cint,
      a4: ptr GCancellable,
      a5: GFileProgressCallback,
      a6: gpointer,
      a7: GAsyncReadyCallback,
      a8: gpointer,
    ): void {.cdecl.}
    move_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    mount_mountable*: proc(
      a0: ptr GFile,
      a1: GMountMountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    mount_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): ptr GFile {.cdecl.}
    unmount_mountable*: proc(
      a0: ptr GFile,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    unmount_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    eject_mountable*: proc(
      a0: ptr GFile,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    eject_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    mount_enclosing_volume*: proc(
      a0: ptr GFile,
      a1: GMountMountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    mount_enclosing_volume_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    monitor_dir*: proc(
      a0: ptr GFile, a1: GFileMonitorFlags, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileMonitor {.cdecl.}
    monitor_file*: proc(
      a0: ptr GFile, a1: GFileMonitorFlags, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileMonitor {.cdecl.}
    open_readwrite*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GFileIOStream {.cdecl.}
    open_readwrite_async*: proc(
      a0: ptr GFile,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    open_readwrite_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileIOStream {.cdecl.}
    create_readwrite*: proc(
      a0: ptr GFile, a1: GFileCreateFlags, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileIOStream {.cdecl.}
    create_readwrite_async*: proc(
      a0: ptr GFile,
      a1: GFileCreateFlags,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    create_readwrite_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileIOStream {.cdecl.}
    replace_readwrite*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: gboolean,
      a3: GFileCreateFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): ptr GFileIOStream {.cdecl.}
    replace_readwrite_async*: proc(
      a0: ptr GFile,
      a1: cstring,
      a2: gboolean,
      a3: GFileCreateFlags,
      a4: cint,
      a5: ptr GCancellable,
      a6: GAsyncReadyCallback,
      a7: gpointer,
    ): void {.cdecl.}
    replace_readwrite_finish*: proc(
      a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileIOStream {.cdecl.}
    start_mountable*: proc(
      a0: ptr GFile,
      a1: GDriveStartFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    start_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    stop_mountable*: proc(
      a0: ptr GFile,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    stop_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    supports_thread_contexts*: gboolean
    unmount_mountable_with_operation*: proc(
      a0: ptr GFile,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    unmount_mountable_with_operation_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    eject_mountable_with_operation*: proc(
      a0: ptr GFile,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    eject_mountable_with_operation_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    poll_mountable*: proc(
      a0: ptr GFile, a1: ptr GCancellable, a2: GAsyncReadyCallback, a3: gpointer
    ): void {.cdecl.}
    poll_mountable_finish*:
      proc(a0: ptr GFile, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    measure_disk_usage*: proc(
      a0: ptr GFile,
      a1: GFileMeasureFlags,
      a2: ptr GCancellable,
      a3: GFileMeasureProgressCallback,
      a4: gpointer,
      a5: ptr guint64,
      a6: ptr guint64,
      a7: ptr guint64,
      a8: ptr ptr GError,
    ): gboolean {.cdecl.}
    measure_disk_usage_async*: proc(
      a0: ptr GFile,
      a1: GFileMeasureFlags,
      a2: gint,
      a3: ptr GCancellable,
      a4: GFileMeasureProgressCallback,
      a5: gpointer,
      a6: GAsyncReadyCallback,
      a7: gpointer,
    ): void {.cdecl.}
    measure_disk_usage_finish*: proc(
      a0: ptr GFile,
      a1: ptr GAsyncResult,
      a2: ptr guint64,
      a3: ptr guint64,
      a4: ptr guint64,
      a5: ptr ptr GError,
    ): gboolean {.cdecl.}
    query_exists*: proc(a0: ptr GFile, a1: ptr GCancellable): gboolean {.cdecl.}

  GFileEnumeratorClass* = struct_GFileEnumeratorClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileenumerator.h:41:41
  struct_GFileEnumeratorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gfileenumerator.h:52:8
    next_file*: proc(
      a0: ptr GFileEnumerator, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    close_fn*: proc(
      a0: ptr GFileEnumerator, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    next_files_async*: proc(
      a0: ptr GFileEnumerator,
      a1: cint,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    next_files_finish*: proc(
      a0: ptr GFileEnumerator, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    close_async*: proc(
      a0: ptr GFileEnumerator,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    close_finish*: proc(
      a0: ptr GFileEnumerator, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}

  GFileEnumeratorPrivate* = struct_GFileEnumeratorPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gfileenumerator.h:42:41
  GFileIconClass* = struct_GFileIconClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileicon.h:41:34
  GFileInfoClass* = struct_GFileInfoClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:41:34
  GFileInputStreamClass* = struct_GFileInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileinputstream.h:41:42
  struct_GFileInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gfileinputstream.h:52:8
    tell*: proc(a0: ptr GFileInputStream): goffset {.cdecl.}
    can_seek*: proc(a0: ptr GFileInputStream): gboolean {.cdecl.}
    seek*: proc(
      a0: ptr GFileInputStream,
      a1: goffset,
      a2: GSeekType,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    query_info*: proc(
      a0: ptr GFileInputStream, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    query_info_async*: proc(
      a0: ptr GFileInputStream,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    query_info_finish*: proc(
      a0: ptr GFileInputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GFileInputStreamPrivate* = struct_GFileInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gfileinputstream.h:42:42
  GIOStreamPrivate* = struct_GIOStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/giostream.h:40:61
  GIOStreamClass* = struct_GIOStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/giostream.h:41:61
  struct_GIOStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/giostream.h:51:8
    get_input_stream*: proc(a0: ptr GIOStream): ptr GInputStream {.cdecl.}
    get_output_stream*: proc(a0: ptr GIOStream): ptr GOutputStream {.cdecl.}
    close_fn*: proc(
      a0: ptr GIOStream, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    close_async*: proc(
      a0: ptr GIOStream,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    close_finish*: proc(
      a0: ptr GIOStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}
    internal_g_reserved8*: proc(): void {.cdecl.}
    internal_g_reserved9*: proc(): void {.cdecl.}
    internal_g_reserved10*: proc(): void {.cdecl.}

  GFileIOStreamClass* = struct_GFileIOStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileiostream.h:41:39
  struct_GFileIOStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GIOStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gfileiostream.h:52:8
    tell*: proc(a0: ptr GFileIOStream): goffset {.cdecl.}
    can_seek*: proc(a0: ptr GFileIOStream): gboolean {.cdecl.}
    seek*: proc(
      a0: ptr GFileIOStream,
      a1: goffset,
      a2: GSeekType,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    can_truncate*: proc(a0: ptr GFileIOStream): gboolean {.cdecl.}
    truncate_fn*: proc(
      a0: ptr GFileIOStream, a1: goffset, a2: ptr GCancellable, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    query_info*: proc(
      a0: ptr GFileIOStream, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    query_info_async*: proc(
      a0: ptr GFileIOStream,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    query_info_finish*: proc(
      a0: ptr GFileIOStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    get_etag*: proc(a0: ptr GFileIOStream): cstring {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GFileIOStreamPrivate* = struct_GFileIOStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gfileiostream.h:42:39
  GFileMonitorClass* = struct_GFileMonitorClass
    ## Generated based on /usr/include/glib-2.0/gio/gfilemonitor.h:41:41
  struct_GFileMonitorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gfilemonitor.h:52:8
    changed*: proc(
      a0: ptr GFileMonitor, a1: ptr GFile, a2: ptr GFile, a3: GFileMonitorEvent
    ): void {.cdecl.}
    cancel*: proc(a0: ptr GFileMonitor): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GFileMonitorPrivate* = struct_GFileMonitorPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gfilemonitor.h:42:37
  GFilenameCompleterClass* = struct_GFilenameCompleterClass
    ## Generated based on /usr/include/glib-2.0/gio/gfilenamecompleter.h:41:41
  struct_GFilenameCompleterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gfilenamecompleter.h:43:8
    got_completion_data*: proc(a0: ptr GFilenameCompleter): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}

  GFileOutputStreamClass* = struct_GFileOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gfileoutputstream.h:41:43
  struct_GFileOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gfileoutputstream.h:52:8
    tell*: proc(a0: ptr GFileOutputStream): goffset {.cdecl.}
    can_seek*: proc(a0: ptr GFileOutputStream): gboolean {.cdecl.}
    seek*: proc(
      a0: ptr GFileOutputStream,
      a1: goffset,
      a2: GSeekType,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    can_truncate*: proc(a0: ptr GFileOutputStream): gboolean {.cdecl.}
    truncate_fn*: proc(
      a0: ptr GFileOutputStream, a1: goffset, a2: ptr GCancellable, a3: ptr ptr GError
    ): gboolean {.cdecl.}
    query_info*: proc(
      a0: ptr GFileOutputStream, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    query_info_async*: proc(
      a0: ptr GFileOutputStream,
      a1: cstring,
      a2: cint,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    query_info_finish*: proc(
      a0: ptr GFileOutputStream, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GFileInfo {.cdecl.}
    get_etag*: proc(a0: ptr GFileOutputStream): cstring {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GFileOutputStreamPrivate* = struct_GFileOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gfileoutputstream.h:42:43
  GInetAddressClass* = struct_GInetAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/ginetaddress.h:42:37
  struct_GInetAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/ginetaddress.h:53:8
    to_string*: proc(a0: ptr GInetAddress): cstring {.cdecl.}
    to_bytes*: proc(a0: ptr GInetAddress): ptr guint8 {.cdecl.}

  GInetAddressPrivate* = struct_GInetAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/ginetaddress.h:43:37
  GInetAddressMaskClass* = struct_GInetAddressMaskClass
    ## Generated based on /usr/include/glib-2.0/gio/ginetaddressmask.h:39:41
  struct_GInetAddressMaskClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/ginetaddressmask.h:50:8

  GInetAddressMaskPrivate* = struct_GInetAddressMaskPrivate
    ## Generated based on /usr/include/glib-2.0/gio/ginetaddressmask.h:40:41
  GSocketAddressClass* = struct_GSocketAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketaddress.h:42:39
  struct_GSocketAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketaddress.h:49:8
    get_family*: proc(a0: ptr GSocketAddress): GSocketFamily {.cdecl.}
    get_native_size*: proc(a0: ptr GSocketAddress): gssize {.cdecl.}
    to_native*: proc(
      a0: ptr GSocketAddress, a1: gpointer, a2: gsize, a3: ptr ptr GError
    ): gboolean {.cdecl.}

  GInetSocketAddressClass* = struct_GInetSocketAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/ginetsocketaddress.h:42:43
  struct_GInetSocketAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketAddressClass
      ## Generated based on /usr/include/glib-2.0/gio/ginetsocketaddress.h:53:8

  GInetSocketAddressPrivate* = struct_GInetSocketAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/ginetsocketaddress.h:43:43
  GModuleFlags* = enum_GModuleFlags
    ## Generated based on /usr/include/glib-2.0/gmodule.h:68:3
  GModule* = struct_GModule ## Generated based on /usr/include/glib-2.0/gmodule.h:70:28
  GModuleCheckInit* = proc(a0: ptr GModule): cstring {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gmodule.h:71:24
  GModuleUnload* = proc(a0: ptr GModule): void {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gmodule.h:72:21
  GModuleError* = enum_GModuleError
    ## Generated based on /usr/include/glib-2.0/gmodule.h:91:3
  GIOModuleScope* = struct_GIOModuleScope
    ## Generated based on /usr/include/glib-2.0/gio/giomodule.h:35:32
  GIOModuleClass* = struct_GIOModuleClass
    ## Generated based on /usr/include/glib-2.0/gio/giomodule.h:52:32
  GListModel* = struct_GListModel
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  GListModelInterface* = struct_GListModelInterface
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  struct_GListModelInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:40:8
    get_item_type*: proc(a0: ptr GListModel): GType {.cdecl.}
    get_n_items*: proc(a0: ptr GListModel): guint {.cdecl.}
    get_item*: proc(a0: ptr GListModel, a1: guint): gpointer {.cdecl.}

  GListModel_autoptr* = ptr GListModel
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  GListModel_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  GListModel_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  GListModel_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/glistmodel.h:38:1
  GListStore* = struct_GListStore
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  struct_GListStoreClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1

  GListStoreClass* = struct_GListStoreClass
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStore_autoptr* = ptr GListStore
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStore_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStore_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStore_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStoreClass_autoptr* = ptr GListStoreClass
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStoreClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStoreClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GListStoreClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gliststore.h:38:1
  GLoadableIconIface* = struct_GLoadableIconIface
    ## Generated based on /usr/include/glib-2.0/gio/gloadableicon.h:39:41
  struct_GLoadableIconIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gloadableicon.h:50:8
    load*: proc(
      a0: ptr GLoadableIcon,
      a1: cint,
      a2: ptr cstring,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GInputStream {.cdecl.}
    load_async*: proc(
      a0: ptr GLoadableIcon,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    load_finish*: proc(
      a0: ptr GLoadableIcon, a1: ptr GAsyncResult, a2: ptr cstring, a3: ptr ptr GError
    ): ptr GInputStream {.cdecl.}

  GMemoryInputStreamClass* = struct_GMemoryInputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gmemoryinputstream.h:41:44
  struct_GMemoryInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GInputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gmemoryinputstream.h:52:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GMemoryInputStreamPrivate* = struct_GMemoryInputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmemoryinputstream.h:42:44
  GMemoryMonitor* = struct_GMemoryMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  GMemoryMonitorInterface* = struct_GMemoryMonitorInterface
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  struct_GMemoryMonitorInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:50:8
    low_memory_warning*:
      proc(a0: ptr GMemoryMonitor, a1: GMemoryMonitorWarningLevel): void {.cdecl.}

  GMemoryMonitor_autoptr* = ptr GMemoryMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  GMemoryMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  GMemoryMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  GMemoryMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:44:1
  GMemoryOutputStreamClass* = struct_GMemoryOutputStreamClass
    ## Generated based on /usr/include/glib-2.0/gio/gmemoryoutputstream.h:41:45
  struct_GMemoryOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GOutputStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gmemoryoutputstream.h:52:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GMemoryOutputStreamPrivate* = struct_GMemoryOutputStreamPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmemoryoutputstream.h:42:45
  GReallocFunc* = proc(a0: gpointer, a1: gsize): gpointer {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gmemoryoutputstream.h:77:21
  GMenuModelPrivate* = struct_GMenuModelPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:127:61
  GMenuModelClass* = struct_GMenuModelClass
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:128:61
  struct_GMenuModelClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:160:8
    is_mutable*: proc(a0: ptr GMenuModel): gboolean {.cdecl.}
    get_n_items*: proc(a0: ptr GMenuModel): gint {.cdecl.}
    get_item_attributes*:
      proc(a0: ptr GMenuModel, a1: gint, a2: ptr ptr GHashTable): void {.cdecl.}
    iterate_item_attributes*:
      proc(a0: ptr GMenuModel, a1: gint): ptr GMenuAttributeIter {.cdecl.}
    get_item_attribute_value*: proc(
      a0: ptr GMenuModel, a1: gint, a2: cstring, a3: ptr GVariantType
    ): ptr GVariant {.cdecl.}
    get_item_links*:
      proc(a0: ptr GMenuModel, a1: gint, a2: ptr ptr GHashTable): void {.cdecl.}
    iterate_item_links*: proc(a0: ptr GMenuModel, a1: gint): ptr GMenuLinkIter {.cdecl.}
    get_item_link*:
      proc(a0: ptr GMenuModel, a1: gint, a2: cstring): ptr GMenuModel {.cdecl.}

  GMenuAttributeIterPrivate* = struct_GMenuAttributeIterPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:130:61
  GMenuAttributeIterClass* = struct_GMenuAttributeIterClass
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:131:61
  struct_GMenuAttributeIterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:240:8
    get_next*: proc(
      a0: ptr GMenuAttributeIter, a1: ptr cstring, a2: ptr ptr GVariant
    ): gboolean {.cdecl.}

  GMenuAttributeIter* = struct_GMenuAttributeIter
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:132:61
  struct_GMenuAttributeIter* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:234:8
    priv*: ptr GMenuAttributeIterPrivate

  GMenuLinkIterPrivate* = struct_GMenuLinkIterPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:134:61
  GMenuLinkIterClass* = struct_GMenuLinkIterClass
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:135:61
  struct_GMenuLinkIterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:282:8
    get_next*: proc(
      a0: ptr GMenuLinkIter, a1: ptr cstring, a2: ptr ptr GMenuModel
    ): gboolean {.cdecl.}

  GMenuLinkIter* = struct_GMenuLinkIter
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:136:61
  struct_GMenuLinkIter* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:276:8
    priv*: ptr GMenuLinkIterPrivate

  GMenuItem* = struct_GMenuItem
    ## Generated based on /usr/include/glib-2.0/gio/gmenu.h:41:27
  GMenu* = struct_GMenu ## Generated based on /usr/include/glib-2.0/gio/gmenu.h:42:27
  GMountIface* = struct_GMountIface
    ## Generated based on /usr/include/glib-2.0/gio/gmount.h:40:32
  struct_GMountIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gmount.h:77:8
    changed*: proc(a0: ptr GMount): void {.cdecl.}
    unmounted*: proc(a0: ptr GMount): void {.cdecl.}
    get_root*: proc(a0: ptr GMount): ptr GFile {.cdecl.}
    get_name*: proc(a0: ptr GMount): cstring {.cdecl.}
    get_icon*: proc(a0: ptr GMount): ptr GIcon {.cdecl.}
    get_uuid*: proc(a0: ptr GMount): cstring {.cdecl.}
    get_volume*: proc(a0: ptr GMount): ptr GVolume {.cdecl.}
    get_drive*: proc(a0: ptr GMount): ptr GDrive {.cdecl.}
    can_unmount*: proc(a0: ptr GMount): gboolean {.cdecl.}
    can_eject*: proc(a0: ptr GMount): gboolean {.cdecl.}
    unmount*: proc(
      a0: ptr GMount,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    unmount_finish*:
      proc(a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    eject*: proc(
      a0: ptr GMount,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    eject_finish*:
      proc(a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    remount*: proc(
      a0: ptr GMount,
      a1: GMountMountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    remount_finish*:
      proc(a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    guess_content_type*: proc(
      a0: ptr GMount,
      a1: gboolean,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    guess_content_type_finish*: proc(
      a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr cstring {.cdecl.}
    guess_content_type_sync*: proc(
      a0: ptr GMount, a1: gboolean, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr cstring {.cdecl.}
    pre_unmount*: proc(a0: ptr GMount): void {.cdecl.}
    unmount_with_operation*: proc(
      a0: ptr GMount,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    unmount_with_operation_finish*:
      proc(a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    eject_with_operation*: proc(
      a0: ptr GMount,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    eject_with_operation_finish*:
      proc(a0: ptr GMount, a1: ptr GAsyncResult, a2: ptr ptr GError): gboolean {.cdecl.}
    get_default_location*: proc(a0: ptr GMount): ptr GFile {.cdecl.}
    get_sort_key*: proc(a0: ptr GMount): cstring {.cdecl.}
    get_symbolic_icon*: proc(a0: ptr GMount): ptr GIcon {.cdecl.}

  GMountOperationClass* = struct_GMountOperationClass
    ## Generated based on /usr/include/glib-2.0/gio/gmountoperation.h:41:40
  struct_GMountOperationClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gmountoperation.h:51:8
    ask_password*: proc(
      a0: ptr GMountOperation,
      a1: cstring,
      a2: cstring,
      a3: cstring,
      a4: GAskPasswordFlags,
    ): void {.cdecl.}
    ask_question*: proc(
      a0: ptr GMountOperation, a1: cstring, a2: ptr UncheckedArray[cstring]
    ): void {.cdecl.}
    reply*: proc(a0: ptr GMountOperation, a1: GMountOperationResult): void {.cdecl.}
    aborted*: proc(a0: ptr GMountOperation): void {.cdecl.}
    show_processes*: proc(
      a0: ptr GMountOperation,
      a1: cstring,
      a2: ptr GArray,
      a3: ptr UncheckedArray[cstring],
    ): void {.cdecl.}
    show_unmount_progress*:
      proc(a0: ptr GMountOperation, a1: cstring, a2: gint64, a3: gint64): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}
    internal_g_reserved8*: proc(): void {.cdecl.}
    internal_g_reserved9*: proc(): void {.cdecl.}

  GMountOperationPrivate* = struct_GMountOperationPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gmountoperation.h:42:40
  GNativeSocketAddressClass* = struct_GNativeSocketAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/gnativesocketaddress.h:42:45
  struct_GNativeSocketAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketAddressClass
      ## Generated based on /usr/include/glib-2.0/gio/gnativesocketaddress.h:53:8

  GNativeSocketAddressPrivate* = struct_GNativeSocketAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gnativesocketaddress.h:43:45
  GVolumeMonitorClass* = struct_GVolumeMonitorClass
    ## Generated based on /usr/include/glib-2.0/gio/gvolumemonitor.h:52:37
  struct_GVolumeMonitorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gvolumemonitor.h:62:8
    volume_added*: proc(a0: ptr GVolumeMonitor, a1: ptr GVolume): void {.cdecl.}
    volume_removed*: proc(a0: ptr GVolumeMonitor, a1: ptr GVolume): void {.cdecl.}
    volume_changed*: proc(a0: ptr GVolumeMonitor, a1: ptr GVolume): void {.cdecl.}
    mount_added*: proc(a0: ptr GVolumeMonitor, a1: ptr GMount): void {.cdecl.}
    mount_removed*: proc(a0: ptr GVolumeMonitor, a1: ptr GMount): void {.cdecl.}
    mount_pre_unmount*: proc(a0: ptr GVolumeMonitor, a1: ptr GMount): void {.cdecl.}
    mount_changed*: proc(a0: ptr GVolumeMonitor, a1: ptr GMount): void {.cdecl.}
    drive_connected*: proc(a0: ptr GVolumeMonitor, a1: ptr GDrive): void {.cdecl.}
    drive_disconnected*: proc(a0: ptr GVolumeMonitor, a1: ptr GDrive): void {.cdecl.}
    drive_changed*: proc(a0: ptr GVolumeMonitor, a1: ptr GDrive): void {.cdecl.}
    is_supported*: proc(): gboolean {.cdecl.}
    get_connected_drives*: proc(a0: ptr GVolumeMonitor): ptr GList {.cdecl.}
    get_volumes*: proc(a0: ptr GVolumeMonitor): ptr GList {.cdecl.}
    get_mounts*: proc(a0: ptr GVolumeMonitor): ptr GList {.cdecl.}
    get_volume_for_uuid*:
      proc(a0: ptr GVolumeMonitor, a1: cstring): ptr GVolume {.cdecl.}
    get_mount_for_uuid*: proc(a0: ptr GVolumeMonitor, a1: cstring): ptr GMount {.cdecl.}
    adopt_orphan_mount*:
      proc(a0: ptr GMount, a1: ptr GVolumeMonitor): ptr GVolume {.cdecl.}
    drive_eject_button*: proc(a0: ptr GVolumeMonitor, a1: ptr GDrive): void {.cdecl.}
    drive_stop_button*: proc(a0: ptr GVolumeMonitor, a1: ptr GDrive): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}

  GNativeVolumeMonitor* = struct_GNativeVolumeMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:42:43
  struct_GNativeVolumeMonitor* {.pure, inheritable, bycopy.} = object
    parent_instance*: GVolumeMonitor
      ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:45:8

  GNativeVolumeMonitorClass* = struct_GNativeVolumeMonitorClass
    ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:43:43
  struct_GNativeVolumeMonitorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GVolumeMonitorClass
      ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:50:8
    get_mount_for_mount_path*:
      proc(a0: cstring, a1: ptr GCancellable): ptr GMount {.cdecl.}

  GNetworkAddressClass* = struct_GNetworkAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkaddress.h:39:40
  struct_GNetworkAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gnetworkaddress.h:50:8

  GNetworkAddressPrivate* = struct_GNetworkAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkaddress.h:40:40
  GNetworkMonitorInterface* = struct_GNetworkMonitorInterface
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkmonitor.h:47:42
  struct_GNetworkMonitorInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gnetworkmonitor.h:49:8
    network_changed*: proc(a0: ptr GNetworkMonitor, a1: gboolean): void {.cdecl.}
    can_reach*: proc(
      a0: ptr GNetworkMonitor,
      a1: ptr GSocketConnectable,
      a2: ptr GCancellable,
      a3: ptr ptr GError,
    ): gboolean {.cdecl.}
    can_reach_async*: proc(
      a0: ptr GNetworkMonitor,
      a1: ptr GSocketConnectable,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    can_reach_finish*: proc(
      a0: ptr GNetworkMonitor, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}

  GNetworkServiceClass* = struct_GNetworkServiceClass
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkservice.h:39:40
  struct_GNetworkServiceClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gnetworkservice.h:50:8

  GNetworkServicePrivate* = struct_GNetworkServicePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkservice.h:40:40
  GPermissionPrivate* = struct_GPermissionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gpermission.h:45:39
  GPermissionClass* = struct_GPermissionClass
    ## Generated based on /usr/include/glib-2.0/gio/gpermission.h:46:39
  struct_GPermissionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gpermission.h:56:8
    acquire*: proc(
      a0: ptr GPermission, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    acquire_async*: proc(
      a0: ptr GPermission, a1: ptr GCancellable, a2: GAsyncReadyCallback, a3: gpointer
    ): void {.cdecl.}
    acquire_finish*: proc(
      a0: ptr GPermission, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    release*: proc(
      a0: ptr GPermission, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    release_async*: proc(
      a0: ptr GPermission, a1: ptr GCancellable, a2: GAsyncReadyCallback, a3: gpointer
    ): void {.cdecl.}
    release_finish*: proc(
      a0: ptr GPermission, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    reserved*: array[16'i64, gpointer]

  GPollableInputStreamInterface* = struct_GPollableInputStreamInterface
    ## Generated based on /usr/include/glib-2.0/gio/gpollableinputstream.h:37:47
  struct_GPollableInputStreamInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gpollableinputstream.h:61:8
    can_poll*: proc(a0: ptr GPollableInputStream): gboolean {.cdecl.}
    is_readable*: proc(a0: ptr GPollableInputStream): gboolean {.cdecl.}
    create_source*:
      proc(a0: ptr GPollableInputStream, a1: ptr GCancellable): ptr GSource {.cdecl.}
    read_nonblocking*: proc(
      a0: ptr GPollableInputStream, a1: pointer, a2: gsize, a3: ptr ptr GError
    ): gssize {.cdecl.}

  GPollableOutputStreamInterface* = struct_GPollableOutputStreamInterface
    ## Generated based on /usr/include/glib-2.0/gio/gpollableoutputstream.h:37:48
  struct_GPollableOutputStreamInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gpollableoutputstream.h:69:8
    can_poll*: proc(a0: ptr GPollableOutputStream): gboolean {.cdecl.}
    is_writable*: proc(a0: ptr GPollableOutputStream): gboolean {.cdecl.}
    create_source*:
      proc(a0: ptr GPollableOutputStream, a1: ptr GCancellable): ptr GSource {.cdecl.}
    write_nonblocking*: proc(
      a0: ptr GPollableOutputStream, a1: pointer, a2: gsize, a3: ptr ptr GError
    ): gssize {.cdecl.}
    writev_nonblocking*: proc(
      a0: ptr GPollableOutputStream,
      a1: ptr GOutputVector,
      a2: gsize,
      a3: ptr gsize,
      a4: ptr ptr GError,
    ): GPollableReturn {.cdecl.}

  GPowerProfileMonitor* = struct_GPowerProfileMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  GPowerProfileMonitorInterface* = struct_GPowerProfileMonitorInterface
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  struct_GPowerProfileMonitorInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:51:8

  GPowerProfileMonitor_autoptr* = ptr GPowerProfileMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  GPowerProfileMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  GPowerProfileMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  GPowerProfileMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:45:1
  GProxyInterface* = struct_GProxyInterface
    ## Generated based on /usr/include/glib-2.0/gio/gproxy.h:51:33
  struct_GProxyInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gproxy.h:66:8
    connect*: proc(
      a0: ptr GProxy,
      a1: ptr GIOStream,
      a2: ptr GProxyAddress,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GIOStream {.cdecl.}
    connect_async*: proc(
      a0: ptr GProxy,
      a1: ptr GIOStream,
      a2: ptr GProxyAddress,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    connect_finish*: proc(
      a0: ptr GProxy, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GIOStream {.cdecl.}
    supports_hostname*: proc(a0: ptr GProxy): gboolean {.cdecl.}

  GProxyAddressClass* = struct_GProxyAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/gproxyaddress.h:41:38
  struct_GProxyAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GInetSocketAddressClass
      ## Generated based on /usr/include/glib-2.0/gio/gproxyaddress.h:52:8

  GProxyAddressPrivate* = struct_GProxyAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gproxyaddress.h:42:38
  GSocketAddressEnumeratorClass* = struct_GSocketAddressEnumeratorClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:39:47
  struct_GSocketAddressEnumeratorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketaddressenumerator.h:55:8
    next*: proc(
      a0: ptr GSocketAddressEnumerator, a1: ptr GCancellable, a2: ptr ptr GError
    ): ptr GSocketAddress {.cdecl.}
    next_async*: proc(
      a0: ptr GSocketAddressEnumerator,
      a1: ptr GCancellable,
      a2: GAsyncReadyCallback,
      a3: gpointer,
    ): void {.cdecl.}
    next_finish*: proc(
      a0: ptr GSocketAddressEnumerator, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GSocketAddress {.cdecl.}

  GProxyAddressEnumeratorClass* = struct_GProxyAddressEnumeratorClass
    ## Generated based on /usr/include/glib-2.0/gio/gproxyaddressenumerator.h:41:46
  struct_GProxyAddressEnumeratorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketAddressEnumeratorClass
      ## Generated based on /usr/include/glib-2.0/gio/gproxyaddressenumerator.h:56:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}

  GProxyAddressEnumeratorPrivate* = struct_GProxyAddressEnumeratorPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gproxyaddressenumerator.h:42:48
  GProxyResolverInterface* = struct_GProxyResolverInterface
    ## Generated based on /usr/include/glib-2.0/gio/gproxyresolver.h:47:41
  struct_GProxyResolverInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gproxyresolver.h:49:8
    is_supported*: proc(a0: ptr GProxyResolver): gboolean {.cdecl.}
    lookup*: proc(
      a0: ptr GProxyResolver, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr cstring {.cdecl.}
    lookup_async*: proc(
      a0: ptr GProxyResolver,
      a1: cstring,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    lookup_finish*: proc(
      a0: ptr GProxyResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr cstring {.cdecl.}

  GRemoteActionGroupInterface* = struct_GRemoteActionGroupInterface
    ## Generated based on /usr/include/glib-2.0/gio/gremoteactiongroup.h:43:61
  struct_GRemoteActionGroupInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gremoteactiongroup.h:45:8
    activate_action_full*: proc(
      a0: ptr GRemoteActionGroup, a1: cstring, a2: ptr GVariant, a3: ptr GVariant
    ): void {.cdecl.}
    change_action_state_full*: proc(
      a0: ptr GRemoteActionGroup, a1: cstring, a2: ptr GVariant, a3: ptr GVariant
    ): void {.cdecl.}

  GResolverPrivate* = struct_GResolverPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gresolver.h:40:34
  GResolverClass* = struct_GResolverClass
    ## Generated based on /usr/include/glib-2.0/gio/gresolver.h:41:34
  struct_GResolverClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gresolver.h:65:8
    reload*: proc(a0: ptr GResolver): void {.cdecl.}
    lookup_by_name*: proc(
      a0: ptr GResolver, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_by_name_async*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    lookup_by_name_finish*: proc(
      a0: ptr GResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_by_address*: proc(
      a0: ptr GResolver, a1: ptr GInetAddress, a2: ptr GCancellable, a3: ptr ptr GError
    ): cstring {.cdecl.}
    lookup_by_address_async*: proc(
      a0: ptr GResolver,
      a1: ptr GInetAddress,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    lookup_by_address_finish*: proc(
      a0: ptr GResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): cstring {.cdecl.}
    lookup_service*: proc(
      a0: ptr GResolver, a1: cstring, a2: ptr GCancellable, a3: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_service_async*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    lookup_service_finish*: proc(
      a0: ptr GResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_records*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: GResolverRecordType,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GList {.cdecl.}
    lookup_records_async*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: GResolverRecordType,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    lookup_records_finish*: proc(
      a0: ptr GResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_by_name_with_flags_async*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: GResolverNameLookupFlags,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    lookup_by_name_with_flags_finish*: proc(
      a0: ptr GResolver, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    lookup_by_name_with_flags*: proc(
      a0: ptr GResolver,
      a1: cstring,
      a2: GResolverNameLookupFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): ptr GList {.cdecl.}

  GResolverNameLookupFlags* = enum_GResolverNameLookupFlags
    ## Generated based on /usr/include/glib-2.0/gio/gresolver.h:63:3
  GStaticResource* = struct_GStaticResource
    ## Generated based on /usr/include/glib-2.0/gio/gresource.h:53:33
  struct_GStaticResource* {.pure, inheritable, bycopy.} = object
    data*: ptr guint8 ## Generated based on /usr/include/glib-2.0/gio/gresource.h:55:8
    data_len*: gsize
    resource*: ptr GResource
    next*: ptr GStaticResource
    padding*: gpointer

  GSeekableIface* = struct_GSeekableIface
    ## Generated based on /usr/include/glib-2.0/gio/gseekable.h:39:34
  struct_GSeekableIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gseekable.h:52:8
    tell*: proc(a0: ptr GSeekable): goffset {.cdecl.}
    can_seek*: proc(a0: ptr GSeekable): gboolean {.cdecl.}
    seek*: proc(
      a0: ptr GSeekable,
      a1: goffset,
      a2: GSeekType,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): gboolean {.cdecl.}
    can_truncate*: proc(a0: ptr GSeekable): gboolean {.cdecl.}
    truncate_fn*: proc(
      a0: ptr GSeekable, a1: goffset, a2: ptr GCancellable, a3: ptr ptr GError
    ): gboolean {.cdecl.}

  GSettingsSchemaSource* = struct_GSettingsSchemaSource
    ## Generated based on /usr/include/glib-2.0/gio/gsettingsschema.h:29:61
  GSettingsSchema* = struct_GSettingsSchema
    ## Generated based on /usr/include/glib-2.0/gio/gsettingsschema.h:30:61
  GSettingsSchemaKey* = struct_GSettingsSchemaKey
    ## Generated based on /usr/include/glib-2.0/gio/gsettingsschema.h:31:61
  GSettingsPrivate* = struct_GSettingsPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:44:61
  GSettingsClass* = struct_GSettingsClass
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:45:61
  struct_GSettingsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:47:8
    writable_changed*: proc(a0: ptr GSettings, a1: cstring): void {.cdecl.}
    changed*: proc(a0: ptr GSettings, a1: cstring): void {.cdecl.}
    writable_change_event*: proc(a0: ptr GSettings, a1: GQuark): gboolean {.cdecl.}
    change_event*: proc(a0: ptr GSettings, a1: ptr GQuark, a2: gint): gboolean {.cdecl.}
    padding*: array[20'i64, gpointer]

  GSettingsBindSetMapping* =
    proc(a0: ptr GValue, a1: ptr GVariantType, a2: gpointer): ptr GVariant {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:237:25
  GSettingsBindGetMapping* =
    proc(a0: ptr GValue, a1: ptr GVariant, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:254:25
  GSettingsGetMapping* =
    proc(a0: ptr GVariant, a1: ptr gpointer, a2: gpointer): gboolean {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:278:25
  GSettingsBindFlags* = enum_GSettingsBindFlags
    ## Generated based on /usr/include/glib-2.0/gio/gsettings.h:311:3
  GSimpleActionGroupPrivate* = struct_GSimpleActionGroupPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleactiongroup.h:46:61
  GSimpleActionGroupClass* = struct_GSimpleActionGroupClass
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleactiongroup.h:47:61
  struct_GSimpleActionGroupClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsimpleactiongroup.h:57:8
    padding*: array[12'i64, gpointer]

  GSimpleAsyncResultClass* = struct_GSimpleAsyncResultClass
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleasyncresult.h:41:43
  GSimpleProxyResolver* = struct_GSimpleProxyResolver
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleproxyresolver.h:39:38
  struct_GSimpleProxyResolver* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/glib-2.0/gio/gsimpleproxyresolver.h:43:8
    priv*: ptr GSimpleProxyResolverPrivate

  GSimpleProxyResolverPrivate* = struct_GSimpleProxyResolverPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleproxyresolver.h:40:45
  GSimpleProxyResolverClass* = struct_GSimpleProxyResolverClass
    ## Generated based on /usr/include/glib-2.0/gio/gsimpleproxyresolver.h:41:43
  struct_GSimpleProxyResolverClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsimpleproxyresolver.h:51:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GSocketPrivate* = struct_GSocketPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocket.h:48:61
  GSocketClass* = struct_GSocketClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocket.h:49:61
  struct_GSocketClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocket.h:51:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}
    internal_g_reserved7*: proc(): void {.cdecl.}
    internal_g_reserved8*: proc(): void {.cdecl.}
    internal_g_reserved9*: proc(): void {.cdecl.}
    internal_g_reserved10*: proc(): void {.cdecl.}

  GSocketClientPrivate* = struct_GSocketClientPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocketclient.h:48:61
  GSocketClientClass* = struct_GSocketClientClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketclient.h:49:61
  struct_GSocketClientClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketclient.h:51:8
    event*: proc(
      a0: ptr GSocketClient,
      a1: GSocketClientEvent,
      a2: ptr GSocketConnectable,
      a3: ptr GIOStream,
    ): void {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}

  GSocketConnectableIface* = struct_GSocketConnectableIface
    ## Generated based on /usr/include/glib-2.0/gio/gsocketconnectable.h:37:41
  struct_GSocketConnectableIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gsocketconnectable.h:50:8
    enumerate*: proc(a0: ptr GSocketConnectable): ptr GSocketAddressEnumerator {.cdecl.}
    proxy_enumerate*:
      proc(a0: ptr GSocketConnectable): ptr GSocketAddressEnumerator {.cdecl.}
    to_string*: proc(a0: ptr GSocketConnectable): cstring {.cdecl.}

  GSocketConnectionPrivate* = struct_GSocketConnectionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocketconnection.h:51:61
  GSocketConnectionClass* = struct_GSocketConnectionClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketconnection.h:52:61
  struct_GSocketConnectionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GIOStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketconnection.h:54:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}

  GSocketControlMessagePrivate* = struct_GSocketControlMessagePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:49:61
  GSocketControlMessageClass* = struct_GSocketControlMessageClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:50:61
  struct_GSocketControlMessageClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketcontrolmessage.h:63:8
    get_size*: proc(a0: ptr GSocketControlMessage): gsize {.cdecl.}
    get_level*: proc(a0: ptr GSocketControlMessage): cint {.cdecl.}
    get_type*: proc(a0: ptr GSocketControlMessage): cint {.cdecl.}
    serialize*: proc(a0: ptr GSocketControlMessage, a1: gpointer): void {.cdecl.}
    deserialize*: proc(
      a0: cint, a1: cint, a2: gsize, a3: gpointer
    ): ptr GSocketControlMessage {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GSocketListenerPrivate* = struct_GSocketListenerPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocketlistener.h:51:61
  GSocketListenerClass* = struct_GSocketListenerClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketlistener.h:52:61
  struct_GSocketListenerClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketlistener.h:60:8
    changed*: proc(a0: ptr GSocketListener): void {.cdecl.}
    event*: proc(
      a0: ptr GSocketListener, a1: GSocketListenerEvent, a2: ptr GSocket
    ): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}

  GSocketServicePrivate* = struct_GSocketServicePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gsocketservice.h:48:61
  GSocketServiceClass* = struct_GSocketServiceClass
    ## Generated based on /usr/include/glib-2.0/gio/gsocketservice.h:49:61
  struct_GSocketServiceClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketListenerClass
      ## Generated based on /usr/include/glib-2.0/gio/gsocketservice.h:57:8
    incoming*: proc(
      a0: ptr GSocketService, a1: ptr GSocketConnection, a2: ptr GObject
    ): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}

  GTaskClass* = struct_GTaskClass
    ## Generated based on /usr/include/glib-2.0/gio/gtask.h:39:30
  GTaskThreadFunc* = proc(
    a0: ptr GTask, a1: gpointer, a2: gpointer, a3: ptr GCancellable
  ): void {.cdecl.} ## Generated based on /usr/include/glib-2.0/gio/gtask.h:130:16
  GTcpConnectionPrivate* = struct_GTcpConnectionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtcpconnection.h:46:61
  GTcpConnectionClass* = struct_GTcpConnectionClass
    ## Generated based on /usr/include/glib-2.0/gio/gtcpconnection.h:47:61
  struct_GTcpConnectionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketConnectionClass
      ## Generated based on /usr/include/glib-2.0/gio/gtcpconnection.h:49:8

  GTcpWrapperConnectionPrivate* = struct_GTcpWrapperConnectionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:46:46
  GTcpWrapperConnectionClass* = struct_GTcpWrapperConnectionClass
    ## Generated based on /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:47:46
  struct_GTcpWrapperConnectionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GTcpConnectionClass
      ## Generated based on /usr/include/glib-2.0/gio/gtcpwrapperconnection.h:49:8

  GThemedIconClass* = struct_GThemedIconClass
    ## Generated based on /usr/include/glib-2.0/gio/gthemedicon.h:41:36
  GThreadedSocketServicePrivate* = struct_GThreadedSocketServicePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gthreadedsocketservice.h:51:61
  GThreadedSocketServiceClass* = struct_GThreadedSocketServiceClass
    ## Generated based on /usr/include/glib-2.0/gio/gthreadedsocketservice.h:52:61
  struct_GThreadedSocketServiceClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketServiceClass
      ## Generated based on /usr/include/glib-2.0/gio/gthreadedsocketservice.h:54:8
    run*: proc(
      a0: ptr GThreadedSocketService, a1: ptr GSocketConnection, a2: ptr GObject
    ): gboolean {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GTlsBackend* = struct_GTlsBackend
    ## Generated based on /usr/include/glib-2.0/gio/gtlsbackend.h:46:38
  GTlsBackendInterface* = struct_GTlsBackendInterface
    ## Generated based on /usr/include/glib-2.0/gio/gtlsbackend.h:47:38
  struct_GTlsBackendInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gtlsbackend.h:66:8
    supports_tls*: proc(a0: ptr GTlsBackend): gboolean {.cdecl.}
    get_certificate_type*: proc(): GType {.cdecl.}
    get_client_connection_type*: proc(): GType {.cdecl.}
    get_server_connection_type*: proc(): GType {.cdecl.}
    get_file_database_type*: proc(): GType {.cdecl.}
    get_default_database*: proc(a0: ptr GTlsBackend): ptr GTlsDatabase {.cdecl.}
    supports_dtls*: proc(a0: ptr GTlsBackend): gboolean {.cdecl.}
    get_dtls_client_connection_type*: proc(): GType {.cdecl.}
    get_dtls_server_connection_type*: proc(): GType {.cdecl.}

  GTlsCertificateClass* = struct_GTlsCertificateClass
    ## Generated based on /usr/include/glib-2.0/gio/gtlscertificate.h:39:40
  struct_GTlsCertificateClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gtlscertificate.h:48:8
    verify*: proc(
      a0: ptr GTlsCertificate, a1: ptr GSocketConnectable, a2: ptr GTlsCertificate
    ): GTlsCertificateFlags {.cdecl.}
    padding*: array[8'i64, gpointer]

  GTlsCertificatePrivate* = struct_GTlsCertificatePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtlscertificate.h:40:40
  GTlsConnectionClass* = struct_GTlsConnectionClass
    ## Generated based on /usr/include/glib-2.0/gio/gtlsconnection.h:39:39
  struct_GTlsConnectionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GIOStreamClass
      ## Generated based on /usr/include/glib-2.0/gio/gtlsconnection.h:62:8
    accept_certificate*: proc(
      a0: ptr GTlsConnection, a1: ptr GTlsCertificate, a2: GTlsCertificateFlags
    ): gboolean {.cdecl.}
    handshake*: proc(
      a0: ptr GTlsConnection, a1: ptr GCancellable, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    handshake_async*: proc(
      a0: ptr GTlsConnection,
      a1: cint,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    handshake_finish*: proc(
      a0: ptr GTlsConnection, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    get_binding_data*: proc(
      a0: ptr GTlsConnection,
      a1: GTlsChannelBindingType,
      a2: ptr GByteArray,
      a3: ptr ptr GError,
    ): gboolean {.cdecl.}
    get_negotiated_protocol*: proc(a0: ptr GTlsConnection): cstring {.cdecl.}
    padding*: array[6'i64, gpointer]

  GTlsConnectionPrivate* = struct_GTlsConnectionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtlsconnection.h:40:39
  GTlsClientConnectionInterface* = struct_GTlsClientConnectionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gtlsclientconnection.h:37:47
  struct_GTlsClientConnectionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gtlsclientconnection.h:48:8
    copy_session_state*:
      proc(a0: ptr GTlsClientConnection, a1: ptr GTlsClientConnection): void {.cdecl.}

  GTlsDatabaseClass* = struct_GTlsDatabaseClass
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:44:37
  struct_GTlsDatabaseClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:54:8
    verify_chain*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GTlsCertificate,
      a2: cstring,
      a3: ptr GSocketConnectable,
      a4: ptr GTlsInteraction,
      a5: GTlsDatabaseVerifyFlags,
      a6: ptr GCancellable,
      a7: ptr ptr GError,
    ): GTlsCertificateFlags {.cdecl.}
    verify_chain_async*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GTlsCertificate,
      a2: cstring,
      a3: ptr GSocketConnectable,
      a4: ptr GTlsInteraction,
      a5: GTlsDatabaseVerifyFlags,
      a6: ptr GCancellable,
      a7: GAsyncReadyCallback,
      a8: gpointer,
    ): void {.cdecl.}
    verify_chain_finish*: proc(
      a0: ptr GTlsDatabase, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): GTlsCertificateFlags {.cdecl.}
    create_certificate_handle*:
      proc(a0: ptr GTlsDatabase, a1: ptr GTlsCertificate): cstring {.cdecl.}
    lookup_certificate_for_handle*: proc(
      a0: ptr GTlsDatabase,
      a1: cstring,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): ptr GTlsCertificate {.cdecl.}
    lookup_certificate_for_handle_async*: proc(
      a0: ptr GTlsDatabase,
      a1: cstring,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    lookup_certificate_for_handle_finish*: proc(
      a0: ptr GTlsDatabase, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GTlsCertificate {.cdecl.}
    lookup_certificate_issuer*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GTlsCertificate,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): ptr GTlsCertificate {.cdecl.}
    lookup_certificate_issuer_async*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GTlsCertificate,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    lookup_certificate_issuer_finish*: proc(
      a0: ptr GTlsDatabase, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GTlsCertificate {.cdecl.}
    lookup_certificates_issued_by*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GByteArray,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): ptr GList {.cdecl.}
    lookup_certificates_issued_by_async*: proc(
      a0: ptr GTlsDatabase,
      a1: ptr GByteArray,
      a2: ptr GTlsInteraction,
      a3: GTlsDatabaseLookupFlags,
      a4: ptr GCancellable,
      a5: GAsyncReadyCallback,
      a6: gpointer,
    ): void {.cdecl.}
    lookup_certificates_issued_by_finish*: proc(
      a0: ptr GTlsDatabase, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): ptr GList {.cdecl.}
    padding*: array[16'i64, gpointer]

  GTlsDatabasePrivate* = struct_GTlsDatabasePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:45:37
  GTlsFileDatabaseInterface* = struct_GTlsFileDatabaseInterface
    ## Generated based on /usr/include/glib-2.0/gio/gtlsfiledatabase.h:33:43
  struct_GTlsFileDatabaseInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gtlsfiledatabase.h:42:8
    padding*: array[8'i64, gpointer]

  GTlsInteractionClass* = struct_GTlsInteractionClass
    ## Generated based on /usr/include/glib-2.0/gio/gtlsinteraction.h:41:40
  struct_GTlsInteractionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gtlsinteraction.h:51:8
    ask_password*: proc(
      a0: ptr GTlsInteraction,
      a1: ptr GTlsPassword,
      a2: ptr GCancellable,
      a3: ptr ptr GError,
    ): GTlsInteractionResult {.cdecl.}
    ask_password_async*: proc(
      a0: ptr GTlsInteraction,
      a1: ptr GTlsPassword,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    ask_password_finish*: proc(
      a0: ptr GTlsInteraction, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): GTlsInteractionResult {.cdecl.}
    request_certificate*: proc(
      a0: ptr GTlsInteraction,
      a1: ptr GTlsConnection,
      a2: GTlsCertificateRequestFlags,
      a3: ptr GCancellable,
      a4: ptr ptr GError,
    ): GTlsInteractionResult {.cdecl.}
    request_certificate_async*: proc(
      a0: ptr GTlsInteraction,
      a1: ptr GTlsConnection,
      a2: GTlsCertificateRequestFlags,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    request_certificate_finish*: proc(
      a0: ptr GTlsInteraction, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): GTlsInteractionResult {.cdecl.}
    padding*: array[21'i64, gpointer]

  GTlsInteractionPrivate* = struct_GTlsInteractionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtlsinteraction.h:42:40
  GTlsPasswordClass* = struct_GTlsPasswordClass
    ## Generated based on /usr/include/glib-2.0/gio/gtlspassword.h:41:37
  struct_GTlsPasswordClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gtlspassword.h:60:8
    get_value*: proc(a0: ptr GTlsPassword, a1: ptr gsize): ptr guchar {.cdecl.}
    set_value*: proc(
      a0: ptr GTlsPassword, a1: ptr guchar, a2: gssize, a3: GDestroyNotify
    ): void {.cdecl.}
    get_default_warning*: proc(a0: ptr GTlsPassword): cstring {.cdecl.}
    padding*: array[4'i64, gpointer]

  GTlsPasswordPrivate* = struct_GTlsPasswordPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gtlspassword.h:42:37
  GTlsServerConnectionInterface* = struct_GTlsServerConnectionInterface
    ## Generated based on /usr/include/glib-2.0/gio/gtlsserverconnection.h:37:47
  struct_GTlsServerConnectionInterface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gtlsserverconnection.h:47:8

  GUnixConnection* = struct_GUnixConnection
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:42:61
  struct_GUnixConnection* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketConnection
      ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:53:8
    priv*: ptr GUnixConnectionPrivate

  GUnixConnectionPrivate* = struct_GUnixConnectionPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:43:61
  GUnixConnectionClass* = struct_GUnixConnectionClass
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:44:61
  struct_GUnixConnectionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketConnectionClass
      ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:48:8

  GUnixConnection_autoptr* = ptr GUnixConnection
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:46:1
  GUnixConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:46:1
  GUnixConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:46:1
  GUnixConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gunixconnection.h:46:1
  GUnixCredentialsMessagePrivate* = struct_GUnixCredentialsMessagePrivate
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:38:49
  GUnixCredentialsMessageClass* = struct_GUnixCredentialsMessageClass
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:39:49
  struct_GUnixCredentialsMessageClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketControlMessageClass
      ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:50:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}

  GUnixCredentialsMessage_autoptr* = ptr GUnixCredentialsMessage
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:41:1
  GUnixCredentialsMessage_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:41:1
  GUnixCredentialsMessage_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:41:1
  GUnixCredentialsMessage_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gunixcredentialsmessage.h:41:1
  GUnixFDList_autoptr* = ptr GUnixFDList
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:41:1
  GUnixFDList_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:41:1
  GUnixFDList_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:41:1
  GUnixFDList_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:41:1
  GUnixFDListPrivate* = struct_GUnixFDListPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:43:58
  GUnixFDListClass* = struct_GUnixFDListClass
    ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:44:58
  struct_GUnixFDListClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gunixfdlist.h:46:8
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}

  GUnixSocketAddress* = struct_GUnixSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:38:43
  struct_GUnixSocketAddress* {.pure, inheritable, bycopy.} = object
    parent_instance*: GSocketAddress
      ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:44:8
    priv*: ptr GUnixSocketAddressPrivate

  GUnixSocketAddressClass* = struct_GUnixSocketAddressClass
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:39:43
  struct_GUnixSocketAddressClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GSocketAddressClass
      ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:52:8

  GUnixSocketAddressPrivate* = struct_GUnixSocketAddressPrivate
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:40:43
  GUnixSocketAddress_autoptr* = ptr GUnixSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:42:1
  GUnixSocketAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:42:1
  GUnixSocketAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:42:1
  GUnixSocketAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gunixsocketaddress.h:42:1
  GVfsFileLookupFunc* =
    proc(a0: ptr GVfs, a1: cstring, a2: gpointer): ptr GFile {.cdecl.}
    ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:59:20
  GVfsClass* = struct_GVfsClass
    ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:71:30
  struct_GVfsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:78:8
    is_active*: proc(a0: ptr GVfs): gboolean {.cdecl.}
    get_file_for_path*: proc(a0: ptr GVfs, a1: cstring): ptr GFile {.cdecl.}
    get_file_for_uri*: proc(a0: ptr GVfs, a1: cstring): ptr GFile {.cdecl.}
    get_supported_uri_schemes*: proc(a0: ptr GVfs): ptr cstring {.cdecl.}
    parse_name*: proc(a0: ptr GVfs, a1: cstring): ptr GFile {.cdecl.}
    local_file_add_info*: proc(
      a0: ptr GVfs,
      a1: cstring,
      a2: guint64,
      a3: ptr GFileAttributeMatcher,
      a4: ptr GFileInfo,
      a5: ptr GCancellable,
      a6: ptr gpointer,
      a7: GDestroyNotify,
    ): void {.cdecl.}
    add_writable_namespaces*:
      proc(a0: ptr GVfs, a1: ptr GFileAttributeInfoList): void {.cdecl.}
    local_file_set_attributes*: proc(
      a0: ptr GVfs,
      a1: cstring,
      a2: ptr GFileInfo,
      a3: GFileQueryInfoFlags,
      a4: ptr GCancellable,
      a5: ptr ptr GError,
    ): gboolean {.cdecl.}
    local_file_removed*: proc(a0: ptr GVfs, a1: cstring): void {.cdecl.}
    local_file_moved*: proc(a0: ptr GVfs, a1: cstring, a2: cstring): void {.cdecl.}
    deserialize_icon*: proc(a0: ptr GVfs, a1: ptr GVariant): ptr GIcon {.cdecl.}
    internal_g_reserved1*: proc(): void {.cdecl.}
    internal_g_reserved2*: proc(): void {.cdecl.}
    internal_g_reserved3*: proc(): void {.cdecl.}
    internal_g_reserved4*: proc(): void {.cdecl.}
    internal_g_reserved5*: proc(): void {.cdecl.}
    internal_g_reserved6*: proc(): void {.cdecl.}

  GVolumeIface* = struct_GVolumeIface
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:126:33
  struct_GVolumeIface* {.pure, inheritable, bycopy.} = object
    g_iface*: GTypeInterface
      ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:128:8
    changed*: proc(a0: ptr GVolume): void {.cdecl.}
    removed*: proc(a0: ptr GVolume): void {.cdecl.}
    get_name*: proc(a0: ptr GVolume): cstring {.cdecl.}
    get_icon*: proc(a0: ptr GVolume): ptr GIcon {.cdecl.}
    get_uuid*: proc(a0: ptr GVolume): cstring {.cdecl.}
    get_drive*: proc(a0: ptr GVolume): ptr GDrive {.cdecl.}
    get_mount*: proc(a0: ptr GVolume): ptr GMount {.cdecl.}
    can_mount*: proc(a0: ptr GVolume): gboolean {.cdecl.}
    can_eject*: proc(a0: ptr GVolume): gboolean {.cdecl.}
    mount_fn*: proc(
      a0: ptr GVolume,
      a1: GMountMountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    mount_finish*: proc(
      a0: ptr GVolume, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    eject*: proc(
      a0: ptr GVolume,
      a1: GMountUnmountFlags,
      a2: ptr GCancellable,
      a3: GAsyncReadyCallback,
      a4: gpointer,
    ): void {.cdecl.}
    eject_finish*: proc(
      a0: ptr GVolume, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    get_identifier*: proc(a0: ptr GVolume, a1: cstring): cstring {.cdecl.}
    enumerate_identifiers*: proc(a0: ptr GVolume): ptr cstring {.cdecl.}
    should_automount*: proc(a0: ptr GVolume): gboolean {.cdecl.}
    get_activation_root*: proc(a0: ptr GVolume): ptr GFile {.cdecl.}
    eject_with_operation*: proc(
      a0: ptr GVolume,
      a1: GMountUnmountFlags,
      a2: ptr GMountOperation,
      a3: ptr GCancellable,
      a4: GAsyncReadyCallback,
      a5: gpointer,
    ): void {.cdecl.}
    eject_with_operation_finish*: proc(
      a0: ptr GVolume, a1: ptr GAsyncResult, a2: ptr ptr GError
    ): gboolean {.cdecl.}
    get_sort_key*: proc(a0: ptr GVolume): cstring {.cdecl.}
    get_symbolic_icon*: proc(a0: ptr GVolume): ptr GIcon {.cdecl.}

  GZlibCompressorClass* = struct_GZlibCompressorClass
    ## Generated based on /usr/include/glib-2.0/gio/gzlibcompressor.h:42:40
  struct_GZlibCompressorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gzlibcompressor.h:44:8

  GZlibDecompressorClass* = struct_GZlibDecompressorClass
    ## Generated based on /usr/include/glib-2.0/gio/gzlibdecompressor.h:42:42
  struct_GZlibDecompressorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/glib-2.0/gio/gzlibdecompressor.h:44:8

  GAction_autoptr* = ptr GAction
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:28:1
  GAction_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:28:1
  GAction_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:28:1
  GAction_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:28:1
  GActionMap_autoptr* = ptr GActionMap
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:29:1
  GActionMap_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:29:1
  GActionMap_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:29:1
  GActionMap_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:29:1
  GAppInfo_autoptr* = ptr GAppInfo
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:30:1
  GAppInfo_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:30:1
  GAppInfo_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:30:1
  GAppInfo_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:30:1
  GAppLaunchContext_autoptr* = ptr GAppLaunchContext
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:31:1
  GAppLaunchContext_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:31:1
  GAppLaunchContext_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:31:1
  GAppLaunchContext_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:31:1
  GAppInfoMonitor_autoptr* = ptr GAppInfoMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:32:1
  GAppInfoMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:32:1
  GAppInfoMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:32:1
  GAppInfoMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:32:1
  GApplicationCommandLine_autoptr* = ptr GApplicationCommandLine
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:33:1
  GApplicationCommandLine_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:33:1
  GApplicationCommandLine_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:33:1
  GApplicationCommandLine_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:33:1
  GApplication_autoptr* = ptr GApplication
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:34:1
  GApplication_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:34:1
  GApplication_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:34:1
  GApplication_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:34:1
  GAsyncInitable_autoptr* = ptr GAsyncInitable
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:35:1
  GAsyncInitable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:35:1
  GAsyncInitable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:35:1
  GAsyncInitable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:35:1
  GAsyncResult_autoptr* = ptr GAsyncResult
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:36:1
  GAsyncResult_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:36:1
  GAsyncResult_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:36:1
  GAsyncResult_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:36:1
  GBufferedInputStream_autoptr* = ptr GBufferedInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:37:1
  GBufferedInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:37:1
  GBufferedInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:37:1
  GBufferedInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:37:1
  GBufferedOutputStream_autoptr* = ptr GBufferedOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:38:1
  GBufferedOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:38:1
  GBufferedOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:38:1
  GBufferedOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:38:1
  GBytesIcon_autoptr* = ptr GBytesIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:39:1
  GBytesIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:39:1
  GBytesIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:39:1
  GBytesIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:39:1
  GCancellable_autoptr* = ptr GCancellable
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:40:1
  GCancellable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:40:1
  GCancellable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:40:1
  GCancellable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:40:1
  GCharsetConverter_autoptr* = ptr GCharsetConverter
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:41:1
  GCharsetConverter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:41:1
  GCharsetConverter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:41:1
  GCharsetConverter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:41:1
  GConverter_autoptr* = ptr GConverter
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:42:1
  GConverter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:42:1
  GConverter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:42:1
  GConverter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:42:1
  GConverterInputStream_autoptr* = ptr GConverterInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:43:1
  GConverterInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:43:1
  GConverterInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:43:1
  GConverterInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:43:1
  GConverterOutputStream_autoptr* = ptr GConverterOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:44:1
  GConverterOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:44:1
  GConverterOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:44:1
  GConverterOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:44:1
  GCredentials_autoptr* = ptr GCredentials
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:45:1
  GCredentials_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:45:1
  GCredentials_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:45:1
  GCredentials_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:45:1
  GDatagramBased_autoptr* = ptr GDatagramBased
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:46:1
  GDatagramBased_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:46:1
  GDatagramBased_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:46:1
  GDatagramBased_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:46:1
  GDataInputStream_autoptr* = ptr GDataInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:47:1
  GDataInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:47:1
  GDataInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:47:1
  GDataInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:47:1
  GDataOutputStream_autoptr* = ptr GDataOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:48:1
  GDataOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:48:1
  GDataOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:48:1
  GDataOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:48:1
  GDBusActionGroup_autoptr* = ptr GDBusActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:49:1
  GDBusActionGroup_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:49:1
  GDBusActionGroup_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:49:1
  GDBusActionGroup_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:49:1
  GDBusAuthObserver_autoptr* = ptr GDBusAuthObserver
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:50:1
  GDBusAuthObserver_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:50:1
  GDBusAuthObserver_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:50:1
  GDBusAuthObserver_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:50:1
  GDBusConnection_autoptr* = ptr GDBusConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:51:1
  GDBusConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:51:1
  GDBusConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:51:1
  GDBusConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:51:1
  GDBusInterface_autoptr* = ptr GDBusInterface
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:52:1
  GDBusInterface_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:52:1
  GDBusInterface_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:52:1
  GDBusInterface_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:52:1
  GDBusInterfaceSkeleton_autoptr* = ptr GDBusInterfaceSkeleton
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:53:1
  GDBusInterfaceSkeleton_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:53:1
  GDBusInterfaceSkeleton_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:53:1
  GDBusInterfaceSkeleton_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:53:1
  GDBusMenuModel_autoptr* = ptr GDBusMenuModel
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:54:1
  GDBusMenuModel_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:54:1
  GDBusMenuModel_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:54:1
  GDBusMenuModel_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:54:1
  GDBusMessage_autoptr* = ptr GDBusMessage
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:55:1
  GDBusMessage_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:55:1
  GDBusMessage_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:55:1
  GDBusMessage_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:55:1
  GDBusMethodInvocation_autoptr* = ptr GDBusMethodInvocation
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:56:1
  GDBusMethodInvocation_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:56:1
  GDBusMethodInvocation_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:56:1
  GDBusMethodInvocation_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:56:1
  GDBusNodeInfo_autoptr* = ptr GDBusNodeInfo
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:57:1
  GDBusNodeInfo_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:57:1
  GDBusNodeInfo_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:57:1
  GDBusNodeInfo_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:57:1
  GDBusObject_autoptr* = ptr GDBusObject
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:58:1
  GDBusObject_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:58:1
  GDBusObject_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:58:1
  GDBusObject_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:58:1
  GDBusObjectManagerClient_autoptr* = ptr GDBusObjectManagerClient
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:59:1
  GDBusObjectManagerClient_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:59:1
  GDBusObjectManagerClient_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:59:1
  GDBusObjectManagerClient_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:59:1
  GDBusObjectManager_autoptr* = ptr GDBusObjectManager
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:60:1
  GDBusObjectManager_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:60:1
  GDBusObjectManager_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:60:1
  GDBusObjectManager_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:60:1
  GDBusObjectManagerServer_autoptr* = ptr GDBusObjectManagerServer
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:61:1
  GDBusObjectManagerServer_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:61:1
  GDBusObjectManagerServer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:61:1
  GDBusObjectManagerServer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:61:1
  GDBusObjectProxy_autoptr* = ptr GDBusObjectProxy
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:62:1
  GDBusObjectProxy_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:62:1
  GDBusObjectProxy_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:62:1
  GDBusObjectProxy_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:62:1
  GDBusObjectSkeleton_autoptr* = ptr GDBusObjectSkeleton
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:63:1
  GDBusObjectSkeleton_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:63:1
  GDBusObjectSkeleton_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:63:1
  GDBusObjectSkeleton_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:63:1
  GDBusProxy_autoptr* = ptr GDBusProxy
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:64:1
  GDBusProxy_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:64:1
  GDBusProxy_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:64:1
  GDBusProxy_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:64:1
  GDBusServer_autoptr* = ptr GDBusServer
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:65:1
  GDBusServer_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:65:1
  GDBusServer_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:65:1
  GDBusServer_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:65:1
  GDrive_autoptr* = ptr GDrive
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:66:1
  GDrive_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:66:1
  GDrive_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:66:1
  GDrive_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:66:1
  GEmblemedIcon_autoptr* = ptr GEmblemedIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:67:1
  GEmblemedIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:67:1
  GEmblemedIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:67:1
  GEmblemedIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:67:1
  GEmblem_autoptr* = ptr GEmblem
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:68:1
  GEmblem_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:68:1
  GEmblem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:68:1
  GEmblem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:68:1
  GFileEnumerator_autoptr* = ptr GFileEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:69:1
  GFileEnumerator_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:69:1
  GFileEnumerator_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:69:1
  GFileEnumerator_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:69:1
  GFile_autoptr* = ptr GFile
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:70:1
  GFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:70:1
  GFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:70:1
  GFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:70:1
  GFileAttributeInfoList_autoptr* = ptr GFileAttributeInfoList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:71:1
  GFileAttributeInfoList_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:71:1
  GFileAttributeInfoList_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:71:1
  GFileAttributeInfoList_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:71:1
  GFileIcon_autoptr* = ptr GFileIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:72:1
  GFileIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:72:1
  GFileIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:72:1
  GFileIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:72:1
  GFileInfo_autoptr* = ptr GFileInfo
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:73:1
  GFileInfo_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:73:1
  GFileInfo_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:73:1
  GFileInfo_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:73:1
  GFileInputStream_autoptr* = ptr GFileInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:74:1
  GFileInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:74:1
  GFileInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:74:1
  GFileInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:74:1
  GFileIOStream_autoptr* = ptr GFileIOStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:75:1
  GFileIOStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:75:1
  GFileIOStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:75:1
  GFileIOStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:75:1
  GFileMonitor_autoptr* = ptr GFileMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:76:1
  GFileMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:76:1
  GFileMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:76:1
  GFileMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:76:1
  GFilenameCompleter_autoptr* = ptr GFilenameCompleter
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:77:1
  GFilenameCompleter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:77:1
  GFilenameCompleter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:77:1
  GFilenameCompleter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:77:1
  GFileOutputStream_autoptr* = ptr GFileOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:78:1
  GFileOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:78:1
  GFileOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:78:1
  GFileOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:78:1
  GFilterInputStream_autoptr* = ptr GFilterInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:79:1
  GFilterInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:79:1
  GFilterInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:79:1
  GFilterInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:79:1
  GFilterOutputStream_autoptr* = ptr GFilterOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:80:1
  GFilterOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:80:1
  GFilterOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:80:1
  GFilterOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:80:1
  GIcon_autoptr* = ptr GIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:81:1
  GIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:81:1
  GIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:81:1
  GIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:81:1
  GInetAddress_autoptr* = ptr GInetAddress
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:82:1
  GInetAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:82:1
  GInetAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:82:1
  GInetAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:82:1
  GInetAddressMask_autoptr* = ptr GInetAddressMask
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:83:1
  GInetAddressMask_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:83:1
  GInetAddressMask_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:83:1
  GInetAddressMask_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:83:1
  GInetSocketAddress_autoptr* = ptr GInetSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:84:1
  GInetSocketAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:84:1
  GInetSocketAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:84:1
  GInetSocketAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:84:1
  GInitable_autoptr* = ptr GInitable
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:85:1
  GInitable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:85:1
  GInitable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:85:1
  GInitable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:85:1
  GInputStream_autoptr* = ptr GInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:86:1
  GInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:86:1
  GInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:86:1
  GInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:86:1
  GIOModule_autoptr* = ptr GIOModule
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:87:1
  GIOModule_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:87:1
  GIOModule_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:87:1
  GIOModule_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:87:1
  GIOStream_autoptr* = ptr GIOStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:88:1
  GIOStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:88:1
  GIOStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:88:1
  GIOStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:88:1
  GLoadableIcon_autoptr* = ptr GLoadableIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:89:1
  GLoadableIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:89:1
  GLoadableIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:89:1
  GLoadableIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:89:1
  GMemoryInputStream_autoptr* = ptr GMemoryInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:90:1
  GMemoryInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:90:1
  GMemoryInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:90:1
  GMemoryInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:90:1
  GMemoryOutputStream_autoptr* = ptr GMemoryOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:91:1
  GMemoryOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:91:1
  GMemoryOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:91:1
  GMemoryOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:91:1
  GMenu_autoptr* = ptr GMenu
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:92:1
  GMenu_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:92:1
  GMenu_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:92:1
  GMenu_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:92:1
  GMenuItem_autoptr* = ptr GMenuItem
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:93:1
  GMenuItem_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:93:1
  GMenuItem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:93:1
  GMenuItem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:93:1
  GMenuModel_autoptr* = ptr GMenuModel
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:94:1
  GMenuModel_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:94:1
  GMenuModel_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:94:1
  GMenuModel_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:94:1
  GMenuAttributeIter_autoptr* = ptr GMenuAttributeIter
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:95:1
  GMenuAttributeIter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:95:1
  GMenuAttributeIter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:95:1
  GMenuAttributeIter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:95:1
  GMenuLinkIter_autoptr* = ptr GMenuLinkIter
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:96:1
  GMenuLinkIter_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:96:1
  GMenuLinkIter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:96:1
  GMenuLinkIter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:96:1
  GMount_autoptr* = ptr GMount
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:97:1
  GMount_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:97:1
  GMount_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:97:1
  GMount_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:97:1
  GMountOperation_autoptr* = ptr GMountOperation
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:98:1
  GMountOperation_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:98:1
  GMountOperation_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:98:1
  GMountOperation_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:98:1
  GNativeVolumeMonitor_autoptr* = ptr GNativeVolumeMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:99:1
  GNativeVolumeMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:99:1
  GNativeVolumeMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:99:1
  GNativeVolumeMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:99:1
  GNetworkAddress_autoptr* = ptr GNetworkAddress
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:100:1
  GNetworkAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:100:1
  GNetworkAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:100:1
  GNetworkAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:100:1
  GNetworkMonitor_autoptr* = ptr GNetworkMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:101:1
  GNetworkMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:101:1
  GNetworkMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:101:1
  GNetworkMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:101:1
  GNetworkService_autoptr* = ptr GNetworkService
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:102:1
  GNetworkService_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:102:1
  GNetworkService_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:102:1
  GNetworkService_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:102:1
  GNotification_autoptr* = ptr GNotification
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:103:1
  GNotification_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:103:1
  GNotification_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:103:1
  GNotification_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:103:1
  GOutputStream_autoptr* = ptr GOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:104:1
  GOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:104:1
  GOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:104:1
  GOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:104:1
  GPermission_autoptr* = ptr GPermission
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:105:1
  GPermission_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:105:1
  GPermission_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:105:1
  GPermission_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:105:1
  GPollableInputStream_autoptr* = ptr GPollableInputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:106:1
  GPollableInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:106:1
  GPollableInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:106:1
  GPollableInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:106:1
  GPollableOutputStream_autoptr* = ptr GPollableOutputStream
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:107:1
  GPollableOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:107:1
  GPollableOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:107:1
  GPollableOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:107:1
  GPropertyAction_autoptr* = ptr GPropertyAction
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:108:1
  GPropertyAction_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:108:1
  GPropertyAction_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:108:1
  GPropertyAction_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:108:1
  GProxyAddressEnumerator_autoptr* = ptr GProxyAddressEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:109:1
  GProxyAddressEnumerator_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:109:1
  GProxyAddressEnumerator_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:109:1
  GProxyAddressEnumerator_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:109:1
  GProxyAddress_autoptr* = ptr GProxyAddress
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:110:1
  GProxyAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:110:1
  GProxyAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:110:1
  GProxyAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:110:1
  GProxy_autoptr* = ptr GProxy
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:111:1
  GProxy_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:111:1
  GProxy_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:111:1
  GProxy_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:111:1
  GProxyResolver_autoptr* = ptr GProxyResolver
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:112:1
  GProxyResolver_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:112:1
  GProxyResolver_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:112:1
  GProxyResolver_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:112:1
  GRemoteActionGroup_autoptr* = ptr GRemoteActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:113:1
  GRemoteActionGroup_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:113:1
  GRemoteActionGroup_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:113:1
  GRemoteActionGroup_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:113:1
  GResolver_autoptr* = ptr GResolver
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:114:1
  GResolver_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:114:1
  GResolver_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:114:1
  GResolver_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:114:1
  GResource_autoptr* = ptr GResource
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:115:1
  GResource_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:115:1
  GResource_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:115:1
  GResource_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:115:1
  GSeekable_autoptr* = ptr GSeekable
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:116:1
  GSeekable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:116:1
  GSeekable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:116:1
  GSeekable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:116:1
  GSettingsBackend_autoptr* = ptr GSettingsBackend
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:117:1
  GSettingsBackend_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:117:1
  GSettingsBackend_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:117:1
  GSettingsBackend_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:117:1
  GSettingsSchema_autoptr* = ptr GSettingsSchema
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:118:1
  GSettingsSchema_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:118:1
  GSettingsSchema_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:118:1
  GSettingsSchema_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:118:1
  GSettingsSchemaKey_autoptr* = ptr GSettingsSchemaKey
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:119:1
  GSettingsSchemaKey_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:119:1
  GSettingsSchemaKey_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:119:1
  GSettingsSchemaKey_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:119:1
  GSettingsSchemaSource_autoptr* = ptr GSettingsSchemaSource
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:120:1
  GSettingsSchemaSource_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:120:1
  GSettingsSchemaSource_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:120:1
  GSettingsSchemaSource_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:120:1
  GSettings_autoptr* = ptr GSettings
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:121:1
  GSettings_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:121:1
  GSettings_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:121:1
  GSettings_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:121:1
  GSimpleActionGroup_autoptr* = ptr GSimpleActionGroup
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:122:1
  GSimpleActionGroup_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:122:1
  GSimpleActionGroup_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:122:1
  GSimpleActionGroup_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:122:1
  GSimpleAction_autoptr* = ptr GSimpleAction
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:123:1
  GSimpleAction_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:123:1
  GSimpleAction_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:123:1
  GSimpleAction_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:123:1
  GSimpleAsyncResult_autoptr* = ptr GSimpleAsyncResult
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:124:1
  GSimpleAsyncResult_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:124:1
  GSimpleAsyncResult_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:124:1
  GSimpleAsyncResult_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:124:1
  GSimplePermission_autoptr* = ptr GSimplePermission
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:125:1
  GSimplePermission_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:125:1
  GSimplePermission_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:125:1
  GSimplePermission_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:125:1
  GSimpleProxyResolver_autoptr* = ptr GSimpleProxyResolver
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:126:1
  GSimpleProxyResolver_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:126:1
  GSimpleProxyResolver_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:126:1
  GSimpleProxyResolver_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:126:1
  GSocketAddressEnumerator_autoptr* = ptr GSocketAddressEnumerator
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:127:1
  GSocketAddressEnumerator_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:127:1
  GSocketAddressEnumerator_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:127:1
  GSocketAddressEnumerator_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:127:1
  GSocketAddress_autoptr* = ptr GSocketAddress
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:128:1
  GSocketAddress_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:128:1
  GSocketAddress_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:128:1
  GSocketAddress_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:128:1
  GSocketClient_autoptr* = ptr GSocketClient
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:129:1
  GSocketClient_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:129:1
  GSocketClient_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:129:1
  GSocketClient_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:129:1
  GSocketConnectable_autoptr* = ptr GSocketConnectable
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:130:1
  GSocketConnectable_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:130:1
  GSocketConnectable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:130:1
  GSocketConnectable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:130:1
  GSocketConnection_autoptr* = ptr GSocketConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:131:1
  GSocketConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:131:1
  GSocketConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:131:1
  GSocketConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:131:1
  GSocketControlMessage_autoptr* = ptr GSocketControlMessage
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:132:1
  GSocketControlMessage_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:132:1
  GSocketControlMessage_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:132:1
  GSocketControlMessage_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:132:1
  GSocket_autoptr* = ptr GSocket
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:133:1
  GSocket_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:133:1
  GSocket_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:133:1
  GSocket_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:133:1
  GSocketListener_autoptr* = ptr GSocketListener
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:134:1
  GSocketListener_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:134:1
  GSocketListener_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:134:1
  GSocketListener_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:134:1
  GSocketService_autoptr* = ptr GSocketService
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:135:1
  GSocketService_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:135:1
  GSocketService_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:135:1
  GSocketService_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:135:1
  GSubprocess_autoptr* = ptr GSubprocess
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:136:1
  GSubprocess_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:136:1
  GSubprocess_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:136:1
  GSubprocess_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:136:1
  GSubprocessLauncher_autoptr* = ptr GSubprocessLauncher
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:137:1
  GSubprocessLauncher_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:137:1
  GSubprocessLauncher_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:137:1
  GSubprocessLauncher_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:137:1
  GTask_autoptr* = ptr GTask
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:138:1
  GTask_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:138:1
  GTask_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:138:1
  GTask_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:138:1
  GTcpConnection_autoptr* = ptr GTcpConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:139:1
  GTcpConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:139:1
  GTcpConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:139:1
  GTcpConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:139:1
  GTcpWrapperConnection_autoptr* = ptr GTcpWrapperConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:140:1
  GTcpWrapperConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:140:1
  GTcpWrapperConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:140:1
  GTcpWrapperConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:140:1
  GTestDBus_autoptr* = ptr GTestDBus
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:141:1
  GTestDBus_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:141:1
  GTestDBus_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:141:1
  GTestDBus_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:141:1
  GThemedIcon_autoptr* = ptr GThemedIcon
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:142:1
  GThemedIcon_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:142:1
  GThemedIcon_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:142:1
  GThemedIcon_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:142:1
  GThreadedSocketService_autoptr* = ptr GThreadedSocketService
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:143:1
  GThreadedSocketService_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:143:1
  GThreadedSocketService_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:143:1
  GThreadedSocketService_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:143:1
  GTlsBackend_autoptr* = ptr GTlsBackend
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:144:1
  GTlsBackend_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:144:1
  GTlsBackend_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:144:1
  GTlsBackend_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:144:1
  GTlsCertificate_autoptr* = ptr GTlsCertificate
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:145:1
  GTlsCertificate_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:145:1
  GTlsCertificate_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:145:1
  GTlsCertificate_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:145:1
  GTlsClientConnection_autoptr* = ptr GTlsClientConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:146:1
  GTlsClientConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:146:1
  GTlsClientConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:146:1
  GTlsClientConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:146:1
  GTlsConnection_autoptr* = ptr GTlsConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:147:1
  GTlsConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:147:1
  GTlsConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:147:1
  GTlsConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:147:1
  GTlsDatabase_autoptr* = ptr GTlsDatabase
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:148:1
  GTlsDatabase_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:148:1
  GTlsDatabase_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:148:1
  GTlsDatabase_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:148:1
  GTlsFileDatabase_autoptr* = ptr GTlsFileDatabase
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:149:1
  GTlsFileDatabase_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:149:1
  GTlsFileDatabase_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:149:1
  GTlsFileDatabase_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:149:1
  GTlsInteraction_autoptr* = ptr GTlsInteraction
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:150:1
  GTlsInteraction_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:150:1
  GTlsInteraction_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:150:1
  GTlsInteraction_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:150:1
  GTlsPassword_autoptr* = ptr GTlsPassword
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:151:1
  GTlsPassword_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:151:1
  GTlsPassword_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:151:1
  GTlsPassword_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:151:1
  GTlsServerConnection_autoptr* = ptr GTlsServerConnection
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:152:1
  GTlsServerConnection_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:152:1
  GTlsServerConnection_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:152:1
  GTlsServerConnection_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:152:1
  GVfs_autoptr* = ptr GVfs
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:153:1
  GVfs_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:153:1
  GVfs_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:153:1
  GVfs_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:153:1
  GVolume_autoptr* = ptr GVolume
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:154:1
  GVolume_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:154:1
  GVolume_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:154:1
  GVolume_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:154:1
  GVolumeMonitor_autoptr* = ptr GVolumeMonitor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:155:1
  GVolumeMonitor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:155:1
  GVolumeMonitor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:155:1
  GVolumeMonitor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:155:1
  GZlibCompressor_autoptr* = ptr GZlibCompressor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:156:1
  GZlibCompressor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:156:1
  GZlibCompressor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:156:1
  GZlibCompressor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:156:1
  GZlibDecompressor_autoptr* = ptr GZlibDecompressor
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:157:1
  GZlibDecompressor_listautoptr* = ptr GList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:157:1
  GZlibDecompressor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:157:1
  GZlibDecompressor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/glib-2.0/gio/gio-autocleanups.h:157:1
  GArrowTensor* = struct_GArrowTensor
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  struct_GArrowTensor* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/tensor.h:29:1

  GArrowTensorClass* = struct_GArrowTensorClass
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  struct_GArrowTensorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/tensor.h:30:8

  GArrowTensor_autoptr* = ptr GArrowTensor
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensor_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensor_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensor_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensorClass_autoptr* = ptr GArrowTensorClass
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensorClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensorClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowTensorClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/tensor.h:29:1
  GArrowOutputStream* = struct_GArrowOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  struct_GArrowOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1

  GArrowOutputStreamClass* = struct_GArrowOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  struct_GArrowOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/output-stream.h:36:8

  GArrowOutputStream_autoptr* = ptr GArrowOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStreamClass_autoptr* = ptr GArrowOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowOutputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:34:1
  GArrowFileOutputStream* = struct_GArrowFileOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  struct_GArrowFileOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowOutputStream
      ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1

  GArrowFileOutputStreamClass* = struct_GArrowFileOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  struct_GArrowFileOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowOutputStreamClass
      ## Generated based on /usr/include/arrow-glib/output-stream.h:64:8

  GArrowFileOutputStream_autoptr* = ptr GArrowFileOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStreamClass_autoptr* = ptr GArrowFileOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowFileOutputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:59:1
  GArrowBufferOutputStream* = struct_GArrowBufferOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  struct_GArrowBufferOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowOutputStream
      ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1

  GArrowBufferOutputStreamClass* = struct_GArrowBufferOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  struct_GArrowBufferOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowOutputStreamClass
      ## Generated based on /usr/include/arrow-glib/output-stream.h:80:8

  GArrowBufferOutputStream_autoptr* = ptr GArrowBufferOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStreamClass_autoptr* = ptr GArrowBufferOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowBufferOutputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:75:1
  GArrowGIOOutputStream* = struct_GArrowGIOOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  struct_GArrowGIOOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowOutputStream
      ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1

  GArrowGIOOutputStreamClass* = struct_GArrowGIOOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  struct_GArrowGIOOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowOutputStreamClass
      ## Generated based on /usr/include/arrow-glib/output-stream.h:96:8

  GArrowGIOOutputStream_autoptr* = ptr GArrowGIOOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStreamClass_autoptr* = ptr GArrowGIOOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowGIOOutputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:91:1
  GArrowCompressedOutputStream* = struct_GArrowCompressedOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  struct_GArrowCompressedOutputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowOutputStream
      ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1

  GArrowCompressedOutputStreamClass* = struct_GArrowCompressedOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  struct_GArrowCompressedOutputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowOutputStreamClass
      ## Generated based on /usr/include/arrow-glib/output-stream.h:119:8

  GArrowCompressedOutputStream_autoptr* = ptr GArrowCompressedOutputStream
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStreamClass_autoptr* = ptr GArrowCompressedOutputStreamClass
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowCompressedOutputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/output-stream.h:114:1
  GArrowTableConcatenateOptions* = struct_GArrowTableConcatenateOptions
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  struct_GArrowTableConcatenateOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/table.h:33:1

  GArrowTableConcatenateOptionsClass* = struct_GArrowTableConcatenateOptionsClass
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  struct_GArrowTableConcatenateOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/table.h:38:8

  GArrowTableConcatenateOptions_autoptr* = ptr GArrowTableConcatenateOptions
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptionsClass_autoptr* = ptr GArrowTableConcatenateOptionsClass
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTableConcatenateOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:33:1
  GArrowTable* = struct_GArrowTable
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  struct_GArrowTable* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/table.h:49:1

  GArrowTableClass* = struct_GArrowTableClass
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  struct_GArrowTableClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/table.h:50:8

  GArrowTable_autoptr* = ptr GArrowTable
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTable_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTableClass_autoptr* = ptr GArrowTableClass
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTableClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTableClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowTableClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:49:1
  GArrowFeatherWriteProperties* = struct_GArrowFeatherWriteProperties
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  struct_GArrowFeatherWriteProperties* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/table.h:155:1

  GArrowFeatherWritePropertiesClass* = struct_GArrowFeatherWritePropertiesClass
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  struct_GArrowFeatherWritePropertiesClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/table.h:160:8

  GArrowFeatherWriteProperties_autoptr* = ptr GArrowFeatherWriteProperties
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWriteProperties_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWriteProperties_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWriteProperties_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWritePropertiesClass_autoptr* = ptr GArrowFeatherWritePropertiesClass
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWritePropertiesClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWritePropertiesClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowFeatherWritePropertiesClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table.h:155:1
  GArrowDatum* = struct_GArrowDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  struct_GArrowDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/datum.h:32:1

  GArrowDatumClass* = struct_GArrowDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  struct_GArrowDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/datum.h:33:8

  GArrowDatum_autoptr* = ptr GArrowDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatumClass_autoptr* = ptr GArrowDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:32:1
  GArrowScalarDatum* = struct_GArrowScalarDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  struct_GArrowScalarDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDatum
      ## Generated based on /usr/include/arrow-glib/datum.h:65:1

  GArrowScalarDatumClass* = struct_GArrowScalarDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  struct_GArrowScalarDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDatumClass
      ## Generated based on /usr/include/arrow-glib/datum.h:67:8

  GArrowScalarDatum_autoptr* = ptr GArrowScalarDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatumClass_autoptr* = ptr GArrowScalarDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowScalarDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:65:1
  GArrowArrayDatum* = struct_GArrowArrayDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  struct_GArrowArrayDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDatum
      ## Generated based on /usr/include/arrow-glib/datum.h:78:1

  GArrowArrayDatumClass* = struct_GArrowArrayDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  struct_GArrowArrayDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDatumClass
      ## Generated based on /usr/include/arrow-glib/datum.h:80:8

  GArrowArrayDatum_autoptr* = ptr GArrowArrayDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatumClass_autoptr* = ptr GArrowArrayDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowArrayDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:78:1
  GArrowChunkedArrayDatum* = struct_GArrowChunkedArrayDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  struct_GArrowChunkedArrayDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDatum
      ## Generated based on /usr/include/arrow-glib/datum.h:91:1

  GArrowChunkedArrayDatumClass* = struct_GArrowChunkedArrayDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  struct_GArrowChunkedArrayDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDatumClass
      ## Generated based on /usr/include/arrow-glib/datum.h:96:8

  GArrowChunkedArrayDatum_autoptr* = ptr GArrowChunkedArrayDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatumClass_autoptr* = ptr GArrowChunkedArrayDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowChunkedArrayDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:91:1
  GArrowRecordBatchDatum* = struct_GArrowRecordBatchDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  struct_GArrowRecordBatchDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDatum
      ## Generated based on /usr/include/arrow-glib/datum.h:107:1

  GArrowRecordBatchDatumClass* = struct_GArrowRecordBatchDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  struct_GArrowRecordBatchDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDatumClass
      ## Generated based on /usr/include/arrow-glib/datum.h:112:8

  GArrowRecordBatchDatum_autoptr* = ptr GArrowRecordBatchDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatumClass_autoptr* = ptr GArrowRecordBatchDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowRecordBatchDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:107:1
  GArrowTableDatum* = struct_GArrowTableDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  struct_GArrowTableDatum* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowDatum
      ## Generated based on /usr/include/arrow-glib/datum.h:123:1

  GArrowTableDatumClass* = struct_GArrowTableDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  struct_GArrowTableDatumClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowDatumClass
      ## Generated based on /usr/include/arrow-glib/datum.h:125:8

  GArrowTableDatum_autoptr* = ptr GArrowTableDatum
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatum_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatum_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatum_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatumClass_autoptr* = ptr GArrowTableDatumClass
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatumClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatumClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowTableDatumClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/datum.h:123:1
  GArrowInputStream* = struct_GArrowInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  struct_GArrowInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1

  GArrowInputStreamClass* = struct_GArrowInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  struct_GArrowInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:36:8

  GArrowInputStream_autoptr* = ptr GArrowInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStreamClass_autoptr* = ptr GArrowInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:34:1
  GArrowSeekableInputStream* = struct_GArrowSeekableInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  struct_GArrowSeekableInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1

  GArrowSeekableInputStreamClass* = struct_GArrowSeekableInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  struct_GArrowSeekableInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:71:8

  GArrowSeekableInputStream_autoptr* = ptr GArrowSeekableInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStreamClass_autoptr* = ptr GArrowSeekableInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowSeekableInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:66:1
  GArrowBufferInputStream* = struct_GArrowBufferInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  struct_GArrowBufferInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowSeekableInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1

  GArrowBufferInputStreamClass* = struct_GArrowBufferInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  struct_GArrowBufferInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowSeekableInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:111:8

  GArrowBufferInputStream_autoptr* = ptr GArrowBufferInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStreamClass_autoptr* = ptr GArrowBufferInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowBufferInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:106:1
  GArrowFileInputStream* = struct_GArrowFileInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  struct_GArrowFileInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowSeekableInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1

  GArrowFileInputStreamClass* = struct_GArrowFileInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  struct_GArrowFileInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowSeekableInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:131:8

  GArrowFileInputStream_autoptr* = ptr GArrowFileInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStreamClass_autoptr* = ptr GArrowFileInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowFileInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:126:1
  GArrowMemoryMappedInputStream* = struct_GArrowMemoryMappedInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  struct_GArrowMemoryMappedInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowSeekableInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1

  GArrowMemoryMappedInputStreamClass* = struct_GArrowMemoryMappedInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  struct_GArrowMemoryMappedInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowSeekableInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:156:8

  GArrowMemoryMappedInputStream_autoptr* = ptr GArrowMemoryMappedInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStreamClass_autoptr* = ptr GArrowMemoryMappedInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowMemoryMappedInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:151:1
  GArrowGIOInputStream* = struct_GArrowGIOInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  struct_GArrowGIOInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowSeekableInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1

  GArrowGIOInputStreamClass* = struct_GArrowGIOInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  struct_GArrowGIOInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowSeekableInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:172:8

  GArrowGIOInputStream_autoptr* = ptr GArrowGIOInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStreamClass_autoptr* = ptr GArrowGIOInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowGIOInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:167:1
  GArrowCompressedInputStream* = struct_GArrowCompressedInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  struct_GArrowCompressedInputStream* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowInputStream
      ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1

  GArrowCompressedInputStreamClass* = struct_GArrowCompressedInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  struct_GArrowCompressedInputStreamClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowInputStreamClass
      ## Generated based on /usr/include/arrow-glib/input-stream.h:195:8

  GArrowCompressedInputStream_autoptr* = ptr GArrowCompressedInputStream
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStream_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStream_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStream_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStreamClass_autoptr* = ptr GArrowCompressedInputStreamClass
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStreamClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStreamClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowCompressedInputStreamClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/input-stream.h:190:1
  GArrowMetadataVersion* = enum_GArrowMetadataVersion
    ## Generated based on /usr/include/arrow-glib/metadata-version.h:39:3
  GArrowTimestampParser* = struct_GArrowTimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  struct_GArrowTimestampParser* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1

  GArrowTimestampParserClass* = struct_GArrowTimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  struct_GArrowTimestampParserClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:32:8

  GArrowTimestampParser_autoptr* = ptr GArrowTimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParser_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParser_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParser_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParserClass_autoptr* = ptr GArrowTimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParserClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParserClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowTimestampParserClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:30:1
  GArrowStrptimeTimestampParser* = struct_GArrowStrptimeTimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  struct_GArrowStrptimeTimestampParser* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTimestampParser
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1

  GArrowStrptimeTimestampParserClass* = struct_GArrowStrptimeTimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  struct_GArrowStrptimeTimestampParserClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTimestampParserClass
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:49:8

  GArrowStrptimeTimestampParser_autoptr* = ptr GArrowStrptimeTimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParser_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParser_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParser_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParserClass_autoptr* = ptr GArrowStrptimeTimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParserClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParserClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowStrptimeTimestampParserClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:44:1
  GArrowISO8601TimestampParser* = struct_GArrowISO8601TimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  struct_GArrowISO8601TimestampParser* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowTimestampParser
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1

  GArrowISO8601TimestampParserClass* = struct_GArrowISO8601TimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  struct_GArrowISO8601TimestampParserClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowTimestampParserClass
      ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:69:8

  GArrowISO8601TimestampParser_autoptr* = ptr GArrowISO8601TimestampParser
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParser_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParser_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParser_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParserClass_autoptr* = ptr GArrowISO8601TimestampParserClass
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParserClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParserClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowISO8601TimestampParserClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/timestamp-parser.h:64:1
  GArrowRecordBatchReader* = struct_GArrowRecordBatchReader
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  struct_GArrowRecordBatchReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/reader.h:33:1

  GArrowRecordBatchReaderClass* = struct_GArrowRecordBatchReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  struct_GArrowRecordBatchReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:38:8

  GArrowRecordBatchReader_autoptr* = ptr GArrowRecordBatchReader
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReaderClass_autoptr* = ptr GArrowRecordBatchReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowRecordBatchReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:33:1
  GArrowTableBatchReader* = struct_GArrowTableBatchReader
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  struct_GArrowTableBatchReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowRecordBatchReader
      ## Generated based on /usr/include/arrow-glib/reader.h:90:1

  GArrowTableBatchReaderClass* = struct_GArrowTableBatchReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  struct_GArrowTableBatchReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowRecordBatchReaderClass
      ## Generated based on /usr/include/arrow-glib/reader.h:95:8

  GArrowTableBatchReader_autoptr* = ptr GArrowTableBatchReader
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReaderClass_autoptr* = ptr GArrowTableBatchReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowTableBatchReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:90:1
  GArrowRecordBatchStreamReader* = struct_GArrowRecordBatchStreamReader
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  struct_GArrowRecordBatchStreamReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowRecordBatchReader
      ## Generated based on /usr/include/arrow-glib/reader.h:112:1

  GArrowRecordBatchStreamReaderClass* = struct_GArrowRecordBatchStreamReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  struct_GArrowRecordBatchStreamReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowRecordBatchReaderClass
      ## Generated based on /usr/include/arrow-glib/reader.h:117:8

  GArrowRecordBatchStreamReader_autoptr* = ptr GArrowRecordBatchStreamReader
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReaderClass_autoptr* = ptr GArrowRecordBatchStreamReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchStreamReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:112:1
  GArrowRecordBatchFileReader* = struct_GArrowRecordBatchFileReader
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  struct_GArrowRecordBatchFileReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:128:1

  GArrowRecordBatchFileReaderClass* = struct_GArrowRecordBatchFileReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  struct_GArrowRecordBatchFileReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:133:8

  GArrowRecordBatchFileReader_autoptr* = ptr GArrowRecordBatchFileReader
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReaderClass_autoptr* = ptr GArrowRecordBatchFileReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowRecordBatchFileReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:128:1
  GArrowFeatherFileReader* = struct_GArrowFeatherFileReader
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  struct_GArrowFeatherFileReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:171:1

  GArrowFeatherFileReaderClass* = struct_GArrowFeatherFileReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  struct_GArrowFeatherFileReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:176:8

  GArrowFeatherFileReader_autoptr* = ptr GArrowFeatherFileReader
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReaderClass_autoptr* = ptr GArrowFeatherFileReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowFeatherFileReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:171:1
  GArrowCSVReadOptions* = struct_GArrowCSVReadOptions
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  struct_GArrowCSVReadOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:209:1

  GArrowCSVReadOptionsClass* = struct_GArrowCSVReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  struct_GArrowCSVReadOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:211:8

  GArrowCSVReadOptions_autoptr* = ptr GArrowCSVReadOptions
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptionsClass_autoptr* = ptr GArrowCSVReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReadOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:209:1
  GArrowCSVReader* = struct_GArrowCSVReader
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  struct_GArrowCSVReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:295:1

  GArrowCSVReaderClass* = struct_GArrowCSVReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  struct_GArrowCSVReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:296:8

  GArrowCSVReader_autoptr* = ptr GArrowCSVReader
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReaderClass_autoptr* = ptr GArrowCSVReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowCSVReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:295:1
  GArrowJSONReadUnexpectedFieldBehavior* = enum_GArrowJSONReadUnexpectedFieldBehavior
    ## Generated based on /usr/include/arrow-glib/reader.h:323:3
  GArrowJSONReadOptions* = struct_GArrowJSONReadOptions
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  struct_GArrowJSONReadOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:327:1

  GArrowJSONReadOptionsClass* = struct_GArrowJSONReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  struct_GArrowJSONReadOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:329:8

  GArrowJSONReadOptions_autoptr* = ptr GArrowJSONReadOptions
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptionsClass_autoptr* = ptr GArrowJSONReadOptionsClass
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReadOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:327:1
  GArrowJSONReader* = struct_GArrowJSONReader
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  struct_GArrowJSONReader* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/reader.h:340:1

  GArrowJSONReaderClass* = struct_GArrowJSONReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  struct_GArrowJSONReaderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/reader.h:342:8

  GArrowJSONReader_autoptr* = ptr GArrowJSONReader
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReader_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReader_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReader_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReaderClass_autoptr* = ptr GArrowJSONReaderClass
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReaderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReaderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowJSONReaderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/reader.h:340:1
  GArrowExecuteContext* = struct_GArrowExecuteContext
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  struct_GArrowExecuteContext* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:34:1

  GArrowExecuteContextClass* = struct_GArrowExecuteContextClass
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  struct_GArrowExecuteContextClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:36:8

  GArrowExecuteContext_autoptr* = ptr GArrowExecuteContext
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContext_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContext_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContext_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContextClass_autoptr* = ptr GArrowExecuteContextClass
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContextClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContextClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowExecuteContextClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:34:1
  GArrowFunctionDoc* = struct_GArrowFunctionDoc
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  struct_GArrowFunctionDoc* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:55:1

  GArrowFunctionDocClass* = struct_GArrowFunctionDocClass
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  struct_GArrowFunctionDocClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:57:8

  GArrowFunctionDoc_autoptr* = ptr GArrowFunctionDoc
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDoc_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDoc_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDoc_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDocClass_autoptr* = ptr GArrowFunctionDocClass
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDocClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDocClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunctionDocClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:55:1
  GArrowFunction* = struct_GArrowFunction
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  struct_GArrowFunction* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:77:1

  GArrowFunctionClass* = struct_GArrowFunctionClass
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  struct_GArrowFunctionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:78:8

  GArrowFunction_autoptr* = ptr GArrowFunction
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunction_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunction_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunction_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunctionClass_autoptr* = ptr GArrowFunctionClass
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunctionClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunctionClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowFunctionClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:77:1
  GArrowExecuteNodeOptions* = struct_GArrowExecuteNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  struct_GArrowExecuteNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:121:1

  GArrowExecuteNodeOptionsClass* = struct_GArrowExecuteNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  struct_GArrowExecuteNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:126:8

  GArrowExecuteNodeOptions_autoptr* = ptr GArrowExecuteNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptionsClass_autoptr* = ptr GArrowExecuteNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowExecuteNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:121:1
  GArrowSourceNodeOptions* = struct_GArrowSourceNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  struct_GArrowSourceNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:133:1

  GArrowSourceNodeOptionsClass* = struct_GArrowSourceNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  struct_GArrowSourceNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:138:8

  GArrowSourceNodeOptions_autoptr* = ptr GArrowSourceNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptionsClass_autoptr* = ptr GArrowSourceNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowSourceNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:133:1
  GArrowFilterNodeOptions* = struct_GArrowFilterNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  struct_GArrowFilterNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:155:1

  GArrowFilterNodeOptionsClass* = struct_GArrowFilterNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  struct_GArrowFilterNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:160:8

  GArrowFilterNodeOptions_autoptr* = ptr GArrowFilterNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptionsClass_autoptr* = ptr GArrowFilterNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowFilterNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:155:1
  GArrowProjectNodeOptions* = struct_GArrowProjectNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  struct_GArrowProjectNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:171:1

  GArrowProjectNodeOptionsClass* = struct_GArrowProjectNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  struct_GArrowProjectNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:176:8

  GArrowProjectNodeOptions_autoptr* = ptr GArrowProjectNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptionsClass_autoptr* = ptr GArrowProjectNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowProjectNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:171:1
  GArrowAggregation* = struct_GArrowAggregation
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  struct_GArrowAggregation* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:187:1

  GArrowAggregationClass* = struct_GArrowAggregationClass
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  struct_GArrowAggregationClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:189:8

  GArrowAggregation_autoptr* = ptr GArrowAggregation
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregation_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregation_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregation_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregationClass_autoptr* = ptr GArrowAggregationClass
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregationClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregationClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregationClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:187:1
  GArrowAggregateNodeOptions* = struct_GArrowAggregateNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  struct_GArrowAggregateNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:203:1

  GArrowAggregateNodeOptionsClass* = struct_GArrowAggregateNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  struct_GArrowAggregateNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:208:8

  GArrowAggregateNodeOptions_autoptr* = ptr GArrowAggregateNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptionsClass_autoptr* = ptr GArrowAggregateNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowAggregateNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:203:1
  GArrowSinkNodeOptions* = struct_GArrowSinkNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  struct_GArrowSinkNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:222:1

  GArrowSinkNodeOptionsClass* = struct_GArrowSinkNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  struct_GArrowSinkNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:227:8

  GArrowSinkNodeOptions_autoptr* = ptr GArrowSinkNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptionsClass_autoptr* = ptr GArrowSinkNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowSinkNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:222:1
  GArrowJoinType* = enum_GArrowJoinType
    ## Generated based on /usr/include/arrow-glib/compute.h:263:3
  GArrowHashJoinNodeOptions* = struct_GArrowHashJoinNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  struct_GArrowHashJoinNodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExecuteNodeOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:267:1

  GArrowHashJoinNodeOptionsClass* = struct_GArrowHashJoinNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  struct_GArrowHashJoinNodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExecuteNodeOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:272:8

  GArrowHashJoinNodeOptions_autoptr* = ptr GArrowHashJoinNodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptionsClass_autoptr* = ptr GArrowHashJoinNodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowHashJoinNodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:267:1
  GArrowExecuteNode* = struct_GArrowExecuteNode
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  struct_GArrowExecuteNode* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:300:1

  GArrowExecuteNodeClass* = struct_GArrowExecuteNodeClass
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  struct_GArrowExecuteNodeClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:302:8

  GArrowExecuteNode_autoptr* = ptr GArrowExecuteNode
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNode_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNode_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNode_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNodeClass_autoptr* = ptr GArrowExecuteNodeClass
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNodeClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNodeClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecuteNodeClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:300:1
  GArrowExecutePlan* = struct_GArrowExecutePlan
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  struct_GArrowExecutePlan* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:316:1

  GArrowExecutePlanClass* = struct_GArrowExecutePlanClass
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  struct_GArrowExecutePlanClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:318:8

  GArrowExecutePlan_autoptr* = ptr GArrowExecutePlan
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlan_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlan_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlan_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlanClass_autoptr* = ptr GArrowExecutePlanClass
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlanClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlanClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowExecutePlanClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:316:1
  GArrowScalarAggregateOptions* = struct_GArrowScalarAggregateOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  struct_GArrowScalarAggregateOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:391:1

  GArrowScalarAggregateOptionsClass* = struct_GArrowScalarAggregateOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  struct_GArrowScalarAggregateOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:396:8

  GArrowScalarAggregateOptions_autoptr* = ptr GArrowScalarAggregateOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptionsClass_autoptr* = ptr GArrowScalarAggregateOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowScalarAggregateOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:391:1
  GArrowCountMode* = enum_GArrowCountMode
    ## Generated based on /usr/include/arrow-glib/compute.h:420:3
  GArrowCountOptions* = struct_GArrowCountOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  struct_GArrowCountOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:424:1

  GArrowCountOptionsClass* = struct_GArrowCountOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  struct_GArrowCountOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:426:8

  GArrowCountOptions_autoptr* = ptr GArrowCountOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptionsClass_autoptr* = ptr GArrowCountOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowCountOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:424:1
  GArrowFilterNullSelectionBehavior* = enum_GArrowFilterNullSelectionBehavior
    ## Generated based on /usr/include/arrow-glib/compute.h:448:3
  GArrowFilterOptions* = struct_GArrowFilterOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  struct_GArrowFilterOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:452:1

  GArrowFilterOptionsClass* = struct_GArrowFilterOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  struct_GArrowFilterOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:457:8

  GArrowFilterOptions_autoptr* = ptr GArrowFilterOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptionsClass_autoptr* = ptr GArrowFilterOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowFilterOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:452:1
  GArrowTakeOptions* = struct_GArrowTakeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  struct_GArrowTakeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:468:1

  GArrowTakeOptionsClass* = struct_GArrowTakeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  struct_GArrowTakeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:470:8

  GArrowTakeOptions_autoptr* = ptr GArrowTakeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptionsClass_autoptr* = ptr GArrowTakeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowTakeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:468:1
  GArrowSortOrder* = enum_GArrowSortOrder
    ## Generated based on /usr/include/arrow-glib/compute.h:491:3
  GArrowNullPlacement* = enum_GArrowNullPlacement
    ## Generated based on /usr/include/arrow-glib/compute.h:509:3
  GArrowArraySortOptions* = struct_GArrowArraySortOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  struct_GArrowArraySortOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:513:1

  GArrowArraySortOptionsClass* = struct_GArrowArraySortOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  struct_GArrowArraySortOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:518:8

  GArrowArraySortOptions_autoptr* = ptr GArrowArraySortOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptionsClass_autoptr* = ptr GArrowArraySortOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowArraySortOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:513:1
  GArrowSortKey* = struct_GArrowSortKey
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  struct_GArrowSortKey* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/compute.h:533:1

  GArrowSortKeyClass* = struct_GArrowSortKeyClass
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  struct_GArrowSortKeyClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/compute.h:534:8

  GArrowSortKey_autoptr* = ptr GArrowSortKey
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKey_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKey_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKey_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKeyClass_autoptr* = ptr GArrowSortKeyClass
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKeyClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKeyClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortKeyClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:533:1
  GArrowSortOptions* = struct_GArrowSortOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  struct_GArrowSortOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:549:1

  GArrowSortOptionsClass* = struct_GArrowSortOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  struct_GArrowSortOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:551:8

  GArrowSortOptions_autoptr* = ptr GArrowSortOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptionsClass_autoptr* = ptr GArrowSortOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSortOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:549:1
  GArrowSetLookupOptions* = struct_GArrowSetLookupOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  struct_GArrowSetLookupOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:574:1

  GArrowSetLookupOptionsClass* = struct_GArrowSetLookupOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  struct_GArrowSetLookupOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:579:8

  GArrowSetLookupOptions_autoptr* = ptr GArrowSetLookupOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptionsClass_autoptr* = ptr GArrowSetLookupOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowSetLookupOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:574:1
  GArrowVarianceOptions* = struct_GArrowVarianceOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  struct_GArrowVarianceOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:590:1

  GArrowVarianceOptionsClass* = struct_GArrowVarianceOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  struct_GArrowVarianceOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:595:8

  GArrowVarianceOptions_autoptr* = ptr GArrowVarianceOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptionsClass_autoptr* = ptr GArrowVarianceOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowVarianceOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:590:1
  GArrowRoundMode* = enum_GArrowRoundMode
    ## Generated based on /usr/include/arrow-glib/compute.h:647:3
  GArrowRoundOptions* = struct_GArrowRoundOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  struct_GArrowRoundOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:651:1

  GArrowRoundOptionsClass* = struct_GArrowRoundOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  struct_GArrowRoundOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:653:8

  GArrowRoundOptions_autoptr* = ptr GArrowRoundOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptionsClass_autoptr* = ptr GArrowRoundOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:651:1
  GArrowRoundToMultipleOptions* = struct_GArrowRoundToMultipleOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  struct_GArrowRoundToMultipleOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:665:1

  GArrowRoundToMultipleOptionsClass* = struct_GArrowRoundToMultipleOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  struct_GArrowRoundToMultipleOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:670:8

  GArrowRoundToMultipleOptions_autoptr* = ptr GArrowRoundToMultipleOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptionsClass_autoptr* = ptr GArrowRoundToMultipleOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowRoundToMultipleOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:665:1
  GArrowMatchSubstringOptions* = struct_GArrowMatchSubstringOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  struct_GArrowMatchSubstringOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:681:1

  GArrowMatchSubstringOptionsClass* = struct_GArrowMatchSubstringOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  struct_GArrowMatchSubstringOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:686:8

  GArrowMatchSubstringOptions_autoptr* = ptr GArrowMatchSubstringOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptionsClass_autoptr* = ptr GArrowMatchSubstringOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowMatchSubstringOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:681:1
  GArrowUTF8NormalizeForm* = enum_GArrowUTF8NormalizeForm
    ## Generated based on /usr/include/arrow-glib/compute.h:713:3
  GArrowUTF8NormalizeOptions* = struct_GArrowUTF8NormalizeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  struct_GArrowUTF8NormalizeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:717:1

  GArrowUTF8NormalizeOptionsClass* = struct_GArrowUTF8NormalizeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  struct_GArrowUTF8NormalizeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:722:8

  GArrowUTF8NormalizeOptions_autoptr* = ptr GArrowUTF8NormalizeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptionsClass_autoptr* = ptr GArrowUTF8NormalizeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowUTF8NormalizeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:717:1
  GArrowQuantileInterpolation* = enum_GArrowQuantileInterpolation
    ## Generated based on /usr/include/arrow-glib/compute.h:750:3
  GArrowQuantileOptions* = struct_GArrowQuantileOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  struct_GArrowQuantileOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:754:1

  GArrowQuantileOptionsClass* = struct_GArrowQuantileOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  struct_GArrowQuantileOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:759:8

  GArrowQuantileOptions_autoptr* = ptr GArrowQuantileOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptionsClass_autoptr* = ptr GArrowQuantileOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowQuantileOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:754:1
  GArrowIndexOptions* = struct_GArrowIndexOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  struct_GArrowIndexOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:781:1

  GArrowIndexOptionsClass* = struct_GArrowIndexOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  struct_GArrowIndexOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:783:8

  GArrowIndexOptions_autoptr* = ptr GArrowIndexOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptionsClass_autoptr* = ptr GArrowIndexOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowIndexOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:781:1
  GArrowRankTiebreaker* = enum_GArrowRankTiebreaker
    ## Generated based on /usr/include/arrow-glib/compute.h:815:3
  GArrowRankOptions* = struct_GArrowRankOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  struct_GArrowRankOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:819:1

  GArrowRankOptionsClass* = struct_GArrowRankOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  struct_GArrowRankOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:821:8

  GArrowRankOptions_autoptr* = ptr GArrowRankOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptionsClass_autoptr* = ptr GArrowRankOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRankOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:819:1
  GArrowRunEndEncodeOptions* = struct_GArrowRunEndEncodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  struct_GArrowRunEndEncodeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:1032:1

  GArrowRunEndEncodeOptionsClass* = struct_GArrowRunEndEncodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  struct_GArrowRunEndEncodeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:1037:8

  GArrowRunEndEncodeOptions_autoptr* = ptr GArrowRunEndEncodeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptionsClass_autoptr* = ptr GArrowRunEndEncodeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowRunEndEncodeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1032:1
  GArrowStrptimeOptions* = struct_GArrowStrptimeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  struct_GArrowStrptimeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:1057:1

  GArrowStrptimeOptionsClass* = struct_GArrowStrptimeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  struct_GArrowStrptimeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:1062:8

  GArrowStrptimeOptions_autoptr* = ptr GArrowStrptimeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptionsClass_autoptr* = ptr GArrowStrptimeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrptimeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1057:1
  GArrowStrftimeOptions* = struct_GArrowStrftimeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  struct_GArrowStrftimeOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:1073:1

  GArrowStrftimeOptionsClass* = struct_GArrowStrftimeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  struct_GArrowStrftimeOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:1078:8

  GArrowStrftimeOptions_autoptr* = ptr GArrowStrftimeOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptionsClass_autoptr* = ptr GArrowStrftimeOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowStrftimeOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1073:1
  GArrowSplitPatternOptions* = struct_GArrowSplitPatternOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  struct_GArrowSplitPatternOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:1089:1

  GArrowSplitPatternOptionsClass* = struct_GArrowSplitPatternOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  struct_GArrowSplitPatternOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:1094:8

  GArrowSplitPatternOptions_autoptr* = ptr GArrowSplitPatternOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptionsClass_autoptr* = ptr GArrowSplitPatternOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowSplitPatternOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1089:1
  GArrowStructFieldOptions* = struct_GArrowStructFieldOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  struct_GArrowStructFieldOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFunctionOptions
      ## Generated based on /usr/include/arrow-glib/compute.h:1105:1

  GArrowStructFieldOptionsClass* = struct_GArrowStructFieldOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  struct_GArrowStructFieldOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFunctionOptionsClass
      ## Generated based on /usr/include/arrow-glib/compute.h:1110:8

  GArrowStructFieldOptions_autoptr* = ptr GArrowStructFieldOptions
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptionsClass_autoptr* = ptr GArrowStructFieldOptionsClass
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStructFieldOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/compute.h:1105:1
  GArrowStreamListener* = struct_GArrowStreamListener
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  struct_GArrowStreamListener* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decoder.h:29:1

  GArrowStreamListenerClass* = struct_GArrowStreamListenerClass
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  struct_GArrowStreamListenerClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decoder.h:31:8
    on_eos*: proc(a0: ptr GArrowStreamListener, a1: ptr ptr GError): gboolean {.cdecl.}
    on_record_batch_decoded*: proc(
      a0: ptr GArrowStreamListener,
      a1: ptr GArrowRecordBatch,
      a2: ptr GHashTable,
      a3: ptr ptr GError,
    ): gboolean {.cdecl.}
    on_schema_decoded*: proc(
      a0: ptr GArrowStreamListener,
      a1: ptr GArrowSchema,
      a2: ptr GArrowSchema,
      a3: ptr ptr GError,
    ): gboolean {.cdecl.}

  GArrowStreamListener_autoptr* = ptr GArrowStreamListener
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListener_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListener_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListener_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListenerClass_autoptr* = ptr GArrowStreamListenerClass
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListenerClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListenerClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamListenerClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decoder.h:29:1
  GArrowStreamDecoder* = struct_GArrowStreamDecoder
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  struct_GArrowStreamDecoder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/decoder.h:66:1

  GArrowStreamDecoderClass* = struct_GArrowStreamDecoderClass
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  struct_GArrowStreamDecoderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/decoder.h:68:8

  GArrowStreamDecoder_autoptr* = ptr GArrowStreamDecoder
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoderClass_autoptr* = ptr GArrowStreamDecoderClass
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowStreamDecoderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/decoder.h:66:1
  GArrowError* = enum_GArrowError
    ## Generated based on /usr/include/arrow-glib/error.h:67:3
  GArrowLiteralExpression* = struct_GArrowLiteralExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  struct_GArrowLiteralExpression* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExpression
      ## Generated based on /usr/include/arrow-glib/expression.h:35:1

  GArrowLiteralExpressionClass* = struct_GArrowLiteralExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  struct_GArrowLiteralExpressionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExpressionClass
      ## Generated based on /usr/include/arrow-glib/expression.h:40:8

  GArrowLiteralExpression_autoptr* = ptr GArrowLiteralExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpression_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpression_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpression_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpressionClass_autoptr* = ptr GArrowLiteralExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpressionClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpressionClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowLiteralExpressionClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:35:1
  GArrowFieldExpression* = struct_GArrowFieldExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  struct_GArrowFieldExpression* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExpression
      ## Generated based on /usr/include/arrow-glib/expression.h:51:1

  GArrowFieldExpressionClass* = struct_GArrowFieldExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  struct_GArrowFieldExpressionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExpressionClass
      ## Generated based on /usr/include/arrow-glib/expression.h:56:8

  GArrowFieldExpression_autoptr* = ptr GArrowFieldExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpression_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpression_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpression_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpressionClass_autoptr* = ptr GArrowFieldExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpressionClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpressionClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowFieldExpressionClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:51:1
  GArrowCallExpression* = struct_GArrowCallExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  struct_GArrowCallExpression* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowExpression
      ## Generated based on /usr/include/arrow-glib/expression.h:67:1

  GArrowCallExpressionClass* = struct_GArrowCallExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  struct_GArrowCallExpressionClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowExpressionClass
      ## Generated based on /usr/include/arrow-glib/expression.h:69:8

  GArrowCallExpression_autoptr* = ptr GArrowCallExpression
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpression_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpression_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpression_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpressionClass_autoptr* = ptr GArrowCallExpressionClass
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpressionClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpressionClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowCallExpressionClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/expression.h:67:1
  GArrowMemoryPool* = struct_GArrowMemoryPool
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  struct_GArrowMemoryPool* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1

  GArrowMemoryPoolClass* = struct_GArrowMemoryPoolClass
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  struct_GArrowMemoryPoolClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/memory-pool.h:32:8

  GArrowMemoryPool_autoptr* = ptr GArrowMemoryPool
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPool_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPool_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPool_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPoolClass_autoptr* = ptr GArrowMemoryPoolClass
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPoolClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPoolClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowMemoryPoolClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/memory-pool.h:30:1
  GArrowRecordBatchBuilder* = struct_GArrowRecordBatchBuilder
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  struct_GArrowRecordBatchBuilder* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1

  GArrowRecordBatchBuilderClass* = struct_GArrowRecordBatchBuilderClass
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  struct_GArrowRecordBatchBuilderClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/table-builder.h:35:8

  GArrowRecordBatchBuilder_autoptr* = ptr GArrowRecordBatchBuilder
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilder_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilder_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilder_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilderClass_autoptr* = ptr GArrowRecordBatchBuilderClass
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilderClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilderClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowRecordBatchBuilderClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/table-builder.h:30:1
  GArrowFileMode* = enum_GArrowFileMode
    ## Generated based on /usr/include/arrow-glib/file-mode.h:38:3
  GArrowFile* = struct_GArrowFile
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowFileInterface* = struct_GArrowFileInterface
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowFile_autoptr* = ptr GArrowFile
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file.h:31:1
  GArrowReadable* = struct_GArrowReadable
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowReadableInterface* = struct_GArrowReadableInterface
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowReadable_autoptr* = ptr GArrowReadable
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowReadable_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowReadable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowReadable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/readable.h:29:1
  GArrowWritable* = struct_GArrowWritable
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritableInterface* = struct_GArrowWritableInterface
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritable_autoptr* = ptr GArrowWritable
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritable_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritable_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritable_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writable.h:28:1
  GArrowWritableFile* = struct_GArrowWritableFile
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowWritableFileInterface* = struct_GArrowWritableFileInterface
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowWritableFile_autoptr* = ptr GArrowWritableFile
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowWritableFile_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowWritableFile_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowWritableFile_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writable-file.h:28:1
  GArrowRecordBatchWriter* = struct_GArrowRecordBatchWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  struct_GArrowRecordBatchWriter* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject ## Generated based on /usr/include/arrow-glib/writer.h:32:1

  GArrowRecordBatchWriterClass* = struct_GArrowRecordBatchWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  struct_GArrowRecordBatchWriterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/writer.h:37:8

  GArrowRecordBatchWriter_autoptr* = ptr GArrowRecordBatchWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriter_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriterClass_autoptr* = ptr GArrowRecordBatchWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriterClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriterClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchWriterClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:32:1
  GArrowRecordBatchStreamWriter* = struct_GArrowRecordBatchStreamWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  struct_GArrowRecordBatchStreamWriter* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowRecordBatchWriter
      ## Generated based on /usr/include/arrow-glib/writer.h:63:1

  GArrowRecordBatchStreamWriterClass* = struct_GArrowRecordBatchStreamWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  struct_GArrowRecordBatchStreamWriterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowRecordBatchWriterClass
      ## Generated based on /usr/include/arrow-glib/writer.h:68:8

  GArrowRecordBatchStreamWriter_autoptr* = ptr GArrowRecordBatchStreamWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriter_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriterClass_autoptr* = ptr GArrowRecordBatchStreamWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriterClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriterClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchStreamWriterClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:63:1
  GArrowRecordBatchFileWriter* = struct_GArrowRecordBatchFileWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  struct_GArrowRecordBatchFileWriter* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowRecordBatchStreamWriter
      ## Generated based on /usr/include/arrow-glib/writer.h:81:1

  GArrowRecordBatchFileWriterClass* = struct_GArrowRecordBatchFileWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  struct_GArrowRecordBatchFileWriterClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowRecordBatchStreamWriterClass
      ## Generated based on /usr/include/arrow-glib/writer.h:86:8

  GArrowRecordBatchFileWriter_autoptr* = ptr GArrowRecordBatchFileWriter
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriter_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriter_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriter_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriterClass_autoptr* = ptr GArrowRecordBatchFileWriterClass
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriterClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriterClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowRecordBatchFileWriterClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/writer.h:81:1
  GArrowTimePoint* = gint64
    ## Generated based on /usr/include/arrow-glib/file-system.h:31:16
  GArrowFileType* = enum_GArrowFileType
    ## Generated based on /usr/include/arrow-glib/file-system.h:51:3
  GArrowFileInfo* = struct_GArrowFileInfo
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  struct_GArrowFileInfo* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/file-system.h:57:1

  GArrowFileInfoClass* = struct_GArrowFileInfoClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  struct_GArrowFileInfoClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:58:8

  GArrowFileInfo_autoptr* = ptr GArrowFileInfo
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfo_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfo_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfo_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfoClass_autoptr* = ptr GArrowFileInfoClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfoClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfoClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileInfoClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:57:1
  GArrowFileSelector* = struct_GArrowFileSelector
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  struct_GArrowFileSelector* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/file-system.h:85:1

  GArrowFileSelectorClass* = struct_GArrowFileSelectorClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  struct_GArrowFileSelectorClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:87:8

  GArrowFileSelector_autoptr* = ptr GArrowFileSelector
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelector_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelector_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelector_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelectorClass_autoptr* = ptr GArrowFileSelectorClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelectorClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelectorClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSelectorClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:85:1
  GArrowFileSystem* = struct_GArrowFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  struct_GArrowFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/file-system.h:96:1

  GArrowFileSystemClass* = struct_GArrowFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  struct_GArrowFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:98:8

  GArrowFileSystem_autoptr* = ptr GArrowFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystemClass_autoptr* = ptr GArrowFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:96:1
  GArrowSubTreeFileSystem* = struct_GArrowSubTreeFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  struct_GArrowSubTreeFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:204:1

  GArrowSubTreeFileSystemClass* = struct_GArrowSubTreeFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  struct_GArrowSubTreeFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:209:8

  GArrowSubTreeFileSystem_autoptr* = ptr GArrowSubTreeFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystemClass_autoptr* = ptr GArrowSubTreeFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSubTreeFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:204:1
  GArrowSlowFileSystem* = struct_GArrowSlowFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  struct_GArrowSlowFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:223:1

  GArrowSlowFileSystemClass* = struct_GArrowSlowFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  struct_GArrowSlowFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:228:8

  GArrowSlowFileSystem_autoptr* = ptr GArrowSlowFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystemClass_autoptr* = ptr GArrowSlowFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowSlowFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:223:1
  GArrowMockFileSystem* = struct_GArrowMockFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  struct_GArrowMockFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:253:1

  GArrowMockFileSystemClass* = struct_GArrowMockFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  struct_GArrowMockFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:258:8

  GArrowMockFileSystem_autoptr* = ptr GArrowMockFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystemClass_autoptr* = ptr GArrowMockFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowMockFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:253:1
  GArrowHDFSFileSystem* = struct_GArrowHDFSFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  struct_GArrowHDFSFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:265:1

  GArrowHDFSFileSystemClass* = struct_GArrowHDFSFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  struct_GArrowHDFSFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:270:8

  GArrowHDFSFileSystem_autoptr* = ptr GArrowHDFSFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystemClass_autoptr* = ptr GArrowHDFSFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowHDFSFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:265:1
  GArrowS3LogLevel* = enum_GArrowS3LogLevel
    ## Generated based on /usr/include/arrow-glib/file-system.h:297:3
  GArrowS3GlobalOptions* = struct_GArrowS3GlobalOptions
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  struct_GArrowS3GlobalOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/file-system.h:301:1

  GArrowS3GlobalOptionsClass* = struct_GArrowS3GlobalOptionsClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  struct_GArrowS3GlobalOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:303:8

  GArrowS3GlobalOptions_autoptr* = ptr GArrowS3GlobalOptions
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptionsClass_autoptr* = ptr GArrowS3GlobalOptionsClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3GlobalOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:301:1
  GArrowS3FileSystem* = struct_GArrowS3FileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  struct_GArrowS3FileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:324:1

  GArrowS3FileSystemClass* = struct_GArrowS3FileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  struct_GArrowS3FileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:326:8

  GArrowS3FileSystem_autoptr* = ptr GArrowS3FileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystemClass_autoptr* = ptr GArrowS3FileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowS3FileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:324:1
  GArrowGCSFileSystem* = struct_GArrowGCSFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  struct_GArrowGCSFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:333:1

  GArrowGCSFileSystemClass* = struct_GArrowGCSFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  struct_GArrowGCSFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:335:8

  GArrowGCSFileSystem_autoptr* = ptr GArrowGCSFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystemClass_autoptr* = ptr GArrowGCSFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowGCSFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:333:1
  GArrowAzureFileSystem* = struct_GArrowAzureFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  struct_GArrowAzureFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/file-system.h:342:1

  GArrowAzureFileSystemClass* = struct_GArrowAzureFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  struct_GArrowAzureFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/file-system.h:347:8

  GArrowAzureFileSystem_autoptr* = ptr GArrowAzureFileSystem
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystemClass_autoptr* = ptr GArrowAzureFileSystemClass
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowAzureFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/file-system.h:342:1
  GArrowLocalFileSystemOptions* = struct_GArrowLocalFileSystemOptions
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  struct_GArrowLocalFileSystemOptions* {.pure, inheritable, bycopy.} = object
    parent_instance*: GObject
      ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1

  GArrowLocalFileSystemOptionsClass* = struct_GArrowLocalFileSystemOptionsClass
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  struct_GArrowLocalFileSystemOptionsClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GObjectClass
      ## Generated based on /usr/include/arrow-glib/local-file-system.h:36:8

  GArrowLocalFileSystemOptions_autoptr* = ptr GArrowLocalFileSystemOptions
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptions_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptions_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptions_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptionsClass_autoptr* = ptr GArrowLocalFileSystemOptionsClass
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptionsClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptionsClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystemOptionsClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:31:1
  GArrowLocalFileSystem* = struct_GArrowLocalFileSystem
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  struct_GArrowLocalFileSystem* {.pure, inheritable, bycopy.} = object
    parent_instance*: GArrowFileSystem
      ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1

  GArrowLocalFileSystemClass* = struct_GArrowLocalFileSystemClass
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  struct_GArrowLocalFileSystemClass* {.pure, inheritable, bycopy.} = object
    parent_class*: GArrowFileSystemClass
      ## Generated based on /usr/include/arrow-glib/local-file-system.h:54:8

  GArrowLocalFileSystem_autoptr* = ptr GArrowLocalFileSystem
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystem_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystem_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystem_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystemClass_autoptr* = ptr GArrowLocalFileSystemClass
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystemClass_listautoptr* = ptr GList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystemClass_slistautoptr* = ptr GSList
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  GArrowLocalFileSystemClass_queueautoptr* = ptr GQueue
    ## Generated based on /usr/include/arrow-glib/local-file-system.h:49:1
  compiler_time_t* = clong ## Generated based on /usr/include/bits/types.h:160:26
  union_pthread_mutex_t* {.union, bycopy.} = object
    compiler_data*: struct_pthread_mutex_s
      ## Generated based on /usr/include/bits/pthreadtypes.h:67:9
    compiler_size*: array[40'i64, cschar]
    compiler_align*: clong

  compiler_pid_t* = cint ## Generated based on /usr/include/bits/types.h:154:25
  compiler_uid_t* = cuint ## Generated based on /usr/include/bits/types.h:146:25
  struct_pthread_mutex_s* {.pure, inheritable, bycopy.} = object
    compiler_lock*: cint ## Generated based on /usr/include/bits/struct_mutex.h:22:8
    compiler_count*: cuint
    compiler_owner*: cint
    compiler_nusers*: cuint
    compiler_kind*: cint
    compiler_spins*: cshort
    compiler_elision*: cshort
    compiler_list*: compiler_pthread_list_t

  compiler_pthread_list_t* = struct_pthread_internal_list
    ## Generated based on /usr/include/bits/thread-shared-types.h:55:3
  struct_pthread_internal_list* {.pure, inheritable, bycopy.} = object
    compiler_prev*: ptr struct_pthread_internal_list
      ## Generated based on /usr/include/bits/thread-shared-types.h:51:16
    compiler_next*: ptr struct_pthread_internal_list

when 0 is static:
  const G_ANALYZER_ANALYZING* = 0
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:859:9
else:
  let G_ANALYZER_ANALYZING* = 0
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:859:9
when 0 is static:
  const FALSE* = 0 ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:931:9
else:
  let FALSE* = 0 ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:931:9
when 1 is static:
  const G_HAVE_GNUC_VISIBILITY* = 1
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1256:9
else:
  let G_HAVE_GNUC_VISIBILITY* = 1
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1256:9
when G_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_ENUMERATOR* = G_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1316:9

else:
  when G_DEPRECATED is static:
    const GLIB_DEPRECATED_ENUMERATOR* = G_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1316:9
  else:
    let GLIB_DEPRECATED_ENUMERATOR* = G_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1316:9
when G_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_TYPE* = G_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1328:9

else:
  when G_DEPRECATED is static:
    const GLIB_DEPRECATED_TYPE* = G_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1328:9
  else:
    let GLIB_DEPRECATED_TYPE* = G_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/gmacros.h:1328:9
when SCHAR_MIN is typedesc:
  type CHAR_MIN* = SCHAR_MIN
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/limits.h:97:10

else:
  when SCHAR_MIN is static:
    const CHAR_MIN* = SCHAR_MIN
      ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/limits.h:97:10
  else:
    let CHAR_MIN* = SCHAR_MIN
      ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/limits.h:97:10
when 1 is static:
  const FLT_ROUNDS* = 1
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/float.h:128:9
else:
  let FLT_ROUNDS* = 1
    ## Generated based on /usr/lib/gcc/x86_64-pc-linux-gnu/15.1.1/include/float.h:128:9
when SHRT_MIN is typedesc:
  type G_MINSHORT* = SHRT_MIN
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:35:9

else:
  when SHRT_MIN is static:
    const G_MINSHORT* = SHRT_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:35:9
  else:
    let G_MINSHORT* = SHRT_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:35:9
when USHRT_MAX is typedesc:
  type G_MAXUSHORT* = USHRT_MAX
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:37:9

else:
  when USHRT_MAX is static:
    const G_MAXUSHORT* = USHRT_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:37:9
  else:
    let G_MAXUSHORT* = USHRT_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:37:9
when INT_MIN is typedesc:
  type G_MININT* = INT_MIN
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:38:9

else:
  when INT_MIN is static:
    const G_MININT* = INT_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:38:9
  else:
    let G_MININT* = INT_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:38:9
when UINT_MAX is typedesc:
  type G_MAXUINT* = UINT_MAX
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:40:9

else:
  when UINT_MAX is static:
    const G_MAXUINT* = UINT_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:40:9
  else:
    let G_MAXUINT* = UINT_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:40:9
when LONG_MIN is typedesc:
  type G_MINLONG* = LONG_MIN
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:41:9

else:
  when LONG_MIN is static:
    const G_MINLONG* = LONG_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:41:9
  else:
    let G_MINLONG* = LONG_MIN
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:41:9
when ULONG_MAX is typedesc:
  type G_MAXULONG* = ULONG_MAX
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:43:9

else:
  when ULONG_MAX is static:
    const G_MAXULONG* = ULONG_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:43:9
  else:
    let G_MAXULONG* = ULONG_MAX
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:43:9
when "h" is static:
  const G_GINT16_MODIFIER* = "h"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:51:9
else:
  let G_GINT16_MODIFIER* = "h"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:51:9
when "hi" is static:
  const G_GINT16_FORMAT* = "hi"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:52:9
else:
  let G_GINT16_FORMAT* = "hi"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:52:9
when "hu" is static:
  const G_GUINT16_FORMAT* = "hu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:53:9
else:
  let G_GUINT16_FORMAT* = "hu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:53:9
when "" is static:
  const G_GINT32_MODIFIER* = ""
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:59:9
else:
  let G_GINT32_MODIFIER* = ""
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:59:9
when "i" is static:
  const G_GINT32_FORMAT* = "i"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:60:9
else:
  let G_GINT32_FORMAT* = "i"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:60:9
when "u" is static:
  const G_GUINT32_FORMAT* = "u"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:61:9
else:
  let G_GUINT32_FORMAT* = "u"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:61:9
when 1 is static:
  const G_HAVE_GINT64* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:64:9
else:
  let G_HAVE_GINT64* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:64:9
when "l" is static:
  const G_GINT64_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:72:9
else:
  let G_GINT64_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:72:9
when "li" is static:
  const G_GINT64_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:73:9
else:
  let G_GINT64_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:73:9
when "lu" is static:
  const G_GUINT64_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:74:9
else:
  let G_GUINT64_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:74:9
when 8 is static:
  const GLIB_SIZEOF_VOID_P* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:77:9
else:
  let GLIB_SIZEOF_VOID_P* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:77:9
when 8 is static:
  const GLIB_SIZEOF_LONG* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:78:9
else:
  let GLIB_SIZEOF_LONG* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:78:9
when 8 is static:
  const GLIB_SIZEOF_SIZE_T* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:79:9
else:
  let GLIB_SIZEOF_SIZE_T* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:79:9
when 8 is static:
  const GLIB_SIZEOF_SSIZE_T* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:80:9
else:
  let GLIB_SIZEOF_SSIZE_T* = 8
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:80:9
when "l" is static:
  const G_GSIZE_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:84:9
else:
  let G_GSIZE_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:84:9
when "l" is static:
  const G_GSSIZE_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:85:9
else:
  let G_GSSIZE_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:85:9
when "lu" is static:
  const G_GSIZE_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:86:9
else:
  let G_GSIZE_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:86:9
when "li" is static:
  const G_GSSIZE_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:87:9
else:
  let G_GSSIZE_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:87:9
when G_MININT64 is typedesc:
  type G_MINOFFSET* = G_MININT64
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:94:9

else:
  when G_MININT64 is static:
    const G_MINOFFSET* = G_MININT64
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:94:9
  else:
    let G_MINOFFSET* = G_MININT64
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:94:9
when G_MAXINT64 is typedesc:
  type G_MAXOFFSET* = G_MAXINT64
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:95:9

else:
  when G_MAXINT64 is static:
    const G_MAXOFFSET* = G_MAXINT64
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:95:9
  else:
    let G_MAXOFFSET* = G_MAXINT64
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:95:9
when G_GINT64_MODIFIER is typedesc:
  type G_GOFFSET_MODIFIER* = G_GINT64_MODIFIER
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:97:9

else:
  when G_GINT64_MODIFIER is static:
    const G_GOFFSET_MODIFIER* = G_GINT64_MODIFIER
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:97:9
  else:
    let G_GOFFSET_MODIFIER* = G_GINT64_MODIFIER
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:97:9
when G_GINT64_FORMAT is typedesc:
  type G_GOFFSET_FORMAT* = G_GINT64_FORMAT
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:98:9

else:
  when G_GINT64_FORMAT is static:
    const G_GOFFSET_FORMAT* = G_GINT64_FORMAT
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:98:9
  else:
    let G_GOFFSET_FORMAT* = G_GINT64_FORMAT
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:98:9
when "%d" is static:
  const G_POLLFD_FORMAT* = "%d"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:101:9
else:
  let G_POLLFD_FORMAT* = "%d"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:101:9
when "l" is static:
  const G_GINTPTR_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:112:9
else:
  let G_GINTPTR_MODIFIER* = "l"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:112:9
when "li" is static:
  const G_GINTPTR_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:113:9
else:
  let G_GINTPTR_FORMAT* = "li"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:113:9
when "lu" is static:
  const G_GUINTPTR_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:114:9
else:
  let G_GUINTPTR_FORMAT* = "lu"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:114:9
when 2 is static:
  const GLIB_MAJOR_VERSION* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:116:9
else:
  let GLIB_MAJOR_VERSION* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:116:9
when 84 is static:
  const GLIB_MINOR_VERSION* = 84
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:117:9
else:
  let GLIB_MINOR_VERSION* = 84
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:117:9
when 3 is static:
  const GLIB_MICRO_VERSION* = 3
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:118:9
else:
  let GLIB_MICRO_VERSION* = 3
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:118:9
when va_copy is typedesc:
  type G_VA_COPY* = va_copy
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:122:9

else:
  when va_copy is static:
    const G_VA_COPY* = va_copy
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:122:9
  else:
    let G_VA_COPY* = va_copy
      ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:122:9
when 1 is static:
  const G_VA_COPY_AS_ARRAY* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:124:9
else:
  let G_VA_COPY_AS_ARRAY* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:124:9
when 1 is static:
  const G_HAVE_ISO_VARARGS* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:126:9
else:
  let G_HAVE_ISO_VARARGS* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:126:9
when 0 is static:
  const G_HAVE_GROWING_STACK* = 0
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:136:9
else:
  let G_HAVE_GROWING_STACK* = 0
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:136:9
when 1 is static:
  const G_HAVE_GNUC_VARARGS* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:139:10
else:
  let G_HAVE_GNUC_VARARGS* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:139:10
when 1234 is static:
  const G_LITTLE_ENDIAN* = 1234
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:211:9
else:
  let G_LITTLE_ENDIAN* = 1234
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:211:9
when "so" is static:
  const G_MODULE_SUFFIX* = "so"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:198:9
else:
  let G_MODULE_SUFFIX* = "so"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:198:9
when "i" is static:
  const G_PID_FORMAT* = "i"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:202:9
else:
  let G_PID_FORMAT* = "i"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:202:9
when 1 is static:
  const GLIB_SYSDEF_AF_UNIX* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:204:9
else:
  let GLIB_SYSDEF_AF_UNIX* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:204:9
when 2 is static:
  const GLIB_SYSDEF_AF_INET* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:205:9
else:
  let GLIB_SYSDEF_AF_INET* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:205:9
when 10 is static:
  const GLIB_SYSDEF_AF_INET6* = 10
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:206:9
else:
  let GLIB_SYSDEF_AF_INET6* = 10
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:206:9
when 1 is static:
  const GLIB_SYSDEF_MSG_OOB* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:208:9
else:
  let GLIB_SYSDEF_MSG_OOB* = 1
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:208:9
when 2 is static:
  const GLIB_SYSDEF_MSG_PEEK* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:209:9
else:
  let GLIB_SYSDEF_MSG_PEEK* = 2
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:209:9
when 4 is static:
  const GLIB_SYSDEF_MSG_DONTROUTE* = 4
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:210:9
else:
  let GLIB_SYSDEF_MSG_DONTROUTE* = 4
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:210:9
when "/" is static:
  const G_DIR_SEPARATOR_S* = "/"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:213:9
else:
  let G_DIR_SEPARATOR_S* = "/"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:213:9
when ":" is static:
  const G_SEARCHPATH_SEPARATOR_S* = ":"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:215:9
else:
  let G_SEARCHPATH_SEPARATOR_S* = ":"
    ## Generated based on /usr/lib/glib-2.0/include/glibconfig.h:215:9
when GLIB_VERSION_CUR_STABLE is typedesc:
  type GLIB_VERSION_MIN_REQUIRED* = GLIB_VERSION_CUR_STABLE
    ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:474:9

else:
  when GLIB_VERSION_CUR_STABLE is static:
    const GLIB_VERSION_MIN_REQUIRED* = GLIB_VERSION_CUR_STABLE
      ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:474:9
  else:
    let GLIB_VERSION_MIN_REQUIRED* = GLIB_VERSION_CUR_STABLE
      ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:474:9
when GLIB_VERSION_CUR_STABLE is typedesc:
  type GLIB_VERSION_MAX_ALLOWED* = GLIB_VERSION_CUR_STABLE
    ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:503:9

else:
  when GLIB_VERSION_CUR_STABLE is static:
    const GLIB_VERSION_MAX_ALLOWED* = GLIB_VERSION_CUR_STABLE
      ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:503:9
  else:
    let GLIB_VERSION_MAX_ALLOWED* = GLIB_VERSION_CUR_STABLE
      ## Generated based on /usr/include/glib-2.0/glib/gversionmacros.h:503:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_26* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:37:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_26* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:37:9
  else:
    let GLIB_DEPRECATED_IN_2_26* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:37:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:39:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:39:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:39:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_28* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:71:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_28* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:71:9
  else:
    let GLIB_DEPRECATED_IN_2_28* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:71:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:73:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:73:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:73:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_30* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:105:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_30* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:105:9
  else:
    let GLIB_DEPRECATED_IN_2_30* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:105:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:107:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:107:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:107:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_32* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:139:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_32* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:139:9
  else:
    let GLIB_DEPRECATED_IN_2_32* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:139:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:141:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:141:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:141:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_34* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:173:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_34* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:173:9
  else:
    let GLIB_DEPRECATED_IN_2_34* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:173:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:175:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:175:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:175:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_36* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:207:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_36* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:207:9
  else:
    let GLIB_DEPRECATED_IN_2_36* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:207:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:209:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:209:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:209:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_38* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:241:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_38* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:241:9
  else:
    let GLIB_DEPRECATED_IN_2_38* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:241:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:243:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:243:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:243:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_40* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:275:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_40* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:275:9
  else:
    let GLIB_DEPRECATED_IN_2_40* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:275:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:277:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:277:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:277:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_42* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:309:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_42* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:309:9
  else:
    let GLIB_DEPRECATED_IN_2_42* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:309:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:311:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:311:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:311:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_44* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:343:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_44* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:343:9
  else:
    let GLIB_DEPRECATED_IN_2_44* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:343:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:345:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:345:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:345:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_46* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:377:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_46* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:377:9
  else:
    let GLIB_DEPRECATED_IN_2_46* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:377:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:379:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:379:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:379:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_48* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:411:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_48* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:411:9
  else:
    let GLIB_DEPRECATED_IN_2_48* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:411:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:413:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:413:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:413:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_50* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:445:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_50* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:445:9
  else:
    let GLIB_DEPRECATED_IN_2_50* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:445:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:447:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:447:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:447:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_52* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:479:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_52* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:479:9
  else:
    let GLIB_DEPRECATED_IN_2_52* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:479:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:481:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:481:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:481:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_54* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:513:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_54* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:513:9
  else:
    let GLIB_DEPRECATED_IN_2_54* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:513:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:515:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:515:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:515:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_56* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:547:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_56* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:547:9
  else:
    let GLIB_DEPRECATED_IN_2_56* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:547:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:549:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:549:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:549:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_58* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:581:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_58* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:581:9
  else:
    let GLIB_DEPRECATED_IN_2_58* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:581:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:583:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:583:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:583:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_60* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:615:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_60* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:615:9
  else:
    let GLIB_DEPRECATED_IN_2_60* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:615:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:617:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:617:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:617:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_62* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:649:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_62* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:649:9
  else:
    let GLIB_DEPRECATED_IN_2_62* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:649:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:651:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:651:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:651:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_64* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:683:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_64* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:683:9
  else:
    let GLIB_DEPRECATED_IN_2_64* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:683:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:685:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:685:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:685:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_66* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:717:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_66* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:717:9
  else:
    let GLIB_DEPRECATED_IN_2_66* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:717:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:719:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:719:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:719:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_68* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:751:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_68* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:751:9
  else:
    let GLIB_DEPRECATED_IN_2_68* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:751:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:753:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:753:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:753:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_70* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:785:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_70* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:785:9
  else:
    let GLIB_DEPRECATED_IN_2_70* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:785:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:787:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:787:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:787:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_72* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:819:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_72* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:819:9
  else:
    let GLIB_DEPRECATED_IN_2_72* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:819:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:821:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:821:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:821:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_74* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:853:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_74* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:853:9
  else:
    let GLIB_DEPRECATED_IN_2_74* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:853:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:855:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:855:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:855:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_76* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:887:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_76* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:887:9
  else:
    let GLIB_DEPRECATED_IN_2_76* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:887:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:889:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:889:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:889:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_78* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:921:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_78* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:921:9
  else:
    let GLIB_DEPRECATED_IN_2_78* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:921:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:923:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:923:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:923:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_80* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:955:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_80* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:955:9
  else:
    let GLIB_DEPRECATED_IN_2_80* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:955:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:957:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:957:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:957:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_82* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:989:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_82* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:989:9
  else:
    let GLIB_DEPRECATED_IN_2_82* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:989:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:991:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:991:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:991:9
when GLIB_DEPRECATED is typedesc:
  type GLIB_DEPRECATED_IN_2_84* = GLIB_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1023:9

else:
  when GLIB_DEPRECATED is static:
    const GLIB_DEPRECATED_IN_2_84* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1023:9
  else:
    let GLIB_DEPRECATED_IN_2_84* = GLIB_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1023:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GLIB_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1025:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GLIB_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1025:9
  else:
    let GLIB_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/glib/glib-visibility.h:1025:9
when 2.718281828459045 is static:
  const G_E* = 2.718281828459045
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:198:9
else:
  let G_E* = 2.718281828459045
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:198:9
when 0.6931471805599453 is static:
  const G_LN2* = 0.6931471805599453
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:199:9
else:
  let G_LN2* = 0.6931471805599453
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:199:9
when 2.302585092994046 is static:
  const G_LN10* = 2.302585092994046
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:200:9
else:
  let G_LN10* = 2.302585092994046
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:200:9
when 3.141592653589793 is static:
  const G_PI* = 3.141592653589793
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:201:9
else:
  let G_PI* = 3.141592653589793
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:201:9
when 1.5707963267948966 is static:
  const G_PI_2* = 1.5707963267948966
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:202:9
else:
  let G_PI_2* = 1.5707963267948966
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:202:9
when 0.7853981633974483 is static:
  const G_PI_4* = 0.7853981633974483
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:203:9
else:
  let G_PI_4* = 0.7853981633974483
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:203:9
when 1.4142135623730951 is static:
  const G_SQRT2* = 1.4142135623730951
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:204:9
else:
  let G_SQRT2* = 1.4142135623730951
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:204:9
when 4321 is static:
  const G_BIG_ENDIAN* = 4321
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:212:9
else:
  let G_BIG_ENDIAN* = 4321
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:212:9
when 3412 is static:
  const G_PDP_ENDIAN* = 3412
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:213:9
else:
  let G_PDP_ENDIAN* = 3412
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:213:9
when 127 is static:
  const G_IEEE754_FLOAT_BIAS* = 127
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:530:9
else:
  let G_IEEE754_FLOAT_BIAS* = 127
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:530:9
when 1023 is static:
  const G_IEEE754_DOUBLE_BIAS* = 1023
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:531:9
else:
  let G_IEEE754_DOUBLE_BIAS* = 1023
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:531:9
when 0.3010299956639812 is static:
  const G_LOG_2_BASE_10* = 0.3010299956639812
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:533:9
else:
  let G_LOG_2_BASE_10* = 0.3010299956639812
    ## Generated based on /usr/include/glib-2.0/glib/gtypes.h:533:9
when 3 is static:
  const G_DATALIST_FLAGS_MASK* = 3
    ## Generated based on /usr/include/glib-2.0/glib/gdataset.h:93:9
else:
  let G_DATALIST_FLAGS_MASK* = 3
    ## Generated based on /usr/include/glib-2.0/glib/gdataset.h:93:9
when cast[cuint](0'i64) is static:
  const G_DATE_BAD_JULIAN* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:83:9
else:
  let G_DATE_BAD_JULIAN* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:83:9
when cast[cuint](0'i64) is static:
  const G_DATE_BAD_DAY* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:84:9
else:
  let G_DATE_BAD_DAY* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:84:9
when cast[cuint](0'i64) is static:
  const G_DATE_BAD_YEAR* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:85:9
else:
  let G_DATE_BAD_YEAR* = cast[cuint](0'i64)
    ## Generated based on /usr/include/glib-2.0/glib/gdate.h:85:9
when GLIB_SIZEOF_LONG is typedesc:
  type G_MEM_ALIGN* = GLIB_SIZEOF_LONG
    ## Generated based on /usr/include/glib-2.0/glib/gmem.h:66:11

else:
  when GLIB_SIZEOF_LONG is static:
    const G_MEM_ALIGN* = GLIB_SIZEOF_LONG
      ## Generated based on /usr/include/glib-2.0/glib/gmem.h:66:11
  else:
    let G_MEM_ALIGN* = GLIB_SIZEOF_LONG
      ## Generated based on /usr/include/glib-2.0/glib/gmem.h:66:11
proc g_list_free_1_proc*(list: ptr GList): void {.cdecl, importc: "g_list_free_1".}
when 4 is static:
  const G_HOOK_FLAG_USER_SHIFT* = 4
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:61:9
else:
  let G_HOOK_FLAG_USER_SHIFT* = 4
    ## Generated based on /usr/include/glib-2.0/glib/ghook.h:61:9
proc g_slist_free_1_proc*(list: ptr GSList): void {.cdecl, importc: "g_slist_free_1".}
when -100 is static:
  const G_PRIORITY_HIGH* = -100
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:420:9
else:
  let G_PRIORITY_HIGH* = -100
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:420:9
when 0 is static:
  const G_PRIORITY_DEFAULT* = 0
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:431:9
else:
  let G_PRIORITY_DEFAULT* = 0
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:431:9
when 100 is static:
  const G_PRIORITY_HIGH_IDLE* = 100
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:443:9
else:
  let G_PRIORITY_HIGH_IDLE* = 100
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:443:9
when 200 is static:
  const G_PRIORITY_DEFAULT_IDLE* = 200
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:453:9
else:
  let G_PRIORITY_DEFAULT_IDLE* = 200
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:453:9
when 300 is static:
  const G_PRIORITY_LOW* = 300
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:462:9
else:
  let G_PRIORITY_LOW* = 300
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:462:9
when FALSE is typedesc:
  type G_SOURCE_REMOVE* = FALSE
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:472:9

else:
  when FALSE is static:
    const G_SOURCE_REMOVE* = FALSE
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:472:9
  else:
    let G_SOURCE_REMOVE* = FALSE
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:472:9
when TRUE is typedesc:
  type G_SOURCE_CONTINUE* = TRUE
    ## Generated based on /usr/include/glib-2.0/glib/gmain.h:482:9

else:
  when TRUE is static:
    const G_SOURCE_CONTINUE* = TRUE
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:482:9
  else:
    let G_SOURCE_CONTINUE* = TRUE
      ## Generated based on /usr/include/glib-2.0/glib/gmain.h:482:9
when 18 is static:
  const G_UNICHAR_MAX_DECOMPOSITION_LENGTH* = 18
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:791:9
else:
  let G_UNICHAR_MAX_DECOMPOSITION_LENGTH* = 18
    ## Generated based on /usr/include/glib-2.0/glib/gunicode.h:791:9
when "_-|> <." is static:
  const G_STR_DELIMITERS* = "_-|> <."
    ## Generated based on /usr/include/glib-2.0/glib/gstrfuncs.h:107:10
else:
  let G_STR_DELIMITERS* = "_-|> <."
    ## Generated based on /usr/include/glib-2.0/glib/gstrfuncs.h:107:10
when "Desktop Entry" is static:
  const G_KEY_FILE_DESKTOP_GROUP* = "Desktop Entry"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:302:9
else:
  let G_KEY_FILE_DESKTOP_GROUP* = "Desktop Entry"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:302:9
when "Type" is static:
  const G_KEY_FILE_DESKTOP_KEY_TYPE* = "Type"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:304:9
else:
  let G_KEY_FILE_DESKTOP_KEY_TYPE* = "Type"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:304:9
when "Version" is static:
  const G_KEY_FILE_DESKTOP_KEY_VERSION* = "Version"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:305:9
else:
  let G_KEY_FILE_DESKTOP_KEY_VERSION* = "Version"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:305:9
when "Name" is static:
  const G_KEY_FILE_DESKTOP_KEY_NAME* = "Name"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:306:9
else:
  let G_KEY_FILE_DESKTOP_KEY_NAME* = "Name"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:306:9
when "GenericName" is static:
  const G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME* = "GenericName"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:307:9
else:
  let G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME* = "GenericName"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:307:9
when "NoDisplay" is static:
  const G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY* = "NoDisplay"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:308:9
else:
  let G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY* = "NoDisplay"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:308:9
when "Comment" is static:
  const G_KEY_FILE_DESKTOP_KEY_COMMENT* = "Comment"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:309:9
else:
  let G_KEY_FILE_DESKTOP_KEY_COMMENT* = "Comment"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:309:9
when "Icon" is static:
  const G_KEY_FILE_DESKTOP_KEY_ICON* = "Icon"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:310:9
else:
  let G_KEY_FILE_DESKTOP_KEY_ICON* = "Icon"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:310:9
when "Hidden" is static:
  const G_KEY_FILE_DESKTOP_KEY_HIDDEN* = "Hidden"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:311:9
else:
  let G_KEY_FILE_DESKTOP_KEY_HIDDEN* = "Hidden"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:311:9
when "OnlyShowIn" is static:
  const G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN* = "OnlyShowIn"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:312:9
else:
  let G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN* = "OnlyShowIn"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:312:9
when "NotShowIn" is static:
  const G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN* = "NotShowIn"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:313:9
else:
  let G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN* = "NotShowIn"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:313:9
when "TryExec" is static:
  const G_KEY_FILE_DESKTOP_KEY_TRY_EXEC* = "TryExec"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:314:9
else:
  let G_KEY_FILE_DESKTOP_KEY_TRY_EXEC* = "TryExec"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:314:9
when "Exec" is static:
  const G_KEY_FILE_DESKTOP_KEY_EXEC* = "Exec"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:315:9
else:
  let G_KEY_FILE_DESKTOP_KEY_EXEC* = "Exec"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:315:9
when "Path" is static:
  const G_KEY_FILE_DESKTOP_KEY_PATH* = "Path"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:316:9
else:
  let G_KEY_FILE_DESKTOP_KEY_PATH* = "Path"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:316:9
when "Terminal" is static:
  const G_KEY_FILE_DESKTOP_KEY_TERMINAL* = "Terminal"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:317:9
else:
  let G_KEY_FILE_DESKTOP_KEY_TERMINAL* = "Terminal"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:317:9
when "MimeType" is static:
  const G_KEY_FILE_DESKTOP_KEY_MIME_TYPE* = "MimeType"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:318:9
else:
  let G_KEY_FILE_DESKTOP_KEY_MIME_TYPE* = "MimeType"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:318:9
when "Categories" is static:
  const G_KEY_FILE_DESKTOP_KEY_CATEGORIES* = "Categories"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:319:9
else:
  let G_KEY_FILE_DESKTOP_KEY_CATEGORIES* = "Categories"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:319:9
when "StartupNotify" is static:
  const G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY* = "StartupNotify"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:320:9
else:
  let G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY* = "StartupNotify"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:320:9
when "StartupWMClass" is static:
  const G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS* = "StartupWMClass"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:321:9
else:
  let G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS* = "StartupWMClass"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:321:9
when "URL" is static:
  const G_KEY_FILE_DESKTOP_KEY_URL* = "URL"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:322:9
else:
  let G_KEY_FILE_DESKTOP_KEY_URL* = "URL"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:322:9
when "DBusActivatable" is static:
  const G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE* = "DBusActivatable"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:323:9
else:
  let G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE* = "DBusActivatable"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:323:9
when "Actions" is static:
  const G_KEY_FILE_DESKTOP_KEY_ACTIONS* = "Actions"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:324:9
else:
  let G_KEY_FILE_DESKTOP_KEY_ACTIONS* = "Actions"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:324:9
when "Application" is static:
  const G_KEY_FILE_DESKTOP_TYPE_APPLICATION* = "Application"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:326:9
else:
  let G_KEY_FILE_DESKTOP_TYPE_APPLICATION* = "Application"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:326:9
when "Link" is static:
  const G_KEY_FILE_DESKTOP_TYPE_LINK* = "Link"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:327:9
else:
  let G_KEY_FILE_DESKTOP_TYPE_LINK* = "Link"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:327:9
when "Directory" is static:
  const G_KEY_FILE_DESKTOP_TYPE_DIRECTORY* = "Directory"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:328:9
else:
  let G_KEY_FILE_DESKTOP_TYPE_DIRECTORY* = "Directory"
    ## Generated based on /usr/include/glib-2.0/glib/gkeyfile.h:328:9
when 8 is static:
  const G_LOG_LEVEL_USER_SHIFT* = 8
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:51:9
else:
  let G_LOG_LEVEL_USER_SHIFT* = 8
    ## Generated based on /usr/include/glib-2.0/glib/gmessages.h:51:9
when "" is static:
  const G_OPTION_REMAINING* = ""
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:312:9
else:
  let G_OPTION_REMAINING* = ""
    ## Generated based on /usr/include/glib-2.0/glib/goption.h:312:9
when "ABCDEFGHIJKLMNOPQRSTUVWXYZ" is static:
  const G_CSET_A_2_Z* = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:51:9
else:
  let G_CSET_A_2_Z* = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:51:9
when "abcdefghijklmnopqrstuvwxyz" is static:
  const G_CSET_a_2_z_const* = "abcdefghijklmnopqrstuvwxyz"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:52:9
else:
  let G_CSET_a_2_z_const* = "abcdefghijklmnopqrstuvwxyz"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:52:9
when "0123456789" is static:
  const G_CSET_DIGITS* = "0123456789"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:53:9
else:
  let G_CSET_DIGITS* = "0123456789"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:53:9
when "\\300\\301\\302\\303\\304\\305\\306\"\\\n\t\t\t\"\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\"\\\n\t\t\t\"\\321\\322\\323\\324\\325\\326\"\\\n\t\t\t\"\\330\\331\\332\\333\\334\\335\\336" is
    static:
  const G_CSET_LATINC* =
    "\\300\\301\\302\\303\\304\\305\\306\"\\\n\t\t\t\"\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\"\\\n\t\t\t\"\\321\\322\\323\\324\\325\\326\"\\\n\t\t\t\"\\330\\331\\332\\333\\334\\335\\336"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:54:9
else:
  let G_CSET_LATINC* =
    "\\300\\301\\302\\303\\304\\305\\306\"\\\n\t\t\t\"\\307\\310\\311\\312\\313\\314\\315\\316\\317\\320\"\\\n\t\t\t\"\\321\\322\\323\\324\\325\\326\"\\\n\t\t\t\"\\330\\331\\332\\333\\334\\335\\336"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:54:9
when "\\337\\340\\341\\342\\343\\344\\345\\346\"\\\n\t\t\t\"\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\"\\\n\t\t\t\"\\361\\362\\363\\364\\365\\366\"\\\n\t\t\t\"\\370\\371\\372\\373\\374\\375\\376\\377" is
    static:
  const G_CSET_LATINS* =
    "\\337\\340\\341\\342\\343\\344\\345\\346\"\\\n\t\t\t\"\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\"\\\n\t\t\t\"\\361\\362\\363\\364\\365\\366\"\\\n\t\t\t\"\\370\\371\\372\\373\\374\\375\\376\\377"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:58:9
else:
  let G_CSET_LATINS* =
    "\\337\\340\\341\\342\\343\\344\\345\\346\"\\\n\t\t\t\"\\347\\350\\351\\352\\353\\354\\355\\356\\357\\360\"\\\n\t\t\t\"\\361\\362\\363\\364\\365\\366\"\\\n\t\t\t\"\\370\\371\\372\\373\\374\\375\\376\\377"
    ## Generated based on /usr/include/glib-2.0/glib/gscanner.h:58:9
when "isolate_dirs" is static:
  const G_TEST_OPTION_ISOLATE_DIRS* = "isolate_dirs"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:335:9
else:
  let G_TEST_OPTION_ISOLATE_DIRS* = "isolate_dirs"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:335:9
when "no_g_set_prgname" is static:
  const G_TEST_OPTION_NO_PRGNAME* = "no_g_set_prgname"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:346:9
else:
  let G_TEST_OPTION_NO_PRGNAME* = "no_g_set_prgname"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:346:9
when "nonfatal-assertions" is static:
  const G_TEST_OPTION_NONFATAL_ASSERTIONS* = "nonfatal-assertions"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:358:9
else:
  let G_TEST_OPTION_NONFATAL_ASSERTIONS* = "nonfatal-assertions"
    ## Generated based on /usr/include/glib-2.0/glib/gtestutils.h:358:9
when 1000000 is static:
  const G_USEC_PER_SEC* = 1000000
    ## Generated based on /usr/include/glib-2.0/glib/gtimer.h:44:9
else:
  let G_USEC_PER_SEC* = 1000000
    ## Generated based on /usr/include/glib-2.0/glib/gtimer.h:44:9
when ":/?#[]@" is static:
  const G_URI_RESERVED_CHARS_GENERIC_DELIMITERS* = ":/?#[]@"
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:349:9
else:
  let G_URI_RESERVED_CHARS_GENERIC_DELIMITERS* = ":/?#[]@"
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:349:9
when "!$&\'()*+,;=" is static:
  const G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS* = "!$&\'()*+,;="
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:359:9
else:
  let G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS* = "!$&\'()*+,;="
    ## Generated based on /usr/include/glib-2.0/glib/guri.h:359:9
when 1 is static:
  const G_ALLOC_ONLY* = 1
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:30:9
else:
  let G_ALLOC_ONLY* = 1
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:30:9
when 2 is static:
  const G_ALLOC_AND_FREE* = 2
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:31:9
else:
  let G_ALLOC_AND_FREE* = 2
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:31:9
when 1 is static:
  const G_ALLOCATOR_LIST* = 1
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:32:9
else:
  let G_ALLOCATOR_LIST* = 1
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:32:9
when 2 is static:
  const G_ALLOCATOR_SLIST* = 2
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:33:9
else:
  let G_ALLOCATOR_SLIST* = 2
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:33:9
when 3 is static:
  const G_ALLOCATOR_NODE* = 3
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:34:9
else:
  let G_ALLOCATOR_NODE* = 3
    ## Generated based on /usr/include/glib-2.0/glib/deprecated/gallocator.h:34:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_26* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:37:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_26* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:37:9
  else:
    let GOBJECT_DEPRECATED_IN_2_26* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:37:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:39:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:39:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:39:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_28* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:71:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_28* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:71:9
  else:
    let GOBJECT_DEPRECATED_IN_2_28* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:71:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:73:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:73:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:73:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_30* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:105:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_30* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:105:9
  else:
    let GOBJECT_DEPRECATED_IN_2_30* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:105:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:107:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:107:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:107:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_32* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:139:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_32* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:139:9
  else:
    let GOBJECT_DEPRECATED_IN_2_32* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:139:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:141:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:141:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:141:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_34* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:173:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_34* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:173:9
  else:
    let GOBJECT_DEPRECATED_IN_2_34* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:173:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:175:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:175:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:175:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_36* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:207:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_36* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:207:9
  else:
    let GOBJECT_DEPRECATED_IN_2_36* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:207:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:209:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:209:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:209:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_38* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:241:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_38* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:241:9
  else:
    let GOBJECT_DEPRECATED_IN_2_38* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:241:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:243:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:243:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:243:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_40* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:275:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_40* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:275:9
  else:
    let GOBJECT_DEPRECATED_IN_2_40* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:275:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:277:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:277:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:277:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_42* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:309:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_42* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:309:9
  else:
    let GOBJECT_DEPRECATED_IN_2_42* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:309:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:311:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:311:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:311:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_44* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:343:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_44* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:343:9
  else:
    let GOBJECT_DEPRECATED_IN_2_44* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:343:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:345:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:345:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:345:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_46* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:377:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_46* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:377:9
  else:
    let GOBJECT_DEPRECATED_IN_2_46* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:377:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:379:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:379:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:379:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_48* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:411:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_48* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:411:9
  else:
    let GOBJECT_DEPRECATED_IN_2_48* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:411:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:413:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:413:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:413:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_50* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:445:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_50* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:445:9
  else:
    let GOBJECT_DEPRECATED_IN_2_50* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:445:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:447:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:447:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:447:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_52* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:479:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_52* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:479:9
  else:
    let GOBJECT_DEPRECATED_IN_2_52* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:479:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:481:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:481:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:481:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_54* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:513:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_54* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:513:9
  else:
    let GOBJECT_DEPRECATED_IN_2_54* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:513:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:515:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:515:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:515:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_56* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:547:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_56* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:547:9
  else:
    let GOBJECT_DEPRECATED_IN_2_56* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:547:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:549:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:549:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:549:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_58* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:581:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_58* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:581:9
  else:
    let GOBJECT_DEPRECATED_IN_2_58* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:581:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:583:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:583:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:583:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_60* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:615:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_60* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:615:9
  else:
    let GOBJECT_DEPRECATED_IN_2_60* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:615:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:617:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:617:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:617:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_62* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:649:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_62* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:649:9
  else:
    let GOBJECT_DEPRECATED_IN_2_62* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:649:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:651:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:651:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:651:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_64* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:683:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_64* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:683:9
  else:
    let GOBJECT_DEPRECATED_IN_2_64* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:683:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:685:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:685:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:685:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_66* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:717:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_66* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:717:9
  else:
    let GOBJECT_DEPRECATED_IN_2_66* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:717:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:719:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:719:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:719:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_68* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:751:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_68* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:751:9
  else:
    let GOBJECT_DEPRECATED_IN_2_68* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:751:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:753:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:753:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:753:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_70* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:785:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_70* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:785:9
  else:
    let GOBJECT_DEPRECATED_IN_2_70* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:785:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:787:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:787:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:787:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_72* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:819:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_72* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:819:9
  else:
    let GOBJECT_DEPRECATED_IN_2_72* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:819:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:821:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:821:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:821:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_74* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:853:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_74* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:853:9
  else:
    let GOBJECT_DEPRECATED_IN_2_74* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:853:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:855:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:855:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:855:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_76* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:887:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_76* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:887:9
  else:
    let GOBJECT_DEPRECATED_IN_2_76* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:887:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:889:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:889:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:889:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_78* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:921:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_78* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:921:9
  else:
    let GOBJECT_DEPRECATED_IN_2_78* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:921:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:923:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:923:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:923:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_80* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:955:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_80* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:955:9
  else:
    let GOBJECT_DEPRECATED_IN_2_80* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:955:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:957:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:957:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:957:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_82* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:989:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_82* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:989:9
  else:
    let GOBJECT_DEPRECATED_IN_2_82* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:989:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:991:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:991:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:991:9
when GOBJECT_DEPRECATED is typedesc:
  type GOBJECT_DEPRECATED_IN_2_84* = GOBJECT_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1023:9

else:
  when GOBJECT_DEPRECATED is static:
    const GOBJECT_DEPRECATED_IN_2_84* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1023:9
  else:
    let GOBJECT_DEPRECATED_IN_2_84* = GOBJECT_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1023:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GOBJECT_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1025:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GOBJECT_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1025:9
  else:
    let GOBJECT_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gobject/gobject-visibility.h:1025:9
when 2 is static:
  const G_TYPE_FUNDAMENTAL_SHIFT* = 2
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:48:9
else:
  let G_TYPE_FUNDAMENTAL_SHIFT* = 2
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:48:9
when 22 is static:
  const G_TYPE_RESERVED_GLIB_FIRST* = 22
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:234:9
else:
  let G_TYPE_RESERVED_GLIB_FIRST* = 22
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:234:9
when 31 is static:
  const G_TYPE_RESERVED_GLIB_LAST* = 31
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:240:9
else:
  let G_TYPE_RESERVED_GLIB_LAST* = 31
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:240:9
when 32 is static:
  const G_TYPE_RESERVED_BSE_FIRST* = 32
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:247:9
else:
  let G_TYPE_RESERVED_BSE_FIRST* = 32
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:247:9
when 48 is static:
  const G_TYPE_RESERVED_BSE_LAST* = 48
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:253:9
else:
  let G_TYPE_RESERVED_BSE_LAST* = 48
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:253:9
when 49 is static:
  const G_TYPE_RESERVED_USER_FIRST* = 49
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:260:9
else:
  let G_TYPE_RESERVED_USER_FIRST* = 49
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:260:9
when GType is typedesc:
  type internal_g_type_once_init_type* = GType
    ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:2277:9

else:
  when GType is static:
    const internal_g_type_once_init_type* = GType
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:2277:9
  else:
    let internal_g_type_once_init_type* = GType
      ## Generated based on /usr/include/glib-2.0/gobject/gtype.h:2277:9
proc g_once_init_enter_pointer*(
  location: pointer
): gboolean {.cdecl, importc: "g_once_init_enter_pointer".}

proc g_once_init_leave_pointer*(
  location: pointer, result: gpointer
): void {.cdecl, importc: "g_once_init_leave_pointer".}

when 255 is static:
  const G_PARAM_MASK* = 255
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:194:9
else:
  let G_PARAM_MASK* = 255
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:194:9
when 8 is static:
  const G_PARAM_USER_SHIFT* = 8
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:201:9
else:
  let G_PARAM_USER_SHIFT* = 8
    ## Generated based on /usr/include/glib-2.0/gobject/gparam.h:201:9
proc g_cclosure_marshal_BOOLEAN_FLAGS*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_BOOLEAN__FLAGS".}

proc g_cclosure_marshal_BOOLEAN_BOXED_BOXED*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_BOOLEAN__BOXED_BOXED".}

when 511 is static:
  const G_SIGNAL_FLAGS_MASK* = 511
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:182:9
else:
  let G_SIGNAL_FLAGS_MASK* = 511
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:182:9
when 63 is static:
  const G_SIGNAL_MATCH_MASK* = 63
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:228:9
else:
  let G_SIGNAL_MATCH_MASK* = 63
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:228:9
when G_TYPE_FLAG_RESERVED_ID_BIT is typedesc:
  type G_SIGNAL_TYPE_STATIC_SCOPE* = G_TYPE_FLAG_RESERVED_ID_BIT
    ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:249:9

else:
  when G_TYPE_FLAG_RESERVED_ID_BIT is static:
    const G_SIGNAL_TYPE_STATIC_SCOPE* = G_TYPE_FLAG_RESERVED_ID_BIT
      ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:249:9
  else:
    let G_SIGNAL_TYPE_STATIC_SCOPE* = G_TYPE_FLAG_RESERVED_ID_BIT
      ## Generated based on /usr/include/glib-2.0/gobject/gsignal.h:249:9
when 21 is static:
  const GARROW_VERSION_MAJOR* = 21
    ## Generated based on /usr/include/arrow-glib/version.h:41:9
else:
  let GARROW_VERSION_MAJOR* = 21
    ## Generated based on /usr/include/arrow-glib/version.h:41:9
when 0 is static:
  const GARROW_VERSION_MINOR* = 0
    ## Generated based on /usr/include/arrow-glib/version.h:50:9
else:
  let GARROW_VERSION_MINOR* = 0
    ## Generated based on /usr/include/arrow-glib/version.h:50:9
when 0 is static:
  const GARROW_VERSION_MICRO* = 0
    ## Generated based on /usr/include/arrow-glib/version.h:59:9
else:
  let GARROW_VERSION_MICRO* = 0
    ## Generated based on /usr/include/arrow-glib/version.h:59:9
when "" is static:
  const GARROW_VERSION_TAG* = ""
    ## Generated based on /usr/include/arrow-glib/version.h:69:9
else:
  let GARROW_VERSION_TAG* = ""
    ## Generated based on /usr/include/arrow-glib/version.h:69:9
when G_DEPRECATED is typedesc:
  type GARROW_DEPRECATED* = G_DEPRECATED
    ## Generated based on /usr/include/arrow-glib/version.h:108:11

else:
  when G_DEPRECATED is static:
    const GARROW_DEPRECATED* = G_DEPRECATED
      ## Generated based on /usr/include/arrow-glib/version.h:108:11
  else:
    let GARROW_DEPRECATED* = G_DEPRECATED
      ## Generated based on /usr/include/arrow-glib/version.h:108:11
when GARROW_IMPORT is typedesc:
  type GARROW_API* = GARROW_IMPORT
    ## Generated based on /usr/include/arrow-glib/version.h:429:11

else:
  when GARROW_IMPORT is static:
    const GARROW_API* = GARROW_IMPORT
      ## Generated based on /usr/include/arrow-glib/version.h:429:11
  else:
    let GARROW_API* = GARROW_IMPORT
      ## Generated based on /usr/include/arrow-glib/version.h:429:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_ALL* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:434:9

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_ALL* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:434:9
  else:
    let GARROW_AVAILABLE_IN_ALL* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:434:9
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_21_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:447:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_21_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:447:11
  else:
    let GARROW_AVAILABLE_IN_21_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:447:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_20_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:461:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_20_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:461:11
  else:
    let GARROW_AVAILABLE_IN_20_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:461:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_19_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:475:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_19_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:475:11
  else:
    let GARROW_AVAILABLE_IN_19_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:475:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_18_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:489:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_18_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:489:11
  else:
    let GARROW_AVAILABLE_IN_18_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:489:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_17_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:503:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_17_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:503:11
  else:
    let GARROW_AVAILABLE_IN_17_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:503:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_16_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:517:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_16_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:517:11
  else:
    let GARROW_AVAILABLE_IN_16_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:517:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_15_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:531:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_15_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:531:11
  else:
    let GARROW_AVAILABLE_IN_15_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:531:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_14_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:545:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_14_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:545:11
  else:
    let GARROW_AVAILABLE_IN_14_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:545:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_13_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:559:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_13_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:559:11
  else:
    let GARROW_AVAILABLE_IN_13_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:559:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_12_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:573:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_12_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:573:11
  else:
    let GARROW_AVAILABLE_IN_12_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:573:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_11_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:587:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_11_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:587:11
  else:
    let GARROW_AVAILABLE_IN_11_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:587:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_10_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:601:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_10_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:601:11
  else:
    let GARROW_AVAILABLE_IN_10_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:601:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_9_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:615:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_9_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:615:11
  else:
    let GARROW_AVAILABLE_IN_9_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:615:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_8_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:629:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_8_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:629:11
  else:
    let GARROW_AVAILABLE_IN_8_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:629:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_7_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:643:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_7_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:643:11
  else:
    let GARROW_AVAILABLE_IN_7_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:643:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_6_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:657:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_6_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:657:11
  else:
    let GARROW_AVAILABLE_IN_6_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:657:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_5_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:671:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_5_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:671:11
  else:
    let GARROW_AVAILABLE_IN_5_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:671:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_4_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:685:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_4_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:685:11
  else:
    let GARROW_AVAILABLE_IN_4_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:685:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_3_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:699:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_3_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:699:11
  else:
    let GARROW_AVAILABLE_IN_3_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:699:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_2_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:713:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_2_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:713:11
  else:
    let GARROW_AVAILABLE_IN_2_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:713:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_1_0* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:727:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_1_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:727:11
  else:
    let GARROW_AVAILABLE_IN_1_0* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:727:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_17* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:741:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_17* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:741:11
  else:
    let GARROW_AVAILABLE_IN_0_17* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:741:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_16* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:755:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_16* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:755:11
  else:
    let GARROW_AVAILABLE_IN_0_16* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:755:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_15* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:769:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_15* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:769:11
  else:
    let GARROW_AVAILABLE_IN_0_15* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:769:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_14* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:783:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_14* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:783:11
  else:
    let GARROW_AVAILABLE_IN_0_14* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:783:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_13* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:797:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_13* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:797:11
  else:
    let GARROW_AVAILABLE_IN_0_13* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:797:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_12* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:811:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_12* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:811:11
  else:
    let GARROW_AVAILABLE_IN_0_12* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:811:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_11* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:825:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_11* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:825:11
  else:
    let GARROW_AVAILABLE_IN_0_11* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:825:11
when GARROW_EXTERN is typedesc:
  type GARROW_AVAILABLE_IN_0_10* = GARROW_EXTERN
    ## Generated based on /usr/include/arrow-glib/version.h:839:11

else:
  when GARROW_EXTERN is static:
    const GARROW_AVAILABLE_IN_0_10* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:839:11
  else:
    let GARROW_AVAILABLE_IN_0_10* = GARROW_EXTERN
      ## Generated based on /usr/include/arrow-glib/version.h:839:11
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_26* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:37:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_26* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:37:9
  else:
    let GIO_DEPRECATED_IN_2_26* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:37:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:39:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:39:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:39:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_28* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:71:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_28* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:71:9
  else:
    let GIO_DEPRECATED_IN_2_28* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:71:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:73:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:73:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:73:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_30* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:105:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_30* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:105:9
  else:
    let GIO_DEPRECATED_IN_2_30* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:105:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:107:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:107:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:107:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_32* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:139:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_32* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:139:9
  else:
    let GIO_DEPRECATED_IN_2_32* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:139:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:141:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:141:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:141:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_34* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:173:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_34* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:173:9
  else:
    let GIO_DEPRECATED_IN_2_34* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:173:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:175:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:175:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:175:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_36* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:207:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_36* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:207:9
  else:
    let GIO_DEPRECATED_IN_2_36* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:207:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:209:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:209:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:209:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_38* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:241:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_38* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:241:9
  else:
    let GIO_DEPRECATED_IN_2_38* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:241:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:243:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:243:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:243:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_40* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:275:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_40* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:275:9
  else:
    let GIO_DEPRECATED_IN_2_40* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:275:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:277:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:277:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:277:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_42* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:309:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_42* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:309:9
  else:
    let GIO_DEPRECATED_IN_2_42* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:309:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:311:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:311:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:311:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_44* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:343:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_44* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:343:9
  else:
    let GIO_DEPRECATED_IN_2_44* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:343:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:345:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:345:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:345:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_46* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:377:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_46* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:377:9
  else:
    let GIO_DEPRECATED_IN_2_46* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:377:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:379:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:379:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:379:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_48* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:411:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_48* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:411:9
  else:
    let GIO_DEPRECATED_IN_2_48* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:411:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:413:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:413:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:413:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_50* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:445:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_50* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:445:9
  else:
    let GIO_DEPRECATED_IN_2_50* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:445:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:447:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:447:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:447:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_52* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:479:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_52* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:479:9
  else:
    let GIO_DEPRECATED_IN_2_52* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:479:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:481:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:481:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:481:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_54* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:513:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_54* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:513:9
  else:
    let GIO_DEPRECATED_IN_2_54* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:513:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:515:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:515:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:515:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_56* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:547:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_56* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:547:9
  else:
    let GIO_DEPRECATED_IN_2_56* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:547:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:549:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:549:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:549:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_58* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:581:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_58* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:581:9
  else:
    let GIO_DEPRECATED_IN_2_58* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:581:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:583:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:583:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:583:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_60* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:615:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_60* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:615:9
  else:
    let GIO_DEPRECATED_IN_2_60* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:615:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:617:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:617:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:617:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_62* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:649:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_62* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:649:9
  else:
    let GIO_DEPRECATED_IN_2_62* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:649:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:651:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:651:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:651:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_64* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:683:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_64* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:683:9
  else:
    let GIO_DEPRECATED_IN_2_64* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:683:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:685:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:685:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:685:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_66* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:717:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_66* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:717:9
  else:
    let GIO_DEPRECATED_IN_2_66* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:717:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:719:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:719:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:719:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_68* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:751:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_68* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:751:9
  else:
    let GIO_DEPRECATED_IN_2_68* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:751:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:753:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:753:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:753:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_70* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:785:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_70* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:785:9
  else:
    let GIO_DEPRECATED_IN_2_70* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:785:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:787:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:787:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:787:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_72* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:819:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_72* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:819:9
  else:
    let GIO_DEPRECATED_IN_2_72* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:819:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:821:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:821:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:821:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_74* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:853:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_74* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:853:9
  else:
    let GIO_DEPRECATED_IN_2_74* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:853:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:855:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:855:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:855:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_76* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:887:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_76* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:887:9
  else:
    let GIO_DEPRECATED_IN_2_76* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:887:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:889:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:889:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:889:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_78* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:921:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_78* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:921:9
  else:
    let GIO_DEPRECATED_IN_2_78* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:921:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:923:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:923:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:923:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_80* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:955:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_80* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:955:9
  else:
    let GIO_DEPRECATED_IN_2_80* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:955:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:957:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:957:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:957:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_82* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:989:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_82* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:989:9
  else:
    let GIO_DEPRECATED_IN_2_82* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:989:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:991:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:991:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:991:9
when GIO_DEPRECATED is typedesc:
  type GIO_DEPRECATED_IN_2_84* = GIO_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1023:9

else:
  when GIO_DEPRECATED is static:
    const GIO_DEPRECATED_IN_2_84* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1023:9
  else:
    let GIO_DEPRECATED_IN_2_84* = GIO_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1023:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GIO_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1025:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GIO_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1025:9
  else:
    let GIO_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gio/gio-visibility.h:1025:9
when "gio-debug-controller" is static:
  const G_DEBUG_CONTROLLER_EXTENSION_POINT_NAME* = "gio-debug-controller"
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:42:9
else:
  let G_DEBUG_CONTROLLER_EXTENSION_POINT_NAME* = "gio-debug-controller"
    ## Generated based on /usr/include/glib-2.0/gio/gdebugcontroller.h:42:9
when "unix-device" is static:
  const G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE* = "unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gdrive.h:42:9
else:
  let G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE* = "unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gdrive.h:42:9
when "standard::type" is static:
  const G_FILE_ATTRIBUTE_STANDARD_TYPE* = "standard::type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:54:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_TYPE* = "standard::type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:54:9
when "standard::is-hidden" is static:
  const G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN* = "standard::is-hidden"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:63:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN* = "standard::is-hidden"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:63:9
when "standard::is-backup" is static:
  const G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP* = "standard::is-backup"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:72:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP* = "standard::is-backup"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:72:9
when "standard::is-symlink" is static:
  const G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK* = "standard::is-symlink"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:85:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK* = "standard::is-symlink"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:85:9
when "standard::is-virtual" is static:
  const G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL* = "standard::is-virtual"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:94:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL* = "standard::is-virtual"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:94:9
when "standard::is-volatile" is static:
  const G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE* = "standard::is-volatile"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:108:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE* = "standard::is-volatile"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:108:9
when "standard::name" is static:
  const G_FILE_ATTRIBUTE_STANDARD_NAME* = "standard::name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:124:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_NAME* = "standard::name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:124:9
when "standard::display-name" is static:
  const G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME* = "standard::display-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:136:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME* = "standard::display-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:136:9
when "standard::edit-name" is static:
  const G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME* = "standard::edit-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:150:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME* = "standard::edit-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:150:9
when "standard::copy-name" is static:
  const G_FILE_ATTRIBUTE_STANDARD_COPY_NAME* = "standard::copy-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:165:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_COPY_NAME* = "standard::copy-name"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:165:9
when "standard::description" is static:
  const G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION* = "standard::description"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:180:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION* = "standard::description"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:180:9
when "standard::icon" is static:
  const G_FILE_ATTRIBUTE_STANDARD_ICON* = "standard::icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:191:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_ICON* = "standard::icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:191:9
when "standard::symbolic-icon" is static:
  const G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON* = "standard::symbolic-icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:204:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON* = "standard::symbolic-icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:204:9
when "standard::content-type" is static:
  const G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE* = "standard::content-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:215:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE* = "standard::content-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:215:9
when "standard::fast-content-type" is static:
  const G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE* = "standard::fast-content-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:229:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE* = "standard::fast-content-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:229:9
when "standard::size" is static:
  const G_FILE_ATTRIBUTE_STANDARD_SIZE* = "standard::size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:238:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_SIZE* = "standard::size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:238:9
when "standard::allocated-size" is static:
  const G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE* = "standard::allocated-size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:253:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE* = "standard::allocated-size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:253:9
when "standard::symlink-target" is static:
  const G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET* = "standard::symlink-target"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:263:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET* = "standard::symlink-target"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:263:9
when "standard::target-uri" is static:
  const G_FILE_ATTRIBUTE_STANDARD_TARGET_URI* = "standard::target-uri"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:273:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_TARGET_URI* = "standard::target-uri"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:273:9
when "standard::sort-order" is static:
  const G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER* = "standard::sort-order"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:287:9
else:
  let G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER* = "standard::sort-order"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:287:9
when "etag::value" is static:
  const G_FILE_ATTRIBUTE_ETAG_VALUE* = "etag::value"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:299:9
else:
  let G_FILE_ATTRIBUTE_ETAG_VALUE* = "etag::value"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:299:9
when "id::file" is static:
  const G_FILE_ATTRIBUTE_ID_FILE* = "id::file"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:315:9
else:
  let G_FILE_ATTRIBUTE_ID_FILE* = "id::file"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:315:9
when "id::filesystem" is static:
  const G_FILE_ATTRIBUTE_ID_FILESYSTEM* = "id::filesystem"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:328:9
else:
  let G_FILE_ATTRIBUTE_ID_FILESYSTEM* = "id::filesystem"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:328:9
when "access::can-read" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_READ* = "access::can-read"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:341:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_READ* = "access::can-read"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:341:9
when "access::can-write" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE* = "access::can-write"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:352:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE* = "access::can-write"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:352:9
when "access::can-execute" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE* = "access::can-execute"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:363:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE* = "access::can-execute"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:363:9
when "access::can-delete" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE* = "access::can-delete"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:374:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE* = "access::can-delete"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:374:9
when "access::can-trash" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH* = "access::can-trash"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:386:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH* = "access::can-trash"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:386:9
when "access::can-rename" is static:
  const G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME* = "access::can-rename"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:397:9
else:
  let G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME* = "access::can-rename"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:397:9
when "mountable::can-mount" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT* = "mountable::can-mount"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:411:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT* = "mountable::can-mount"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:411:9
when "mountable::can-unmount" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT* = "mountable::can-unmount"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:421:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT* = "mountable::can-unmount"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:421:9
when "mountable::can-eject" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT* = "mountable::can-eject"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:431:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT* = "mountable::can-eject"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:431:9
when "mountable::unix-device" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE* = "mountable::unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:440:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE* = "mountable::unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:440:9
when "mountable::unix-device-file" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE* = "mountable::unix-device-file"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:451:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE* = "mountable::unix-device-file"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:451:9
when "mountable::hal-udi" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI* = "mountable::hal-udi"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:461:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI* = "mountable::hal-udi"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:461:9
when "mountable::can-start" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START* = "mountable::can-start"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:473:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START* = "mountable::can-start"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:473:9
when "mountable::can-start-degraded" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED* = "mountable::can-start-degraded"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:485:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED* = "mountable::can-start-degraded"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:485:9
when "mountable::can-stop" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP* = "mountable::can-stop"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:497:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP* = "mountable::can-stop"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:497:9
when "mountable::start-stop-type" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE* = "mountable::start-stop-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:508:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE* = "mountable::start-stop-type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:508:9
when "mountable::can-poll" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL* = "mountable::can-poll"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:520:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL* = "mountable::can-poll"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:520:9
when "mountable::is-media-check-automatic" is static:
  const G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC* =
    "mountable::is-media-check-automatic"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:532:9
else:
  let G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC* =
    "mountable::is-media-check-automatic"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:532:9
when "time::modified" is static:
  const G_FILE_ATTRIBUTE_TIME_MODIFIED* = "time::modified"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:546:9
else:
  let G_FILE_ATTRIBUTE_TIME_MODIFIED* = "time::modified"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:546:9
when "time::modified-usec" is static:
  const G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC* = "time::modified-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:558:9
else:
  let G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC* = "time::modified-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:558:9
when "time::modified-nsec" is static:
  const G_FILE_ATTRIBUTE_TIME_MODIFIED_NSEC* = "time::modified-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:570:9
else:
  let G_FILE_ATTRIBUTE_TIME_MODIFIED_NSEC* = "time::modified-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:570:9
when "time::access" is static:
  const G_FILE_ATTRIBUTE_TIME_ACCESS* = "time::access"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:582:9
else:
  let G_FILE_ATTRIBUTE_TIME_ACCESS* = "time::access"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:582:9
when "time::access-usec" is static:
  const G_FILE_ATTRIBUTE_TIME_ACCESS_USEC* = "time::access-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:594:9
else:
  let G_FILE_ATTRIBUTE_TIME_ACCESS_USEC* = "time::access-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:594:9
when "time::access-nsec" is static:
  const G_FILE_ATTRIBUTE_TIME_ACCESS_NSEC* = "time::access-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:606:9
else:
  let G_FILE_ATTRIBUTE_TIME_ACCESS_NSEC* = "time::access-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:606:9
when "time::changed" is static:
  const G_FILE_ATTRIBUTE_TIME_CHANGED* = "time::changed"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:620:9
else:
  let G_FILE_ATTRIBUTE_TIME_CHANGED* = "time::changed"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:620:9
when "time::changed-usec" is static:
  const G_FILE_ATTRIBUTE_TIME_CHANGED_USEC* = "time::changed-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:632:9
else:
  let G_FILE_ATTRIBUTE_TIME_CHANGED_USEC* = "time::changed-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:632:9
when "time::changed-nsec" is static:
  const G_FILE_ATTRIBUTE_TIME_CHANGED_NSEC* = "time::changed-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:644:9
else:
  let G_FILE_ATTRIBUTE_TIME_CHANGED_NSEC* = "time::changed-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:644:9
when "time::created" is static:
  const G_FILE_ATTRIBUTE_TIME_CREATED* = "time::created"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:658:9
else:
  let G_FILE_ATTRIBUTE_TIME_CREATED* = "time::created"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:658:9
when "time::created-usec" is static:
  const G_FILE_ATTRIBUTE_TIME_CREATED_USEC* = "time::created-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:670:9
else:
  let G_FILE_ATTRIBUTE_TIME_CREATED_USEC* = "time::created-usec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:670:9
when "time::created-nsec" is static:
  const G_FILE_ATTRIBUTE_TIME_CREATED_NSEC* = "time::created-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:682:9
else:
  let G_FILE_ATTRIBUTE_TIME_CREATED_NSEC* = "time::created-nsec"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:682:9
when "unix::device" is static:
  const G_FILE_ATTRIBUTE_UNIX_DEVICE* = "unix::device"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:696:9
else:
  let G_FILE_ATTRIBUTE_UNIX_DEVICE* = "unix::device"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:696:9
when "unix::inode" is static:
  const G_FILE_ATTRIBUTE_UNIX_INODE* = "unix::inode"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:707:9
else:
  let G_FILE_ATTRIBUTE_UNIX_INODE* = "unix::inode"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:707:9
when "unix::mode" is static:
  const G_FILE_ATTRIBUTE_UNIX_MODE* = "unix::mode"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:723:9
else:
  let G_FILE_ATTRIBUTE_UNIX_MODE* = "unix::mode"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:723:9
when "unix::nlink" is static:
  const G_FILE_ATTRIBUTE_UNIX_NLINK* = "unix::nlink"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:737:9
else:
  let G_FILE_ATTRIBUTE_UNIX_NLINK* = "unix::nlink"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:737:9
when "unix::uid" is static:
  const G_FILE_ATTRIBUTE_UNIX_UID* = "unix::uid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:748:9
else:
  let G_FILE_ATTRIBUTE_UNIX_UID* = "unix::uid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:748:9
when "unix::gid" is static:
  const G_FILE_ATTRIBUTE_UNIX_GID* = "unix::gid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:759:9
else:
  let G_FILE_ATTRIBUTE_UNIX_GID* = "unix::gid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:759:9
when "unix::rdev" is static:
  const G_FILE_ATTRIBUTE_UNIX_RDEV* = "unix::rdev"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:773:9
else:
  let G_FILE_ATTRIBUTE_UNIX_RDEV* = "unix::rdev"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:773:9
when "unix::block-size" is static:
  const G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE* = "unix::block-size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:785:9
else:
  let G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE* = "unix::block-size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:785:9
when "unix::blocks" is static:
  const G_FILE_ATTRIBUTE_UNIX_BLOCKS* = "unix::blocks"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:797:9
else:
  let G_FILE_ATTRIBUTE_UNIX_BLOCKS* = "unix::blocks"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:797:9
when "unix::is-mountpoint" is static:
  const G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT* = "unix::is-mountpoint"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:813:9
else:
  let G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT* = "unix::is-mountpoint"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:813:9
when "dos::is-archive" is static:
  const G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE* = "dos::is-archive"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:829:9
else:
  let G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE* = "dos::is-archive"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:829:9
when "dos::is-system" is static:
  const G_FILE_ATTRIBUTE_DOS_IS_SYSTEM* = "dos::is-system"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:843:9
else:
  let G_FILE_ATTRIBUTE_DOS_IS_SYSTEM* = "dos::is-system"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:843:9
when "dos::is-mountpoint" is static:
  const G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT* = "dos::is-mountpoint"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:860:9
else:
  let G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT* = "dos::is-mountpoint"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:860:9
when "dos::reparse-point-tag" is static:
  const G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG* = "dos::reparse-point-tag"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:876:9
else:
  let G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG* = "dos::reparse-point-tag"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:876:9
when "owner::user" is static:
  const G_FILE_ATTRIBUTE_OWNER_USER* = "owner::user"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:888:9
else:
  let G_FILE_ATTRIBUTE_OWNER_USER* = "owner::user"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:888:9
when "owner::user-real" is static:
  const G_FILE_ATTRIBUTE_OWNER_USER_REAL* = "owner::user-real"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:898:9
else:
  let G_FILE_ATTRIBUTE_OWNER_USER_REAL* = "owner::user-real"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:898:9
when "owner::group" is static:
  const G_FILE_ATTRIBUTE_OWNER_GROUP* = "owner::group"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:907:9
else:
  let G_FILE_ATTRIBUTE_OWNER_GROUP* = "owner::group"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:907:9
when "thumbnail::path" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_PATH* = "thumbnail::path"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:919:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_PATH* = "thumbnail::path"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:919:9
when "thumbnail::failed" is static:
  const G_FILE_ATTRIBUTE_THUMBNAILING_FAILED* = "thumbnail::failed"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:929:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAILING_FAILED* = "thumbnail::failed"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:929:9
when "thumbnail::is-valid" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID* = "thumbnail::is-valid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:945:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID* = "thumbnail::is-valid"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:945:9
when "thumbnail::path-normal" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL* = "thumbnail::path-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:957:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_PATH_NORMAL* = "thumbnail::path-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:957:9
when "thumbnail::failed-normal" is static:
  const G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL* = "thumbnail::failed-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:970:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_NORMAL* = "thumbnail::failed-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:970:9
when "thumbnail::is-valid-normal" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL* = "thumbnail::is-valid-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:989:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_NORMAL* = "thumbnail::is-valid-normal"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:989:9
when "thumbnail::path-large" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE* = "thumbnail::path-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1001:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_PATH_LARGE* = "thumbnail::path-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1001:9
when "thumbnail::failed-large" is static:
  const G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE* = "thumbnail::failed-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1014:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_LARGE* = "thumbnail::failed-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1014:9
when "thumbnail::is-valid-large" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE* = "thumbnail::is-valid-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1033:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_LARGE* = "thumbnail::is-valid-large"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1033:9
when "thumbnail::path-xlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE* = "thumbnail::path-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1045:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_PATH_XLARGE* = "thumbnail::path-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1045:9
when "thumbnail::failed-xlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE* = "thumbnail::failed-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1058:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_XLARGE* = "thumbnail::failed-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1058:9
when "thumbnail::is-valid-xlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE* = "thumbnail::is-valid-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1077:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XLARGE* = "thumbnail::is-valid-xlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1077:9
when "thumbnail::path-xxlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE* = "thumbnail::path-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1089:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_PATH_XXLARGE* = "thumbnail::path-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1089:9
when "thumbnail::failed-xxlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE* = "thumbnail::failed-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1102:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_XXLARGE* = "thumbnail::failed-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1102:9
when "thumbnail::is-valid-xxlarge" is static:
  const G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE* = "thumbnail::is-valid-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1121:9
else:
  let G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_XXLARGE* = "thumbnail::is-valid-xxlarge"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1121:9
when "preview::icon" is static:
  const G_FILE_ATTRIBUTE_PREVIEW_ICON* = "preview::icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1139:9
else:
  let G_FILE_ATTRIBUTE_PREVIEW_ICON* = "preview::icon"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1139:9
when "filesystem::size" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_SIZE* = "filesystem::size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1151:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_SIZE* = "filesystem::size"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1151:9
when "filesystem::free" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_FREE* = "filesystem::free"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1161:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_FREE* = "filesystem::free"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1161:9
when "filesystem::used" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_USED* = "filesystem::used"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1173:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_USED* = "filesystem::used"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1173:9
when "filesystem::type" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_TYPE* = "filesystem::type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1182:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_TYPE* = "filesystem::type"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1182:9
when "filesystem::readonly" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_READONLY* = "filesystem::readonly"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1194:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_READONLY* = "filesystem::readonly"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1194:9
when "filesystem::use-preview" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW* = "filesystem::use-preview"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1205:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW* = "filesystem::use-preview"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1205:9
when "filesystem::remote" is static:
  const G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE* = "filesystem::remote"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1217:9
else:
  let G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE* = "filesystem::remote"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1217:9
when "gvfs::backend" is static:
  const G_FILE_ATTRIBUTE_GVFS_BACKEND* = "gvfs::backend"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1227:9
else:
  let G_FILE_ATTRIBUTE_GVFS_BACKEND* = "gvfs::backend"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1227:9
when "selinux::context" is static:
  const G_FILE_ATTRIBUTE_SELINUX_CONTEXT* = "selinux::context"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1240:9
else:
  let G_FILE_ATTRIBUTE_SELINUX_CONTEXT* = "selinux::context"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1240:9
when "trash::item-count" is static:
  const G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT* = "trash::item-count"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1250:9
else:
  let G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT* = "trash::item-count"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1250:9
when "trash::orig-path" is static:
  const G_FILE_ATTRIBUTE_TRASH_ORIG_PATH* = "trash::orig-path"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1262:9
else:
  let G_FILE_ATTRIBUTE_TRASH_ORIG_PATH* = "trash::orig-path"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1262:9
when "trash::deletion-date" is static:
  const G_FILE_ATTRIBUTE_TRASH_DELETION_DATE* = "trash::deletion-date"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1276:9
else:
  let G_FILE_ATTRIBUTE_TRASH_DELETION_DATE* = "trash::deletion-date"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1276:9
when "recent::modified" is static:
  const G_FILE_ATTRIBUTE_RECENT_MODIFIED* = "recent::modified"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1288:9
else:
  let G_FILE_ATTRIBUTE_RECENT_MODIFIED* = "recent::modified"
    ## Generated based on /usr/include/glib-2.0/gio/gfileinfo.h:1288:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_26* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:37:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_26* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:37:9
  else:
    let GMODULE_DEPRECATED_IN_2_26* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:37:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:39:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:39:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_26* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:39:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_28* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:71:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_28* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:71:9
  else:
    let GMODULE_DEPRECATED_IN_2_28* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:71:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:73:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:73:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_28* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:73:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_30* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:105:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_30* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:105:9
  else:
    let GMODULE_DEPRECATED_IN_2_30* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:105:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:107:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:107:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_30* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:107:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_32* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:139:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_32* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:139:9
  else:
    let GMODULE_DEPRECATED_IN_2_32* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:139:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:141:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:141:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_32* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:141:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_34* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:173:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_34* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:173:9
  else:
    let GMODULE_DEPRECATED_IN_2_34* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:173:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:175:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:175:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_34* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:175:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_36* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:207:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_36* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:207:9
  else:
    let GMODULE_DEPRECATED_IN_2_36* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:207:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:209:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:209:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_36* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:209:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_38* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:241:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_38* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:241:9
  else:
    let GMODULE_DEPRECATED_IN_2_38* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:241:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:243:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:243:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_38* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:243:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_40* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:275:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_40* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:275:9
  else:
    let GMODULE_DEPRECATED_IN_2_40* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:275:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:277:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:277:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_40* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:277:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_42* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:309:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_42* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:309:9
  else:
    let GMODULE_DEPRECATED_IN_2_42* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:309:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:311:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:311:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_42* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:311:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_44* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:343:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_44* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:343:9
  else:
    let GMODULE_DEPRECATED_IN_2_44* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:343:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:345:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:345:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_44* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:345:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_46* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:377:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_46* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:377:9
  else:
    let GMODULE_DEPRECATED_IN_2_46* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:377:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:379:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:379:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_46* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:379:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_48* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:411:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_48* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:411:9
  else:
    let GMODULE_DEPRECATED_IN_2_48* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:411:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:413:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:413:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_48* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:413:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_50* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:445:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_50* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:445:9
  else:
    let GMODULE_DEPRECATED_IN_2_50* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:445:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:447:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:447:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_50* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:447:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_52* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:479:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_52* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:479:9
  else:
    let GMODULE_DEPRECATED_IN_2_52* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:479:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:481:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:481:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_52* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:481:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_54* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:513:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_54* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:513:9
  else:
    let GMODULE_DEPRECATED_IN_2_54* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:513:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:515:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:515:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_54* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:515:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_56* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:547:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_56* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:547:9
  else:
    let GMODULE_DEPRECATED_IN_2_56* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:547:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:549:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:549:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_56* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:549:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_58* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:581:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_58* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:581:9
  else:
    let GMODULE_DEPRECATED_IN_2_58* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:581:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:583:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:583:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_58* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:583:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_60* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:615:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_60* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:615:9
  else:
    let GMODULE_DEPRECATED_IN_2_60* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:615:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:617:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:617:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_60* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:617:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_62* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:649:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_62* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:649:9
  else:
    let GMODULE_DEPRECATED_IN_2_62* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:649:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:651:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:651:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_62* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:651:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_64* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:683:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_64* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:683:9
  else:
    let GMODULE_DEPRECATED_IN_2_64* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:683:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:685:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:685:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_64* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:685:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_66* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:717:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_66* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:717:9
  else:
    let GMODULE_DEPRECATED_IN_2_66* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:717:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:719:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:719:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_66* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:719:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_68* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:751:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_68* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:751:9
  else:
    let GMODULE_DEPRECATED_IN_2_68* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:751:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:753:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:753:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_68* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:753:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_70* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:785:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_70* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:785:9
  else:
    let GMODULE_DEPRECATED_IN_2_70* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:785:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:787:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:787:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_70* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:787:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_72* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:819:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_72* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:819:9
  else:
    let GMODULE_DEPRECATED_IN_2_72* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:819:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:821:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:821:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_72* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:821:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_74* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:853:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_74* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:853:9
  else:
    let GMODULE_DEPRECATED_IN_2_74* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:853:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:855:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:855:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_74* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:855:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_76* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:887:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_76* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:887:9
  else:
    let GMODULE_DEPRECATED_IN_2_76* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:887:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:889:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:889:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_76* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:889:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_78* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:921:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_78* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:921:9
  else:
    let GMODULE_DEPRECATED_IN_2_78* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:921:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:923:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:923:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_78* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:923:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_80* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:955:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_80* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:955:9
  else:
    let GMODULE_DEPRECATED_IN_2_80* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:955:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:957:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:957:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_80* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:957:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_82* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:989:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_82* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:989:9
  else:
    let GMODULE_DEPRECATED_IN_2_82* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:989:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:991:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:991:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_82* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:991:9
when GMODULE_DEPRECATED is typedesc:
  type GMODULE_DEPRECATED_IN_2_84* = GMODULE_DEPRECATED
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1023:9

else:
  when GMODULE_DEPRECATED is static:
    const GMODULE_DEPRECATED_IN_2_84* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1023:9
  else:
    let GMODULE_DEPRECATED_IN_2_84* = GMODULE_DEPRECATED
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1023:9
when GLIB_DEPRECATED_MACRO is typedesc:
  type GMODULE_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
    ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1025:9

else:
  when GLIB_DEPRECATED_MACRO is static:
    const GMODULE_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1025:9
  else:
    let GMODULE_DEPRECATED_MACRO_IN_2_84* = GLIB_DEPRECATED_MACRO
      ## Generated based on /usr/include/glib-2.0/gmodule/gmodule-visibility.h:1025:9
when extern is typedesc:
  type G_MODULE_IMPORT* = extern
    ## Generated based on /usr/include/glib-2.0/gmodule.h:43:11

else:
  when extern is static:
    const G_MODULE_IMPORT* = extern
      ## Generated based on /usr/include/glib-2.0/gmodule.h:43:11
  else:
    let G_MODULE_IMPORT* = extern
      ## Generated based on /usr/include/glib-2.0/gmodule.h:43:11
when "gio-memory-monitor" is static:
  const G_MEMORY_MONITOR_EXTENSION_POINT_NAME* = "gio-memory-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:40:9
else:
  let G_MEMORY_MONITOR_EXTENSION_POINT_NAME* = "gio-memory-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gmemorymonitor.h:40:9
when "action" is static:
  const G_MENU_ATTRIBUTE_ACTION* = "action"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:43:9
else:
  let G_MENU_ATTRIBUTE_ACTION* = "action"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:43:9
when "action-namespace" is static:
  const G_MENU_ATTRIBUTE_ACTION_NAMESPACE* = "action-namespace"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:53:9
else:
  let G_MENU_ATTRIBUTE_ACTION_NAMESPACE* = "action-namespace"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:53:9
when "target" is static:
  const G_MENU_ATTRIBUTE_TARGET* = "target"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:65:9
else:
  let G_MENU_ATTRIBUTE_TARGET* = "target"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:65:9
when "label" is static:
  const G_MENU_ATTRIBUTE_LABEL* = "label"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:74:9
else:
  let G_MENU_ATTRIBUTE_LABEL* = "label"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:74:9
when "icon" is static:
  const G_MENU_ATTRIBUTE_ICON* = "icon"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:89:9
else:
  let G_MENU_ATTRIBUTE_ICON* = "icon"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:89:9
when "submenu" is static:
  const G_MENU_LINK_SUBMENU* = "submenu"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:100:9
else:
  let G_MENU_LINK_SUBMENU* = "submenu"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:100:9
when "section" is static:
  const G_MENU_LINK_SECTION* = "section"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:113:9
else:
  let G_MENU_LINK_SECTION* = "section"
    ## Generated based on /usr/include/glib-2.0/gio/gmenumodel.h:113:9
when "gio-volume-monitor" is static:
  const G_VOLUME_MONITOR_EXTENSION_POINT_NAME* = "gio-volume-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gvolumemonitor.h:50:9
else:
  let G_VOLUME_MONITOR_EXTENSION_POINT_NAME* = "gio-volume-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gvolumemonitor.h:50:9
when "gio-native-volume-monitor" is static:
  const G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME* = "gio-native-volume-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:40:9
else:
  let G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME* = "gio-native-volume-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gnativevolumemonitor.h:40:9
when "gio-network-monitor" is static:
  const G_NETWORK_MONITOR_EXTENSION_POINT_NAME* = "gio-network-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkmonitor.h:40:9
else:
  let G_NETWORK_MONITOR_EXTENSION_POINT_NAME* = "gio-network-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gnetworkmonitor.h:40:9
when "gio-power-profile-monitor" is static:
  const G_POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME* = "gio-power-profile-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:41:9
else:
  let G_POWER_PROFILE_MONITOR_EXTENSION_POINT_NAME* = "gio-power-profile-monitor"
    ## Generated based on /usr/include/glib-2.0/gio/gpowerprofilemonitor.h:41:9
when "gio-proxy" is static:
  const G_PROXY_EXTENSION_POINT_NAME* = "gio-proxy"
    ## Generated based on /usr/include/glib-2.0/gio/gproxy.h:49:9
else:
  let G_PROXY_EXTENSION_POINT_NAME* = "gio-proxy"
    ## Generated based on /usr/include/glib-2.0/gio/gproxy.h:49:9
when "gio-proxy-resolver" is static:
  const G_PROXY_RESOLVER_EXTENSION_POINT_NAME* = "gio-proxy-resolver"
    ## Generated based on /usr/include/glib-2.0/gio/gproxyresolver.h:45:9
else:
  let G_PROXY_RESOLVER_EXTENSION_POINT_NAME* = "gio-proxy-resolver"
    ## Generated based on /usr/include/glib-2.0/gio/gproxyresolver.h:45:9
when "gio-tls-backend" is static:
  const G_TLS_BACKEND_EXTENSION_POINT_NAME* = "gio-tls-backend"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsbackend.h:39:9
else:
  let G_TLS_BACKEND_EXTENSION_POINT_NAME* = "gio-tls-backend"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsbackend.h:39:9
when "1.3.6.1.5.5.7.3.1" is static:
  const G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER* = "1.3.6.1.5.5.7.3.1"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:34:9
else:
  let G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER* = "1.3.6.1.5.5.7.3.1"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:34:9
when "1.3.6.1.5.5.7.3.2" is static:
  const G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT* = "1.3.6.1.5.5.7.3.2"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:35:9
else:
  let G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT* = "1.3.6.1.5.5.7.3.2"
    ## Generated based on /usr/include/glib-2.0/gio/gtlsdatabase.h:35:9
when "gio-vfs" is static:
  const G_VFS_EXTENSION_POINT_NAME* = "gio-vfs"
    ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:69:9
else:
  let G_VFS_EXTENSION_POINT_NAME* = "gio-vfs"
    ## Generated based on /usr/include/glib-2.0/gio/gvfs.h:69:9
when "unix-device" is static:
  const G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE* = "unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:49:9
else:
  let G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE* = "unix-device"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:49:9
when "label" is static:
  const G_VOLUME_IDENTIFIER_KIND_LABEL* = "label"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:56:9
else:
  let G_VOLUME_IDENTIFIER_KIND_LABEL* = "label"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:56:9
when "uuid" is static:
  const G_VOLUME_IDENTIFIER_KIND_UUID* = "uuid"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:63:9
else:
  let G_VOLUME_IDENTIFIER_KIND_UUID* = "uuid"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:63:9
when "nfs-mount" is static:
  const G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT* = "nfs-mount"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:70:9
else:
  let G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT* = "nfs-mount"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:70:9
when "class" is static:
  const G_VOLUME_IDENTIFIER_KIND_CLASS* = "class"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:85:9
else:
  let G_VOLUME_IDENTIFIER_KIND_CLASS* = "class"
    ## Generated based on /usr/include/glib-2.0/gio/gvolume.h:85:9
proc g_array_new*(
  zero_terminated: gboolean, clear_private: gboolean, element_size: guint
): ptr GArray {.cdecl, importc: "g_array_new".}

proc g_array_new_take*(
  data: gpointer, len: gsize, clear: gboolean, element_size: gsize
): ptr GArray {.cdecl, importc: "g_array_new_take".}

proc g_array_new_take_zero_terminated*(
  data: gpointer, clear: gboolean, element_size: gsize
): ptr GArray {.cdecl, importc: "g_array_new_take_zero_terminated".}

proc g_array_steal*(
  array: ptr GArray, len: ptr gsize
): gpointer {.cdecl, importc: "g_array_steal".}

proc g_array_sized_new*(
  zero_terminated: gboolean,
  clear_private: gboolean,
  element_size: guint,
  reserved_size: guint,
): ptr GArray {.cdecl, importc: "g_array_sized_new".}

proc g_array_copy*(array: ptr GArray): ptr GArray {.cdecl, importc: "g_array_copy".}
proc g_array_free*(
  array: ptr GArray, free_segment: gboolean
): cstring {.cdecl, importc: "g_array_free".}

proc g_array_ref*(array: ptr GArray): ptr GArray {.cdecl, importc: "g_array_ref".}
proc g_array_unref*(array: ptr GArray): void {.cdecl, importc: "g_array_unref".}
proc g_array_get_element_size*(
  array: ptr GArray
): guint {.cdecl, importc: "g_array_get_element_size".}

proc g_array_append_vals*(
  array: ptr GArray, data: gconstpointer, len: guint
): ptr GArray {.cdecl, importc: "g_array_append_vals".}

proc g_array_prepend_vals*(
  array: ptr GArray, data: gconstpointer, len: guint
): ptr GArray {.cdecl, importc: "g_array_prepend_vals".}

proc g_array_insert_vals*(
  array: ptr GArray, index_private: guint, data: gconstpointer, len: guint
): ptr GArray {.cdecl, importc: "g_array_insert_vals".}

proc g_array_set_size*(
  array: ptr GArray, length: guint
): ptr GArray {.cdecl, importc: "g_array_set_size".}

proc g_array_remove_index*(
  array: ptr GArray, index_private: guint
): ptr GArray {.cdecl, importc: "g_array_remove_index".}

proc g_array_remove_index_fast*(
  array: ptr GArray, index_private: guint
): ptr GArray {.cdecl, importc: "g_array_remove_index_fast".}

proc g_array_remove_range*(
  array: ptr GArray, index_private: guint, length: guint
): ptr GArray {.cdecl, importc: "g_array_remove_range".}

proc g_array_sort*(
  array: ptr GArray, compare_func: GCompareFunc
): void {.cdecl, importc: "g_array_sort".}

proc g_array_sort_with_data*(
  array: ptr GArray, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_array_sort_with_data".}

proc g_array_binary_search*(
  array: ptr GArray,
  target: gconstpointer,
  compare_func: GCompareFunc,
  out_match_index: ptr guint,
): gboolean {.cdecl, importc: "g_array_binary_search".}

proc g_array_set_clear_func*(
  array: ptr GArray, clear_func: GDestroyNotify
): void {.cdecl, importc: "g_array_set_clear_func".}

proc g_ptr_array_new*(): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new".}
proc g_ptr_array_new_with_free_func*(
  element_free_func: GDestroyNotify
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_with_free_func".}

proc g_ptr_array_new_take*(
  data: ptr gpointer, len: gsize, element_free_func: GDestroyNotify
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_take".}

proc g_ptr_array_new_from_array*(
  data: ptr gpointer,
  len: gsize,
  copy_func: GCopyFunc,
  copy_func_user_data: gpointer,
  element_free_func: GDestroyNotify,
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_from_array".}

proc g_ptr_array_steal*(
  array: ptr GPtrArray, len: ptr gsize
): ptr gpointer {.cdecl, importc: "g_ptr_array_steal".}

proc g_ptr_array_copy*(
  array: ptr GPtrArray, func_arg: GCopyFunc, user_data: gpointer
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_copy".}

proc g_ptr_array_sized_new*(
  reserved_size: guint
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_sized_new".}

proc g_ptr_array_new_full*(
  reserved_size: guint, element_free_func: GDestroyNotify
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_full".}

proc g_ptr_array_new_null_terminated*(
  reserved_size: guint, element_free_func: GDestroyNotify, null_terminated: gboolean
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_null_terminated".}

proc g_ptr_array_new_take_null_terminated*(
  data: ptr gpointer, element_free_func: GDestroyNotify
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_take_null_terminated".}

proc g_ptr_array_new_from_null_terminated_array*(
  data: ptr gpointer,
  copy_func: GCopyFunc,
  copy_func_user_data: gpointer,
  element_free_func: GDestroyNotify,
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_new_from_null_terminated_array".}

proc g_ptr_array_free*(
  array: ptr GPtrArray, free_segment: gboolean
): ptr gpointer {.cdecl, importc: "g_ptr_array_free".}

proc g_ptr_array_ref*(
  array: ptr GPtrArray
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_ref".}

proc g_ptr_array_unref*(
  array: ptr GPtrArray
): void {.cdecl, importc: "g_ptr_array_unref".}

proc g_ptr_array_set_free_func*(
  array: ptr GPtrArray, element_free_func: GDestroyNotify
): void {.cdecl, importc: "g_ptr_array_set_free_func".}

proc g_ptr_array_set_size*(
  array: ptr GPtrArray, length: gint
): void {.cdecl, importc: "g_ptr_array_set_size".}

proc g_ptr_array_remove_index*(
  array: ptr GPtrArray, index_private: guint
): gpointer {.cdecl, importc: "g_ptr_array_remove_index".}

proc g_ptr_array_remove_index_fast*(
  array: ptr GPtrArray, index_private: guint
): gpointer {.cdecl, importc: "g_ptr_array_remove_index_fast".}

proc g_ptr_array_steal_index*(
  array: ptr GPtrArray, index_private: guint
): gpointer {.cdecl, importc: "g_ptr_array_steal_index".}

proc g_ptr_array_steal_index_fast*(
  array: ptr GPtrArray, index_private: guint
): gpointer {.cdecl, importc: "g_ptr_array_steal_index_fast".}

proc g_ptr_array_remove*(
  array: ptr GPtrArray, data: gpointer
): gboolean {.cdecl, importc: "g_ptr_array_remove".}

proc g_ptr_array_remove_fast*(
  array: ptr GPtrArray, data: gpointer
): gboolean {.cdecl, importc: "g_ptr_array_remove_fast".}

proc g_ptr_array_remove_range*(
  array: ptr GPtrArray, index_private: guint, length: guint
): ptr GPtrArray {.cdecl, importc: "g_ptr_array_remove_range".}

proc g_ptr_array_add*(
  array: ptr GPtrArray, data: gpointer
): void {.cdecl, importc: "g_ptr_array_add".}

proc g_ptr_array_extend*(
  array_to_extend: ptr GPtrArray,
  array: ptr GPtrArray,
  func_arg: GCopyFunc,
  user_data: gpointer,
): void {.cdecl, importc: "g_ptr_array_extend".}

proc g_ptr_array_extend_and_steal*(
  array_to_extend: ptr GPtrArray, array: ptr GPtrArray
): void {.cdecl, importc: "g_ptr_array_extend_and_steal".}

proc g_ptr_array_insert*(
  array: ptr GPtrArray, index_private: gint, data: gpointer
): void {.cdecl, importc: "g_ptr_array_insert".}

proc g_ptr_array_sort*(
  array: ptr GPtrArray, compare_func: GCompareFunc
): void {.cdecl, importc: "g_ptr_array_sort".}

proc g_ptr_array_sort_with_data*(
  array: ptr GPtrArray, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_ptr_array_sort_with_data".}

proc g_ptr_array_sort_values*(
  array: ptr GPtrArray, compare_func: GCompareFunc
): void {.cdecl, importc: "g_ptr_array_sort_values".}

proc g_ptr_array_sort_values_with_data*(
  array: ptr GPtrArray, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_ptr_array_sort_values_with_data".}

proc g_ptr_array_foreach*(
  array: ptr GPtrArray, func_arg: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_ptr_array_foreach".}

proc g_ptr_array_find*(
  haystack: ptr GPtrArray, needle: gconstpointer, index_private: ptr guint
): gboolean {.cdecl, importc: "g_ptr_array_find".}

proc g_ptr_array_find_with_equal_func*(
  haystack: ptr GPtrArray,
  needle: gconstpointer,
  equal_func: GEqualFunc,
  index_private: ptr guint,
): gboolean {.cdecl, importc: "g_ptr_array_find_with_equal_func".}

proc g_ptr_array_is_null_terminated*(
  array: ptr GPtrArray
): gboolean {.cdecl, importc: "g_ptr_array_is_null_terminated".}

proc g_byte_array_new*(): ptr GByteArray {.cdecl, importc: "g_byte_array_new".}
proc g_byte_array_new_take*(
  data: ptr guint8, len: gsize
): ptr GByteArray {.cdecl, importc: "g_byte_array_new_take".}

proc g_byte_array_steal*(
  array: ptr GByteArray, len: ptr gsize
): ptr guint8 {.cdecl, importc: "g_byte_array_steal".}

proc g_byte_array_sized_new*(
  reserved_size: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_sized_new".}

proc g_byte_array_free*(
  array: ptr GByteArray, free_segment: gboolean
): ptr guint8 {.cdecl, importc: "g_byte_array_free".}

proc g_byte_array_free_to_bytes*(
  array: ptr GByteArray
): ptr GBytes {.cdecl, importc: "g_byte_array_free_to_bytes".}

proc g_byte_array_ref*(
  array: ptr GByteArray
): ptr GByteArray {.cdecl, importc: "g_byte_array_ref".}

proc g_byte_array_unref*(
  array: ptr GByteArray
): void {.cdecl, importc: "g_byte_array_unref".}

proc g_byte_array_append*(
  array: ptr GByteArray, data: ptr guint8, len: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_append".}

proc g_byte_array_prepend*(
  array: ptr GByteArray, data: ptr guint8, len: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_prepend".}

proc g_byte_array_set_size*(
  array: ptr GByteArray, length: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_set_size".}

proc g_byte_array_remove_index*(
  array: ptr GByteArray, index_private: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_remove_index".}

proc g_byte_array_remove_index_fast*(
  array: ptr GByteArray, index_private: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_remove_index_fast".}

proc g_byte_array_remove_range*(
  array: ptr GByteArray, index_private: guint, length: guint
): ptr GByteArray {.cdecl, importc: "g_byte_array_remove_range".}

proc g_byte_array_sort*(
  array: ptr GByteArray, compare_func: GCompareFunc
): void {.cdecl, importc: "g_byte_array_sort".}

proc g_byte_array_sort_with_data*(
  array: ptr GByteArray, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_byte_array_sort_with_data".}

proc g_atomic_int_get*(atomic: ptr gint): gint {.cdecl, importc: "g_atomic_int_get".}
proc g_atomic_int_set*(
  atomic: ptr gint, newval: gint
): void {.cdecl, importc: "g_atomic_int_set".}

proc g_atomic_int_inc*(atomic: ptr gint): void {.cdecl, importc: "g_atomic_int_inc".}
proc g_atomic_int_dec_and_test*(
  atomic: ptr gint
): gboolean {.cdecl, importc: "g_atomic_int_dec_and_test".}

proc g_atomic_int_compare_and_exchange*(
  atomic: ptr gint, oldval: gint, newval: gint
): gboolean {.cdecl, importc: "g_atomic_int_compare_and_exchange".}

proc g_atomic_int_compare_and_exchange_full*(
  atomic: ptr gint, oldval: gint, newval: gint, preval: ptr gint
): gboolean {.cdecl, importc: "g_atomic_int_compare_and_exchange_full".}

proc g_atomic_int_exchange*(
  atomic: ptr gint, newval: gint
): gint {.cdecl, importc: "g_atomic_int_exchange".}

proc g_atomic_int_add*(
  atomic: ptr gint, val: gint
): gint {.cdecl, importc: "g_atomic_int_add".}

proc g_atomic_int_and*(
  atomic: ptr guint, val: guint
): guint {.cdecl, importc: "g_atomic_int_and".}

proc g_atomic_int_or*(
  atomic: ptr guint, val: guint
): guint {.cdecl, importc: "g_atomic_int_or".}

proc g_atomic_int_xor*(
  atomic: ptr guint, val: guint
): guint {.cdecl, importc: "g_atomic_int_xor".}

proc g_atomic_pointer_get*(
  atomic: pointer
): gpointer {.cdecl, importc: "g_atomic_pointer_get".}

proc g_atomic_pointer_set*(
  atomic: pointer, newval: gpointer
): void {.cdecl, importc: "g_atomic_pointer_set".}

proc g_atomic_pointer_compare_and_exchange*(
  atomic: pointer, oldval: gpointer, newval: gpointer
): gboolean {.cdecl, importc: "g_atomic_pointer_compare_and_exchange".}

proc g_atomic_pointer_compare_and_exchange_full*(
  atomic: pointer, oldval: gpointer, newval: gpointer, preval: pointer
): gboolean {.cdecl, importc: "g_atomic_pointer_compare_and_exchange_full".}

proc g_atomic_pointer_exchange*(
  atomic: pointer, newval: gpointer
): gpointer {.cdecl, importc: "g_atomic_pointer_exchange".}

proc g_atomic_pointer_add*(
  atomic: pointer, val: gssize
): gintptr {.cdecl, importc: "g_atomic_pointer_add".}

proc g_atomic_pointer_and*(
  atomic: pointer, val: gsize
): guintptr {.cdecl, importc: "g_atomic_pointer_and".}

proc g_atomic_pointer_or*(
  atomic: pointer, val: gsize
): guintptr {.cdecl, importc: "g_atomic_pointer_or".}

proc g_atomic_pointer_xor*(
  atomic: pointer, val: gsize
): guintptr {.cdecl, importc: "g_atomic_pointer_xor".}

proc g_atomic_int_exchange_and_add*(
  atomic: ptr gint, val: gint
): gint {.cdecl, importc: "g_atomic_int_exchange_and_add".}

proc g_quark_try_string*(
  string: cstring
): GQuark {.cdecl, importc: "g_quark_try_string".}

proc g_quark_from_static_string*(
  string: cstring
): GQuark {.cdecl, importc: "g_quark_from_static_string".}

proc g_quark_from_string*(
  string: cstring
): GQuark {.cdecl, importc: "g_quark_from_string".}

proc g_quark_to_string*(quark: GQuark): cstring {.cdecl, importc: "g_quark_to_string".}
proc g_intern_string*(string: cstring): cstring {.cdecl, importc: "g_intern_string".}
proc g_intern_static_string*(
  string: cstring
): cstring {.cdecl, importc: "g_intern_static_string".}

proc g_error_domain_register_static*(
  error_type_name: cstring,
  error_type_private_size: gsize,
  error_type_init: GErrorInitFunc,
  error_type_copy: GErrorCopyFunc,
  error_type_clear: GErrorClearFunc,
): GQuark {.cdecl, importc: "g_error_domain_register_static".}

proc g_error_domain_register*(
  error_type_name: cstring,
  error_type_private_size: gsize,
  error_type_init: GErrorInitFunc,
  error_type_copy: GErrorCopyFunc,
  error_type_clear: GErrorClearFunc,
): GQuark {.cdecl, importc: "g_error_domain_register".}

proc g_error_new*(
  domain: GQuark, code: gint, format: cstring
): ptr GError {.cdecl, varargs, importc: "g_error_new".}

proc g_error_new_literal*(
  domain: GQuark, code: gint, message: cstring
): ptr GError {.cdecl, importc: "g_error_new_literal".}

proc g_error_new_valist*(
  domain: GQuark, code: gint, format: cstring
): ptr GError {.cdecl, varargs, importc: "g_error_new_valist".}

proc g_error_free*(error: ptr GError): void {.cdecl, importc: "g_error_free".}
proc g_error_copy*(error: ptr GError): ptr GError {.cdecl, importc: "g_error_copy".}
proc g_error_matches*(
  error: ptr GError, domain: GQuark, code: gint
): gboolean {.cdecl, importc: "g_error_matches".}

proc g_set_error*(
  err: ptr ptr GError, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_set_error".}

proc g_set_error_literal*(
  err: ptr ptr GError, domain: GQuark, code: gint, message: cstring
): void {.cdecl, importc: "g_set_error_literal".}

proc g_propagate_error*(
  dest: ptr ptr GError, src: ptr GError
): void {.cdecl, importc: "g_propagate_error".}

proc g_clear_error*(err: ptr ptr GError): void {.cdecl, importc: "g_clear_error".}
proc g_prefix_error*(
  err: ptr ptr GError, format: cstring
): void {.cdecl, varargs, importc: "g_prefix_error".}

proc g_prefix_error_literal*(
  err: ptr ptr GError, prefix: cstring
): void {.cdecl, importc: "g_prefix_error_literal".}

proc g_propagate_prefixed_error*(
  dest: ptr ptr GError, src: ptr GError, format: cstring
): void {.cdecl, varargs, importc: "g_propagate_prefixed_error".}

proc g_get_user_name*(): cstring {.cdecl, importc: "g_get_user_name".}
proc g_get_real_name*(): cstring {.cdecl, importc: "g_get_real_name".}
proc g_get_home_dir*(): cstring {.cdecl, importc: "g_get_home_dir".}
proc g_get_tmp_dir*(): cstring {.cdecl, importc: "g_get_tmp_dir".}
proc g_get_host_name*(): cstring {.cdecl, importc: "g_get_host_name".}
proc g_get_prgname*(): cstring {.cdecl, importc: "g_get_prgname".}
proc g_set_prgname*(prgname: cstring): void {.cdecl, importc: "g_set_prgname".}
proc g_get_application_name*(): cstring {.cdecl, importc: "g_get_application_name".}
proc g_set_application_name*(
  application_name: cstring
): void {.cdecl, importc: "g_set_application_name".}

proc g_get_os_info*(key_name: cstring): cstring {.cdecl, importc: "g_get_os_info".}
proc g_reload_user_special_dirs_cache*(): void {.
  cdecl, importc: "g_reload_user_special_dirs_cache"
.}

proc g_get_user_data_dir*(): cstring {.cdecl, importc: "g_get_user_data_dir".}
proc g_get_user_config_dir*(): cstring {.cdecl, importc: "g_get_user_config_dir".}
proc g_get_user_cache_dir*(): cstring {.cdecl, importc: "g_get_user_cache_dir".}
proc g_get_user_state_dir*(): cstring {.cdecl, importc: "g_get_user_state_dir".}
proc g_get_system_data_dirs*(): ptr cstring {.cdecl, importc: "g_get_system_data_dirs".}
proc g_get_system_config_dirs*(): ptr cstring {.
  cdecl, importc: "g_get_system_config_dirs"
.}

proc g_get_user_runtime_dir*(): cstring {.cdecl, importc: "g_get_user_runtime_dir".}
proc g_get_user_special_dir*(
  directory: GUserDirectory
): cstring {.cdecl, importc: "g_get_user_special_dir".}

proc g_parse_debug_string*(
  string: cstring, keys: ptr GDebugKey, nkeys: guint
): guint {.cdecl, importc: "g_parse_debug_string".}

proc g_snprintf*(
  string: cstring, n: gulong, format: cstring
): gint {.cdecl, varargs, importc: "g_snprintf".}

proc g_vsnprintf*(
  string: cstring, n: gulong, format: cstring
): gint {.cdecl, varargs, importc: "g_vsnprintf".}

proc g_nullify_pointer*(
  nullify_location: ptr gpointer
): void {.cdecl, importc: "g_nullify_pointer".}

proc g_format_size_full*(
  size: guint64, flags: GFormatSizeFlags
): cstring {.cdecl, importc: "g_format_size_full".}

proc g_format_size*(size: guint64): cstring {.cdecl, importc: "g_format_size".}
proc g_format_size_for_display*(
  size: goffset
): cstring {.cdecl, importc: "g_format_size_for_display".}

proc g_atexit*(func_arg: GVoidFunc): void {.cdecl, importc: "g_atexit".}
proc g_find_program_in_path*(
  program: cstring
): cstring {.cdecl, importc: "g_find_program_in_path".}

proc g_bit_nth_lsf*(
  mask: gulong, nth_bit: gint
): gint {.cdecl, importc: "g_bit_nth_lsf".}

proc g_bit_nth_msf*(
  mask: gulong, nth_bit: gint
): gint {.cdecl, importc: "g_bit_nth_msf".}

proc g_bit_storage*(number: gulong): guint {.cdecl, importc: "g_bit_storage".}
proc g_thread_error_quark*(): GQuark {.cdecl, importc: "g_thread_error_quark".}
proc g_thread_ref*(thread: ptr GThread): ptr GThread {.cdecl, importc: "g_thread_ref".}
proc g_thread_unref*(thread: ptr GThread): void {.cdecl, importc: "g_thread_unref".}
proc g_thread_new*(
  name: cstring, func_arg: GThreadFunc, data: gpointer
): ptr GThread {.cdecl, importc: "g_thread_new".}

proc g_thread_try_new*(
  name: cstring, func_arg: GThreadFunc, data: gpointer, error: ptr ptr GError
): ptr GThread {.cdecl, importc: "g_thread_try_new".}

proc g_thread_self*(): ptr GThread {.cdecl, importc: "g_thread_self".}
proc g_thread_exit*(retval: gpointer): void {.cdecl, importc: "g_thread_exit".}
proc g_thread_join*(thread: ptr GThread): gpointer {.cdecl, importc: "g_thread_join".}
proc g_thread_yield*(): void {.cdecl, importc: "g_thread_yield".}
proc g_thread_get_name*(
  thread: ptr GThread
): cstring {.cdecl, importc: "g_thread_get_name".}

proc g_mutex_init*(mutex: ptr GMutex): void {.cdecl, importc: "g_mutex_init".}
proc g_mutex_clear*(mutex: ptr GMutex): void {.cdecl, importc: "g_mutex_clear".}
proc g_mutex_lock*(mutex: ptr GMutex): void {.cdecl, importc: "g_mutex_lock".}
proc g_mutex_trylock*(mutex: ptr GMutex): gboolean {.cdecl, importc: "g_mutex_trylock".}
proc g_mutex_unlock*(mutex: ptr GMutex): void {.cdecl, importc: "g_mutex_unlock".}
proc g_rw_lock_init*(rw_lock: ptr GRWLock): void {.cdecl, importc: "g_rw_lock_init".}
proc g_rw_lock_clear*(rw_lock: ptr GRWLock): void {.cdecl, importc: "g_rw_lock_clear".}
proc g_rw_lock_writer_lock*(
  rw_lock: ptr GRWLock
): void {.cdecl, importc: "g_rw_lock_writer_lock".}

proc g_rw_lock_writer_trylock*(
  rw_lock: ptr GRWLock
): gboolean {.cdecl, importc: "g_rw_lock_writer_trylock".}

proc g_rw_lock_writer_unlock*(
  rw_lock: ptr GRWLock
): void {.cdecl, importc: "g_rw_lock_writer_unlock".}

proc g_rw_lock_reader_lock*(
  rw_lock: ptr GRWLock
): void {.cdecl, importc: "g_rw_lock_reader_lock".}

proc g_rw_lock_reader_trylock*(
  rw_lock: ptr GRWLock
): gboolean {.cdecl, importc: "g_rw_lock_reader_trylock".}

proc g_rw_lock_reader_unlock*(
  rw_lock: ptr GRWLock
): void {.cdecl, importc: "g_rw_lock_reader_unlock".}

proc g_rec_mutex_init*(
  rec_mutex: ptr GRecMutex
): void {.cdecl, importc: "g_rec_mutex_init".}

proc g_rec_mutex_clear*(
  rec_mutex: ptr GRecMutex
): void {.cdecl, importc: "g_rec_mutex_clear".}

proc g_rec_mutex_lock*(
  rec_mutex: ptr GRecMutex
): void {.cdecl, importc: "g_rec_mutex_lock".}

proc g_rec_mutex_trylock*(
  rec_mutex: ptr GRecMutex
): gboolean {.cdecl, importc: "g_rec_mutex_trylock".}

proc g_rec_mutex_unlock*(
  rec_mutex: ptr GRecMutex
): void {.cdecl, importc: "g_rec_mutex_unlock".}

proc g_cond_init*(cond: ptr GCond): void {.cdecl, importc: "g_cond_init".}
proc g_cond_clear*(cond: ptr GCond): void {.cdecl, importc: "g_cond_clear".}
proc g_cond_wait*(
  cond: ptr GCond, mutex: ptr GMutex
): void {.cdecl, importc: "g_cond_wait".}

proc g_cond_signal*(cond: ptr GCond): void {.cdecl, importc: "g_cond_signal".}
proc g_cond_broadcast*(cond: ptr GCond): void {.cdecl, importc: "g_cond_broadcast".}
proc g_cond_wait_until*(
  cond: ptr GCond, mutex: ptr GMutex, end_time: gint64
): gboolean {.cdecl, importc: "g_cond_wait_until".}

proc g_private_get*(key: ptr GPrivate): gpointer {.cdecl, importc: "g_private_get".}
proc g_private_set*(
  key: ptr GPrivate, value: gpointer
): void {.cdecl, importc: "g_private_set".}

proc g_private_replace*(
  key: ptr GPrivate, value: gpointer
): void {.cdecl, importc: "g_private_replace".}

proc g_once_impl*(
  once: ptr GOnce, func_arg: GThreadFunc, arg: gpointer
): gpointer {.cdecl, importc: "g_once_impl".}

proc g_once_init_enter*(
  location: pointer
): gboolean {.cdecl, importc: "g_once_init_enter".}

proc g_once_init_leave*(
  location: pointer, result: gsize
): void {.cdecl, importc: "g_once_init_leave".}

proc g_get_num_processors*(): guint {.cdecl, importc: "g_get_num_processors".}
proc g_async_queue_new*(): ptr GAsyncQueue {.cdecl, importc: "g_async_queue_new".}
proc g_async_queue_new_full*(
  item_free_func: GDestroyNotify
): ptr GAsyncQueue {.cdecl, importc: "g_async_queue_new_full".}

proc g_async_queue_lock*(
  queue: ptr GAsyncQueue
): void {.cdecl, importc: "g_async_queue_lock".}

proc g_async_queue_unlock*(
  queue: ptr GAsyncQueue
): void {.cdecl, importc: "g_async_queue_unlock".}

proc g_async_queue_ref*(
  queue: ptr GAsyncQueue
): ptr GAsyncQueue {.cdecl, importc: "g_async_queue_ref".}

proc g_async_queue_unref*(
  queue: ptr GAsyncQueue
): void {.cdecl, importc: "g_async_queue_unref".}

proc g_async_queue_ref_unlocked*(
  queue: ptr GAsyncQueue
): void {.cdecl, importc: "g_async_queue_ref_unlocked".}

proc g_async_queue_unref_and_unlock*(
  queue: ptr GAsyncQueue
): void {.cdecl, importc: "g_async_queue_unref_and_unlock".}

proc g_async_queue_push*(
  queue: ptr GAsyncQueue, data: gpointer
): void {.cdecl, importc: "g_async_queue_push".}

proc g_async_queue_push_unlocked*(
  queue: ptr GAsyncQueue, data: gpointer
): void {.cdecl, importc: "g_async_queue_push_unlocked".}

proc g_async_queue_push_sorted*(
  queue: ptr GAsyncQueue,
  data: gpointer,
  func_arg: GCompareDataFunc,
  user_data: gpointer,
): void {.cdecl, importc: "g_async_queue_push_sorted".}

proc g_async_queue_push_sorted_unlocked*(
  queue: ptr GAsyncQueue,
  data: gpointer,
  func_arg: GCompareDataFunc,
  user_data: gpointer,
): void {.cdecl, importc: "g_async_queue_push_sorted_unlocked".}

proc g_async_queue_pop*(
  queue: ptr GAsyncQueue
): gpointer {.cdecl, importc: "g_async_queue_pop".}

proc g_async_queue_pop_unlocked*(
  queue: ptr GAsyncQueue
): gpointer {.cdecl, importc: "g_async_queue_pop_unlocked".}

proc g_async_queue_try_pop*(
  queue: ptr GAsyncQueue
): gpointer {.cdecl, importc: "g_async_queue_try_pop".}

proc g_async_queue_try_pop_unlocked*(
  queue: ptr GAsyncQueue
): gpointer {.cdecl, importc: "g_async_queue_try_pop_unlocked".}

proc g_async_queue_timeout_pop*(
  queue: ptr GAsyncQueue, timeout: guint64
): gpointer {.cdecl, importc: "g_async_queue_timeout_pop".}

proc g_async_queue_timeout_pop_unlocked*(
  queue: ptr GAsyncQueue, timeout: guint64
): gpointer {.cdecl, importc: "g_async_queue_timeout_pop_unlocked".}

proc g_async_queue_length*(
  queue: ptr GAsyncQueue
): gint {.cdecl, importc: "g_async_queue_length".}

proc g_async_queue_length_unlocked*(
  queue: ptr GAsyncQueue
): gint {.cdecl, importc: "g_async_queue_length_unlocked".}

proc g_async_queue_sort*(
  queue: ptr GAsyncQueue, func_arg: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_async_queue_sort".}

proc g_async_queue_sort_unlocked*(
  queue: ptr GAsyncQueue, func_arg: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_async_queue_sort_unlocked".}

proc g_async_queue_remove*(
  queue: ptr GAsyncQueue, item: gpointer
): gboolean {.cdecl, importc: "g_async_queue_remove".}

proc g_async_queue_remove_unlocked*(
  queue: ptr GAsyncQueue, item: gpointer
): gboolean {.cdecl, importc: "g_async_queue_remove_unlocked".}

proc g_async_queue_push_front*(
  queue: ptr GAsyncQueue, item: gpointer
): void {.cdecl, importc: "g_async_queue_push_front".}

proc g_async_queue_push_front_unlocked*(
  queue: ptr GAsyncQueue, item: gpointer
): void {.cdecl, importc: "g_async_queue_push_front_unlocked".}

proc g_async_queue_timed_pop*(
  queue: ptr GAsyncQueue, end_time: ptr GTimeVal
): gpointer {.cdecl, importc: "g_async_queue_timed_pop".}

proc g_async_queue_timed_pop_unlocked*(
  queue: ptr GAsyncQueue, end_time: ptr GTimeVal
): gpointer {.cdecl, importc: "g_async_queue_timed_pop_unlocked".}

proc g_on_error_query*(prg_name: cstring): void {.cdecl, importc: "g_on_error_query".}
proc g_on_error_stack_trace*(
  prg_name: cstring
): void {.cdecl, importc: "g_on_error_stack_trace".}

proc g_base64_encode_step*(
  in_arg: ptr guchar,
  len: gsize,
  break_lines: gboolean,
  out_arg: cstring,
  state: ptr gint,
  save: ptr gint,
): gsize {.cdecl, importc: "g_base64_encode_step".}

proc g_base64_encode_close*(
  break_lines: gboolean, out_arg: cstring, state: ptr gint, save: ptr gint
): gsize {.cdecl, importc: "g_base64_encode_close".}

proc g_base64_encode*(
  data: ptr guchar, len: gsize
): cstring {.cdecl, importc: "g_base64_encode".}

proc g_base64_decode_step*(
  in_arg: cstring, len: gsize, out_arg: ptr guchar, state: ptr gint, save: ptr guint
): gsize {.cdecl, importc: "g_base64_decode_step".}

proc g_base64_decode*(
  text: cstring, out_len: ptr gsize
): ptr guchar {.cdecl, importc: "g_base64_decode".}

proc g_base64_decode_inplace*(
  text: cstring, out_len: ptr gsize
): ptr guchar {.cdecl, importc: "g_base64_decode_inplace".}

proc g_bit_lock*(
  address: ptr gint, lock_bit: gint
): void {.cdecl, importc: "g_bit_lock".}

proc g_bit_trylock*(
  address: ptr gint, lock_bit: gint
): gboolean {.cdecl, importc: "g_bit_trylock".}

proc g_bit_unlock*(
  address: ptr gint, lock_bit: gint
): void {.cdecl, importc: "g_bit_unlock".}

proc g_pointer_bit_lock*(
  address: pointer, lock_bit: gint
): void {.cdecl, importc: "g_pointer_bit_lock".}

proc g_pointer_bit_lock_and_get*(
  address: gpointer, lock_bit: guint, out_ptr: ptr guintptr
): void {.cdecl, importc: "g_pointer_bit_lock_and_get".}

proc g_pointer_bit_trylock*(
  address: pointer, lock_bit: gint
): gboolean {.cdecl, importc: "g_pointer_bit_trylock".}

proc g_pointer_bit_unlock*(
  address: pointer, lock_bit: gint
): void {.cdecl, importc: "g_pointer_bit_unlock".}

proc g_pointer_bit_lock_mask_ptr*(
  ptr_arg: gpointer,
  lock_bit: guint,
  set: gboolean,
  preserve_mask: guintptr,
  preserve_ptr: gpointer,
): gpointer {.cdecl, importc: "g_pointer_bit_lock_mask_ptr".}

proc g_pointer_bit_unlock_and_set*(
  address: pointer, lock_bit: guint, ptr_arg: gpointer, preserve_mask: guintptr
): void {.cdecl, importc: "g_pointer_bit_unlock_and_set".}

proc g_time_zone_new*(
  identifier: cstring
): ptr GTimeZone {.cdecl, importc: "g_time_zone_new".}

proc g_time_zone_new_identifier*(
  identifier: cstring
): ptr GTimeZone {.cdecl, importc: "g_time_zone_new_identifier".}

proc g_time_zone_new_utc*(): ptr GTimeZone {.cdecl, importc: "g_time_zone_new_utc".}
proc g_time_zone_new_local*(): ptr GTimeZone {.cdecl, importc: "g_time_zone_new_local".}
proc g_time_zone_new_offset*(
  seconds: gint32
): ptr GTimeZone {.cdecl, importc: "g_time_zone_new_offset".}

proc g_time_zone_ref*(
  tz: ptr GTimeZone
): ptr GTimeZone {.cdecl, importc: "g_time_zone_ref".}

proc g_time_zone_unref*(tz: ptr GTimeZone): void {.cdecl, importc: "g_time_zone_unref".}
proc g_time_zone_find_interval*(
  tz: ptr GTimeZone, type_arg: GTimeType, time_private: gint64
): gint {.cdecl, importc: "g_time_zone_find_interval".}

proc g_time_zone_adjust_time*(
  tz: ptr GTimeZone, type_arg: GTimeType, time_private: ptr gint64
): gint {.cdecl, importc: "g_time_zone_adjust_time".}

proc g_time_zone_get_abbreviation*(
  tz: ptr GTimeZone, interval: gint
): cstring {.cdecl, importc: "g_time_zone_get_abbreviation".}

proc g_time_zone_get_offset*(
  tz: ptr GTimeZone, interval: gint
): gint32 {.cdecl, importc: "g_time_zone_get_offset".}

proc g_time_zone_is_dst*(
  tz: ptr GTimeZone, interval: gint
): gboolean {.cdecl, importc: "g_time_zone_is_dst".}

proc g_time_zone_get_identifier*(
  tz: ptr GTimeZone
): cstring {.cdecl, importc: "g_time_zone_get_identifier".}

proc g_date_time_unref*(
  datetime: ptr GDateTime
): void {.cdecl, importc: "g_date_time_unref".}

proc g_date_time_ref*(
  datetime: ptr GDateTime
): ptr GDateTime {.cdecl, importc: "g_date_time_ref".}

proc g_date_time_new_now*(
  tz: ptr GTimeZone
): ptr GDateTime {.cdecl, importc: "g_date_time_new_now".}

proc g_date_time_new_now_local*(): ptr GDateTime {.
  cdecl, importc: "g_date_time_new_now_local"
.}

proc g_date_time_new_now_utc*(): ptr GDateTime {.
  cdecl, importc: "g_date_time_new_now_utc"
.}

proc g_date_time_new_from_unix_local*(
  t: gint64
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_unix_local".}

proc g_date_time_new_from_unix_utc*(
  t: gint64
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_unix_utc".}

proc g_date_time_new_from_unix_local_usec*(
  usecs: gint64
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_unix_local_usec".}

proc g_date_time_new_from_unix_utc_usec*(
  usecs: gint64
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_unix_utc_usec".}

proc g_date_time_new_from_timeval_local*(
  tv: ptr GTimeVal
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_timeval_local".}

proc g_date_time_new_from_timeval_utc*(
  tv: ptr GTimeVal
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_timeval_utc".}

proc g_date_time_new_from_iso8601*(
  text: cstring, default_tz: ptr GTimeZone
): ptr GDateTime {.cdecl, importc: "g_date_time_new_from_iso8601".}

proc g_date_time_new*(
  tz: ptr GTimeZone,
  year: gint,
  month: gint,
  day: gint,
  hour: gint,
  minute: gint,
  seconds: gdouble,
): ptr GDateTime {.cdecl, importc: "g_date_time_new".}

proc g_date_time_new_local*(
  year: gint, month: gint, day: gint, hour: gint, minute: gint, seconds: gdouble
): ptr GDateTime {.cdecl, importc: "g_date_time_new_local".}

proc g_date_time_new_utc*(
  year: gint, month: gint, day: gint, hour: gint, minute: gint, seconds: gdouble
): ptr GDateTime {.cdecl, importc: "g_date_time_new_utc".}

proc g_date_time_add*(
  datetime: ptr GDateTime, timespan: GTimeSpan
): ptr GDateTime {.cdecl, importc: "g_date_time_add".}

proc g_date_time_add_years*(
  datetime: ptr GDateTime, years: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_years".}

proc g_date_time_add_months*(
  datetime: ptr GDateTime, months: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_months".}

proc g_date_time_add_weeks*(
  datetime: ptr GDateTime, weeks: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_weeks".}

proc g_date_time_add_days*(
  datetime: ptr GDateTime, days: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_days".}

proc g_date_time_add_hours*(
  datetime: ptr GDateTime, hours: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_hours".}

proc g_date_time_add_minutes*(
  datetime: ptr GDateTime, minutes: gint
): ptr GDateTime {.cdecl, importc: "g_date_time_add_minutes".}

proc g_date_time_add_seconds*(
  datetime: ptr GDateTime, seconds: gdouble
): ptr GDateTime {.cdecl, importc: "g_date_time_add_seconds".}

proc g_date_time_add_full*(
  datetime: ptr GDateTime,
  years: gint,
  months: gint,
  days: gint,
  hours: gint,
  minutes: gint,
  seconds: gdouble,
): ptr GDateTime {.cdecl, importc: "g_date_time_add_full".}

proc g_date_time_compare*(
  dt1: gconstpointer, dt2: gconstpointer
): gint {.cdecl, importc: "g_date_time_compare".}

proc g_date_time_difference*(
  end_arg: ptr GDateTime, begin: ptr GDateTime
): GTimeSpan {.cdecl, importc: "g_date_time_difference".}

proc g_date_time_hash*(
  datetime: gconstpointer
): guint {.cdecl, importc: "g_date_time_hash".}

proc g_date_time_equal*(
  dt1: gconstpointer, dt2: gconstpointer
): gboolean {.cdecl, importc: "g_date_time_equal".}

proc g_date_time_get_ymd*(
  datetime: ptr GDateTime, year: ptr gint, month: ptr gint, day: ptr gint
): void {.cdecl, importc: "g_date_time_get_ymd".}

proc g_date_time_get_year*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_year".}

proc g_date_time_get_month*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_month".}

proc g_date_time_get_day_of_month*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_day_of_month".}

proc g_date_time_get_week_numbering_year*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_week_numbering_year".}

proc g_date_time_get_week_of_year*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_week_of_year".}

proc g_date_time_get_day_of_week*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_day_of_week".}

proc g_date_time_get_day_of_year*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_day_of_year".}

proc g_date_time_get_hour*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_hour".}

proc g_date_time_get_minute*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_minute".}

proc g_date_time_get_second*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_second".}

proc g_date_time_get_microsecond*(
  datetime: ptr GDateTime
): gint {.cdecl, importc: "g_date_time_get_microsecond".}

proc g_date_time_get_seconds*(
  datetime: ptr GDateTime
): gdouble {.cdecl, importc: "g_date_time_get_seconds".}

proc g_date_time_to_unix*(
  datetime: ptr GDateTime
): gint64 {.cdecl, importc: "g_date_time_to_unix".}

proc g_date_time_to_unix_usec*(
  datetime: ptr GDateTime
): gint64 {.cdecl, importc: "g_date_time_to_unix_usec".}

proc g_date_time_to_timeval*(
  datetime: ptr GDateTime, tv: ptr GTimeVal
): gboolean {.cdecl, importc: "g_date_time_to_timeval".}

proc g_date_time_get_utc_offset*(
  datetime: ptr GDateTime
): GTimeSpan {.cdecl, importc: "g_date_time_get_utc_offset".}

proc g_date_time_get_timezone*(
  datetime: ptr GDateTime
): ptr GTimeZone {.cdecl, importc: "g_date_time_get_timezone".}

proc g_date_time_get_timezone_abbreviation*(
  datetime: ptr GDateTime
): cstring {.cdecl, importc: "g_date_time_get_timezone_abbreviation".}

proc g_date_time_is_daylight_savings*(
  datetime: ptr GDateTime
): gboolean {.cdecl, importc: "g_date_time_is_daylight_savings".}

proc g_date_time_to_timezone*(
  datetime: ptr GDateTime, tz: ptr GTimeZone
): ptr GDateTime {.cdecl, importc: "g_date_time_to_timezone".}

proc g_date_time_to_local*(
  datetime: ptr GDateTime
): ptr GDateTime {.cdecl, importc: "g_date_time_to_local".}

proc g_date_time_to_utc*(
  datetime: ptr GDateTime
): ptr GDateTime {.cdecl, importc: "g_date_time_to_utc".}

proc g_date_time_format*(
  datetime: ptr GDateTime, format: cstring
): cstring {.cdecl, importc: "g_date_time_format".}

proc g_date_time_format_iso8601*(
  datetime: ptr GDateTime
): cstring {.cdecl, importc: "g_date_time_format_iso8601".}

proc g_bookmark_file_error_quark*(): GQuark {.
  cdecl, importc: "g_bookmark_file_error_quark"
.}

proc g_bookmark_file_new*(): ptr GBookmarkFile {.cdecl, importc: "g_bookmark_file_new".}
proc g_bookmark_file_free*(
  bookmark: ptr GBookmarkFile
): void {.cdecl, importc: "g_bookmark_file_free".}

proc g_bookmark_file_copy*(
  bookmark: ptr GBookmarkFile
): ptr GBookmarkFile {.cdecl, importc: "g_bookmark_file_copy".}

proc g_bookmark_file_load_from_file*(
  bookmark: ptr GBookmarkFile, filename: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_load_from_file".}

proc g_bookmark_file_load_from_data*(
  bookmark: ptr GBookmarkFile, data: cstring, length: gsize, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_load_from_data".}

proc g_bookmark_file_load_from_data_dirs*(
  bookmark: ptr GBookmarkFile,
  file: cstring,
  full_path: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_load_from_data_dirs".}

proc g_bookmark_file_to_data*(
  bookmark: ptr GBookmarkFile, length: ptr gsize, error: ptr ptr GError
): cstring {.cdecl, importc: "g_bookmark_file_to_data".}

proc g_bookmark_file_to_file*(
  bookmark: ptr GBookmarkFile, filename: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_to_file".}

proc g_bookmark_file_set_title*(
  bookmark: ptr GBookmarkFile, uri: cstring, title: cstring
): void {.cdecl, importc: "g_bookmark_file_set_title".}

proc g_bookmark_file_get_title*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_bookmark_file_get_title".}

proc g_bookmark_file_set_description*(
  bookmark: ptr GBookmarkFile, uri: cstring, description: cstring
): void {.cdecl, importc: "g_bookmark_file_set_description".}

proc g_bookmark_file_get_description*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_bookmark_file_get_description".}

proc g_bookmark_file_set_mime_type*(
  bookmark: ptr GBookmarkFile, uri: cstring, mime_type: cstring
): void {.cdecl, importc: "g_bookmark_file_set_mime_type".}

proc g_bookmark_file_get_mime_type*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_bookmark_file_get_mime_type".}

proc g_bookmark_file_set_groups*(
  bookmark: ptr GBookmarkFile, uri: cstring, groups: ptr cstring, length: gsize
): void {.cdecl, importc: "g_bookmark_file_set_groups".}

proc g_bookmark_file_add_group*(
  bookmark: ptr GBookmarkFile, uri: cstring, group: cstring
): void {.cdecl, importc: "g_bookmark_file_add_group".}

proc g_bookmark_file_has_group*(
  bookmark: ptr GBookmarkFile, uri: cstring, group: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_has_group".}

proc g_bookmark_file_get_groups*(
  bookmark: ptr GBookmarkFile, uri: cstring, length: ptr gsize, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_bookmark_file_get_groups".}

proc g_bookmark_file_add_application*(
  bookmark: ptr GBookmarkFile, uri: cstring, name: cstring, exec: cstring
): void {.cdecl, importc: "g_bookmark_file_add_application".}

proc g_bookmark_file_has_application*(
  bookmark: ptr GBookmarkFile, uri: cstring, name: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_has_application".}

proc g_bookmark_file_get_applications*(
  bookmark: ptr GBookmarkFile, uri: cstring, length: ptr gsize, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_bookmark_file_get_applications".}

proc g_bookmark_file_set_app_info*(
  bookmark: ptr GBookmarkFile,
  uri: cstring,
  name: cstring,
  exec: cstring,
  count: gint,
  stamp: time_t,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_set_app_info".}

proc g_bookmark_file_set_application_info*(
  bookmark: ptr GBookmarkFile,
  uri: cstring,
  name: cstring,
  exec: cstring,
  count: cint,
  stamp: ptr GDateTime,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_set_application_info".}

proc g_bookmark_file_get_app_info*(
  bookmark: ptr GBookmarkFile,
  uri: cstring,
  name: cstring,
  exec: ptr cstring,
  count: ptr guint,
  stamp: ptr time_t,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_get_app_info".}

proc g_bookmark_file_get_application_info*(
  bookmark: ptr GBookmarkFile,
  uri: cstring,
  name: cstring,
  exec: ptr cstring,
  count: ptr cuint,
  stamp: ptr ptr GDateTime,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_get_application_info".}

proc g_bookmark_file_set_is_private*(
  bookmark: ptr GBookmarkFile, uri: cstring, is_private: gboolean
): void {.cdecl, importc: "g_bookmark_file_set_is_private".}

proc g_bookmark_file_get_is_private*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_get_is_private".}

proc g_bookmark_file_set_icon*(
  bookmark: ptr GBookmarkFile, uri: cstring, href: cstring, mime_type: cstring
): void {.cdecl, importc: "g_bookmark_file_set_icon".}

proc g_bookmark_file_get_icon*(
  bookmark: ptr GBookmarkFile,
  uri: cstring,
  href: ptr cstring,
  mime_type: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_bookmark_file_get_icon".}

proc g_bookmark_file_set_added*(
  bookmark: ptr GBookmarkFile, uri: cstring, added: time_t
): void {.cdecl, importc: "g_bookmark_file_set_added".}

proc g_bookmark_file_set_added_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, added: ptr GDateTime
): void {.cdecl, importc: "g_bookmark_file_set_added_date_time".}

proc g_bookmark_file_get_added*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): time_t {.cdecl, importc: "g_bookmark_file_get_added".}

proc g_bookmark_file_get_added_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): ptr GDateTime {.cdecl, importc: "g_bookmark_file_get_added_date_time".}

proc g_bookmark_file_set_modified*(
  bookmark: ptr GBookmarkFile, uri: cstring, modified: time_t
): void {.cdecl, importc: "g_bookmark_file_set_modified".}

proc g_bookmark_file_set_modified_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, modified: ptr GDateTime
): void {.cdecl, importc: "g_bookmark_file_set_modified_date_time".}

proc g_bookmark_file_get_modified*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): time_t {.cdecl, importc: "g_bookmark_file_get_modified".}

proc g_bookmark_file_get_modified_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): ptr GDateTime {.cdecl, importc: "g_bookmark_file_get_modified_date_time".}

proc g_bookmark_file_set_visited*(
  bookmark: ptr GBookmarkFile, uri: cstring, visited: time_t
): void {.cdecl, importc: "g_bookmark_file_set_visited".}

proc g_bookmark_file_set_visited_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, visited: ptr GDateTime
): void {.cdecl, importc: "g_bookmark_file_set_visited_date_time".}

proc g_bookmark_file_get_visited*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): time_t {.cdecl, importc: "g_bookmark_file_get_visited".}

proc g_bookmark_file_get_visited_date_time*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): ptr GDateTime {.cdecl, importc: "g_bookmark_file_get_visited_date_time".}

proc g_bookmark_file_has_item*(
  bookmark: ptr GBookmarkFile, uri: cstring
): gboolean {.cdecl, importc: "g_bookmark_file_has_item".}

proc g_bookmark_file_get_size*(
  bookmark: ptr GBookmarkFile
): gint {.cdecl, importc: "g_bookmark_file_get_size".}

proc g_bookmark_file_get_uris*(
  bookmark: ptr GBookmarkFile, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_bookmark_file_get_uris".}

proc g_bookmark_file_remove_group*(
  bookmark: ptr GBookmarkFile, uri: cstring, group: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_remove_group".}

proc g_bookmark_file_remove_application*(
  bookmark: ptr GBookmarkFile, uri: cstring, name: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_remove_application".}

proc g_bookmark_file_remove_item*(
  bookmark: ptr GBookmarkFile, uri: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_remove_item".}

proc g_bookmark_file_move_item*(
  bookmark: ptr GBookmarkFile, old_uri: cstring, new_uri: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_bookmark_file_move_item".}

proc g_bytes_new*(
  data: gconstpointer, size: gsize
): ptr GBytes {.cdecl, importc: "g_bytes_new".}

proc g_bytes_new_take*(
  data: gpointer, size: gsize
): ptr GBytes {.cdecl, importc: "g_bytes_new_take".}

proc g_bytes_new_static*(
  data: gconstpointer, size: gsize
): ptr GBytes {.cdecl, importc: "g_bytes_new_static".}

proc g_bytes_new_with_free_func*(
  data: gconstpointer, size: gsize, free_func: GDestroyNotify, user_data: gpointer
): ptr GBytes {.cdecl, importc: "g_bytes_new_with_free_func".}

proc g_bytes_new_from_bytes*(
  bytes: ptr GBytes, offset: gsize, length: gsize
): ptr GBytes {.cdecl, importc: "g_bytes_new_from_bytes".}

proc g_bytes_get_data*(
  bytes: ptr GBytes, size: ptr gsize
): gconstpointer {.cdecl, importc: "g_bytes_get_data".}

proc g_bytes_get_size*(bytes: ptr GBytes): gsize {.cdecl, importc: "g_bytes_get_size".}
proc g_bytes_ref*(bytes: ptr GBytes): ptr GBytes {.cdecl, importc: "g_bytes_ref".}
proc g_bytes_unref*(bytes: ptr GBytes): void {.cdecl, importc: "g_bytes_unref".}
proc g_bytes_unref_to_data*(
  bytes: ptr GBytes, size: ptr gsize
): gpointer {.cdecl, importc: "g_bytes_unref_to_data".}

proc g_bytes_unref_to_array*(
  bytes: ptr GBytes
): ptr GByteArray {.cdecl, importc: "g_bytes_unref_to_array".}

proc g_bytes_hash*(bytes: gconstpointer): guint {.cdecl, importc: "g_bytes_hash".}
proc g_bytes_equal*(
  bytes1: gconstpointer, bytes2: gconstpointer
): gboolean {.cdecl, importc: "g_bytes_equal".}

proc g_bytes_compare*(
  bytes1: gconstpointer, bytes2: gconstpointer
): gint {.cdecl, importc: "g_bytes_compare".}

proc g_bytes_get_region*(
  bytes: ptr GBytes, element_size: gsize, offset: gsize, n_elements: gsize
): gconstpointer {.cdecl, importc: "g_bytes_get_region".}

proc g_get_charset*(charset: ptr cstring): gboolean {.cdecl, importc: "g_get_charset".}
proc g_get_codeset*(): cstring {.cdecl, importc: "g_get_codeset".}
proc g_get_console_charset*(
  charset: ptr cstring
): gboolean {.cdecl, importc: "g_get_console_charset".}

proc g_get_language_names*(): ptr cstring {.cdecl, importc: "g_get_language_names".}
proc g_get_language_names_with_category*(
  category_name: cstring
): ptr cstring {.cdecl, importc: "g_get_language_names_with_category".}

proc g_get_locale_variants*(
  locale: cstring
): ptr cstring {.cdecl, importc: "g_get_locale_variants".}

proc g_checksum_type_get_length*(
  checksum_type: GChecksumType
): gssize {.cdecl, importc: "g_checksum_type_get_length".}

proc g_checksum_new*(
  checksum_type: GChecksumType
): ptr GChecksum {.cdecl, importc: "g_checksum_new".}

proc g_checksum_reset*(
  checksum: ptr GChecksum
): void {.cdecl, importc: "g_checksum_reset".}

proc g_checksum_copy*(
  checksum: ptr GChecksum
): ptr GChecksum {.cdecl, importc: "g_checksum_copy".}

proc g_checksum_free*(
  checksum: ptr GChecksum
): void {.cdecl, importc: "g_checksum_free".}

proc g_checksum_update*(
  checksum: ptr GChecksum, data: ptr guchar, length: gssize
): void {.cdecl, importc: "g_checksum_update".}

proc g_checksum_get_string*(
  checksum: ptr GChecksum
): cstring {.cdecl, importc: "g_checksum_get_string".}

proc g_checksum_get_digest*(
  checksum: ptr GChecksum, buffer: ptr guint8, digest_len: ptr gsize
): void {.cdecl, importc: "g_checksum_get_digest".}

proc g_compute_checksum_for_data*(
  checksum_type: GChecksumType, data: ptr guchar, length: gsize
): cstring {.cdecl, importc: "g_compute_checksum_for_data".}

proc g_compute_checksum_for_string*(
  checksum_type: GChecksumType, str: cstring, length: gssize
): cstring {.cdecl, importc: "g_compute_checksum_for_string".}

proc g_compute_checksum_for_bytes*(
  checksum_type: GChecksumType, data: ptr GBytes
): cstring {.cdecl, importc: "g_compute_checksum_for_bytes".}

proc g_convert_error_quark*(): GQuark {.cdecl, importc: "g_convert_error_quark".}
proc g_iconv_open*(
  to_codeset: cstring, from_codeset: cstring
): GIConv {.cdecl, importc: "g_iconv_open".}

proc g_iconv*(
  converter_arg: GIConv,
  inbuf: ptr cstring,
  inbytes_left: ptr gsize,
  outbuf: ptr cstring,
  outbytes_left: ptr gsize,
): gsize {.cdecl, importc: "g_iconv".}

proc g_iconv_close*(converter_arg: GIConv): gint {.cdecl, importc: "g_iconv_close".}
proc g_convert*(
  str: cstring,
  len: gssize,
  to_codeset: cstring,
  from_codeset: cstring,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_convert".}

proc g_convert_with_iconv*(
  str: cstring,
  len: gssize,
  converter_arg: GIConv,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_convert_with_iconv".}

proc g_convert_with_fallback*(
  str: cstring,
  len: gssize,
  to_codeset: cstring,
  from_codeset: cstring,
  fallback: cstring,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_convert_with_fallback".}

proc g_locale_to_utf8*(
  opsysstring: cstring,
  len: gssize,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_locale_to_utf8".}

proc g_locale_from_utf8*(
  utf8string: cstring,
  len: gssize,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_locale_from_utf8".}

proc g_filename_to_utf8*(
  opsysstring: cstring,
  len: gssize,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_filename_to_utf8".}

proc g_filename_from_utf8*(
  utf8string: cstring,
  len: gssize,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_filename_from_utf8".}

proc g_filename_from_uri*(
  uri: cstring, hostname: ptr cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_filename_from_uri".}

proc g_filename_to_uri*(
  filename: cstring, hostname: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_filename_to_uri".}

proc g_filename_display_name*(
  filename: cstring
): cstring {.cdecl, importc: "g_filename_display_name".}

proc g_get_filename_charsets*(
  filename_charsets: ptr ptr cstring
): gboolean {.cdecl, importc: "g_get_filename_charsets".}

proc g_filename_display_basename*(
  filename: cstring
): cstring {.cdecl, importc: "g_filename_display_basename".}

proc g_uri_list_extract_uris*(
  uri_list: cstring
): ptr cstring {.cdecl, importc: "g_uri_list_extract_uris".}

proc g_datalist_init*(
  datalist: ptr ptr GData
): void {.cdecl, importc: "g_datalist_init".}

proc g_datalist_clear*(
  datalist: ptr ptr GData
): void {.cdecl, importc: "g_datalist_clear".}

proc g_datalist_id_get_data*(
  datalist: ptr ptr GData, key_id: GQuark
): gpointer {.cdecl, importc: "g_datalist_id_get_data".}

proc g_datalist_id_set_data_full*(
  datalist: ptr ptr GData, key_id: GQuark, data: gpointer, destroy_func: GDestroyNotify
): void {.cdecl, importc: "g_datalist_id_set_data_full".}

proc g_datalist_id_remove_multiple*(
  datalist: ptr ptr GData, keys: ptr GQuark, n_keys: gsize
): void {.cdecl, importc: "g_datalist_id_remove_multiple".}

proc g_datalist_id_dup_data*(
  datalist: ptr ptr GData, key_id: GQuark, dup_func: GDuplicateFunc, user_data: gpointer
): gpointer {.cdecl, importc: "g_datalist_id_dup_data".}

proc g_datalist_id_replace_data*(
  datalist: ptr ptr GData,
  key_id: GQuark,
  oldval: gpointer,
  newval: gpointer,
  destroy: GDestroyNotify,
  old_destroy: GDestroyNotify,
): gboolean {.cdecl, importc: "g_datalist_id_replace_data".}

proc g_datalist_id_remove_no_notify*(
  datalist: ptr ptr GData, key_id: GQuark
): gpointer {.cdecl, importc: "g_datalist_id_remove_no_notify".}

proc g_datalist_foreach*(
  datalist: ptr ptr GData, func_arg: GDataForeachFunc, user_data: gpointer
): void {.cdecl, importc: "g_datalist_foreach".}

proc g_datalist_set_flags*(
  datalist: ptr ptr GData, flags: guint
): void {.cdecl, importc: "g_datalist_set_flags".}

proc g_datalist_unset_flags*(
  datalist: ptr ptr GData, flags: guint
): void {.cdecl, importc: "g_datalist_unset_flags".}

proc g_datalist_get_flags*(
  datalist: ptr ptr GData
): guint {.cdecl, importc: "g_datalist_get_flags".}

proc g_dataset_destroy*(
  dataset_location: gconstpointer
): void {.cdecl, importc: "g_dataset_destroy".}

proc g_dataset_id_get_data*(
  dataset_location: gconstpointer, key_id: GQuark
): gpointer {.cdecl, importc: "g_dataset_id_get_data".}

proc g_datalist_get_data*(
  datalist: ptr ptr GData, key: cstring
): gpointer {.cdecl, importc: "g_datalist_get_data".}

proc g_dataset_id_set_data_full*(
  dataset_location: gconstpointer,
  key_id: GQuark,
  data: gpointer,
  destroy_func: GDestroyNotify,
): void {.cdecl, importc: "g_dataset_id_set_data_full".}

proc g_dataset_id_remove_no_notify*(
  dataset_location: gconstpointer, key_id: GQuark
): gpointer {.cdecl, importc: "g_dataset_id_remove_no_notify".}

proc g_dataset_foreach*(
  dataset_location: gconstpointer, func_arg: GDataForeachFunc, user_data: gpointer
): void {.cdecl, importc: "g_dataset_foreach".}

proc g_date_new*(): ptr GDate {.cdecl, importc: "g_date_new".}
proc g_date_new_dmy*(
  day: GDateDay, month: GDateMonth, year: GDateYear
): ptr GDate {.cdecl, importc: "g_date_new_dmy".}

proc g_date_new_julian*(
  julian_day: guint32
): ptr GDate {.cdecl, importc: "g_date_new_julian".}

proc g_date_free*(date: ptr GDate): void {.cdecl, importc: "g_date_free".}
proc g_date_copy*(date: ptr GDate): ptr GDate {.cdecl, importc: "g_date_copy".}
proc g_date_valid*(date: ptr GDate): gboolean {.cdecl, importc: "g_date_valid".}
proc g_date_valid_day*(day: GDateDay): gboolean {.cdecl, importc: "g_date_valid_day".}
proc g_date_valid_month*(
  month: GDateMonth
): gboolean {.cdecl, importc: "g_date_valid_month".}

proc g_date_valid_year*(
  year: GDateYear
): gboolean {.cdecl, importc: "g_date_valid_year".}

proc g_date_valid_weekday*(
  weekday: GDateWeekday
): gboolean {.cdecl, importc: "g_date_valid_weekday".}

proc g_date_valid_julian*(
  julian_date: guint32
): gboolean {.cdecl, importc: "g_date_valid_julian".}

proc g_date_valid_dmy*(
  day: GDateDay, month: GDateMonth, year: GDateYear
): gboolean {.cdecl, importc: "g_date_valid_dmy".}

proc g_date_get_weekday*(
  date: ptr GDate
): GDateWeekday {.cdecl, importc: "g_date_get_weekday".}

proc g_date_get_month*(
  date: ptr GDate
): GDateMonth {.cdecl, importc: "g_date_get_month".}

proc g_date_get_year*(date: ptr GDate): GDateYear {.cdecl, importc: "g_date_get_year".}
proc g_date_get_day*(date: ptr GDate): GDateDay {.cdecl, importc: "g_date_get_day".}
proc g_date_get_julian*(
  date: ptr GDate
): guint32 {.cdecl, importc: "g_date_get_julian".}

proc g_date_get_day_of_year*(
  date: ptr GDate
): guint {.cdecl, importc: "g_date_get_day_of_year".}

proc g_date_get_monday_week_of_year*(
  date: ptr GDate
): guint {.cdecl, importc: "g_date_get_monday_week_of_year".}

proc g_date_get_sunday_week_of_year*(
  date: ptr GDate
): guint {.cdecl, importc: "g_date_get_sunday_week_of_year".}

proc g_date_get_iso8601_week_of_year*(
  date: ptr GDate
): guint {.cdecl, importc: "g_date_get_iso8601_week_of_year".}

proc g_date_clear*(
  date: ptr GDate, n_dates: guint
): void {.cdecl, importc: "g_date_clear".}

proc g_date_set_parse*(
  date: ptr GDate, str: cstring
): void {.cdecl, importc: "g_date_set_parse".}

proc g_date_set_time_t*(
  date: ptr GDate, timet: time_t
): void {.cdecl, importc: "g_date_set_time_t".}

proc g_date_set_time_val*(
  date: ptr GDate, timeval: ptr GTimeVal
): void {.cdecl, importc: "g_date_set_time_val".}

proc g_date_set_time*(
  date: ptr GDate, time_private: GTime
): void {.cdecl, importc: "g_date_set_time".}

proc g_date_set_month*(
  date: ptr GDate, month: GDateMonth
): void {.cdecl, importc: "g_date_set_month".}

proc g_date_set_day*(
  date: ptr GDate, day: GDateDay
): void {.cdecl, importc: "g_date_set_day".}

proc g_date_set_year*(
  date: ptr GDate, year: GDateYear
): void {.cdecl, importc: "g_date_set_year".}

proc g_date_set_dmy*(
  date: ptr GDate, day: GDateDay, month: GDateMonth, y: GDateYear
): void {.cdecl, importc: "g_date_set_dmy".}

proc g_date_set_julian*(
  date: ptr GDate, julian_date: guint32
): void {.cdecl, importc: "g_date_set_julian".}

proc g_date_is_first_of_month*(
  date: ptr GDate
): gboolean {.cdecl, importc: "g_date_is_first_of_month".}

proc g_date_is_last_of_month*(
  date: ptr GDate
): gboolean {.cdecl, importc: "g_date_is_last_of_month".}

proc g_date_add_days*(
  date: ptr GDate, n_days: guint
): void {.cdecl, importc: "g_date_add_days".}

proc g_date_subtract_days*(
  date: ptr GDate, n_days: guint
): void {.cdecl, importc: "g_date_subtract_days".}

proc g_date_add_months*(
  date: ptr GDate, n_months: guint
): void {.cdecl, importc: "g_date_add_months".}

proc g_date_subtract_months*(
  date: ptr GDate, n_months: guint
): void {.cdecl, importc: "g_date_subtract_months".}

proc g_date_add_years*(
  date: ptr GDate, n_years: guint
): void {.cdecl, importc: "g_date_add_years".}

proc g_date_subtract_years*(
  date: ptr GDate, n_years: guint
): void {.cdecl, importc: "g_date_subtract_years".}

proc g_date_is_leap_year*(
  year: GDateYear
): gboolean {.cdecl, importc: "g_date_is_leap_year".}

proc g_date_get_days_in_month*(
  month: GDateMonth, year: GDateYear
): guint8 {.cdecl, importc: "g_date_get_days_in_month".}

proc g_date_get_monday_weeks_in_year*(
  year: GDateYear
): guint8 {.cdecl, importc: "g_date_get_monday_weeks_in_year".}

proc g_date_get_sunday_weeks_in_year*(
  year: GDateYear
): guint8 {.cdecl, importc: "g_date_get_sunday_weeks_in_year".}

proc g_date_days_between*(
  date1: ptr GDate, date2: ptr GDate
): gint {.cdecl, importc: "g_date_days_between".}

proc g_date_compare*(
  lhs: ptr GDate, rhs: ptr GDate
): gint {.cdecl, importc: "g_date_compare".}

proc g_date_to_struct_tm*(
  date: ptr GDate, tm: ptr struct_tm
): void {.cdecl, importc: "g_date_to_struct_tm".}

proc g_date_clamp*(
  date: ptr GDate, min_date: ptr GDate, max_date: ptr GDate
): void {.cdecl, importc: "g_date_clamp".}

proc g_date_order*(
  date1: ptr GDate, date2: ptr GDate
): void {.cdecl, importc: "g_date_order".}

proc g_date_strftime*(
  s: cstring, slen: gsize, format: cstring, date: ptr GDate
): gsize {.cdecl, importc: "g_date_strftime".}

proc g_dir_open*(
  path: cstring, flags: guint, error: ptr ptr GError
): ptr GDir {.cdecl, importc: "g_dir_open".}

proc g_dir_read_name*(dir: ptr GDir): cstring {.cdecl, importc: "g_dir_read_name".}
proc g_dir_rewind*(dir: ptr GDir): void {.cdecl, importc: "g_dir_rewind".}
proc g_dir_close*(dir: ptr GDir): void {.cdecl, importc: "g_dir_close".}
proc g_dir_ref*(dir: ptr GDir): ptr GDir {.cdecl, importc: "g_dir_ref".}
proc g_dir_unref*(dir: ptr GDir): void {.cdecl, importc: "g_dir_unref".}
proc g_getenv*(variable: cstring): cstring {.cdecl, importc: "g_getenv".}
proc g_setenv*(
  variable: cstring, value: cstring, overwrite: gboolean
): gboolean {.cdecl, importc: "g_setenv".}

proc g_unsetenv*(variable: cstring): void {.cdecl, importc: "g_unsetenv".}
proc g_listenv*(): ptr cstring {.cdecl, importc: "g_listenv".}
proc g_get_environ*(): ptr cstring {.cdecl, importc: "g_get_environ".}
proc g_environ_getenv*(
  envp: ptr cstring, variable: cstring
): cstring {.cdecl, importc: "g_environ_getenv".}

proc g_environ_setenv*(
  envp: ptr cstring, variable: cstring, value: cstring, overwrite: gboolean
): ptr cstring {.cdecl, importc: "g_environ_setenv".}

proc g_environ_unsetenv*(
  envp: ptr cstring, variable: cstring
): ptr cstring {.cdecl, importc: "g_environ_unsetenv".}

proc g_file_error_quark*(): GQuark {.cdecl, importc: "g_file_error_quark".}
proc g_file_error_from_errno*(
  err_no: gint
): GFileError {.cdecl, importc: "g_file_error_from_errno".}

proc g_file_test*(
  filename: cstring, test: GFileTest
): gboolean {.cdecl, importc: "g_file_test".}

proc g_file_get_contents*(
  filename: cstring, contents: ptr cstring, length: ptr gsize, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_get_contents".}

proc g_file_set_contents*(
  filename: cstring, contents: cstring, length: gssize, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_set_contents".}

proc g_file_set_contents_full*(
  filename: cstring,
  contents: cstring,
  length: gssize,
  flags: GFileSetContentsFlags,
  mode: cint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_contents_full".}

proc g_file_read_link*(
  filename: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_file_read_link".}

proc g_mkdtemp*(tmpl: cstring): cstring {.cdecl, importc: "g_mkdtemp".}
proc g_mkdtemp_full*(
  tmpl: cstring, mode: gint
): cstring {.cdecl, importc: "g_mkdtemp_full".}

proc g_mkstemp*(tmpl: cstring): gint {.cdecl, importc: "g_mkstemp".}
proc g_mkstemp_full*(
  tmpl: cstring, flags: gint, mode: gint
): gint {.cdecl, importc: "g_mkstemp_full".}

proc g_file_open_tmp*(
  tmpl: cstring, name_used: ptr cstring, error: ptr ptr GError
): gint {.cdecl, importc: "g_file_open_tmp".}

proc g_dir_make_tmp*(
  tmpl: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_dir_make_tmp".}

proc g_build_path*(
  separator: cstring, first_element: cstring
): cstring {.cdecl, varargs, importc: "g_build_path".}

proc g_build_pathv*(
  separator: cstring, args: ptr cstring
): cstring {.cdecl, importc: "g_build_pathv".}

proc g_build_filename*(
  first_element: cstring
): cstring {.cdecl, varargs, importc: "g_build_filename".}

proc g_build_filenamev*(
  args: ptr cstring
): cstring {.cdecl, importc: "g_build_filenamev".}

proc g_build_filename_valist*(
  first_element: cstring, args: ptr va_list
): cstring {.cdecl, importc: "g_build_filename_valist".}

proc g_mkdir_with_parents*(
  pathname: cstring, mode: gint
): gint {.cdecl, importc: "g_mkdir_with_parents".}

proc g_path_is_absolute*(
  file_name: cstring
): gboolean {.cdecl, importc: "g_path_is_absolute".}

proc g_path_skip_root*(
  file_name: cstring
): cstring {.cdecl, importc: "g_path_skip_root".}

proc g_basename*(file_name: cstring): cstring {.cdecl, importc: "g_basename".}
proc g_get_current_dir*(): cstring {.cdecl, importc: "g_get_current_dir".}
proc g_path_get_basename*(
  file_name: cstring
): cstring {.cdecl, importc: "g_path_get_basename".}

proc g_path_get_dirname*(
  file_name: cstring
): cstring {.cdecl, importc: "g_path_get_dirname".}

proc g_canonicalize_filename*(
  filename: cstring, relative_to: cstring
): cstring {.cdecl, importc: "g_canonicalize_filename".}

proc g_strip_context*(
  msgid: cstring, msgval: cstring
): cstring {.cdecl, importc: "g_strip_context".}

proc g_dgettext*(
  domain: cstring, msgid: cstring
): cstring {.cdecl, importc: "g_dgettext".}

proc g_dcgettext*(
  domain: cstring, msgid: cstring, category: gint
): cstring {.cdecl, importc: "g_dcgettext".}

proc g_dngettext*(
  domain: cstring, msgid: cstring, msgid_plural: cstring, n: gulong
): cstring {.cdecl, importc: "g_dngettext".}

proc g_dpgettext*(
  domain: cstring, msgctxtid: cstring, msgidoffset: gsize
): cstring {.cdecl, importc: "g_dpgettext".}

proc g_dpgettext2*(
  domain: cstring, context: cstring, msgid: cstring
): cstring {.cdecl, importc: "g_dpgettext2".}

proc g_free*(mem: gpointer): void {.cdecl, importc: "g_free".}
proc g_free_sized*(
  mem: gpointer, size: csize_t
): void {.cdecl, importc: "g_free_sized".}

proc g_clear_pointer*(
  pp: ptr gpointer, destroy: GDestroyNotify
): void {.cdecl, importc: "g_clear_pointer".}

proc g_malloc*(n_bytes: gsize): gpointer {.cdecl, importc: "g_malloc".}
proc g_malloc0*(n_bytes: gsize): gpointer {.cdecl, importc: "g_malloc0".}
proc g_realloc*(mem: gpointer, n_bytes: gsize): gpointer {.cdecl, importc: "g_realloc".}
proc g_try_malloc*(n_bytes: gsize): gpointer {.cdecl, importc: "g_try_malloc".}
proc g_try_malloc0*(n_bytes: gsize): gpointer {.cdecl, importc: "g_try_malloc0".}
proc g_try_realloc*(
  mem: gpointer, n_bytes: gsize
): gpointer {.cdecl, importc: "g_try_realloc".}

proc g_malloc_n*(
  n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_malloc_n".}

proc g_malloc0_n*(
  n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_malloc0_n".}

proc g_realloc_n*(
  mem: gpointer, n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_realloc_n".}

proc g_try_malloc_n*(
  n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_try_malloc_n".}

proc g_try_malloc0_n*(
  n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_try_malloc0_n".}

proc g_try_realloc_n*(
  mem: gpointer, n_blocks: gsize, n_block_bytes: gsize
): gpointer {.cdecl, importc: "g_try_realloc_n".}

proc g_aligned_alloc*(
  n_blocks: gsize, n_block_bytes: gsize, alignment: gsize
): gpointer {.cdecl, importc: "g_aligned_alloc".}

proc g_aligned_alloc0*(
  n_blocks: gsize, n_block_bytes: gsize, alignment: gsize
): gpointer {.cdecl, importc: "g_aligned_alloc0".}

proc g_aligned_free*(mem: gpointer): void {.cdecl, importc: "g_aligned_free".}
proc g_aligned_free_sized*(
  mem: gpointer, alignment: csize_t, size: csize_t
): void {.cdecl, importc: "g_aligned_free_sized".}

proc g_mem_set_vtable*(
  vtable: ptr GMemVTable
): void {.cdecl, importc: "g_mem_set_vtable".}

proc g_mem_is_system_malloc*(): gboolean {.cdecl, importc: "g_mem_is_system_malloc".}
var g_mem_gc_friendly* {.importc: "g_mem_gc_friendly".}: gboolean
var glib_mem_profiler_table* {.importc: "glib_mem_profiler_table".}: ptr GMemVTable
proc g_mem_profile*(): void {.cdecl, importc: "g_mem_profile".}
proc g_node_new*(data: gpointer): ptr GNode {.cdecl, importc: "g_node_new".}
proc g_node_destroy*(root: ptr GNode): void {.cdecl, importc: "g_node_destroy".}
proc g_node_unlink*(node: ptr GNode): void {.cdecl, importc: "g_node_unlink".}
proc g_node_copy_deep*(
  node: ptr GNode, copy_func: GCopyFunc, data: gpointer
): ptr GNode {.cdecl, importc: "g_node_copy_deep".}

proc g_node_copy*(node: ptr GNode): ptr GNode {.cdecl, importc: "g_node_copy".}
proc g_node_insert*(
  parent: ptr GNode, position: gint, node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_insert".}

proc g_node_insert_before*(
  parent: ptr GNode, sibling: ptr GNode, node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_insert_before".}

proc g_node_insert_after*(
  parent: ptr GNode, sibling: ptr GNode, node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_insert_after".}

proc g_node_prepend*(
  parent: ptr GNode, node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_prepend".}

proc g_node_n_nodes*(
  root: ptr GNode, flags: GTraverseFlags
): guint {.cdecl, importc: "g_node_n_nodes".}

proc g_node_get_root*(node: ptr GNode): ptr GNode {.cdecl, importc: "g_node_get_root".}
proc g_node_is_ancestor*(
  node: ptr GNode, descendant: ptr GNode
): gboolean {.cdecl, importc: "g_node_is_ancestor".}

proc g_node_depth*(node: ptr GNode): guint {.cdecl, importc: "g_node_depth".}
proc g_node_find*(
  root: ptr GNode, order: GTraverseType, flags: GTraverseFlags, data: gpointer
): ptr GNode {.cdecl, importc: "g_node_find".}

proc g_node_traverse*(
  root: ptr GNode,
  order: GTraverseType,
  flags: GTraverseFlags,
  max_depth: gint,
  func_arg: GNodeTraverseFunc,
  data: gpointer,
): void {.cdecl, importc: "g_node_traverse".}

proc g_node_max_height*(root: ptr GNode): guint {.cdecl, importc: "g_node_max_height".}
proc g_node_children_foreach*(
  node: ptr GNode, flags: GTraverseFlags, func_arg: GNodeForeachFunc, data: gpointer
): void {.cdecl, importc: "g_node_children_foreach".}

proc g_node_reverse_children*(
  node: ptr GNode
): void {.cdecl, importc: "g_node_reverse_children".}

proc g_node_n_children*(node: ptr GNode): guint {.cdecl, importc: "g_node_n_children".}
proc g_node_nth_child*(
  node: ptr GNode, n: guint
): ptr GNode {.cdecl, importc: "g_node_nth_child".}

proc g_node_last_child*(
  node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_last_child".}

proc g_node_find_child*(
  node: ptr GNode, flags: GTraverseFlags, data: gpointer
): ptr GNode {.cdecl, importc: "g_node_find_child".}

proc g_node_child_position*(
  node: ptr GNode, child: ptr GNode
): gint {.cdecl, importc: "g_node_child_position".}

proc g_node_child_index*(
  node: ptr GNode, data: gpointer
): gint {.cdecl, importc: "g_node_child_index".}

proc g_node_first_sibling*(
  node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_first_sibling".}

proc g_node_last_sibling*(
  node: ptr GNode
): ptr GNode {.cdecl, importc: "g_node_last_sibling".}

proc g_list_alloc*(): ptr GList {.cdecl, importc: "g_list_alloc".}
proc g_list_free*(list: ptr GList): void {.cdecl, importc: "g_list_free".}
proc g_list_free_full*(
  list: ptr GList, free_func: GDestroyNotify
): void {.cdecl, importc: "g_list_free_full".}

proc g_list_append*(
  list: ptr GList, data: gpointer
): ptr GList {.cdecl, importc: "g_list_append".}

proc g_list_prepend*(
  list: ptr GList, data: gpointer
): ptr GList {.cdecl, importc: "g_list_prepend".}

proc g_list_insert*(
  list: ptr GList, data: gpointer, position: gint
): ptr GList {.cdecl, importc: "g_list_insert".}

proc g_list_insert_sorted*(
  list: ptr GList, data: gpointer, func_arg: GCompareFunc
): ptr GList {.cdecl, importc: "g_list_insert_sorted".}

proc g_list_insert_sorted_with_data*(
  list: ptr GList, data: gpointer, func_arg: GCompareDataFunc, user_data: gpointer
): ptr GList {.cdecl, importc: "g_list_insert_sorted_with_data".}

proc g_list_insert_before*(
  list: ptr GList, sibling: ptr GList, data: gpointer
): ptr GList {.cdecl, importc: "g_list_insert_before".}

proc g_list_insert_before_link*(
  list: ptr GList, sibling: ptr GList, link_private: ptr GList
): ptr GList {.cdecl, importc: "g_list_insert_before_link".}

proc g_list_concat*(
  list1: ptr GList, list2: ptr GList
): ptr GList {.cdecl, importc: "g_list_concat".}

proc g_list_remove*(
  list: ptr GList, data: gconstpointer
): ptr GList {.cdecl, importc: "g_list_remove".}

proc g_list_remove_all*(
  list: ptr GList, data: gconstpointer
): ptr GList {.cdecl, importc: "g_list_remove_all".}

proc g_list_remove_link*(
  list: ptr GList, llink: ptr GList
): ptr GList {.cdecl, importc: "g_list_remove_link".}

proc g_list_delete_link*(
  list: ptr GList, link_private: ptr GList
): ptr GList {.cdecl, importc: "g_list_delete_link".}

proc g_list_reverse*(list: ptr GList): ptr GList {.cdecl, importc: "g_list_reverse".}
proc g_list_copy*(list: ptr GList): ptr GList {.cdecl, importc: "g_list_copy".}
proc g_list_copy_deep*(
  list: ptr GList, func_arg: GCopyFunc, user_data: gpointer
): ptr GList {.cdecl, importc: "g_list_copy_deep".}

proc g_list_nth*(list: ptr GList, n: guint): ptr GList {.cdecl, importc: "g_list_nth".}
proc g_list_nth_prev*(
  list: ptr GList, n: guint
): ptr GList {.cdecl, importc: "g_list_nth_prev".}

proc g_list_find*(
  list: ptr GList, data: gconstpointer
): ptr GList {.cdecl, importc: "g_list_find".}

proc g_list_find_custom*(
  list: ptr GList, data: gconstpointer, func_arg: GCompareFunc
): ptr GList {.cdecl, importc: "g_list_find_custom".}

proc g_list_position*(
  list: ptr GList, llink: ptr GList
): gint {.cdecl, importc: "g_list_position".}

proc g_list_index*(
  list: ptr GList, data: gconstpointer
): gint {.cdecl, importc: "g_list_index".}

proc g_list_last*(list: ptr GList): ptr GList {.cdecl, importc: "g_list_last".}
proc g_list_first*(list: ptr GList): ptr GList {.cdecl, importc: "g_list_first".}
proc g_list_length*(list: ptr GList): guint {.cdecl, importc: "g_list_length".}
proc g_list_foreach*(
  list: ptr GList, func_arg: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_list_foreach".}

proc g_list_sort*(
  list: ptr GList, compare_func: GCompareFunc
): ptr GList {.cdecl, importc: "g_list_sort".}

proc g_list_sort_with_data*(
  list: ptr GList, compare_func: GCompareDataFunc, user_data: gpointer
): ptr GList {.cdecl, importc: "g_list_sort_with_data".}

proc g_list_nth_data*(
  list: ptr GList, n: guint
): gpointer {.cdecl, importc: "g_list_nth_data".}

proc g_clear_list*(
  list_ptr: ptr ptr GList, destroy: GDestroyNotify
): void {.cdecl, importc: "g_clear_list".}

proc g_hash_table_new*(
  hash_func: GHashFunc, key_equal_func: GEqualFunc
): ptr GHashTable {.cdecl, importc: "g_hash_table_new".}

proc g_hash_table_new_full*(
  hash_func: GHashFunc,
  key_equal_func: GEqualFunc,
  key_destroy_func: GDestroyNotify,
  value_destroy_func: GDestroyNotify,
): ptr GHashTable {.cdecl, importc: "g_hash_table_new_full".}

proc g_hash_table_new_similar*(
  other_hash_table: ptr GHashTable
): ptr GHashTable {.cdecl, importc: "g_hash_table_new_similar".}

proc g_hash_table_destroy*(
  hash_table: ptr GHashTable
): void {.cdecl, importc: "g_hash_table_destroy".}

proc g_hash_table_insert*(
  hash_table: ptr GHashTable, key: gpointer, value: gpointer
): gboolean {.cdecl, importc: "g_hash_table_insert".}

proc g_hash_table_replace*(
  hash_table: ptr GHashTable, key: gpointer, value: gpointer
): gboolean {.cdecl, importc: "g_hash_table_replace".}

proc g_hash_table_add*(
  hash_table: ptr GHashTable, key: gpointer
): gboolean {.cdecl, importc: "g_hash_table_add".}

proc g_hash_table_remove*(
  hash_table: ptr GHashTable, key: gconstpointer
): gboolean {.cdecl, importc: "g_hash_table_remove".}

proc g_hash_table_remove_all*(
  hash_table: ptr GHashTable
): void {.cdecl, importc: "g_hash_table_remove_all".}

proc g_hash_table_steal*(
  hash_table: ptr GHashTable, key: gconstpointer
): gboolean {.cdecl, importc: "g_hash_table_steal".}

proc g_hash_table_steal_extended*(
  hash_table: ptr GHashTable,
  lookup_key: gconstpointer,
  stolen_key: ptr gpointer,
  stolen_value: ptr gpointer,
): gboolean {.cdecl, importc: "g_hash_table_steal_extended".}

proc g_hash_table_steal_all*(
  hash_table: ptr GHashTable
): void {.cdecl, importc: "g_hash_table_steal_all".}

proc g_hash_table_steal_all_keys*(
  hash_table: ptr GHashTable
): ptr GPtrArray {.cdecl, importc: "g_hash_table_steal_all_keys".}

proc g_hash_table_steal_all_values*(
  hash_table: ptr GHashTable
): ptr GPtrArray {.cdecl, importc: "g_hash_table_steal_all_values".}

proc g_hash_table_lookup*(
  hash_table: ptr GHashTable, key: gconstpointer
): gpointer {.cdecl, importc: "g_hash_table_lookup".}

proc g_hash_table_contains*(
  hash_table: ptr GHashTable, key: gconstpointer
): gboolean {.cdecl, importc: "g_hash_table_contains".}

proc g_hash_table_lookup_extended*(
  hash_table: ptr GHashTable,
  lookup_key: gconstpointer,
  orig_key: ptr gpointer,
  value: ptr gpointer,
): gboolean {.cdecl, importc: "g_hash_table_lookup_extended".}

proc g_hash_table_foreach*(
  hash_table: ptr GHashTable, func_arg: GHFunc, user_data: gpointer
): void {.cdecl, importc: "g_hash_table_foreach".}

proc g_hash_table_find*(
  hash_table: ptr GHashTable, predicate: GHRFunc, user_data: gpointer
): gpointer {.cdecl, importc: "g_hash_table_find".}

proc g_hash_table_foreach_remove*(
  hash_table: ptr GHashTable, func_arg: GHRFunc, user_data: gpointer
): guint {.cdecl, importc: "g_hash_table_foreach_remove".}

proc g_hash_table_foreach_steal*(
  hash_table: ptr GHashTable, func_arg: GHRFunc, user_data: gpointer
): guint {.cdecl, importc: "g_hash_table_foreach_steal".}

proc g_hash_table_size*(
  hash_table: ptr GHashTable
): guint {.cdecl, importc: "g_hash_table_size".}

proc g_hash_table_get_keys*(
  hash_table: ptr GHashTable
): ptr GList {.cdecl, importc: "g_hash_table_get_keys".}

proc g_hash_table_get_values*(
  hash_table: ptr GHashTable
): ptr GList {.cdecl, importc: "g_hash_table_get_values".}

proc g_hash_table_get_keys_as_array*(
  hash_table: ptr GHashTable, length: ptr guint
): ptr gpointer {.cdecl, importc: "g_hash_table_get_keys_as_array".}

proc g_hash_table_get_keys_as_ptr_array*(
  hash_table: ptr GHashTable
): ptr GPtrArray {.cdecl, importc: "g_hash_table_get_keys_as_ptr_array".}

proc g_hash_table_get_values_as_ptr_array*(
  hash_table: ptr GHashTable
): ptr GPtrArray {.cdecl, importc: "g_hash_table_get_values_as_ptr_array".}

proc g_hash_table_iter_init*(
  iter: ptr GHashTableIter, hash_table: ptr GHashTable
): void {.cdecl, importc: "g_hash_table_iter_init".}

proc g_hash_table_iter_next*(
  iter: ptr GHashTableIter, key: ptr gpointer, value: ptr gpointer
): gboolean {.cdecl, importc: "g_hash_table_iter_next".}

proc g_hash_table_iter_get_hash_table*(
  iter: ptr GHashTableIter
): ptr GHashTable {.cdecl, importc: "g_hash_table_iter_get_hash_table".}

proc g_hash_table_iter_remove*(
  iter: ptr GHashTableIter
): void {.cdecl, importc: "g_hash_table_iter_remove".}

proc g_hash_table_iter_replace*(
  iter: ptr GHashTableIter, value: gpointer
): void {.cdecl, importc: "g_hash_table_iter_replace".}

proc g_hash_table_iter_steal*(
  iter: ptr GHashTableIter
): void {.cdecl, importc: "g_hash_table_iter_steal".}

proc g_hash_table_ref*(
  hash_table: ptr GHashTable
): ptr GHashTable {.cdecl, importc: "g_hash_table_ref".}

proc g_hash_table_unref*(
  hash_table: ptr GHashTable
): void {.cdecl, importc: "g_hash_table_unref".}

proc g_str_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_str_equal".}

proc g_str_hash*(v: gconstpointer): guint {.cdecl, importc: "g_str_hash".}
proc g_int_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_int_equal".}

proc g_int_hash*(v: gconstpointer): guint {.cdecl, importc: "g_int_hash".}
proc g_int64_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_int64_equal".}

proc g_int64_hash*(v: gconstpointer): guint {.cdecl, importc: "g_int64_hash".}
proc g_double_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_double_equal".}

proc g_double_hash*(v: gconstpointer): guint {.cdecl, importc: "g_double_hash".}
proc g_direct_hash*(v: gconstpointer): guint {.cdecl, importc: "g_direct_hash".}
proc g_direct_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_direct_equal".}

proc g_hmac_new*(
  digest_type: GChecksumType, key: ptr guchar, key_len: gsize
): ptr GHmac {.cdecl, importc: "g_hmac_new".}

proc g_hmac_copy*(hmac: ptr GHmac): ptr GHmac {.cdecl, importc: "g_hmac_copy".}
proc g_hmac_ref*(hmac: ptr GHmac): ptr GHmac {.cdecl, importc: "g_hmac_ref".}
proc g_hmac_unref*(hmac: ptr GHmac): void {.cdecl, importc: "g_hmac_unref".}
proc g_hmac_update*(
  hmac: ptr GHmac, data: ptr guchar, length: gssize
): void {.cdecl, importc: "g_hmac_update".}

proc g_hmac_get_string*(
  hmac: ptr GHmac
): cstring {.cdecl, importc: "g_hmac_get_string".}

proc g_hmac_get_digest*(
  hmac: ptr GHmac, buffer: ptr guint8, digest_len: ptr gsize
): void {.cdecl, importc: "g_hmac_get_digest".}

proc g_compute_hmac_for_data*(
  digest_type: GChecksumType,
  key: ptr guchar,
  key_len: gsize,
  data: ptr guchar,
  length: gsize,
): cstring {.cdecl, importc: "g_compute_hmac_for_data".}

proc g_compute_hmac_for_string*(
  digest_type: GChecksumType,
  key: ptr guchar,
  key_len: gsize,
  str: cstring,
  length: gssize,
): cstring {.cdecl, importc: "g_compute_hmac_for_string".}

proc g_compute_hmac_for_bytes*(
  digest_type: GChecksumType, key: ptr GBytes, data: ptr GBytes
): cstring {.cdecl, importc: "g_compute_hmac_for_bytes".}

proc g_hook_list_init*(
  hook_list: ptr GHookList, hook_size: guint
): void {.cdecl, importc: "g_hook_list_init".}

proc g_hook_list_clear*(
  hook_list: ptr GHookList
): void {.cdecl, importc: "g_hook_list_clear".}

proc g_hook_alloc*(
  hook_list: ptr GHookList
): ptr GHook {.cdecl, importc: "g_hook_alloc".}

proc g_hook_free*(
  hook_list: ptr GHookList, hook: ptr GHook
): void {.cdecl, importc: "g_hook_free".}

proc g_hook_ref*(
  hook_list: ptr GHookList, hook: ptr GHook
): ptr GHook {.cdecl, importc: "g_hook_ref".}

proc g_hook_unref*(
  hook_list: ptr GHookList, hook: ptr GHook
): void {.cdecl, importc: "g_hook_unref".}

proc g_hook_destroy*(
  hook_list: ptr GHookList, hook_id: gulong
): gboolean {.cdecl, importc: "g_hook_destroy".}

proc g_hook_destroy_link*(
  hook_list: ptr GHookList, hook: ptr GHook
): void {.cdecl, importc: "g_hook_destroy_link".}

proc g_hook_prepend*(
  hook_list: ptr GHookList, hook: ptr GHook
): void {.cdecl, importc: "g_hook_prepend".}

proc g_hook_insert_before*(
  hook_list: ptr GHookList, sibling: ptr GHook, hook: ptr GHook
): void {.cdecl, importc: "g_hook_insert_before".}

proc g_hook_insert_sorted*(
  hook_list: ptr GHookList, hook: ptr GHook, func_arg: GHookCompareFunc
): void {.cdecl, importc: "g_hook_insert_sorted".}

proc g_hook_get*(
  hook_list: ptr GHookList, hook_id: gulong
): ptr GHook {.cdecl, importc: "g_hook_get".}

proc g_hook_find*(
  hook_list: ptr GHookList,
  need_valids: gboolean,
  func_arg: GHookFindFunc,
  data: gpointer,
): ptr GHook {.cdecl, importc: "g_hook_find".}

proc g_hook_find_data*(
  hook_list: ptr GHookList, need_valids: gboolean, data: gpointer
): ptr GHook {.cdecl, importc: "g_hook_find_data".}

proc g_hook_find_func*(
  hook_list: ptr GHookList, need_valids: gboolean, func_arg: gpointer
): ptr GHook {.cdecl, importc: "g_hook_find_func".}

proc g_hook_find_func_data*(
  hook_list: ptr GHookList, need_valids: gboolean, func_arg: gpointer, data: gpointer
): ptr GHook {.cdecl, importc: "g_hook_find_func_data".}

proc g_hook_first_valid*(
  hook_list: ptr GHookList, may_be_in_call: gboolean
): ptr GHook {.cdecl, importc: "g_hook_first_valid".}

proc g_hook_next_valid*(
  hook_list: ptr GHookList, hook: ptr GHook, may_be_in_call: gboolean
): ptr GHook {.cdecl, importc: "g_hook_next_valid".}

proc g_hook_compare_ids*(
  new_hook: ptr GHook, sibling: ptr GHook
): gint {.cdecl, importc: "g_hook_compare_ids".}

proc g_hook_list_invoke*(
  hook_list: ptr GHookList, may_recurse: gboolean
): void {.cdecl, importc: "g_hook_list_invoke".}

proc g_hook_list_invoke_check*(
  hook_list: ptr GHookList, may_recurse: gboolean
): void {.cdecl, importc: "g_hook_list_invoke_check".}

proc g_hook_list_marshal*(
  hook_list: ptr GHookList,
  may_recurse: gboolean,
  marshaller: GHookMarshaller,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_hook_list_marshal".}

proc g_hook_list_marshal_check*(
  hook_list: ptr GHookList,
  may_recurse: gboolean,
  marshaller: GHookCheckMarshaller,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_hook_list_marshal_check".}

proc g_hostname_is_non_ascii*(
  hostname: cstring
): gboolean {.cdecl, importc: "g_hostname_is_non_ascii".}

proc g_hostname_is_ascii_encoded*(
  hostname: cstring
): gboolean {.cdecl, importc: "g_hostname_is_ascii_encoded".}

proc g_hostname_is_ip_address*(
  hostname: cstring
): gboolean {.cdecl, importc: "g_hostname_is_ip_address".}

proc g_hostname_to_ascii*(
  hostname: cstring
): cstring {.cdecl, importc: "g_hostname_to_ascii".}

proc g_hostname_to_unicode*(
  hostname: cstring
): cstring {.cdecl, importc: "g_hostname_to_unicode".}

proc g_poll*(
  fds: ptr GPollFD, nfds: guint, timeout: gint
): gint {.cdecl, importc: "g_poll".}

proc g_slist_alloc*(): ptr GSList {.cdecl, importc: "g_slist_alloc".}
proc g_slist_free*(list: ptr GSList): void {.cdecl, importc: "g_slist_free".}
proc g_slist_free_full*(
  list: ptr GSList, free_func: GDestroyNotify
): void {.cdecl, importc: "g_slist_free_full".}

proc g_slist_append*(
  list: ptr GSList, data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_append".}

proc g_slist_prepend*(
  list: ptr GSList, data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_prepend".}

proc g_slist_insert*(
  list: ptr GSList, data: gpointer, position: gint
): ptr GSList {.cdecl, importc: "g_slist_insert".}

proc g_slist_insert_sorted*(
  list: ptr GSList, data: gpointer, func_arg: GCompareFunc
): ptr GSList {.cdecl, importc: "g_slist_insert_sorted".}

proc g_slist_insert_sorted_with_data*(
  list: ptr GSList, data: gpointer, func_arg: GCompareDataFunc, user_data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_insert_sorted_with_data".}

proc g_slist_insert_before*(
  slist: ptr GSList, sibling: ptr GSList, data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_insert_before".}

proc g_slist_concat*(
  list1: ptr GSList, list2: ptr GSList
): ptr GSList {.cdecl, importc: "g_slist_concat".}

proc g_slist_remove*(
  list: ptr GSList, data: gconstpointer
): ptr GSList {.cdecl, importc: "g_slist_remove".}

proc g_slist_remove_all*(
  list: ptr GSList, data: gconstpointer
): ptr GSList {.cdecl, importc: "g_slist_remove_all".}

proc g_slist_remove_link*(
  list: ptr GSList, link_private: ptr GSList
): ptr GSList {.cdecl, importc: "g_slist_remove_link".}

proc g_slist_delete_link*(
  list: ptr GSList, link_private: ptr GSList
): ptr GSList {.cdecl, importc: "g_slist_delete_link".}

proc g_slist_reverse*(
  list: ptr GSList
): ptr GSList {.cdecl, importc: "g_slist_reverse".}

proc g_slist_copy*(list: ptr GSList): ptr GSList {.cdecl, importc: "g_slist_copy".}
proc g_slist_copy_deep*(
  list: ptr GSList, func_arg: GCopyFunc, user_data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_copy_deep".}

proc g_slist_nth*(
  list: ptr GSList, n: guint
): ptr GSList {.cdecl, importc: "g_slist_nth".}

proc g_slist_find*(
  list: ptr GSList, data: gconstpointer
): ptr GSList {.cdecl, importc: "g_slist_find".}

proc g_slist_find_custom*(
  list: ptr GSList, data: gconstpointer, func_arg: GCompareFunc
): ptr GSList {.cdecl, importc: "g_slist_find_custom".}

proc g_slist_position*(
  list: ptr GSList, llink: ptr GSList
): gint {.cdecl, importc: "g_slist_position".}

proc g_slist_index*(
  list: ptr GSList, data: gconstpointer
): gint {.cdecl, importc: "g_slist_index".}

proc g_slist_last*(list: ptr GSList): ptr GSList {.cdecl, importc: "g_slist_last".}
proc g_slist_length*(list: ptr GSList): guint {.cdecl, importc: "g_slist_length".}
proc g_slist_foreach*(
  list: ptr GSList, func_arg: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_slist_foreach".}

proc g_slist_sort*(
  list: ptr GSList, compare_func: GCompareFunc
): ptr GSList {.cdecl, importc: "g_slist_sort".}

proc g_slist_sort_with_data*(
  list: ptr GSList, compare_func: GCompareDataFunc, user_data: gpointer
): ptr GSList {.cdecl, importc: "g_slist_sort_with_data".}

proc g_slist_nth_data*(
  list: ptr GSList, n: guint
): gpointer {.cdecl, importc: "g_slist_nth_data".}

proc g_clear_slist*(
  slist_ptr: ptr ptr GSList, destroy: GDestroyNotify
): void {.cdecl, importc: "g_clear_slist".}

proc g_main_context_new*(): ptr GMainContext {.cdecl, importc: "g_main_context_new".}
proc g_main_context_new_with_flags*(
  flags: GMainContextFlags
): ptr GMainContext {.cdecl, importc: "g_main_context_new_with_flags".}

proc g_main_context_ref*(
  context: ptr GMainContext
): ptr GMainContext {.cdecl, importc: "g_main_context_ref".}

proc g_main_context_unref*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_unref".}

proc g_main_context_default*(): ptr GMainContext {.
  cdecl, importc: "g_main_context_default"
.}

proc g_main_context_iteration*(
  context: ptr GMainContext, may_block: gboolean
): gboolean {.cdecl, importc: "g_main_context_iteration".}

proc g_main_context_pending*(
  context: ptr GMainContext
): gboolean {.cdecl, importc: "g_main_context_pending".}

proc g_main_context_find_source_by_id*(
  context: ptr GMainContext, source_id: guint
): ptr GSource {.cdecl, importc: "g_main_context_find_source_by_id".}

proc g_main_context_find_source_by_user_data*(
  context: ptr GMainContext, user_data: gpointer
): ptr GSource {.cdecl, importc: "g_main_context_find_source_by_user_data".}

proc g_main_context_find_source_by_funcs_user_data*(
  context: ptr GMainContext, funcs: ptr GSourceFuncs, user_data: gpointer
): ptr GSource {.cdecl, importc: "g_main_context_find_source_by_funcs_user_data".}

proc g_main_context_wakeup*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_wakeup".}

proc g_main_context_acquire*(
  context: ptr GMainContext
): gboolean {.cdecl, importc: "g_main_context_acquire".}

proc g_main_context_release*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_release".}

proc g_main_context_is_owner*(
  context: ptr GMainContext
): gboolean {.cdecl, importc: "g_main_context_is_owner".}

proc g_main_context_wait*(
  context: ptr GMainContext, cond: ptr GCond, mutex: ptr GMutex
): gboolean {.cdecl, importc: "g_main_context_wait".}

proc g_main_context_prepare*(
  context: ptr GMainContext, priority: ptr gint
): gboolean {.cdecl, importc: "g_main_context_prepare".}

proc g_main_context_query*(
  context: ptr GMainContext,
  max_priority: gint,
  timeout_private: ptr gint,
  fds: ptr GPollFD,
  n_fds: gint,
): gint {.cdecl, importc: "g_main_context_query".}

proc g_main_context_check*(
  context: ptr GMainContext, max_priority: gint, fds: ptr GPollFD, n_fds: gint
): gboolean {.cdecl, importc: "g_main_context_check".}

proc g_main_context_dispatch*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_dispatch".}

proc g_main_context_set_poll_func*(
  context: ptr GMainContext, func_arg: GPollFunc
): void {.cdecl, importc: "g_main_context_set_poll_func".}

proc g_main_context_get_poll_func*(
  context: ptr GMainContext
): GPollFunc {.cdecl, importc: "g_main_context_get_poll_func".}

proc g_main_context_add_poll*(
  context: ptr GMainContext, fd: ptr GPollFD, priority: gint
): void {.cdecl, importc: "g_main_context_add_poll".}

proc g_main_context_remove_poll*(
  context: ptr GMainContext, fd: ptr GPollFD
): void {.cdecl, importc: "g_main_context_remove_poll".}

proc g_main_depth*(): gint {.cdecl, importc: "g_main_depth".}
proc g_main_current_source*(): ptr GSource {.cdecl, importc: "g_main_current_source".}
proc g_main_context_push_thread_default*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_push_thread_default".}

proc g_main_context_pop_thread_default*(
  context: ptr GMainContext
): void {.cdecl, importc: "g_main_context_pop_thread_default".}

proc g_main_context_get_thread_default*(): ptr GMainContext {.
  cdecl, importc: "g_main_context_get_thread_default"
.}

proc g_main_context_ref_thread_default*(): ptr GMainContext {.
  cdecl, importc: "g_main_context_ref_thread_default"
.}

proc g_main_loop_new*(
  context: ptr GMainContext, is_running: gboolean
): ptr GMainLoop {.cdecl, importc: "g_main_loop_new".}

proc g_main_loop_run*(loop: ptr GMainLoop): void {.cdecl, importc: "g_main_loop_run".}
proc g_main_loop_quit*(loop: ptr GMainLoop): void {.cdecl, importc: "g_main_loop_quit".}
proc g_main_loop_ref*(
  loop: ptr GMainLoop
): ptr GMainLoop {.cdecl, importc: "g_main_loop_ref".}

proc g_main_loop_unref*(
  loop: ptr GMainLoop
): void {.cdecl, importc: "g_main_loop_unref".}

proc g_main_loop_is_running*(
  loop: ptr GMainLoop
): gboolean {.cdecl, importc: "g_main_loop_is_running".}

proc g_main_loop_get_context*(
  loop: ptr GMainLoop
): ptr GMainContext {.cdecl, importc: "g_main_loop_get_context".}

proc g_source_new*(
  source_funcs: ptr GSourceFuncs, struct_size: guint
): ptr GSource {.cdecl, importc: "g_source_new".}

proc g_source_set_dispose_function*(
  source: ptr GSource, dispose: GSourceDisposeFunc
): void {.cdecl, importc: "g_source_set_dispose_function".}

proc g_source_ref*(source: ptr GSource): ptr GSource {.cdecl, importc: "g_source_ref".}
proc g_source_unref*(source: ptr GSource): void {.cdecl, importc: "g_source_unref".}
proc g_source_attach*(
  source: ptr GSource, context: ptr GMainContext
): guint {.cdecl, importc: "g_source_attach".}

proc g_source_destroy*(source: ptr GSource): void {.cdecl, importc: "g_source_destroy".}
proc g_source_set_priority*(
  source: ptr GSource, priority: gint
): void {.cdecl, importc: "g_source_set_priority".}

proc g_source_get_priority*(
  source: ptr GSource
): gint {.cdecl, importc: "g_source_get_priority".}

proc g_source_set_can_recurse*(
  source: ptr GSource, can_recurse: gboolean
): void {.cdecl, importc: "g_source_set_can_recurse".}

proc g_source_get_can_recurse*(
  source: ptr GSource
): gboolean {.cdecl, importc: "g_source_get_can_recurse".}

proc g_source_get_id*(source: ptr GSource): guint {.cdecl, importc: "g_source_get_id".}
proc g_source_get_context*(
  source: ptr GSource
): ptr GMainContext {.cdecl, importc: "g_source_get_context".}

proc g_source_set_callback*(
  source: ptr GSource, func_arg: GSourceFunc, data: gpointer, notify: GDestroyNotify
): void {.cdecl, importc: "g_source_set_callback".}

proc g_source_set_funcs*(
  source: ptr GSource, funcs: ptr GSourceFuncs
): void {.cdecl, importc: "g_source_set_funcs".}

proc g_source_is_destroyed*(
  source: ptr GSource
): gboolean {.cdecl, importc: "g_source_is_destroyed".}

proc g_source_set_name*(
  source: ptr GSource, name: cstring
): void {.cdecl, importc: "g_source_set_name".}

proc g_source_set_static_name*(
  source: ptr GSource, name: cstring
): void {.cdecl, importc: "g_source_set_static_name".}

proc g_source_get_name*(
  source: ptr GSource
): cstring {.cdecl, importc: "g_source_get_name".}

proc g_source_set_name_by_id*(
  tag: guint, name: cstring
): void {.cdecl, importc: "g_source_set_name_by_id".}

proc g_source_set_ready_time*(
  source: ptr GSource, ready_time: gint64
): void {.cdecl, importc: "g_source_set_ready_time".}

proc g_source_get_ready_time*(
  source: ptr GSource
): gint64 {.cdecl, importc: "g_source_get_ready_time".}

proc g_source_add_unix_fd*(
  source: ptr GSource, fd: gint, events: GIOCondition
): gpointer {.cdecl, importc: "g_source_add_unix_fd".}

proc g_source_modify_unix_fd*(
  source: ptr GSource, tag: gpointer, new_events: GIOCondition
): void {.cdecl, importc: "g_source_modify_unix_fd".}

proc g_source_remove_unix_fd*(
  source: ptr GSource, tag: gpointer
): void {.cdecl, importc: "g_source_remove_unix_fd".}

proc g_source_query_unix_fd*(
  source: ptr GSource, tag: gpointer
): GIOCondition {.cdecl, importc: "g_source_query_unix_fd".}

proc g_source_set_callback_indirect*(
  source: ptr GSource, callback_data: gpointer, callback_funcs: ptr GSourceCallbackFuncs
): void {.cdecl, importc: "g_source_set_callback_indirect".}

proc g_source_add_poll*(
  source: ptr GSource, fd: ptr GPollFD
): void {.cdecl, importc: "g_source_add_poll".}

proc g_source_remove_poll*(
  source: ptr GSource, fd: ptr GPollFD
): void {.cdecl, importc: "g_source_remove_poll".}

proc g_source_add_child_source*(
  source: ptr GSource, child_source: ptr GSource
): void {.cdecl, importc: "g_source_add_child_source".}

proc g_source_remove_child_source*(
  source: ptr GSource, child_source: ptr GSource
): void {.cdecl, importc: "g_source_remove_child_source".}

proc g_source_get_current_time*(
  source: ptr GSource, timeval: ptr GTimeVal
): void {.cdecl, importc: "g_source_get_current_time".}

proc g_source_get_time*(
  source: ptr GSource
): gint64 {.cdecl, importc: "g_source_get_time".}

proc g_idle_source_new*(): ptr GSource {.cdecl, importc: "g_idle_source_new".}
proc g_child_watch_source_new*(
  pid: GPid
): ptr GSource {.cdecl, importc: "g_child_watch_source_new".}

proc g_timeout_source_new*(
  interval: guint
): ptr GSource {.cdecl, importc: "g_timeout_source_new".}

proc g_timeout_source_new_seconds*(
  interval: guint
): ptr GSource {.cdecl, importc: "g_timeout_source_new_seconds".}

proc g_get_current_time*(
  result: ptr GTimeVal
): void {.cdecl, importc: "g_get_current_time".}

proc g_get_monotonic_time*(): gint64 {.cdecl, importc: "g_get_monotonic_time".}
proc g_get_real_time*(): gint64 {.cdecl, importc: "g_get_real_time".}
proc g_source_remove*(tag: guint): gboolean {.cdecl, importc: "g_source_remove".}
proc g_source_remove_by_user_data*(
  user_data: gpointer
): gboolean {.cdecl, importc: "g_source_remove_by_user_data".}

proc g_source_remove_by_funcs_user_data*(
  funcs: ptr GSourceFuncs, user_data: gpointer
): gboolean {.cdecl, importc: "g_source_remove_by_funcs_user_data".}

proc g_clear_handle_id*(
  tag_ptr: ptr guint, clear_func: GClearHandleFunc
): void {.cdecl, importc: "g_clear_handle_id".}

proc g_timeout_add_full*(
  priority: gint,
  interval: guint,
  function: GSourceFunc,
  data: gpointer,
  notify: GDestroyNotify,
): guint {.cdecl, importc: "g_timeout_add_full".}

proc g_timeout_add*(
  interval: guint, function: GSourceFunc, data: gpointer
): guint {.cdecl, importc: "g_timeout_add".}

proc g_timeout_add_once*(
  interval: guint, function: GSourceOnceFunc, data: gpointer
): guint {.cdecl, importc: "g_timeout_add_once".}

proc g_timeout_add_seconds_full*(
  priority: gint,
  interval: guint,
  function: GSourceFunc,
  data: gpointer,
  notify: GDestroyNotify,
): guint {.cdecl, importc: "g_timeout_add_seconds_full".}

proc g_timeout_add_seconds*(
  interval: guint, function: GSourceFunc, data: gpointer
): guint {.cdecl, importc: "g_timeout_add_seconds".}

proc g_timeout_add_seconds_once*(
  interval: guint, function: GSourceOnceFunc, data: gpointer
): guint {.cdecl, importc: "g_timeout_add_seconds_once".}

proc g_child_watch_add_full*(
  priority: gint,
  pid: GPid,
  function: GChildWatchFunc,
  data: gpointer,
  notify: GDestroyNotify,
): guint {.cdecl, importc: "g_child_watch_add_full".}

proc g_child_watch_add*(
  pid: GPid, function: GChildWatchFunc, data: gpointer
): guint {.cdecl, importc: "g_child_watch_add".}

proc g_idle_add*(
  function: GSourceFunc, data: gpointer
): guint {.cdecl, importc: "g_idle_add".}

proc g_idle_add_full*(
  priority: gint, function: GSourceFunc, data: gpointer, notify: GDestroyNotify
): guint {.cdecl, importc: "g_idle_add_full".}

proc g_idle_add_once*(
  function: GSourceOnceFunc, data: gpointer
): guint {.cdecl, importc: "g_idle_add_once".}

proc g_idle_remove_by_data*(
  data: gpointer
): gboolean {.cdecl, importc: "g_idle_remove_by_data".}

proc g_main_context_invoke_full*(
  context: ptr GMainContext,
  priority: gint,
  function: GSourceFunc,
  data: gpointer,
  notify: GDestroyNotify,
): void {.cdecl, importc: "g_main_context_invoke_full".}

proc g_main_context_invoke*(
  context: ptr GMainContext, function: GSourceFunc, data: gpointer
): void {.cdecl, importc: "g_main_context_invoke".}

var g_timeout_funcs* {.importc: "g_timeout_funcs".}: GSourceFuncs
var g_child_watch_funcs* {.importc: "g_child_watch_funcs".}: GSourceFuncs
var g_idle_funcs* {.importc: "g_idle_funcs".}: GSourceFuncs
var g_unix_signal_funcs* {.importc: "g_unix_signal_funcs".}: GSourceFuncs
var g_unix_fd_source_funcs* {.importc: "g_unix_fd_source_funcs".}: GSourceFuncs
proc g_unicode_script_to_iso15924*(
  script: GUnicodeScript
): guint32 {.cdecl, importc: "g_unicode_script_to_iso15924".}

proc g_unicode_script_from_iso15924*(
  iso15924: guint32
): GUnicodeScript {.cdecl, importc: "g_unicode_script_from_iso15924".}

proc g_unichar_isalnum*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isalnum".}
proc g_unichar_isalpha*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isalpha".}
proc g_unichar_iscntrl*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_iscntrl".}
proc g_unichar_isdigit*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isdigit".}
proc g_unichar_isgraph*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isgraph".}
proc g_unichar_islower*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_islower".}
proc g_unichar_isprint*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isprint".}
proc g_unichar_ispunct*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_ispunct".}
proc g_unichar_isspace*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isspace".}
proc g_unichar_isupper*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isupper".}
proc g_unichar_isxdigit*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_isxdigit".}
proc g_unichar_istitle*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_istitle".}
proc g_unichar_isdefined*(
  c: gunichar
): gboolean {.cdecl, importc: "g_unichar_isdefined".}

proc g_unichar_iswide*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_iswide".}
proc g_unichar_iswide_cjk*(
  c: gunichar
): gboolean {.cdecl, importc: "g_unichar_iswide_cjk".}

proc g_unichar_iszerowidth*(
  c: gunichar
): gboolean {.cdecl, importc: "g_unichar_iszerowidth".}

proc g_unichar_ismark*(c: gunichar): gboolean {.cdecl, importc: "g_unichar_ismark".}
proc g_unichar_toupper*(c: gunichar): gunichar {.cdecl, importc: "g_unichar_toupper".}
proc g_unichar_tolower*(c: gunichar): gunichar {.cdecl, importc: "g_unichar_tolower".}
proc g_unichar_totitle*(c: gunichar): gunichar {.cdecl, importc: "g_unichar_totitle".}
proc g_unichar_digit_value*(
  c: gunichar
): gint {.cdecl, importc: "g_unichar_digit_value".}

proc g_unichar_xdigit_value*(
  c: gunichar
): gint {.cdecl, importc: "g_unichar_xdigit_value".}

proc g_unichar_type*(c: gunichar): GUnicodeType {.cdecl, importc: "g_unichar_type".}
proc g_unichar_break_type*(
  c: gunichar
): GUnicodeBreakType {.cdecl, importc: "g_unichar_break_type".}

proc g_unichar_combining_class*(
  uc: gunichar
): gint {.cdecl, importc: "g_unichar_combining_class".}

proc g_unichar_get_mirror_char*(
  ch: gunichar, mirrored_ch: ptr gunichar
): gboolean {.cdecl, importc: "g_unichar_get_mirror_char".}

proc g_unichar_get_script*(
  ch: gunichar
): GUnicodeScript {.cdecl, importc: "g_unichar_get_script".}

proc g_unichar_validate*(
  ch: gunichar
): gboolean {.cdecl, importc: "g_unichar_validate".}

proc g_unichar_compose*(
  a: gunichar, b: gunichar, ch: ptr gunichar
): gboolean {.cdecl, importc: "g_unichar_compose".}

proc g_unichar_decompose*(
  ch: gunichar, a: ptr gunichar, b: ptr gunichar
): gboolean {.cdecl, importc: "g_unichar_decompose".}

proc g_unichar_fully_decompose*(
  ch: gunichar, compat: gboolean, result: ptr gunichar, result_len: gsize
): gsize {.cdecl, importc: "g_unichar_fully_decompose".}

proc g_unicode_canonical_ordering*(
  string: ptr gunichar, len: gsize
): void {.cdecl, importc: "g_unicode_canonical_ordering".}

proc g_unicode_canonical_decomposition*(
  ch: gunichar, result_len: ptr gsize
): ptr gunichar {.cdecl, importc: "g_unicode_canonical_decomposition".}

var g_utf8_skip* {.importc: "g_utf8_skip".}: cstring
proc g_utf8_get_char*(p: cstring): gunichar {.cdecl, importc: "g_utf8_get_char".}
proc g_utf8_get_char_validated*(
  p: cstring, max_len: gssize
): gunichar {.cdecl, importc: "g_utf8_get_char_validated".}

proc g_utf8_offset_to_pointer*(
  str: cstring, offset: glong
): cstring {.cdecl, importc: "g_utf8_offset_to_pointer".}

proc g_utf8_pointer_to_offset*(
  str: cstring, pos: cstring
): glong {.cdecl, importc: "g_utf8_pointer_to_offset".}

proc g_utf8_prev_char*(p: cstring): cstring {.cdecl, importc: "g_utf8_prev_char".}
proc g_utf8_find_next_char*(
  p: cstring, end_arg: cstring
): cstring {.cdecl, importc: "g_utf8_find_next_char".}

proc g_utf8_find_prev_char*(
  str: cstring, p: cstring
): cstring {.cdecl, importc: "g_utf8_find_prev_char".}

proc g_utf8_strlen*(p: cstring, max: gssize): glong {.cdecl, importc: "g_utf8_strlen".}
proc g_utf8_substring*(
  str: cstring, start_pos: glong, end_pos: glong
): cstring {.cdecl, importc: "g_utf8_substring".}

proc g_utf8_strncpy*(
  dest: cstring, src: cstring, n: gsize
): cstring {.cdecl, importc: "g_utf8_strncpy".}

proc g_utf8_truncate_middle*(
  string: cstring, truncate_length: gsize
): cstring {.cdecl, importc: "g_utf8_truncate_middle".}

proc g_utf8_strchr*(
  p: cstring, len: gssize, c: gunichar
): cstring {.cdecl, importc: "g_utf8_strchr".}

proc g_utf8_strrchr*(
  p: cstring, len: gssize, c: gunichar
): cstring {.cdecl, importc: "g_utf8_strrchr".}

proc g_utf8_strreverse*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_strreverse".}

proc g_utf8_to_utf16*(
  str: cstring,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): ptr gunichar2 {.cdecl, importc: "g_utf8_to_utf16".}

proc g_utf8_to_ucs4*(
  str: cstring,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): ptr gunichar {.cdecl, importc: "g_utf8_to_ucs4".}

proc g_utf8_to_ucs4_fast*(
  str: cstring, len: glong, items_written: ptr glong
): ptr gunichar {.cdecl, importc: "g_utf8_to_ucs4_fast".}

proc g_utf16_to_ucs4*(
  str: ptr gunichar2,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): ptr gunichar {.cdecl, importc: "g_utf16_to_ucs4".}

proc g_utf16_to_utf8*(
  str: ptr gunichar2,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_utf16_to_utf8".}

proc g_ucs4_to_utf16*(
  str: ptr gunichar,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): ptr gunichar2 {.cdecl, importc: "g_ucs4_to_utf16".}

proc g_ucs4_to_utf8*(
  str: ptr gunichar,
  len: glong,
  items_read: ptr glong,
  items_written: ptr glong,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_ucs4_to_utf8".}

proc g_unichar_to_utf8*(
  c: gunichar, outbuf: cstring
): gint {.cdecl, importc: "g_unichar_to_utf8".}

proc g_utf8_validate*(
  str: cstring, max_len: gssize, end_arg: ptr cstring
): gboolean {.cdecl, importc: "g_utf8_validate".}

proc g_utf8_validate_len*(
  str: cstring, max_len: gsize, end_arg: ptr cstring
): gboolean {.cdecl, importc: "g_utf8_validate_len".}

proc g_utf8_strup*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_strup".}

proc g_utf8_strdown*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_strdown".}

proc g_utf8_casefold*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_casefold".}

proc g_utf8_normalize*(
  str: cstring, len: gssize, mode: GNormalizeMode
): cstring {.cdecl, importc: "g_utf8_normalize".}

proc g_utf8_collate*(
  str1: cstring, str2: cstring
): gint {.cdecl, importc: "g_utf8_collate".}

proc g_utf8_collate_key*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_collate_key".}

proc g_utf8_collate_key_for_filename*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_collate_key_for_filename".}

proc g_utf8_make_valid*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_utf8_make_valid".}

var g_ascii_table* {.importc: "g_ascii_table".}: ptr guint16
proc g_ascii_tolower*(c: gchar): gchar {.cdecl, importc: "g_ascii_tolower".}
proc g_ascii_toupper*(c: gchar): gchar {.cdecl, importc: "g_ascii_toupper".}
proc g_ascii_digit_value*(c: gchar): gint {.cdecl, importc: "g_ascii_digit_value".}
proc g_ascii_xdigit_value*(c: gchar): gint {.cdecl, importc: "g_ascii_xdigit_value".}
proc g_strdelimit*(
  string: cstring, delimiters: cstring, new_delimiter: gchar
): cstring {.cdecl, importc: "g_strdelimit".}

proc g_strcanon*(
  string: cstring, valid_chars: cstring, substitutor: gchar
): cstring {.cdecl, importc: "g_strcanon".}

proc g_strerror*(errnum: gint): cstring {.cdecl, importc: "g_strerror".}
proc g_strsignal*(signum: gint): cstring {.cdecl, importc: "g_strsignal".}
proc g_strreverse*(string: cstring): cstring {.cdecl, importc: "g_strreverse".}
proc g_strlcpy*(
  dest: cstring, src: cstring, dest_size: gsize
): gsize {.cdecl, importc: "g_strlcpy".}

proc g_strlcat*(
  dest: cstring, src: cstring, dest_size: gsize
): gsize {.cdecl, importc: "g_strlcat".}

proc g_strstr_len*(
  haystack: cstring, haystack_len: gssize, needle: cstring
): cstring {.cdecl, importc: "g_strstr_len".}

proc g_strrstr*(
  haystack: cstring, needle: cstring
): cstring {.cdecl, importc: "g_strrstr".}

proc g_strrstr_len*(
  haystack: cstring, haystack_len: gssize, needle: cstring
): cstring {.cdecl, importc: "g_strrstr_len".}

proc g_str_has_suffix*(
  str: cstring, suffix: cstring
): gboolean {.cdecl, importc: "g_str_has_suffix".}

proc g_str_has_prefix*(
  str: cstring, prefix: cstring
): gboolean {.cdecl, importc: "g_str_has_prefix".}

proc g_strtod*(
  nptr: cstring, endptr: ptr cstring
): gdouble {.cdecl, importc: "g_strtod".}

proc g_ascii_strtod*(
  nptr: cstring, endptr: ptr cstring
): gdouble {.cdecl, importc: "g_ascii_strtod".}

proc g_ascii_strtoull*(
  nptr: cstring, endptr: ptr cstring, base: guint
): guint64 {.cdecl, importc: "g_ascii_strtoull".}

proc g_ascii_strtoll*(
  nptr: cstring, endptr: ptr cstring, base: guint
): gint64 {.cdecl, importc: "g_ascii_strtoll".}

proc g_ascii_dtostr*(
  buffer: cstring, buf_len: gint, d: gdouble
): cstring {.cdecl, importc: "g_ascii_dtostr".}

proc g_ascii_formatd*(
  buffer: cstring, buf_len: gint, format: cstring, d: gdouble
): cstring {.cdecl, importc: "g_ascii_formatd".}

proc g_strchug*(string: cstring): cstring {.cdecl, importc: "g_strchug".}
proc g_strchomp*(string: cstring): cstring {.cdecl, importc: "g_strchomp".}
proc g_ascii_strcasecmp*(
  s1: cstring, s2: cstring
): gint {.cdecl, importc: "g_ascii_strcasecmp".}

proc g_ascii_strncasecmp*(
  s1: cstring, s2: cstring, n: gsize
): gint {.cdecl, importc: "g_ascii_strncasecmp".}

proc g_ascii_strdown*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_ascii_strdown".}

proc g_ascii_strup*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_ascii_strup".}

proc g_str_is_ascii*(str: cstring): gboolean {.cdecl, importc: "g_str_is_ascii".}
proc g_strcasecmp*(s1: cstring, s2: cstring): gint {.cdecl, importc: "g_strcasecmp".}
proc g_strncasecmp*(
  s1: cstring, s2: cstring, n: guint
): gint {.cdecl, importc: "g_strncasecmp".}

proc g_strdown*(string: cstring): cstring {.cdecl, importc: "g_strdown".}
proc g_strup*(string: cstring): cstring {.cdecl, importc: "g_strup".}
proc g_strdup*(str: cstring): cstring {.cdecl, importc: "g_strdup".}
proc g_strdup_printf*(
  format: cstring
): cstring {.cdecl, varargs, importc: "g_strdup_printf".}

proc g_strdup_vprintf*(
  format: cstring
): cstring {.cdecl, varargs, importc: "g_strdup_vprintf".}

proc g_strndup*(str: cstring, n: gsize): cstring {.cdecl, importc: "g_strndup".}
proc g_strnfill*(
  length: gsize, fill_char: gchar
): cstring {.cdecl, importc: "g_strnfill".}

proc g_strconcat*(string1: cstring): cstring {.cdecl, varargs, importc: "g_strconcat".}
proc g_strjoin*(separator: cstring): cstring {.cdecl, varargs, importc: "g_strjoin".}
proc g_strcompress*(source: cstring): cstring {.cdecl, importc: "g_strcompress".}
proc g_strescape*(
  source: cstring, exceptions: cstring
): cstring {.cdecl, importc: "g_strescape".}

proc g_memdup*(
  mem: gconstpointer, byte_size: guint
): gpointer {.cdecl, importc: "g_memdup".}

proc g_memdup2*(
  mem: gconstpointer, byte_size: gsize
): gpointer {.cdecl, importc: "g_memdup2".}

proc g_strsplit*(
  string: cstring, delimiter: cstring, max_tokens: gint
): ptr cstring {.cdecl, importc: "g_strsplit".}

proc g_strsplit_set*(
  string: cstring, delimiters: cstring, max_tokens: gint
): ptr cstring {.cdecl, importc: "g_strsplit_set".}

proc g_strjoinv*(
  separator: cstring, str_array: ptr cstring
): cstring {.cdecl, importc: "g_strjoinv".}

proc g_strfreev*(str_array: ptr cstring): void {.cdecl, importc: "g_strfreev".}
proc g_strdupv*(str_array: ptr cstring): ptr cstring {.cdecl, importc: "g_strdupv".}
proc g_strv_length*(str_array: ptr cstring): guint {.cdecl, importc: "g_strv_length".}
proc g_stpcpy*(dest: cstring, src: cstring): cstring {.cdecl, importc: "g_stpcpy".}
proc g_str_to_ascii*(
  str: cstring, from_locale: cstring
): cstring {.cdecl, importc: "g_str_to_ascii".}

proc g_str_tokenize_and_fold*(
  string: cstring, translit_locale: cstring, ascii_alternates: ptr ptr cstring
): ptr cstring {.cdecl, importc: "g_str_tokenize_and_fold".}

proc g_str_match_string*(
  search_term: cstring, potential_hit: cstring, accept_alternates: gboolean
): gboolean {.cdecl, importc: "g_str_match_string".}

proc g_strv_contains*(
  strv: ptr cstring, str: cstring
): gboolean {.cdecl, importc: "g_strv_contains".}

proc g_strv_equal*(
  strv1: ptr cstring, strv2: ptr cstring
): gboolean {.cdecl, importc: "g_strv_equal".}

proc g_number_parser_error_quark*(): GQuark {.
  cdecl, importc: "g_number_parser_error_quark"
.}

proc g_ascii_string_to_signed*(
  str: cstring,
  base: guint,
  min: gint64,
  max: gint64,
  out_num: ptr gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_ascii_string_to_signed".}

proc g_ascii_string_to_unsigned*(
  str: cstring,
  base: guint,
  min: guint64,
  max: guint64,
  out_num: ptr guint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_ascii_string_to_unsigned".}

proc g_string_new*(init: cstring): ptr GString {.cdecl, importc: "g_string_new".}
proc g_string_new_take*(
  init: cstring
): ptr GString {.cdecl, importc: "g_string_new_take".}

proc g_string_new_len*(
  init: cstring, len: gssize
): ptr GString {.cdecl, importc: "g_string_new_len".}

proc g_string_sized_new*(
  dfl_size: gsize
): ptr GString {.cdecl, importc: "g_string_sized_new".}

proc g_string_free*(
  string: ptr GString, free_segment: gboolean
): cstring {.cdecl, importc: "g_string_free".}

proc g_string_free_and_steal*(
  string: ptr GString
): cstring {.cdecl, importc: "g_string_free_and_steal".}

proc g_string_free_to_bytes*(
  string: ptr GString
): ptr GBytes {.cdecl, importc: "g_string_free_to_bytes".}

proc g_string_equal*(
  v: ptr GString, v2: ptr GString
): gboolean {.cdecl, importc: "g_string_equal".}

proc g_string_hash*(str: ptr GString): guint {.cdecl, importc: "g_string_hash".}
proc g_string_assign*(
  string: ptr GString, rval: cstring
): ptr GString {.cdecl, importc: "g_string_assign".}

proc g_string_truncate*(
  string: ptr GString, len: gsize
): ptr GString {.cdecl, importc: "g_string_truncate".}

proc g_string_set_size*(
  string: ptr GString, len: gsize
): ptr GString {.cdecl, importc: "g_string_set_size".}

proc g_string_insert_len*(
  string: ptr GString, pos: gssize, val: cstring, len: gssize
): ptr GString {.cdecl, importc: "g_string_insert_len".}

proc g_string_append*(
  string: ptr GString, val: cstring
): ptr GString {.cdecl, importc: "g_string_append".}

proc g_string_append_len*(
  string: ptr GString, val: cstring, len: gssize
): ptr GString {.cdecl, importc: "g_string_append_len".}

proc g_string_append_c*(
  string: ptr GString, c: gchar
): ptr GString {.cdecl, importc: "g_string_append_c".}

proc g_string_append_unichar*(
  string: ptr GString, wc: gunichar
): ptr GString {.cdecl, importc: "g_string_append_unichar".}

proc g_string_prepend*(
  string: ptr GString, val: cstring
): ptr GString {.cdecl, importc: "g_string_prepend".}

proc g_string_prepend_c*(
  string: ptr GString, c: gchar
): ptr GString {.cdecl, importc: "g_string_prepend_c".}

proc g_string_prepend_unichar*(
  string: ptr GString, wc: gunichar
): ptr GString {.cdecl, importc: "g_string_prepend_unichar".}

proc g_string_prepend_len*(
  string: ptr GString, val: cstring, len: gssize
): ptr GString {.cdecl, importc: "g_string_prepend_len".}

proc g_string_insert*(
  string: ptr GString, pos: gssize, val: cstring
): ptr GString {.cdecl, importc: "g_string_insert".}

proc g_string_insert_c*(
  string: ptr GString, pos: gssize, c: gchar
): ptr GString {.cdecl, importc: "g_string_insert_c".}

proc g_string_insert_unichar*(
  string: ptr GString, pos: gssize, wc: gunichar
): ptr GString {.cdecl, importc: "g_string_insert_unichar".}

proc g_string_overwrite*(
  string: ptr GString, pos: gsize, val: cstring
): ptr GString {.cdecl, importc: "g_string_overwrite".}

proc g_string_overwrite_len*(
  string: ptr GString, pos: gsize, val: cstring, len: gssize
): ptr GString {.cdecl, importc: "g_string_overwrite_len".}

proc g_string_erase*(
  string: ptr GString, pos: gssize, len: gssize
): ptr GString {.cdecl, importc: "g_string_erase".}

proc g_string_replace*(
  string: ptr GString, find: cstring, replace: cstring, limit: guint
): guint {.cdecl, importc: "g_string_replace".}

proc g_string_ascii_down*(
  string: ptr GString
): ptr GString {.cdecl, importc: "g_string_ascii_down".}

proc g_string_ascii_up*(
  string: ptr GString
): ptr GString {.cdecl, importc: "g_string_ascii_up".}

proc g_string_vprintf*(
  string: ptr GString, format: cstring
): void {.cdecl, varargs, importc: "g_string_vprintf".}

proc g_string_printf*(
  string: ptr GString, format: cstring
): void {.cdecl, varargs, importc: "g_string_printf".}

proc g_string_append_vprintf*(
  string: ptr GString, format: cstring
): void {.cdecl, varargs, importc: "g_string_append_vprintf".}

proc g_string_append_printf*(
  string: ptr GString, format: cstring
): void {.cdecl, varargs, importc: "g_string_append_printf".}

proc g_string_append_uri_escaped*(
  string: ptr GString,
  unescaped: cstring,
  reserved_chars_allowed: cstring,
  allow_utf8: gboolean,
): ptr GString {.cdecl, importc: "g_string_append_uri_escaped".}

proc g_string_down*(
  string: ptr GString
): ptr GString {.cdecl, importc: "g_string_down".}

proc g_string_up*(string: ptr GString): ptr GString {.cdecl, importc: "g_string_up".}
proc g_io_channel_init*(
  channel: ptr GIOChannel
): void {.cdecl, importc: "g_io_channel_init".}

proc g_io_channel_ref*(
  channel: ptr GIOChannel
): ptr GIOChannel {.cdecl, importc: "g_io_channel_ref".}

proc g_io_channel_unref*(
  channel: ptr GIOChannel
): void {.cdecl, importc: "g_io_channel_unref".}

proc g_io_channel_read*(
  channel: ptr GIOChannel, buf: cstring, count: gsize, bytes_read: ptr gsize
): GIOError {.cdecl, importc: "g_io_channel_read".}

proc g_io_channel_write*(
  channel: ptr GIOChannel, buf: cstring, count: gsize, bytes_written: ptr gsize
): GIOError {.cdecl, importc: "g_io_channel_write".}

proc g_io_channel_seek*(
  channel: ptr GIOChannel, offset: gint64, type_arg: GSeekType
): GIOError {.cdecl, importc: "g_io_channel_seek".}

proc g_io_channel_close*(
  channel: ptr GIOChannel
): void {.cdecl, importc: "g_io_channel_close".}

proc g_io_channel_shutdown*(
  channel: ptr GIOChannel, flush: gboolean, err: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_shutdown".}

proc g_io_add_watch_full*(
  channel: ptr GIOChannel,
  priority: gint,
  condition: GIOCondition,
  func_arg: GIOFunc,
  user_data: gpointer,
  notify: GDestroyNotify,
): guint {.cdecl, importc: "g_io_add_watch_full".}

proc g_io_create_watch*(
  channel: ptr GIOChannel, condition: GIOCondition
): ptr GSource {.cdecl, importc: "g_io_create_watch".}

proc g_io_add_watch*(
  channel: ptr GIOChannel,
  condition: GIOCondition,
  func_arg: GIOFunc,
  user_data: gpointer,
): guint {.cdecl, importc: "g_io_add_watch".}

proc g_io_channel_set_buffer_size*(
  channel: ptr GIOChannel, size: gsize
): void {.cdecl, importc: "g_io_channel_set_buffer_size".}

proc g_io_channel_get_buffer_size*(
  channel: ptr GIOChannel
): gsize {.cdecl, importc: "g_io_channel_get_buffer_size".}

proc g_io_channel_get_buffer_condition*(
  channel: ptr GIOChannel
): GIOCondition {.cdecl, importc: "g_io_channel_get_buffer_condition".}

proc g_io_channel_set_flags*(
  channel: ptr GIOChannel, flags: GIOFlags, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_set_flags".}

proc g_io_channel_get_flags*(
  channel: ptr GIOChannel
): GIOFlags {.cdecl, importc: "g_io_channel_get_flags".}

proc g_io_channel_set_line_term*(
  channel: ptr GIOChannel, line_term: cstring, length: gint
): void {.cdecl, importc: "g_io_channel_set_line_term".}

proc g_io_channel_get_line_term*(
  channel: ptr GIOChannel, length: ptr gint
): cstring {.cdecl, importc: "g_io_channel_get_line_term".}

proc g_io_channel_set_buffered*(
  channel: ptr GIOChannel, buffered: gboolean
): void {.cdecl, importc: "g_io_channel_set_buffered".}

proc g_io_channel_get_buffered*(
  channel: ptr GIOChannel
): gboolean {.cdecl, importc: "g_io_channel_get_buffered".}

proc g_io_channel_set_encoding*(
  channel: ptr GIOChannel, encoding: cstring, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_set_encoding".}

proc g_io_channel_get_encoding*(
  channel: ptr GIOChannel
): cstring {.cdecl, importc: "g_io_channel_get_encoding".}

proc g_io_channel_set_close_on_unref*(
  channel: ptr GIOChannel, do_close: gboolean
): void {.cdecl, importc: "g_io_channel_set_close_on_unref".}

proc g_io_channel_get_close_on_unref*(
  channel: ptr GIOChannel
): gboolean {.cdecl, importc: "g_io_channel_get_close_on_unref".}

proc g_io_channel_flush*(
  channel: ptr GIOChannel, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_flush".}

proc g_io_channel_read_line*(
  channel: ptr GIOChannel,
  str_return: ptr cstring,
  length: ptr gsize,
  terminator_pos: ptr gsize,
  error: ptr ptr GError,
): GIOStatus {.cdecl, importc: "g_io_channel_read_line".}

proc g_io_channel_read_line_string*(
  channel: ptr GIOChannel,
  buffer: ptr GString,
  terminator_pos: ptr gsize,
  error: ptr ptr GError,
): GIOStatus {.cdecl, importc: "g_io_channel_read_line_string".}

proc g_io_channel_read_to_end*(
  channel: ptr GIOChannel,
  str_return: ptr cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): GIOStatus {.cdecl, importc: "g_io_channel_read_to_end".}

proc g_io_channel_read_chars*(
  channel: ptr GIOChannel,
  buf: cstring,
  count: gsize,
  bytes_read: ptr gsize,
  error: ptr ptr GError,
): GIOStatus {.cdecl, importc: "g_io_channel_read_chars".}

proc g_io_channel_read_unichar*(
  channel: ptr GIOChannel, thechar: ptr gunichar, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_read_unichar".}

proc g_io_channel_write_chars*(
  channel: ptr GIOChannel,
  buf: cstring,
  count: gssize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): GIOStatus {.cdecl, importc: "g_io_channel_write_chars".}

proc g_io_channel_write_unichar*(
  channel: ptr GIOChannel, thechar: gunichar, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_write_unichar".}

proc g_io_channel_seek_position*(
  channel: ptr GIOChannel, offset: gint64, type_arg: GSeekType, error: ptr ptr GError
): GIOStatus {.cdecl, importc: "g_io_channel_seek_position".}

proc g_io_channel_new_file*(
  filename: cstring, mode: cstring, error: ptr ptr GError
): ptr GIOChannel {.cdecl, importc: "g_io_channel_new_file".}

proc g_io_channel_error_quark*(): GQuark {.cdecl, importc: "g_io_channel_error_quark".}
proc g_io_channel_error_from_errno*(
  en: gint
): GIOChannelError {.cdecl, importc: "g_io_channel_error_from_errno".}

proc g_io_channel_unix_new*(
  fd: cint
): ptr GIOChannel {.cdecl, importc: "g_io_channel_unix_new".}

proc g_io_channel_unix_get_fd*(
  channel: ptr GIOChannel
): gint {.cdecl, importc: "g_io_channel_unix_get_fd".}

var g_io_watch_funcs* {.importc: "g_io_watch_funcs".}: GSourceFuncs
proc g_key_file_error_quark*(): GQuark {.cdecl, importc: "g_key_file_error_quark".}
proc g_key_file_new*(): ptr GKeyFile {.cdecl, importc: "g_key_file_new".}
proc g_key_file_ref*(
  key_file: ptr GKeyFile
): ptr GKeyFile {.cdecl, importc: "g_key_file_ref".}

proc g_key_file_unref*(
  key_file: ptr GKeyFile
): void {.cdecl, importc: "g_key_file_unref".}

proc g_key_file_free*(
  key_file: ptr GKeyFile
): void {.cdecl, importc: "g_key_file_free".}

proc g_key_file_set_list_separator*(
  key_file: ptr GKeyFile, separator: gchar
): void {.cdecl, importc: "g_key_file_set_list_separator".}

proc g_key_file_load_from_file*(
  key_file: ptr GKeyFile, file: cstring, flags: GKeyFileFlags, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_load_from_file".}

proc g_key_file_load_from_data*(
  key_file: ptr GKeyFile,
  data: cstring,
  length: gsize,
  flags: GKeyFileFlags,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_key_file_load_from_data".}

proc g_key_file_load_from_bytes*(
  key_file: ptr GKeyFile, bytes: ptr GBytes, flags: GKeyFileFlags, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_load_from_bytes".}

proc g_key_file_load_from_dirs*(
  key_file: ptr GKeyFile,
  file: cstring,
  search_dirs: ptr cstring,
  full_path: ptr cstring,
  flags: GKeyFileFlags,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_key_file_load_from_dirs".}

proc g_key_file_load_from_data_dirs*(
  key_file: ptr GKeyFile,
  file: cstring,
  full_path: ptr cstring,
  flags: GKeyFileFlags,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_key_file_load_from_data_dirs".}

proc g_key_file_to_data*(
  key_file: ptr GKeyFile, length: ptr gsize, error: ptr ptr GError
): cstring {.cdecl, importc: "g_key_file_to_data".}

proc g_key_file_save_to_file*(
  key_file: ptr GKeyFile, filename: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_save_to_file".}

proc g_key_file_get_start_group*(
  key_file: ptr GKeyFile
): cstring {.cdecl, importc: "g_key_file_get_start_group".}

proc g_key_file_get_groups*(
  key_file: ptr GKeyFile, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_key_file_get_groups".}

proc g_key_file_get_keys*(
  key_file: ptr GKeyFile, group_name: cstring, length: ptr gsize, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_key_file_get_keys".}

proc g_key_file_has_group*(
  key_file: ptr GKeyFile, group_name: cstring
): gboolean {.cdecl, importc: "g_key_file_has_group".}

proc g_key_file_has_key*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_has_key".}

proc g_key_file_get_value*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_key_file_get_value".}

proc g_key_file_set_value*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: cstring
): void {.cdecl, importc: "g_key_file_set_value".}

proc g_key_file_get_string*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_key_file_get_string".}

proc g_key_file_set_string*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, string: cstring
): void {.cdecl, importc: "g_key_file_set_string".}

proc g_key_file_get_locale_string*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  locale: cstring,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_key_file_get_locale_string".}

proc g_key_file_get_locale_for_key*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, locale: cstring
): cstring {.cdecl, importc: "g_key_file_get_locale_for_key".}

proc g_key_file_set_locale_string*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  locale: cstring,
  string: cstring,
): void {.cdecl, importc: "g_key_file_set_locale_string".}

proc g_key_file_get_boolean*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_get_boolean".}

proc g_key_file_set_boolean*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: gboolean
): void {.cdecl, importc: "g_key_file_set_boolean".}

proc g_key_file_get_integer*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gint {.cdecl, importc: "g_key_file_get_integer".}

proc g_key_file_set_integer*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: gint
): void {.cdecl, importc: "g_key_file_set_integer".}

proc g_key_file_get_int64*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gint64 {.cdecl, importc: "g_key_file_get_int64".}

proc g_key_file_set_int64*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: gint64
): void {.cdecl, importc: "g_key_file_set_int64".}

proc g_key_file_get_uint64*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): guint64 {.cdecl, importc: "g_key_file_get_uint64".}

proc g_key_file_set_uint64*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: guint64
): void {.cdecl, importc: "g_key_file_set_uint64".}

proc g_key_file_get_double*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gdouble {.cdecl, importc: "g_key_file_get_double".}

proc g_key_file_set_double*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, value: gdouble
): void {.cdecl, importc: "g_key_file_set_double".}

proc g_key_file_get_string_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_key_file_get_string_list".}

proc g_key_file_set_string_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  list: ptr UncheckedArray[cstring],
  length: gsize,
): void {.cdecl, importc: "g_key_file_set_string_list".}

proc g_key_file_get_locale_string_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  locale: cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_key_file_get_locale_string_list".}

proc g_key_file_set_locale_string_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  locale: cstring,
  list: ptr UncheckedArray[cstring],
  length: gsize,
): void {.cdecl, importc: "g_key_file_set_locale_string_list".}

proc g_key_file_get_boolean_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): ptr gboolean {.cdecl, importc: "g_key_file_get_boolean_list".}

proc g_key_file_set_boolean_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  list: ptr UncheckedArray[gboolean],
  length: gsize,
): void {.cdecl, importc: "g_key_file_set_boolean_list".}

proc g_key_file_get_integer_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): ptr gint {.cdecl, importc: "g_key_file_get_integer_list".}

proc g_key_file_set_double_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  list: ptr UncheckedArray[gdouble],
  length: gsize,
): void {.cdecl, importc: "g_key_file_set_double_list".}

proc g_key_file_get_double_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  length: ptr gsize,
  error: ptr ptr GError,
): ptr gdouble {.cdecl, importc: "g_key_file_get_double_list".}

proc g_key_file_set_integer_list*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  list: ptr UncheckedArray[gint],
  length: gsize,
): void {.cdecl, importc: "g_key_file_set_integer_list".}

proc g_key_file_set_comment*(
  key_file: ptr GKeyFile,
  group_name: cstring,
  key: cstring,
  comment: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_key_file_set_comment".}

proc g_key_file_get_comment*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_key_file_get_comment".}

proc g_key_file_remove_comment*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_remove_comment".}

proc g_key_file_remove_key*(
  key_file: ptr GKeyFile, group_name: cstring, key: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_remove_key".}

proc g_key_file_remove_group*(
  key_file: ptr GKeyFile, group_name: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_key_file_remove_group".}

proc g_mapped_file_new*(
  filename: cstring, writable: gboolean, error: ptr ptr GError
): ptr GMappedFile {.cdecl, importc: "g_mapped_file_new".}

proc g_mapped_file_new_from_fd*(
  fd: gint, writable: gboolean, error: ptr ptr GError
): ptr GMappedFile {.cdecl, importc: "g_mapped_file_new_from_fd".}

proc g_mapped_file_get_length*(
  file: ptr GMappedFile
): gsize {.cdecl, importc: "g_mapped_file_get_length".}

proc g_mapped_file_get_contents*(
  file: ptr GMappedFile
): cstring {.cdecl, importc: "g_mapped_file_get_contents".}

proc g_mapped_file_get_bytes*(
  file: ptr GMappedFile
): ptr GBytes {.cdecl, importc: "g_mapped_file_get_bytes".}

proc g_mapped_file_ref*(
  file: ptr GMappedFile
): ptr GMappedFile {.cdecl, importc: "g_mapped_file_ref".}

proc g_mapped_file_unref*(
  file: ptr GMappedFile
): void {.cdecl, importc: "g_mapped_file_unref".}

proc g_mapped_file_free*(
  file: ptr GMappedFile
): void {.cdecl, importc: "g_mapped_file_free".}

proc g_markup_error_quark*(): GQuark {.cdecl, importc: "g_markup_error_quark".}
proc g_markup_parse_context_new*(
  parser: ptr GMarkupParser,
  flags: GMarkupParseFlags,
  user_data: gpointer,
  user_data_dnotify: GDestroyNotify,
): ptr GMarkupParseContext {.cdecl, importc: "g_markup_parse_context_new".}

proc g_markup_parse_context_ref*(
  context: ptr GMarkupParseContext
): ptr GMarkupParseContext {.cdecl, importc: "g_markup_parse_context_ref".}

proc g_markup_parse_context_unref*(
  context: ptr GMarkupParseContext
): void {.cdecl, importc: "g_markup_parse_context_unref".}

proc g_markup_parse_context_free*(
  context: ptr GMarkupParseContext
): void {.cdecl, importc: "g_markup_parse_context_free".}

proc g_markup_parse_context_parse*(
  context: ptr GMarkupParseContext,
  text: cstring,
  text_len: gssize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_markup_parse_context_parse".}

proc g_markup_parse_context_push*(
  context: ptr GMarkupParseContext, parser: ptr GMarkupParser, user_data: gpointer
): void {.cdecl, importc: "g_markup_parse_context_push".}

proc g_markup_parse_context_pop*(
  context: ptr GMarkupParseContext
): gpointer {.cdecl, importc: "g_markup_parse_context_pop".}

proc g_markup_parse_context_end_parse*(
  context: ptr GMarkupParseContext, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_markup_parse_context_end_parse".}

proc g_markup_parse_context_get_element*(
  context: ptr GMarkupParseContext
): cstring {.cdecl, importc: "g_markup_parse_context_get_element".}

proc g_markup_parse_context_get_element_stack*(
  context: ptr GMarkupParseContext
): ptr GSList {.cdecl, importc: "g_markup_parse_context_get_element_stack".}

proc g_markup_parse_context_get_position*(
  context: ptr GMarkupParseContext, line_number: ptr gint, char_number: ptr gint
): void {.cdecl, importc: "g_markup_parse_context_get_position".}

proc g_markup_parse_context_get_user_data*(
  context: ptr GMarkupParseContext
): gpointer {.cdecl, importc: "g_markup_parse_context_get_user_data".}

proc g_markup_escape_text*(
  text: cstring, length: gssize
): cstring {.cdecl, importc: "g_markup_escape_text".}

proc g_markup_printf_escaped*(
  format: cstring
): cstring {.cdecl, varargs, importc: "g_markup_printf_escaped".}

proc g_markup_vprintf_escaped*(
  format: cstring
): cstring {.cdecl, varargs, importc: "g_markup_vprintf_escaped".}

proc g_markup_collect_attributes*(
  element_name: cstring,
  attribute_names: ptr cstring,
  attribute_values: ptr cstring,
  error: ptr ptr GError,
  first_type: GMarkupCollectType,
  first_attr: cstring,
): gboolean {.cdecl, varargs, importc: "g_markup_collect_attributes".}

proc g_variant_type_string_is_valid*(
  type_string: cstring
): gboolean {.cdecl, importc: "g_variant_type_string_is_valid".}

proc g_variant_type_string_scan*(
  string: cstring, limit: cstring, endptr: ptr cstring
): gboolean {.cdecl, importc: "g_variant_type_string_scan".}

proc g_variant_type_free*(
  type_arg: ptr GVariantType
): void {.cdecl, importc: "g_variant_type_free".}

proc g_variant_type_copy*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_copy".}

proc g_variant_type_new*(
  type_string: cstring
): ptr GVariantType {.cdecl, importc: "g_variant_type_new".}

proc g_variant_type_get_string_length*(
  type_arg: ptr GVariantType
): gsize {.cdecl, importc: "g_variant_type_get_string_length".}

proc g_variant_type_peek_string*(
  type_arg: ptr GVariantType
): cstring {.cdecl, importc: "g_variant_type_peek_string".}

proc g_variant_type_dup_string*(
  type_arg: ptr GVariantType
): cstring {.cdecl, importc: "g_variant_type_dup_string".}

proc g_variant_type_is_definite*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_definite".}

proc g_variant_type_is_container*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_container".}

proc g_variant_type_is_basic*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_basic".}

proc g_variant_type_is_maybe*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_maybe".}

proc g_variant_type_is_array*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_array".}

proc g_variant_type_is_tuple*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_tuple".}

proc g_variant_type_is_dict_entry*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_dict_entry".}

proc g_variant_type_is_variant*(
  type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_variant".}

proc g_variant_type_hash*(
  type_arg: gconstpointer
): guint {.cdecl, importc: "g_variant_type_hash".}

proc g_variant_type_equal*(
  type1: gconstpointer, type2: gconstpointer
): gboolean {.cdecl, importc: "g_variant_type_equal".}

proc g_variant_type_is_subtype_of*(
  type_arg: ptr GVariantType, supertype: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_type_is_subtype_of".}

proc g_variant_type_element*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_element".}

proc g_variant_type_first*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_first".}

proc g_variant_type_next*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_next".}

proc g_variant_type_n_items*(
  type_arg: ptr GVariantType
): gsize {.cdecl, importc: "g_variant_type_n_items".}

proc g_variant_type_key*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_key".}

proc g_variant_type_value*(
  type_arg: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_value".}

proc g_variant_type_new_array*(
  element: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_new_array".}

proc g_variant_type_new_maybe*(
  element: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_new_maybe".}

proc g_variant_type_new_tuple*(
  items: ptr ptr GVariantType, length: gint
): ptr GVariantType {.cdecl, importc: "g_variant_type_new_tuple".}

proc g_variant_type_new_dict_entry*(
  key: ptr GVariantType, value: ptr GVariantType
): ptr GVariantType {.cdecl, importc: "g_variant_type_new_dict_entry".}

proc g_variant_type_checked_private*(
  type_string: cstring
): ptr GVariantType {.cdecl, importc: "g_variant_type_checked_".}

proc g_variant_type_string_get_depth_private*(
  type_string: cstring
): gsize {.cdecl, importc: "g_variant_type_string_get_depth_".}

proc g_variant_unref*(value: ptr GVariant): void {.cdecl, importc: "g_variant_unref".}
proc g_variant_ref*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_ref".}

proc g_variant_ref_sink*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_ref_sink".}

proc g_variant_is_floating*(
  value: ptr GVariant
): gboolean {.cdecl, importc: "g_variant_is_floating".}

proc g_variant_take_ref*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_take_ref".}

proc g_variant_get_type*(
  value: ptr GVariant
): ptr GVariantType {.cdecl, importc: "g_variant_get_type".}

proc g_variant_get_type_string*(
  value: ptr GVariant
): cstring {.cdecl, importc: "g_variant_get_type_string".}

proc g_variant_is_of_type*(
  value: ptr GVariant, type_arg: ptr GVariantType
): gboolean {.cdecl, importc: "g_variant_is_of_type".}

proc g_variant_is_container*(
  value: ptr GVariant
): gboolean {.cdecl, importc: "g_variant_is_container".}

proc g_variant_classify*(
  value: ptr GVariant
): GVariantClass {.cdecl, importc: "g_variant_classify".}

proc g_variant_new_boolean*(
  value: gboolean
): ptr GVariant {.cdecl, importc: "g_variant_new_boolean".}

proc g_variant_new_byte*(
  value: guint8
): ptr GVariant {.cdecl, importc: "g_variant_new_byte".}

proc g_variant_new_int16*(
  value: gint16
): ptr GVariant {.cdecl, importc: "g_variant_new_int16".}

proc g_variant_new_uint16*(
  value: guint16
): ptr GVariant {.cdecl, importc: "g_variant_new_uint16".}

proc g_variant_new_int32*(
  value: gint32
): ptr GVariant {.cdecl, importc: "g_variant_new_int32".}

proc g_variant_new_uint32*(
  value: guint32
): ptr GVariant {.cdecl, importc: "g_variant_new_uint32".}

proc g_variant_new_int64*(
  value: gint64
): ptr GVariant {.cdecl, importc: "g_variant_new_int64".}

proc g_variant_new_uint64*(
  value: guint64
): ptr GVariant {.cdecl, importc: "g_variant_new_uint64".}

proc g_variant_new_handle*(
  value: gint32
): ptr GVariant {.cdecl, importc: "g_variant_new_handle".}

proc g_variant_new_double*(
  value: gdouble
): ptr GVariant {.cdecl, importc: "g_variant_new_double".}

proc g_variant_new_string*(
  string: cstring
): ptr GVariant {.cdecl, importc: "g_variant_new_string".}

proc g_variant_new_take_string*(
  string: cstring
): ptr GVariant {.cdecl, importc: "g_variant_new_take_string".}

proc g_variant_new_printf*(
  format_string: cstring
): ptr GVariant {.cdecl, varargs, importc: "g_variant_new_printf".}

proc g_variant_new_object_path*(
  object_path: cstring
): ptr GVariant {.cdecl, importc: "g_variant_new_object_path".}

proc g_variant_is_object_path*(
  string: cstring
): gboolean {.cdecl, importc: "g_variant_is_object_path".}

proc g_variant_new_signature*(
  signature: cstring
): ptr GVariant {.cdecl, importc: "g_variant_new_signature".}

proc g_variant_is_signature*(
  string: cstring
): gboolean {.cdecl, importc: "g_variant_is_signature".}

proc g_variant_new_variant*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_new_variant".}

proc g_variant_new_strv*(
  strv: ptr cstring, length: gssize
): ptr GVariant {.cdecl, importc: "g_variant_new_strv".}

proc g_variant_new_objv*(
  strv: ptr cstring, length: gssize
): ptr GVariant {.cdecl, importc: "g_variant_new_objv".}

proc g_variant_new_bytestring*(
  string: cstring
): ptr GVariant {.cdecl, importc: "g_variant_new_bytestring".}

proc g_variant_new_bytestring_array*(
  strv: ptr cstring, length: gssize
): ptr GVariant {.cdecl, importc: "g_variant_new_bytestring_array".}

proc g_variant_new_fixed_array*(
  element_type: ptr GVariantType,
  elements: gconstpointer,
  n_elements: gsize,
  element_size: gsize,
): ptr GVariant {.cdecl, importc: "g_variant_new_fixed_array".}

proc g_variant_get_boolean*(
  value: ptr GVariant
): gboolean {.cdecl, importc: "g_variant_get_boolean".}

proc g_variant_get_byte*(
  value: ptr GVariant
): guint8 {.cdecl, importc: "g_variant_get_byte".}

proc g_variant_get_int16*(
  value: ptr GVariant
): gint16 {.cdecl, importc: "g_variant_get_int16".}

proc g_variant_get_uint16*(
  value: ptr GVariant
): guint16 {.cdecl, importc: "g_variant_get_uint16".}

proc g_variant_get_int32*(
  value: ptr GVariant
): gint32 {.cdecl, importc: "g_variant_get_int32".}

proc g_variant_get_uint32*(
  value: ptr GVariant
): guint32 {.cdecl, importc: "g_variant_get_uint32".}

proc g_variant_get_int64*(
  value: ptr GVariant
): gint64 {.cdecl, importc: "g_variant_get_int64".}

proc g_variant_get_uint64*(
  value: ptr GVariant
): guint64 {.cdecl, importc: "g_variant_get_uint64".}

proc g_variant_get_handle*(
  value: ptr GVariant
): gint32 {.cdecl, importc: "g_variant_get_handle".}

proc g_variant_get_double*(
  value: ptr GVariant
): gdouble {.cdecl, importc: "g_variant_get_double".}

proc g_variant_get_variant*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_get_variant".}

proc g_variant_get_string*(
  value: ptr GVariant, length: ptr gsize
): cstring {.cdecl, importc: "g_variant_get_string".}

proc g_variant_dup_string*(
  value: ptr GVariant, length: ptr gsize
): cstring {.cdecl, importc: "g_variant_dup_string".}

proc g_variant_get_strv*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_get_strv".}

proc g_variant_dup_strv*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_dup_strv".}

proc g_variant_get_objv*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_get_objv".}

proc g_variant_dup_objv*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_dup_objv".}

proc g_variant_get_bytestring*(
  value: ptr GVariant
): cstring {.cdecl, importc: "g_variant_get_bytestring".}

proc g_variant_dup_bytestring*(
  value: ptr GVariant, length: ptr gsize
): cstring {.cdecl, importc: "g_variant_dup_bytestring".}

proc g_variant_get_bytestring_array*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_get_bytestring_array".}

proc g_variant_dup_bytestring_array*(
  value: ptr GVariant, length: ptr gsize
): ptr cstring {.cdecl, importc: "g_variant_dup_bytestring_array".}

proc g_variant_new_maybe*(
  child_type: ptr GVariantType, child: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_new_maybe".}

proc g_variant_new_array*(
  child_type: ptr GVariantType, children: ptr ptr GVariant, n_children: gsize
): ptr GVariant {.cdecl, importc: "g_variant_new_array".}

proc g_variant_new_tuple*(
  children: ptr ptr GVariant, n_children: gsize
): ptr GVariant {.cdecl, importc: "g_variant_new_tuple".}

proc g_variant_new_dict_entry*(
  key: ptr GVariant, value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_new_dict_entry".}

proc g_variant_get_maybe*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_get_maybe".}

proc g_variant_n_children*(
  value: ptr GVariant
): gsize {.cdecl, importc: "g_variant_n_children".}

proc g_variant_get_child*(
  value: ptr GVariant, index_private: gsize, format_string: cstring
): void {.cdecl, varargs, importc: "g_variant_get_child".}

proc g_variant_get_child_value*(
  value: ptr GVariant, index_private: gsize
): ptr GVariant {.cdecl, importc: "g_variant_get_child_value".}

proc g_variant_lookup*(
  dictionary: ptr GVariant, key: cstring, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_variant_lookup".}

proc g_variant_lookup_value*(
  dictionary: ptr GVariant, key: cstring, expected_type: ptr GVariantType
): ptr GVariant {.cdecl, importc: "g_variant_lookup_value".}

proc g_variant_get_fixed_array*(
  value: ptr GVariant, n_elements: ptr gsize, element_size: gsize
): gconstpointer {.cdecl, importc: "g_variant_get_fixed_array".}

proc g_variant_get_size*(
  value: ptr GVariant
): gsize {.cdecl, importc: "g_variant_get_size".}

proc g_variant_get_data*(
  value: ptr GVariant
): gconstpointer {.cdecl, importc: "g_variant_get_data".}

proc g_variant_get_data_as_bytes*(
  value: ptr GVariant
): ptr GBytes {.cdecl, importc: "g_variant_get_data_as_bytes".}

proc g_variant_store*(
  value: ptr GVariant, data: gpointer
): void {.cdecl, importc: "g_variant_store".}

proc g_variant_print*(
  value: ptr GVariant, type_annotate: gboolean
): cstring {.cdecl, importc: "g_variant_print".}

proc g_variant_print_string*(
  value: ptr GVariant, string: ptr GString, type_annotate: gboolean
): ptr GString {.cdecl, importc: "g_variant_print_string".}

proc g_variant_hash*(value: gconstpointer): guint {.cdecl, importc: "g_variant_hash".}
proc g_variant_equal*(
  one: gconstpointer, two: gconstpointer
): gboolean {.cdecl, importc: "g_variant_equal".}

proc g_variant_get_normal_form*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_get_normal_form".}

proc g_variant_is_normal_form*(
  value: ptr GVariant
): gboolean {.cdecl, importc: "g_variant_is_normal_form".}

proc g_variant_byteswap*(
  value: ptr GVariant
): ptr GVariant {.cdecl, importc: "g_variant_byteswap".}

proc g_variant_new_from_bytes*(
  type_arg: ptr GVariantType, bytes: ptr GBytes, trusted: gboolean
): ptr GVariant {.cdecl, importc: "g_variant_new_from_bytes".}

proc g_variant_new_from_data*(
  type_arg: ptr GVariantType,
  data: gconstpointer,
  size: gsize,
  trusted: gboolean,
  notify: GDestroyNotify,
  user_data: gpointer,
): ptr GVariant {.cdecl, importc: "g_variant_new_from_data".}

proc g_variant_iter_new*(
  value: ptr GVariant
): ptr GVariantIter {.cdecl, importc: "g_variant_iter_new".}

proc g_variant_iter_init*(
  iter: ptr GVariantIter, value: ptr GVariant
): gsize {.cdecl, importc: "g_variant_iter_init".}

proc g_variant_iter_copy*(
  iter: ptr GVariantIter
): ptr GVariantIter {.cdecl, importc: "g_variant_iter_copy".}

proc g_variant_iter_n_children*(
  iter: ptr GVariantIter
): gsize {.cdecl, importc: "g_variant_iter_n_children".}

proc g_variant_iter_free*(
  iter: ptr GVariantIter
): void {.cdecl, importc: "g_variant_iter_free".}

proc g_variant_iter_next_value*(
  iter: ptr GVariantIter
): ptr GVariant {.cdecl, importc: "g_variant_iter_next_value".}

proc g_variant_iter_next*(
  iter: ptr GVariantIter, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_variant_iter_next".}

proc g_variant_iter_loop*(
  iter: ptr GVariantIter, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_variant_iter_loop".}

proc g_variant_parser_get_error_quark*(): GQuark {.
  cdecl, importc: "g_variant_parser_get_error_quark"
.}

proc g_variant_parse_error_quark*(): GQuark {.
  cdecl, importc: "g_variant_parse_error_quark"
.}

proc g_variant_builder_new*(
  type_arg: ptr GVariantType
): ptr GVariantBuilder {.cdecl, importc: "g_variant_builder_new".}

proc g_variant_builder_unref*(
  builder: ptr GVariantBuilder
): void {.cdecl, importc: "g_variant_builder_unref".}

proc g_variant_builder_ref*(
  builder: ptr GVariantBuilder
): ptr GVariantBuilder {.cdecl, importc: "g_variant_builder_ref".}

proc g_variant_builder_init*(
  builder: ptr GVariantBuilder, type_arg: ptr GVariantType
): void {.cdecl, importc: "g_variant_builder_init".}

proc g_variant_builder_init_static*(
  builder: ptr GVariantBuilder, type_arg: ptr GVariantType
): void {.cdecl, importc: "g_variant_builder_init_static".}

proc g_variant_builder_end*(
  builder: ptr GVariantBuilder
): ptr GVariant {.cdecl, importc: "g_variant_builder_end".}

proc g_variant_builder_clear*(
  builder: ptr GVariantBuilder
): void {.cdecl, importc: "g_variant_builder_clear".}

proc g_variant_builder_open*(
  builder: ptr GVariantBuilder, type_arg: ptr GVariantType
): void {.cdecl, importc: "g_variant_builder_open".}

proc g_variant_builder_close*(
  builder: ptr GVariantBuilder
): void {.cdecl, importc: "g_variant_builder_close".}

proc g_variant_builder_add_value*(
  builder: ptr GVariantBuilder, value: ptr GVariant
): void {.cdecl, importc: "g_variant_builder_add_value".}

proc g_variant_builder_add*(
  builder: ptr GVariantBuilder, format_string: cstring
): void {.cdecl, varargs, importc: "g_variant_builder_add".}

proc g_variant_builder_add_parsed*(
  builder: ptr GVariantBuilder, format: cstring
): void {.cdecl, varargs, importc: "g_variant_builder_add_parsed".}

proc g_variant_new*(
  format_string: cstring
): ptr GVariant {.cdecl, varargs, importc: "g_variant_new".}

proc g_variant_get*(
  value: ptr GVariant, format_string: cstring
): void {.cdecl, varargs, importc: "g_variant_get".}

proc g_variant_new_va*(
  format_string: cstring, endptr: ptr cstring, app: ptr va_list
): ptr GVariant {.cdecl, importc: "g_variant_new_va".}

proc g_variant_get_va*(
  value: ptr GVariant, format_string: cstring, endptr: ptr cstring, app: ptr va_list
): void {.cdecl, importc: "g_variant_get_va".}

proc g_variant_check_format_string*(
  value: ptr GVariant, format_string: cstring, copy_only: gboolean
): gboolean {.cdecl, importc: "g_variant_check_format_string".}

proc g_variant_parse*(
  type_arg: ptr GVariantType,
  text: cstring,
  limit: cstring,
  endptr: ptr cstring,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_variant_parse".}

proc g_variant_new_parsed*(
  format: cstring
): ptr GVariant {.cdecl, varargs, importc: "g_variant_new_parsed".}

proc g_variant_new_parsed_va*(
  format: cstring, app: ptr va_list
): ptr GVariant {.cdecl, importc: "g_variant_new_parsed_va".}

proc g_variant_parse_error_print_context*(
  error: ptr GError, source_str: cstring
): cstring {.cdecl, importc: "g_variant_parse_error_print_context".}

proc g_variant_compare*(
  one: gconstpointer, two: gconstpointer
): gint {.cdecl, importc: "g_variant_compare".}

proc g_variant_dict_new*(
  from_asv: ptr GVariant
): ptr GVariantDict {.cdecl, importc: "g_variant_dict_new".}

proc g_variant_dict_init*(
  dict: ptr GVariantDict, from_asv: ptr GVariant
): void {.cdecl, importc: "g_variant_dict_init".}

proc g_variant_dict_lookup*(
  dict: ptr GVariantDict, key: cstring, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_variant_dict_lookup".}

proc g_variant_dict_lookup_value*(
  dict: ptr GVariantDict, key: cstring, expected_type: ptr GVariantType
): ptr GVariant {.cdecl, importc: "g_variant_dict_lookup_value".}

proc g_variant_dict_contains*(
  dict: ptr GVariantDict, key: cstring
): gboolean {.cdecl, importc: "g_variant_dict_contains".}

proc g_variant_dict_insert*(
  dict: ptr GVariantDict, key: cstring, format_string: cstring
): void {.cdecl, varargs, importc: "g_variant_dict_insert".}

proc g_variant_dict_insert_value*(
  dict: ptr GVariantDict, key: cstring, value: ptr GVariant
): void {.cdecl, importc: "g_variant_dict_insert_value".}

proc g_variant_dict_remove*(
  dict: ptr GVariantDict, key: cstring
): gboolean {.cdecl, importc: "g_variant_dict_remove".}

proc g_variant_dict_clear*(
  dict: ptr GVariantDict
): void {.cdecl, importc: "g_variant_dict_clear".}

proc g_variant_dict_end*(
  dict: ptr GVariantDict
): ptr GVariant {.cdecl, importc: "g_variant_dict_end".}

proc g_variant_dict_ref*(
  dict: ptr GVariantDict
): ptr GVariantDict {.cdecl, importc: "g_variant_dict_ref".}

proc g_variant_dict_unref*(
  dict: ptr GVariantDict
): void {.cdecl, importc: "g_variant_dict_unref".}

proc g_printf_string_upper_bound*(
  format: cstring
): gsize {.cdecl, varargs, importc: "g_printf_string_upper_bound".}

proc g_log_set_handler*(
  log_domain: cstring,
  log_levels: GLogLevelFlags,
  log_func: GLogFunc,
  user_data: gpointer,
): guint {.cdecl, importc: "g_log_set_handler".}

proc g_log_set_handler_full*(
  log_domain: cstring,
  log_levels: GLogLevelFlags,
  log_func: GLogFunc,
  user_data: gpointer,
  destroy: GDestroyNotify,
): guint {.cdecl, importc: "g_log_set_handler_full".}

proc g_log_remove_handler*(
  log_domain: cstring, handler_id: guint
): void {.cdecl, importc: "g_log_remove_handler".}

proc g_log_default_handler*(
  log_domain: cstring,
  log_level: GLogLevelFlags,
  message: cstring,
  unused_data: gpointer,
): void {.cdecl, importc: "g_log_default_handler".}

proc g_log_set_default_handler*(
  log_func: GLogFunc, user_data: gpointer
): GLogFunc {.cdecl, importc: "g_log_set_default_handler".}

proc g_log*(
  log_domain: cstring, log_level: GLogLevelFlags, format: cstring
): void {.cdecl, varargs, importc: "g_log".}

proc g_logv*(
  log_domain: cstring, log_level: GLogLevelFlags, format: cstring
): void {.cdecl, varargs, importc: "g_logv".}

proc g_log_set_fatal_mask*(
  log_domain: cstring, fatal_mask: GLogLevelFlags
): GLogLevelFlags {.cdecl, importc: "g_log_set_fatal_mask".}

proc g_log_set_always_fatal*(
  fatal_mask: GLogLevelFlags
): GLogLevelFlags {.cdecl, importc: "g_log_set_always_fatal".}

proc g_log_structured*(
  log_domain: cstring, log_level: GLogLevelFlags
): void {.cdecl, varargs, importc: "g_log_structured".}

proc g_log_structured_array*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize
): void {.cdecl, importc: "g_log_structured_array".}

proc g_log_variant*(
  log_domain: cstring, log_level: GLogLevelFlags, fields: ptr GVariant
): void {.cdecl, importc: "g_log_variant".}

proc g_log_set_writer_func*(
  func_arg: GLogWriterFunc, user_data: gpointer, user_data_free: GDestroyNotify
): void {.cdecl, importc: "g_log_set_writer_func".}

proc g_log_writer_supports_color*(
  output_fd: gint
): gboolean {.cdecl, importc: "g_log_writer_supports_color".}

proc g_log_writer_is_journald*(
  output_fd: gint
): gboolean {.cdecl, importc: "g_log_writer_is_journald".}

proc g_log_writer_format_fields*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize, use_color: gboolean
): cstring {.cdecl, importc: "g_log_writer_format_fields".}

proc g_log_writer_syslog*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize, user_data: gpointer
): GLogWriterOutput {.cdecl, importc: "g_log_writer_syslog".}

proc g_log_writer_journald*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize, user_data: gpointer
): GLogWriterOutput {.cdecl, importc: "g_log_writer_journald".}

proc g_log_writer_standard_streams*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize, user_data: gpointer
): GLogWriterOutput {.cdecl, importc: "g_log_writer_standard_streams".}

proc g_log_writer_default*(
  log_level: GLogLevelFlags, fields: ptr GLogField, n_fields: gsize, user_data: gpointer
): GLogWriterOutput {.cdecl, importc: "g_log_writer_default".}

proc g_log_writer_default_set_use_stderr*(
  use_stderr: gboolean
): void {.cdecl, importc: "g_log_writer_default_set_use_stderr".}

proc g_log_writer_default_would_drop*(
  log_level: GLogLevelFlags, log_domain: cstring
): gboolean {.cdecl, importc: "g_log_writer_default_would_drop".}

proc g_log_writer_default_set_debug_domains*(
  domains: ptr cstring
): void {.cdecl, importc: "g_log_writer_default_set_debug_domains".}

proc g_log_get_debug_enabled*(): gboolean {.cdecl, importc: "g_log_get_debug_enabled".}
proc g_log_set_debug_enabled*(
  enabled: gboolean
): void {.cdecl, importc: "g_log_set_debug_enabled".}

proc internal_g_log_fallback_handler*(
  log_domain: cstring,
  log_level: GLogLevelFlags,
  message: cstring,
  unused_data: gpointer,
): void {.cdecl, importc: "_g_log_fallback_handler".}

proc g_return_if_fail_warning*(
  log_domain: cstring, pretty_function: cstring, expression: cstring
): void {.cdecl, importc: "g_return_if_fail_warning".}

proc g_warn_message*(
  domain: cstring, file: cstring, line: cint, func_arg: cstring, warnexpr: cstring
): void {.cdecl, importc: "g_warn_message".}

proc g_assert_warning*(
  log_domain: cstring,
  file: cstring,
  line: cint,
  pretty_function: cstring,
  expression: cstring,
): void {.cdecl, importc: "g_assert_warning".}

proc g_log_structured_standard*(
  log_domain: cstring,
  log_level: GLogLevelFlags,
  file: cstring,
  line: cstring,
  func_arg: cstring,
  message_format: cstring,
): void {.cdecl, varargs, importc: "g_log_structured_standard".}

proc g_print*(format: cstring): void {.cdecl, varargs, importc: "g_print".}
proc g_set_print_handler*(
  func_arg: GPrintFunc
): GPrintFunc {.cdecl, importc: "g_set_print_handler".}

proc g_printerr*(format: cstring): void {.cdecl, varargs, importc: "g_printerr".}
proc g_set_printerr_handler*(
  func_arg: GPrintFunc
): GPrintFunc {.cdecl, importc: "g_set_printerr_handler".}

proc g_option_error_quark*(): GQuark {.cdecl, importc: "g_option_error_quark".}
proc g_option_context_new*(
  parameter_string: cstring
): ptr GOptionContext {.cdecl, importc: "g_option_context_new".}

proc g_option_context_set_summary*(
  context: ptr GOptionContext, summary: cstring
): void {.cdecl, importc: "g_option_context_set_summary".}

proc g_option_context_get_summary*(
  context: ptr GOptionContext
): cstring {.cdecl, importc: "g_option_context_get_summary".}

proc g_option_context_set_description*(
  context: ptr GOptionContext, description: cstring
): void {.cdecl, importc: "g_option_context_set_description".}

proc g_option_context_get_description*(
  context: ptr GOptionContext
): cstring {.cdecl, importc: "g_option_context_get_description".}

proc g_option_context_free*(
  context: ptr GOptionContext
): void {.cdecl, importc: "g_option_context_free".}

proc g_option_context_set_help_enabled*(
  context: ptr GOptionContext, help_enabled: gboolean
): void {.cdecl, importc: "g_option_context_set_help_enabled".}

proc g_option_context_get_help_enabled*(
  context: ptr GOptionContext
): gboolean {.cdecl, importc: "g_option_context_get_help_enabled".}

proc g_option_context_set_ignore_unknown_options*(
  context: ptr GOptionContext, ignore_unknown: gboolean
): void {.cdecl, importc: "g_option_context_set_ignore_unknown_options".}

proc g_option_context_get_ignore_unknown_options*(
  context: ptr GOptionContext
): gboolean {.cdecl, importc: "g_option_context_get_ignore_unknown_options".}

proc g_option_context_set_strict_posix*(
  context: ptr GOptionContext, strict_posix: gboolean
): void {.cdecl, importc: "g_option_context_set_strict_posix".}

proc g_option_context_get_strict_posix*(
  context: ptr GOptionContext
): gboolean {.cdecl, importc: "g_option_context_get_strict_posix".}

proc g_option_context_add_main_entries*(
  context: ptr GOptionContext, entries: ptr GOptionEntry, translation_domain: cstring
): void {.cdecl, importc: "g_option_context_add_main_entries".}

proc g_option_context_parse*(
  context: ptr GOptionContext,
  argc: ptr gint,
  argv: ptr ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_option_context_parse".}

proc g_option_context_parse_strv*(
  context: ptr GOptionContext, arguments: ptr ptr cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_option_context_parse_strv".}

proc g_option_context_set_translate_func*(
  context: ptr GOptionContext,
  func_arg: GTranslateFunc,
  data: gpointer,
  destroy_notify: GDestroyNotify,
): void {.cdecl, importc: "g_option_context_set_translate_func".}

proc g_option_context_set_translation_domain*(
  context: ptr GOptionContext, domain: cstring
): void {.cdecl, importc: "g_option_context_set_translation_domain".}

proc g_option_context_add_group*(
  context: ptr GOptionContext, group: ptr GOptionGroup
): void {.cdecl, importc: "g_option_context_add_group".}

proc g_option_context_set_main_group*(
  context: ptr GOptionContext, group: ptr GOptionGroup
): void {.cdecl, importc: "g_option_context_set_main_group".}

proc g_option_context_get_main_group*(
  context: ptr GOptionContext
): ptr GOptionGroup {.cdecl, importc: "g_option_context_get_main_group".}

proc g_option_context_get_help*(
  context: ptr GOptionContext, main_help: gboolean, group: ptr GOptionGroup
): cstring {.cdecl, importc: "g_option_context_get_help".}

proc g_option_group_new*(
  name: cstring,
  description: cstring,
  help_description: cstring,
  user_data: gpointer,
  destroy: GDestroyNotify,
): ptr GOptionGroup {.cdecl, importc: "g_option_group_new".}

proc g_option_group_set_parse_hooks*(
  group: ptr GOptionGroup,
  pre_parse_func: GOptionParseFunc,
  post_parse_func: GOptionParseFunc,
): void {.cdecl, importc: "g_option_group_set_parse_hooks".}

proc g_option_group_set_error_hook*(
  group: ptr GOptionGroup, error_func: GOptionErrorFunc
): void {.cdecl, importc: "g_option_group_set_error_hook".}

proc g_option_group_free*(
  group: ptr GOptionGroup
): void {.cdecl, importc: "g_option_group_free".}

proc g_option_group_ref*(
  group: ptr GOptionGroup
): ptr GOptionGroup {.cdecl, importc: "g_option_group_ref".}

proc g_option_group_unref*(
  group: ptr GOptionGroup
): void {.cdecl, importc: "g_option_group_unref".}

proc g_option_group_add_entries*(
  group: ptr GOptionGroup, entries: ptr GOptionEntry
): void {.cdecl, importc: "g_option_group_add_entries".}

proc g_option_group_set_translate_func*(
  group: ptr GOptionGroup,
  func_arg: GTranslateFunc,
  data: gpointer,
  destroy_notify: GDestroyNotify,
): void {.cdecl, importc: "g_option_group_set_translate_func".}

proc g_option_group_set_translation_domain*(
  group: ptr GOptionGroup, domain: cstring
): void {.cdecl, importc: "g_option_group_set_translation_domain".}

proc g_path_buf_new*(): ptr GPathBuf {.cdecl, importc: "g_path_buf_new".}
proc g_path_buf_new_from_path*(
  path: cstring
): ptr GPathBuf {.cdecl, importc: "g_path_buf_new_from_path".}

proc g_path_buf_init*(
  buf: ptr GPathBuf
): ptr GPathBuf {.cdecl, importc: "g_path_buf_init".}

proc g_path_buf_init_from_path*(
  buf: ptr GPathBuf, path: cstring
): ptr GPathBuf {.cdecl, importc: "g_path_buf_init_from_path".}

proc g_path_buf_clear*(buf: ptr GPathBuf): void {.cdecl, importc: "g_path_buf_clear".}
proc g_path_buf_clear_to_path*(
  buf: ptr GPathBuf
): cstring {.cdecl, importc: "g_path_buf_clear_to_path".}

proc g_path_buf_free*(buf: ptr GPathBuf): void {.cdecl, importc: "g_path_buf_free".}
proc g_path_buf_free_to_path*(
  buf: ptr GPathBuf
): cstring {.cdecl, importc: "g_path_buf_free_to_path".}

proc g_path_buf_copy*(
  buf: ptr GPathBuf
): ptr GPathBuf {.cdecl, importc: "g_path_buf_copy".}

proc g_path_buf_push*(
  buf: ptr GPathBuf, path: cstring
): ptr GPathBuf {.cdecl, importc: "g_path_buf_push".}

proc g_path_buf_pop*(buf: ptr GPathBuf): gboolean {.cdecl, importc: "g_path_buf_pop".}
proc g_path_buf_set_filename*(
  buf: ptr GPathBuf, file_name: cstring
): gboolean {.cdecl, importc: "g_path_buf_set_filename".}

proc g_path_buf_set_extension*(
  buf: ptr GPathBuf, extension: cstring
): gboolean {.cdecl, importc: "g_path_buf_set_extension".}

proc g_path_buf_to_path*(
  buf: ptr GPathBuf
): cstring {.cdecl, importc: "g_path_buf_to_path".}

proc g_path_buf_equal*(
  v1: gconstpointer, v2: gconstpointer
): gboolean {.cdecl, importc: "g_path_buf_equal".}

proc g_pattern_spec_new*(
  pattern: cstring
): ptr GPatternSpec {.cdecl, importc: "g_pattern_spec_new".}

proc g_pattern_spec_free*(
  pspec: ptr GPatternSpec
): void {.cdecl, importc: "g_pattern_spec_free".}

proc g_pattern_spec_copy*(
  pspec: ptr GPatternSpec
): ptr GPatternSpec {.cdecl, importc: "g_pattern_spec_copy".}

proc g_pattern_spec_equal*(
  pspec1: ptr GPatternSpec, pspec2: ptr GPatternSpec
): gboolean {.cdecl, importc: "g_pattern_spec_equal".}

proc g_pattern_spec_match*(
  pspec: ptr GPatternSpec,
  string_length: gsize,
  string: cstring,
  string_reversed: cstring,
): gboolean {.cdecl, importc: "g_pattern_spec_match".}

proc g_pattern_spec_match_string*(
  pspec: ptr GPatternSpec, string: cstring
): gboolean {.cdecl, importc: "g_pattern_spec_match_string".}

proc g_pattern_match*(
  pspec: ptr GPatternSpec,
  string_length: guint,
  string: cstring,
  string_reversed: cstring,
): gboolean {.cdecl, importc: "g_pattern_match".}

proc g_pattern_match_string*(
  pspec: ptr GPatternSpec, string: cstring
): gboolean {.cdecl, importc: "g_pattern_match_string".}

proc g_pattern_match_simple*(
  pattern: cstring, string: cstring
): gboolean {.cdecl, importc: "g_pattern_match_simple".}

proc g_spaced_primes_closest*(
  num: guint
): guint {.cdecl, importc: "g_spaced_primes_closest".}

proc g_qsort_with_data*(
  pbase: gconstpointer,
  total_elems: gint,
  size: gsize,
  compare_func: GCompareDataFunc,
  user_data: gpointer,
): void {.cdecl, importc: "g_qsort_with_data".}

proc g_sort_array*(
  array: pointer,
  n_elements: csize_t,
  element_size: csize_t,
  compare_func: GCompareDataFunc,
  user_data: pointer,
): void {.cdecl, importc: "g_sort_array".}

proc g_queue_new*(): ptr GQueue {.cdecl, importc: "g_queue_new".}
proc g_queue_free*(queue: ptr GQueue): void {.cdecl, importc: "g_queue_free".}
proc g_queue_free_full*(
  queue: ptr GQueue, free_func: GDestroyNotify
): void {.cdecl, importc: "g_queue_free_full".}

proc g_queue_init*(queue: ptr GQueue): void {.cdecl, importc: "g_queue_init".}
proc g_queue_clear*(queue: ptr GQueue): void {.cdecl, importc: "g_queue_clear".}
proc g_queue_is_empty*(
  queue: ptr GQueue
): gboolean {.cdecl, importc: "g_queue_is_empty".}

proc g_queue_clear_full*(
  queue: ptr GQueue, free_func: GDestroyNotify
): void {.cdecl, importc: "g_queue_clear_full".}

proc g_queue_get_length*(
  queue: ptr GQueue
): guint {.cdecl, importc: "g_queue_get_length".}

proc g_queue_reverse*(queue: ptr GQueue): void {.cdecl, importc: "g_queue_reverse".}
proc g_queue_copy*(queue: ptr GQueue): ptr GQueue {.cdecl, importc: "g_queue_copy".}
proc g_queue_foreach*(
  queue: ptr GQueue, func_arg: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_queue_foreach".}

proc g_queue_find*(
  queue: ptr GQueue, data: gconstpointer
): ptr GList {.cdecl, importc: "g_queue_find".}

proc g_queue_find_custom*(
  queue: ptr GQueue, data: gconstpointer, func_arg: GCompareFunc
): ptr GList {.cdecl, importc: "g_queue_find_custom".}

proc g_queue_sort*(
  queue: ptr GQueue, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_queue_sort".}

proc g_queue_push_head*(
  queue: ptr GQueue, data: gpointer
): void {.cdecl, importc: "g_queue_push_head".}

proc g_queue_push_tail*(
  queue: ptr GQueue, data: gpointer
): void {.cdecl, importc: "g_queue_push_tail".}

proc g_queue_push_nth*(
  queue: ptr GQueue, data: gpointer, n: gint
): void {.cdecl, importc: "g_queue_push_nth".}

proc g_queue_pop_head*(
  queue: ptr GQueue
): gpointer {.cdecl, importc: "g_queue_pop_head".}

proc g_queue_pop_tail*(
  queue: ptr GQueue
): gpointer {.cdecl, importc: "g_queue_pop_tail".}

proc g_queue_pop_nth*(
  queue: ptr GQueue, n: guint
): gpointer {.cdecl, importc: "g_queue_pop_nth".}

proc g_queue_peek_head*(
  queue: ptr GQueue
): gpointer {.cdecl, importc: "g_queue_peek_head".}

proc g_queue_peek_tail*(
  queue: ptr GQueue
): gpointer {.cdecl, importc: "g_queue_peek_tail".}

proc g_queue_peek_nth*(
  queue: ptr GQueue, n: guint
): gpointer {.cdecl, importc: "g_queue_peek_nth".}

proc g_queue_index*(
  queue: ptr GQueue, data: gconstpointer
): gint {.cdecl, importc: "g_queue_index".}

proc g_queue_remove*(
  queue: ptr GQueue, data: gconstpointer
): gboolean {.cdecl, importc: "g_queue_remove".}

proc g_queue_remove_all*(
  queue: ptr GQueue, data: gconstpointer
): guint {.cdecl, importc: "g_queue_remove_all".}

proc g_queue_insert_before*(
  queue: ptr GQueue, sibling: ptr GList, data: gpointer
): void {.cdecl, importc: "g_queue_insert_before".}

proc g_queue_insert_before_link*(
  queue: ptr GQueue, sibling: ptr GList, link_private: ptr GList
): void {.cdecl, importc: "g_queue_insert_before_link".}

proc g_queue_insert_after*(
  queue: ptr GQueue, sibling: ptr GList, data: gpointer
): void {.cdecl, importc: "g_queue_insert_after".}

proc g_queue_insert_after_link*(
  queue: ptr GQueue, sibling: ptr GList, link_private: ptr GList
): void {.cdecl, importc: "g_queue_insert_after_link".}

proc g_queue_insert_sorted*(
  queue: ptr GQueue, data: gpointer, func_arg: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_queue_insert_sorted".}

proc g_queue_push_head_link*(
  queue: ptr GQueue, link_private: ptr GList
): void {.cdecl, importc: "g_queue_push_head_link".}

proc g_queue_push_tail_link*(
  queue: ptr GQueue, link_private: ptr GList
): void {.cdecl, importc: "g_queue_push_tail_link".}

proc g_queue_push_nth_link*(
  queue: ptr GQueue, n: gint, link_private: ptr GList
): void {.cdecl, importc: "g_queue_push_nth_link".}

proc g_queue_pop_head_link*(
  queue: ptr GQueue
): ptr GList {.cdecl, importc: "g_queue_pop_head_link".}

proc g_queue_pop_tail_link*(
  queue: ptr GQueue
): ptr GList {.cdecl, importc: "g_queue_pop_tail_link".}

proc g_queue_pop_nth_link*(
  queue: ptr GQueue, n: guint
): ptr GList {.cdecl, importc: "g_queue_pop_nth_link".}

proc g_queue_peek_head_link*(
  queue: ptr GQueue
): ptr GList {.cdecl, importc: "g_queue_peek_head_link".}

proc g_queue_peek_tail_link*(
  queue: ptr GQueue
): ptr GList {.cdecl, importc: "g_queue_peek_tail_link".}

proc g_queue_peek_nth_link*(
  queue: ptr GQueue, n: guint
): ptr GList {.cdecl, importc: "g_queue_peek_nth_link".}

proc g_queue_link_index*(
  queue: ptr GQueue, link_private: ptr GList
): gint {.cdecl, importc: "g_queue_link_index".}

proc g_queue_unlink*(
  queue: ptr GQueue, link_private: ptr GList
): void {.cdecl, importc: "g_queue_unlink".}

proc g_queue_delete_link*(
  queue: ptr GQueue, link_private: ptr GList
): void {.cdecl, importc: "g_queue_delete_link".}

proc g_rand_new_with_seed*(
  seed: guint32
): ptr GRand {.cdecl, importc: "g_rand_new_with_seed".}

proc g_rand_new_with_seed_array*(
  seed: ptr guint32, seed_length: guint
): ptr GRand {.cdecl, importc: "g_rand_new_with_seed_array".}

proc g_rand_new*(): ptr GRand {.cdecl, importc: "g_rand_new".}
proc g_rand_free*(rand_private: ptr GRand): void {.cdecl, importc: "g_rand_free".}
proc g_rand_copy*(rand_private: ptr GRand): ptr GRand {.cdecl, importc: "g_rand_copy".}
proc g_rand_set_seed*(
  rand_private: ptr GRand, seed: guint32
): void {.cdecl, importc: "g_rand_set_seed".}

proc g_rand_set_seed_array*(
  rand_private: ptr GRand, seed: ptr guint32, seed_length: guint
): void {.cdecl, importc: "g_rand_set_seed_array".}

proc g_rand_int*(rand_private: ptr GRand): guint32 {.cdecl, importc: "g_rand_int".}
proc g_rand_int_range*(
  rand_private: ptr GRand, begin: gint32, end_arg: gint32
): gint32 {.cdecl, importc: "g_rand_int_range".}

proc g_rand_double*(
  rand_private: ptr GRand
): gdouble {.cdecl, importc: "g_rand_double".}

proc g_rand_double_range*(
  rand_private: ptr GRand, begin: gdouble, end_arg: gdouble
): gdouble {.cdecl, importc: "g_rand_double_range".}

proc g_random_set_seed*(seed: guint32): void {.cdecl, importc: "g_random_set_seed".}
proc g_random_int*(): guint32 {.cdecl, importc: "g_random_int".}
proc g_random_int_range*(
  begin: gint32, end_arg: gint32
): gint32 {.cdecl, importc: "g_random_int_range".}

proc g_random_double*(): gdouble {.cdecl, importc: "g_random_double".}
proc g_random_double_range*(
  begin: gdouble, end_arg: gdouble
): gdouble {.cdecl, importc: "g_random_double_range".}

proc g_rc_box_alloc*(block_size: gsize): gpointer {.cdecl, importc: "g_rc_box_alloc".}
proc g_rc_box_alloc0*(block_size: gsize): gpointer {.cdecl, importc: "g_rc_box_alloc0".}
proc g_rc_box_dup*(
  block_size: gsize, mem_block: gconstpointer
): gpointer {.cdecl, importc: "g_rc_box_dup".}

proc g_rc_box_acquire*(
  mem_block: gpointer
): gpointer {.cdecl, importc: "g_rc_box_acquire".}

proc g_rc_box_release*(mem_block: gpointer): void {.cdecl, importc: "g_rc_box_release".}
proc g_rc_box_release_full*(
  mem_block: gpointer, clear_func: GDestroyNotify
): void {.cdecl, importc: "g_rc_box_release_full".}

proc g_rc_box_get_size*(
  mem_block: gpointer
): gsize {.cdecl, importc: "g_rc_box_get_size".}

proc g_atomic_rc_box_alloc*(
  block_size: gsize
): gpointer {.cdecl, importc: "g_atomic_rc_box_alloc".}

proc g_atomic_rc_box_alloc0*(
  block_size: gsize
): gpointer {.cdecl, importc: "g_atomic_rc_box_alloc0".}

proc g_atomic_rc_box_dup*(
  block_size: gsize, mem_block: gconstpointer
): gpointer {.cdecl, importc: "g_atomic_rc_box_dup".}

proc g_atomic_rc_box_acquire*(
  mem_block: gpointer
): gpointer {.cdecl, importc: "g_atomic_rc_box_acquire".}

proc g_atomic_rc_box_release*(
  mem_block: gpointer
): void {.cdecl, importc: "g_atomic_rc_box_release".}

proc g_atomic_rc_box_release_full*(
  mem_block: gpointer, clear_func: GDestroyNotify
): void {.cdecl, importc: "g_atomic_rc_box_release_full".}

proc g_atomic_rc_box_get_size*(
  mem_block: gpointer
): gsize {.cdecl, importc: "g_atomic_rc_box_get_size".}

proc g_ref_count_init*(rc: ptr grefcount): void {.cdecl, importc: "g_ref_count_init".}
proc g_ref_count_inc*(rc: ptr grefcount): void {.cdecl, importc: "g_ref_count_inc".}
proc g_ref_count_dec*(rc: ptr grefcount): gboolean {.cdecl, importc: "g_ref_count_dec".}
proc g_ref_count_compare*(
  rc: ptr grefcount, val: gint
): gboolean {.cdecl, importc: "g_ref_count_compare".}

proc g_atomic_ref_count_init*(
  arc: ptr gatomicrefcount
): void {.cdecl, importc: "g_atomic_ref_count_init".}

proc g_atomic_ref_count_inc*(
  arc: ptr gatomicrefcount
): void {.cdecl, importc: "g_atomic_ref_count_inc".}

proc g_atomic_ref_count_dec*(
  arc: ptr gatomicrefcount
): gboolean {.cdecl, importc: "g_atomic_ref_count_dec".}

proc g_atomic_ref_count_compare*(
  arc: ptr gatomicrefcount, val: gint
): gboolean {.cdecl, importc: "g_atomic_ref_count_compare".}

proc g_ref_string_new*(str: cstring): cstring {.cdecl, importc: "g_ref_string_new".}
proc g_ref_string_new_len*(
  str: cstring, len: gssize
): cstring {.cdecl, importc: "g_ref_string_new_len".}

proc g_ref_string_new_intern*(
  str: cstring
): cstring {.cdecl, importc: "g_ref_string_new_intern".}

proc g_ref_string_acquire*(
  str: cstring
): cstring {.cdecl, importc: "g_ref_string_acquire".}

proc g_ref_string_release*(
  str: cstring
): void {.cdecl, importc: "g_ref_string_release".}

proc g_ref_string_length*(str: cstring): gsize {.cdecl, importc: "g_ref_string_length".}
proc g_ref_string_equal*(
  str1: cstring, str2: cstring
): gboolean {.cdecl, importc: "g_ref_string_equal".}

proc g_regex_error_quark*(): GQuark {.cdecl, importc: "g_regex_error_quark".}
proc g_regex_new*(
  pattern: cstring,
  compile_options: GRegexCompileFlags,
  match_options: GRegexMatchFlags,
  error: ptr ptr GError,
): ptr GRegex {.cdecl, importc: "g_regex_new".}

proc g_regex_ref*(regex: ptr GRegex): ptr GRegex {.cdecl, importc: "g_regex_ref".}
proc g_regex_unref*(regex: ptr GRegex): void {.cdecl, importc: "g_regex_unref".}
proc g_regex_get_pattern*(
  regex: ptr GRegex
): cstring {.cdecl, importc: "g_regex_get_pattern".}

proc g_regex_get_max_backref*(
  regex: ptr GRegex
): gint {.cdecl, importc: "g_regex_get_max_backref".}

proc g_regex_get_capture_count*(
  regex: ptr GRegex
): gint {.cdecl, importc: "g_regex_get_capture_count".}

proc g_regex_get_has_cr_or_lf*(
  regex: ptr GRegex
): gboolean {.cdecl, importc: "g_regex_get_has_cr_or_lf".}

proc g_regex_get_max_lookbehind*(
  regex: ptr GRegex
): gint {.cdecl, importc: "g_regex_get_max_lookbehind".}

proc g_regex_get_string_number*(
  regex: ptr GRegex, name: cstring
): gint {.cdecl, importc: "g_regex_get_string_number".}

proc g_regex_escape_string*(
  string: cstring, length: gint
): cstring {.cdecl, importc: "g_regex_escape_string".}

proc g_regex_escape_nul*(
  string: cstring, length: gint
): cstring {.cdecl, importc: "g_regex_escape_nul".}

proc g_regex_get_compile_flags*(
  regex: ptr GRegex
): GRegexCompileFlags {.cdecl, importc: "g_regex_get_compile_flags".}

proc g_regex_get_match_flags*(
  regex: ptr GRegex
): GRegexMatchFlags {.cdecl, importc: "g_regex_get_match_flags".}

proc g_regex_match_simple*(
  pattern: cstring,
  string: cstring,
  compile_options: GRegexCompileFlags,
  match_options: GRegexMatchFlags,
): gboolean {.cdecl, importc: "g_regex_match_simple".}

proc g_regex_match*(
  regex: ptr GRegex,
  string: cstring,
  match_options: GRegexMatchFlags,
  match_info: ptr ptr GMatchInfo,
): gboolean {.cdecl, importc: "g_regex_match".}

proc g_regex_match_full*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  match_options: GRegexMatchFlags,
  match_info: ptr ptr GMatchInfo,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_regex_match_full".}

proc g_regex_match_all*(
  regex: ptr GRegex,
  string: cstring,
  match_options: GRegexMatchFlags,
  match_info: ptr ptr GMatchInfo,
): gboolean {.cdecl, importc: "g_regex_match_all".}

proc g_regex_match_all_full*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  match_options: GRegexMatchFlags,
  match_info: ptr ptr GMatchInfo,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_regex_match_all_full".}

proc g_regex_split_simple*(
  pattern: cstring,
  string: cstring,
  compile_options: GRegexCompileFlags,
  match_options: GRegexMatchFlags,
): ptr cstring {.cdecl, importc: "g_regex_split_simple".}

proc g_regex_split*(
  regex: ptr GRegex, string: cstring, match_options: GRegexMatchFlags
): ptr cstring {.cdecl, importc: "g_regex_split".}

proc g_regex_split_full*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  match_options: GRegexMatchFlags,
  max_tokens: gint,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_regex_split_full".}

proc g_regex_replace*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  replacement: cstring,
  match_options: GRegexMatchFlags,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_regex_replace".}

proc g_regex_replace_literal*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  replacement: cstring,
  match_options: GRegexMatchFlags,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_regex_replace_literal".}

proc g_regex_replace_eval*(
  regex: ptr GRegex,
  string: cstring,
  string_len: gssize,
  start_position: gint,
  match_options: GRegexMatchFlags,
  eval: GRegexEvalCallback,
  user_data: gpointer,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_regex_replace_eval".}

proc g_regex_check_replacement*(
  replacement: cstring, has_references: ptr gboolean, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_regex_check_replacement".}

proc g_match_info_get_regex*(
  match_info: ptr GMatchInfo
): ptr GRegex {.cdecl, importc: "g_match_info_get_regex".}

proc g_match_info_get_string*(
  match_info: ptr GMatchInfo
): cstring {.cdecl, importc: "g_match_info_get_string".}

proc g_match_info_ref*(
  match_info: ptr GMatchInfo
): ptr GMatchInfo {.cdecl, importc: "g_match_info_ref".}

proc g_match_info_unref*(
  match_info: ptr GMatchInfo
): void {.cdecl, importc: "g_match_info_unref".}

proc g_match_info_free*(
  match_info: ptr GMatchInfo
): void {.cdecl, importc: "g_match_info_free".}

proc g_match_info_next*(
  match_info: ptr GMatchInfo, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_match_info_next".}

proc g_match_info_matches*(
  match_info: ptr GMatchInfo
): gboolean {.cdecl, importc: "g_match_info_matches".}

proc g_match_info_get_match_count*(
  match_info: ptr GMatchInfo
): gint {.cdecl, importc: "g_match_info_get_match_count".}

proc g_match_info_is_partial_match*(
  match_info: ptr GMatchInfo
): gboolean {.cdecl, importc: "g_match_info_is_partial_match".}

proc g_match_info_expand_references*(
  match_info: ptr GMatchInfo, string_to_expand: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_match_info_expand_references".}

proc g_match_info_fetch*(
  match_info: ptr GMatchInfo, match_num: gint
): cstring {.cdecl, importc: "g_match_info_fetch".}

proc g_match_info_fetch_pos*(
  match_info: ptr GMatchInfo, match_num: gint, start_pos: ptr gint, end_pos: ptr gint
): gboolean {.cdecl, importc: "g_match_info_fetch_pos".}

proc g_match_info_fetch_named*(
  match_info: ptr GMatchInfo, name: cstring
): cstring {.cdecl, importc: "g_match_info_fetch_named".}

proc g_match_info_fetch_named_pos*(
  match_info: ptr GMatchInfo, name: cstring, start_pos: ptr gint, end_pos: ptr gint
): gboolean {.cdecl, importc: "g_match_info_fetch_named_pos".}

proc g_match_info_fetch_all*(
  match_info: ptr GMatchInfo
): ptr cstring {.cdecl, importc: "g_match_info_fetch_all".}

proc g_scanner_new*(
  config_templ: ptr GScannerConfig
): ptr GScanner {.cdecl, importc: "g_scanner_new".}

proc g_scanner_destroy*(
  scanner: ptr GScanner
): void {.cdecl, importc: "g_scanner_destroy".}

proc g_scanner_input_file*(
  scanner: ptr GScanner, input_fd: gint
): void {.cdecl, importc: "g_scanner_input_file".}

proc g_scanner_sync_file_offset*(
  scanner: ptr GScanner
): void {.cdecl, importc: "g_scanner_sync_file_offset".}

proc g_scanner_input_text*(
  scanner: ptr GScanner, text: cstring, text_len: guint
): void {.cdecl, importc: "g_scanner_input_text".}

proc g_scanner_get_next_token*(
  scanner: ptr GScanner
): GTokenType {.cdecl, importc: "g_scanner_get_next_token".}

proc g_scanner_peek_next_token*(
  scanner: ptr GScanner
): GTokenType {.cdecl, importc: "g_scanner_peek_next_token".}

proc g_scanner_cur_token*(
  scanner: ptr GScanner
): GTokenType {.cdecl, importc: "g_scanner_cur_token".}

proc g_scanner_cur_value*(
  scanner: ptr GScanner
): GTokenValue {.cdecl, importc: "g_scanner_cur_value".}

proc g_scanner_cur_line*(
  scanner: ptr GScanner
): guint {.cdecl, importc: "g_scanner_cur_line".}

proc g_scanner_cur_position*(
  scanner: ptr GScanner
): guint {.cdecl, importc: "g_scanner_cur_position".}

proc g_scanner_eof*(scanner: ptr GScanner): gboolean {.cdecl, importc: "g_scanner_eof".}
proc g_scanner_set_scope*(
  scanner: ptr GScanner, scope_id: guint
): guint {.cdecl, importc: "g_scanner_set_scope".}

proc g_scanner_scope_add_symbol*(
  scanner: ptr GScanner, scope_id: guint, symbol: cstring, value: gpointer
): void {.cdecl, importc: "g_scanner_scope_add_symbol".}

proc g_scanner_scope_remove_symbol*(
  scanner: ptr GScanner, scope_id: guint, symbol: cstring
): void {.cdecl, importc: "g_scanner_scope_remove_symbol".}

proc g_scanner_scope_lookup_symbol*(
  scanner: ptr GScanner, scope_id: guint, symbol: cstring
): gpointer {.cdecl, importc: "g_scanner_scope_lookup_symbol".}

proc g_scanner_scope_foreach_symbol*(
  scanner: ptr GScanner, scope_id: guint, func_arg: GHFunc, user_data: gpointer
): void {.cdecl, importc: "g_scanner_scope_foreach_symbol".}

proc g_scanner_lookup_symbol*(
  scanner: ptr GScanner, symbol: cstring
): gpointer {.cdecl, importc: "g_scanner_lookup_symbol".}

proc g_scanner_unexp_token*(
  scanner: ptr GScanner,
  expected_token: GTokenType,
  identifier_spec: cstring,
  symbol_spec: cstring,
  symbol_name: cstring,
  message: cstring,
  is_error: gint,
): void {.cdecl, importc: "g_scanner_unexp_token".}

proc g_scanner_error*(
  scanner: ptr GScanner, format: cstring
): void {.cdecl, varargs, importc: "g_scanner_error".}

proc g_scanner_warn*(
  scanner: ptr GScanner, format: cstring
): void {.cdecl, varargs, importc: "g_scanner_warn".}

proc g_sequence_new*(
  data_destroy: GDestroyNotify
): ptr GSequence {.cdecl, importc: "g_sequence_new".}

proc g_sequence_free*(seq: ptr GSequence): void {.cdecl, importc: "g_sequence_free".}
proc g_sequence_get_length*(
  seq: ptr GSequence
): gint {.cdecl, importc: "g_sequence_get_length".}

proc g_sequence_foreach*(
  seq: ptr GSequence, func_arg: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_sequence_foreach".}

proc g_sequence_foreach_range*(
  begin: ptr GSequenceIter,
  end_arg: ptr GSequenceIter,
  func_arg: GFunc,
  user_data: gpointer,
): void {.cdecl, importc: "g_sequence_foreach_range".}

proc g_sequence_sort*(
  seq: ptr GSequence, cmp_func: GCompareDataFunc, cmp_data: gpointer
): void {.cdecl, importc: "g_sequence_sort".}

proc g_sequence_sort_iter*(
  seq: ptr GSequence, cmp_func: GSequenceIterCompareFunc, cmp_data: gpointer
): void {.cdecl, importc: "g_sequence_sort_iter".}

proc g_sequence_is_empty*(
  seq: ptr GSequence
): gboolean {.cdecl, importc: "g_sequence_is_empty".}

proc g_sequence_get_begin_iter*(
  seq: ptr GSequence
): ptr GSequenceIter {.cdecl, importc: "g_sequence_get_begin_iter".}

proc g_sequence_get_end_iter*(
  seq: ptr GSequence
): ptr GSequenceIter {.cdecl, importc: "g_sequence_get_end_iter".}

proc g_sequence_get_iter_at_pos*(
  seq: ptr GSequence, pos: gint
): ptr GSequenceIter {.cdecl, importc: "g_sequence_get_iter_at_pos".}

proc g_sequence_append*(
  seq: ptr GSequence, data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_append".}

proc g_sequence_prepend*(
  seq: ptr GSequence, data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_prepend".}

proc g_sequence_insert_before*(
  iter: ptr GSequenceIter, data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_insert_before".}

proc g_sequence_move*(
  src: ptr GSequenceIter, dest: ptr GSequenceIter
): void {.cdecl, importc: "g_sequence_move".}

proc g_sequence_swap*(
  a: ptr GSequenceIter, b: ptr GSequenceIter
): void {.cdecl, importc: "g_sequence_swap".}

proc g_sequence_insert_sorted*(
  seq: ptr GSequence, data: gpointer, cmp_func: GCompareDataFunc, cmp_data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_insert_sorted".}

proc g_sequence_insert_sorted_iter*(
  seq: ptr GSequence,
  data: gpointer,
  iter_cmp: GSequenceIterCompareFunc,
  cmp_data: gpointer,
): ptr GSequenceIter {.cdecl, importc: "g_sequence_insert_sorted_iter".}

proc g_sequence_sort_changed*(
  iter: ptr GSequenceIter, cmp_func: GCompareDataFunc, cmp_data: gpointer
): void {.cdecl, importc: "g_sequence_sort_changed".}

proc g_sequence_sort_changed_iter*(
  iter: ptr GSequenceIter, iter_cmp: GSequenceIterCompareFunc, cmp_data: gpointer
): void {.cdecl, importc: "g_sequence_sort_changed_iter".}

proc g_sequence_remove*(
  iter: ptr GSequenceIter
): void {.cdecl, importc: "g_sequence_remove".}

proc g_sequence_remove_range*(
  begin: ptr GSequenceIter, end_arg: ptr GSequenceIter
): void {.cdecl, importc: "g_sequence_remove_range".}

proc g_sequence_move_range*(
  dest: ptr GSequenceIter, begin: ptr GSequenceIter, end_arg: ptr GSequenceIter
): void {.cdecl, importc: "g_sequence_move_range".}

proc g_sequence_search*(
  seq: ptr GSequence, data: gpointer, cmp_func: GCompareDataFunc, cmp_data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_search".}

proc g_sequence_search_iter*(
  seq: ptr GSequence,
  data: gpointer,
  iter_cmp: GSequenceIterCompareFunc,
  cmp_data: gpointer,
): ptr GSequenceIter {.cdecl, importc: "g_sequence_search_iter".}

proc g_sequence_lookup*(
  seq: ptr GSequence, data: gpointer, cmp_func: GCompareDataFunc, cmp_data: gpointer
): ptr GSequenceIter {.cdecl, importc: "g_sequence_lookup".}

proc g_sequence_lookup_iter*(
  seq: ptr GSequence,
  data: gpointer,
  iter_cmp: GSequenceIterCompareFunc,
  cmp_data: gpointer,
): ptr GSequenceIter {.cdecl, importc: "g_sequence_lookup_iter".}

proc g_sequence_get*(
  iter: ptr GSequenceIter
): gpointer {.cdecl, importc: "g_sequence_get".}

proc g_sequence_set*(
  iter: ptr GSequenceIter, data: gpointer
): void {.cdecl, importc: "g_sequence_set".}

proc g_sequence_iter_is_begin*(
  iter: ptr GSequenceIter
): gboolean {.cdecl, importc: "g_sequence_iter_is_begin".}

proc g_sequence_iter_is_end*(
  iter: ptr GSequenceIter
): gboolean {.cdecl, importc: "g_sequence_iter_is_end".}

proc g_sequence_iter_next*(
  iter: ptr GSequenceIter
): ptr GSequenceIter {.cdecl, importc: "g_sequence_iter_next".}

proc g_sequence_iter_prev*(
  iter: ptr GSequenceIter
): ptr GSequenceIter {.cdecl, importc: "g_sequence_iter_prev".}

proc g_sequence_iter_get_position*(
  iter: ptr GSequenceIter
): gint {.cdecl, importc: "g_sequence_iter_get_position".}

proc g_sequence_iter_move*(
  iter: ptr GSequenceIter, delta: gint
): ptr GSequenceIter {.cdecl, importc: "g_sequence_iter_move".}

proc g_sequence_iter_get_sequence*(
  iter: ptr GSequenceIter
): ptr GSequence {.cdecl, importc: "g_sequence_iter_get_sequence".}

proc g_sequence_iter_compare*(
  a: ptr GSequenceIter, b: ptr GSequenceIter
): gint {.cdecl, importc: "g_sequence_iter_compare".}

proc g_sequence_range_get_midpoint*(
  begin: ptr GSequenceIter, end_arg: ptr GSequenceIter
): ptr GSequenceIter {.cdecl, importc: "g_sequence_range_get_midpoint".}

proc g_shell_error_quark*(): GQuark {.cdecl, importc: "g_shell_error_quark".}
proc g_shell_quote*(
  unquoted_string: cstring
): cstring {.cdecl, importc: "g_shell_quote".}

proc g_shell_unquote*(
  quoted_string: cstring, error: ptr ptr GError
): cstring {.cdecl, importc: "g_shell_unquote".}

proc g_shell_parse_argv*(
  command_line: cstring, argcp: ptr gint, argvp: ptr ptr cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_shell_parse_argv".}

proc g_slice_alloc*(block_size: gsize): gpointer {.cdecl, importc: "g_slice_alloc".}
proc g_slice_alloc0*(block_size: gsize): gpointer {.cdecl, importc: "g_slice_alloc0".}
proc g_slice_copy*(
  block_size: gsize, mem_block: gconstpointer
): gpointer {.cdecl, importc: "g_slice_copy".}

proc g_slice_free1*(
  block_size: gsize, mem_block: gpointer
): void {.cdecl, importc: "g_slice_free1".}

proc g_slice_free_chain_with_offset*(
  block_size: gsize, mem_chain: gpointer, next_offset: gsize
): void {.cdecl, importc: "g_slice_free_chain_with_offset".}

proc g_slice_set_config*(
  ckey: GSliceConfig, value: gint64
): void {.cdecl, importc: "g_slice_set_config".}

proc g_slice_get_config*(
  ckey: GSliceConfig
): gint64 {.cdecl, importc: "g_slice_get_config".}

proc g_slice_get_config_state*(
  ckey: GSliceConfig, address: gint64, n_values: ptr guint
): ptr gint64 {.cdecl, importc: "g_slice_get_config_state".}

proc g_spawn_error_quark*(): GQuark {.cdecl, importc: "g_spawn_error_quark".}
proc g_spawn_exit_error_quark*(): GQuark {.cdecl, importc: "g_spawn_exit_error_quark".}
proc g_spawn_async*(
  working_directory: cstring,
  argv: ptr cstring,
  envp: ptr cstring,
  flags: GSpawnFlags,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  child_pid: ptr GPid,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_async".}

proc g_spawn_async_with_pipes*(
  working_directory: cstring,
  argv: ptr cstring,
  envp: ptr cstring,
  flags: GSpawnFlags,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  child_pid: ptr GPid,
  standard_input: ptr gint,
  standard_output: ptr gint,
  standard_error: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_async_with_pipes".}

proc g_spawn_async_with_pipes_and_fds*(
  working_directory: cstring,
  argv: ptr cstring,
  envp: ptr cstring,
  flags: GSpawnFlags,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  stdin_fd: gint,
  stdout_fd: gint,
  stderr_fd: gint,
  source_fds: ptr gint,
  target_fds: ptr gint,
  n_fds: gsize,
  child_pid_out: ptr GPid,
  stdin_pipe_out: ptr gint,
  stdout_pipe_out: ptr gint,
  stderr_pipe_out: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_async_with_pipes_and_fds".}

proc g_spawn_async_with_fds*(
  working_directory: cstring,
  argv: ptr cstring,
  envp: ptr cstring,
  flags: GSpawnFlags,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  child_pid: ptr GPid,
  stdin_fd: gint,
  stdout_fd: gint,
  stderr_fd: gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_async_with_fds".}

proc g_spawn_sync*(
  working_directory: cstring,
  argv: ptr cstring,
  envp: ptr cstring,
  flags: GSpawnFlags,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  standard_output: ptr cstring,
  standard_error: ptr cstring,
  wait_status: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_sync".}

proc g_spawn_command_line_sync*(
  command_line: cstring,
  standard_output: ptr cstring,
  standard_error: ptr cstring,
  wait_status: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_spawn_command_line_sync".}

proc g_spawn_command_line_async*(
  command_line: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_spawn_command_line_async".}

proc g_spawn_check_wait_status*(
  wait_status: gint, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_spawn_check_wait_status".}

proc g_spawn_check_exit_status*(
  wait_status: gint, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_spawn_check_exit_status".}

proc g_spawn_close_pid*(pid: GPid): void {.cdecl, importc: "g_spawn_close_pid".}
proc g_string_chunk_new*(
  size: gsize
): ptr GStringChunk {.cdecl, importc: "g_string_chunk_new".}

proc g_string_chunk_free*(
  chunk: ptr GStringChunk
): void {.cdecl, importc: "g_string_chunk_free".}

proc g_string_chunk_clear*(
  chunk: ptr GStringChunk
): void {.cdecl, importc: "g_string_chunk_clear".}

proc g_string_chunk_insert*(
  chunk: ptr GStringChunk, string: cstring
): cstring {.cdecl, importc: "g_string_chunk_insert".}

proc g_string_chunk_insert_len*(
  chunk: ptr GStringChunk, string: cstring, len: gssize
): cstring {.cdecl, importc: "g_string_chunk_insert_len".}

proc g_string_chunk_insert_const*(
  chunk: ptr GStringChunk, string: cstring
): cstring {.cdecl, importc: "g_string_chunk_insert_const".}

proc g_strv_builder_new*(): ptr GStrvBuilder {.cdecl, importc: "g_strv_builder_new".}
proc g_strv_builder_unref*(
  builder: ptr GStrvBuilder
): void {.cdecl, importc: "g_strv_builder_unref".}

proc g_strv_builder_unref_to_strv*(
  builder: ptr GStrvBuilder
): GStrv {.cdecl, importc: "g_strv_builder_unref_to_strv".}

proc g_strv_builder_ref*(
  builder: ptr GStrvBuilder
): ptr GStrvBuilder {.cdecl, importc: "g_strv_builder_ref".}

proc g_strv_builder_add*(
  builder: ptr GStrvBuilder, value: cstring
): void {.cdecl, importc: "g_strv_builder_add".}

proc g_strv_builder_addv*(
  builder: ptr GStrvBuilder, value: ptr cstring
): void {.cdecl, importc: "g_strv_builder_addv".}

proc g_strv_builder_add_many*(
  builder: ptr GStrvBuilder
): void {.cdecl, varargs, importc: "g_strv_builder_add_many".}

proc g_strv_builder_take*(
  builder: ptr GStrvBuilder, value: cstring
): void {.cdecl, importc: "g_strv_builder_take".}

proc g_strv_builder_end*(
  builder: ptr GStrvBuilder
): GStrv {.cdecl, importc: "g_strv_builder_end".}

proc g_strcmp0*(str1: cstring, str2: cstring): cint {.cdecl, importc: "g_strcmp0".}
proc g_test_minimized_result*(
  minimized_quantity: cdouble, format: cstring
): void {.cdecl, varargs, importc: "g_test_minimized_result".}

proc g_test_maximized_result*(
  maximized_quantity: cdouble, format: cstring
): void {.cdecl, varargs, importc: "g_test_maximized_result".}

proc g_test_init*(
  argc: ptr cint, argv: ptr ptr cstring
): void {.cdecl, varargs, importc: "g_test_init".}

proc g_test_subprocess*(): gboolean {.cdecl, importc: "g_test_subprocess".}
proc g_test_run*(): cint {.cdecl, importc: "g_test_run".}
proc g_test_add_func*(
  testpath: cstring, test_func: GTestFunc
): void {.cdecl, importc: "g_test_add_func".}

proc g_test_add_data_func*(
  testpath: cstring, test_data: gconstpointer, test_func: GTestDataFunc
): void {.cdecl, importc: "g_test_add_data_func".}

proc g_test_add_data_func_full*(
  testpath: cstring,
  test_data: gpointer,
  test_func: GTestDataFunc,
  data_free_func: GDestroyNotify,
): void {.cdecl, importc: "g_test_add_data_func_full".}

proc g_test_get_path*(): cstring {.cdecl, importc: "g_test_get_path".}
proc g_test_fail*(): void {.cdecl, importc: "g_test_fail".}
proc g_test_fail_printf*(
  format: cstring
): void {.cdecl, varargs, importc: "g_test_fail_printf".}

proc g_test_incomplete*(msg: cstring): void {.cdecl, importc: "g_test_incomplete".}
proc g_test_incomplete_printf*(
  format: cstring
): void {.cdecl, varargs, importc: "g_test_incomplete_printf".}

proc g_test_skip*(msg: cstring): void {.cdecl, importc: "g_test_skip".}
proc g_test_skip_printf*(
  format: cstring
): void {.cdecl, varargs, importc: "g_test_skip_printf".}

proc g_test_failed*(): gboolean {.cdecl, importc: "g_test_failed".}
proc g_test_set_nonfatal_assertions*(): void {.
  cdecl, importc: "g_test_set_nonfatal_assertions"
.}

proc g_test_disable_crash_reporting*(): void {.
  cdecl, importc: "g_test_disable_crash_reporting"
.}

proc g_test_message*(
  format: cstring
): void {.cdecl, varargs, importc: "g_test_message".}

proc g_test_bug_base*(uri_pattern: cstring): void {.cdecl, importc: "g_test_bug_base".}
proc g_test_bug*(bug_uri_snippet: cstring): void {.cdecl, importc: "g_test_bug".}
proc g_test_summary*(summary: cstring): void {.cdecl, importc: "g_test_summary".}
proc g_test_timer_start*(): void {.cdecl, importc: "g_test_timer_start".}
proc g_test_timer_elapsed*(): cdouble {.cdecl, importc: "g_test_timer_elapsed".}
proc g_test_timer_last*(): cdouble {.cdecl, importc: "g_test_timer_last".}
proc g_test_queue_free*(
  gfree_pointer: gpointer
): void {.cdecl, importc: "g_test_queue_free".}

proc g_test_queue_destroy*(
  destroy_func: GDestroyNotify, destroy_data: gpointer
): void {.cdecl, importc: "g_test_queue_destroy".}

proc g_test_trap_fork*(
  usec_timeout: guint64, test_trap_flags: GTestTrapFlags
): gboolean {.cdecl, importc: "g_test_trap_fork".}

proc g_test_trap_subprocess*(
  test_path: cstring, usec_timeout: guint64, test_flags: GTestSubprocessFlags
): void {.cdecl, importc: "g_test_trap_subprocess".}

proc g_test_trap_subprocess_with_envp*(
  test_path: cstring,
  envp: ptr cstring,
  usec_timeout: guint64,
  test_flags: GTestSubprocessFlags,
): void {.cdecl, importc: "g_test_trap_subprocess_with_envp".}

proc g_test_trap_has_passed*(): gboolean {.cdecl, importc: "g_test_trap_has_passed".}
proc g_test_trap_reached_timeout*(): gboolean {.
  cdecl, importc: "g_test_trap_reached_timeout"
.}

proc g_test_rand_int*(): gint32 {.cdecl, importc: "g_test_rand_int".}
proc g_test_rand_int_range*(
  begin: gint32, end_arg: gint32
): gint32 {.cdecl, importc: "g_test_rand_int_range".}

proc g_test_rand_double*(): cdouble {.cdecl, importc: "g_test_rand_double".}
proc g_test_rand_double_range*(
  range_start: cdouble, range_end: cdouble
): cdouble {.cdecl, importc: "g_test_rand_double_range".}

proc g_test_create_case*(
  test_name: cstring,
  data_size: gsize,
  test_data: gconstpointer,
  data_setup: GTestFixtureFunc,
  data_test: GTestFixtureFunc,
  data_teardown: GTestFixtureFunc,
): ptr GTestCase {.cdecl, importc: "g_test_create_case".}

proc g_test_create_suite*(
  suite_name: cstring
): ptr GTestSuite {.cdecl, importc: "g_test_create_suite".}

proc g_test_get_root*(): ptr GTestSuite {.cdecl, importc: "g_test_get_root".}
proc g_test_suite_add*(
  suite: ptr GTestSuite, test_case: ptr GTestCase
): void {.cdecl, importc: "g_test_suite_add".}

proc g_test_suite_add_suite*(
  suite: ptr GTestSuite, nestedsuite: ptr GTestSuite
): void {.cdecl, importc: "g_test_suite_add_suite".}

proc g_test_run_suite*(
  suite: ptr GTestSuite
): cint {.cdecl, importc: "g_test_run_suite".}

proc g_test_case_free*(
  test_case: ptr GTestCase
): void {.cdecl, importc: "g_test_case_free".}

proc g_test_suite_free*(
  suite: ptr GTestSuite
): void {.cdecl, importc: "g_test_suite_free".}

proc g_test_trap_assertions*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  assertion_flags: guint64,
  pattern: cstring,
): void {.cdecl, importc: "g_test_trap_assertions".}

proc g_assertion_message*(
  domain: cstring, file: cstring, line: cint, func_arg: cstring, message: cstring
): void {.cdecl, importc: "g_assertion_message".}

proc g_assertion_message_expr*(
  domain: cstring, file: cstring, line: cint, func_arg: cstring, expr: cstring
): void {.cdecl, importc: "g_assertion_message_expr".}

proc g_assertion_message_cmpstr*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  expr: cstring,
  arg1: cstring,
  cmp: cstring,
  arg2: cstring,
): void {.cdecl, importc: "g_assertion_message_cmpstr".}

proc g_assertion_message_cmpstrv*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  expr: cstring,
  arg1: ptr cstring,
  arg2: ptr cstring,
  first_wrong_idx: gsize,
): void {.cdecl, importc: "g_assertion_message_cmpstrv".}

proc g_assertion_message_cmpint*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  expr: cstring,
  arg1: guint64,
  cmp: cstring,
  arg2: guint64,
  numtype: cschar,
): void {.cdecl, importc: "g_assertion_message_cmpint".}

proc g_assertion_message_cmpnum*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  expr: cstring,
  arg1: clongdouble,
  cmp: cstring,
  arg2: clongdouble,
  numtype: cschar,
): void {.cdecl, importc: "g_assertion_message_cmpnum".}

proc g_assertion_message_error*(
  domain: cstring,
  file: cstring,
  line: cint,
  func_arg: cstring,
  expr: cstring,
  error: ptr GError,
  error_domain: GQuark,
  error_code: cint,
): void {.cdecl, importc: "g_assertion_message_error".}

proc g_test_add_vtable*(
  testpath: cstring,
  data_size: gsize,
  test_data: gconstpointer,
  data_setup: GTestFixtureFunc,
  data_test: GTestFixtureFunc,
  data_teardown: GTestFixtureFunc,
): void {.cdecl, importc: "g_test_add_vtable".}

var g_test_config_vars* {.importc: "g_test_config_vars".}: ptr GTestConfig
proc g_test_log_type_name*(
  log_type: GTestLogType
): cstring {.cdecl, importc: "g_test_log_type_name".}

proc g_test_log_buffer_new*(): ptr GTestLogBuffer {.
  cdecl, importc: "g_test_log_buffer_new"
.}

proc g_test_log_buffer_free*(
  tbuffer: ptr GTestLogBuffer
): void {.cdecl, importc: "g_test_log_buffer_free".}

proc g_test_log_buffer_push*(
  tbuffer: ptr GTestLogBuffer, n_bytes: guint, bytes: ptr guint8
): void {.cdecl, importc: "g_test_log_buffer_push".}

proc g_test_log_buffer_pop*(
  tbuffer: ptr GTestLogBuffer
): ptr GTestLogMsg {.cdecl, importc: "g_test_log_buffer_pop".}

proc g_test_log_msg_free*(
  tmsg: ptr GTestLogMsg
): void {.cdecl, importc: "g_test_log_msg_free".}

proc g_test_log_set_fatal_handler*(
  log_func: GTestLogFatalFunc, user_data: gpointer
): void {.cdecl, importc: "g_test_log_set_fatal_handler".}

proc g_test_expect_message*(
  log_domain: cstring, log_level: GLogLevelFlags, pattern: cstring
): void {.cdecl, importc: "g_test_expect_message".}

proc g_test_assert_expected_messages_internal*(
  domain: cstring, file: cstring, line: cint, func_arg: cstring
): void {.cdecl, importc: "g_test_assert_expected_messages_internal".}

proc g_test_build_filename*(
  file_type: GTestFileType, first_path: cstring
): cstring {.cdecl, varargs, importc: "g_test_build_filename".}

proc g_test_get_dir*(
  file_type: GTestFileType
): cstring {.cdecl, importc: "g_test_get_dir".}

proc g_test_get_filename*(
  file_type: GTestFileType, first_path: cstring
): cstring {.cdecl, varargs, importc: "g_test_get_filename".}

proc g_thread_pool_new*(
  func_arg: GFunc,
  user_data: gpointer,
  max_threads: gint,
  exclusive: gboolean,
  error: ptr ptr GError,
): ptr GThreadPool {.cdecl, importc: "g_thread_pool_new".}

proc g_thread_pool_new_full*(
  func_arg: GFunc,
  user_data: gpointer,
  item_free_func: GDestroyNotify,
  max_threads: gint,
  exclusive: gboolean,
  error: ptr ptr GError,
): ptr GThreadPool {.cdecl, importc: "g_thread_pool_new_full".}

proc g_thread_pool_free*(
  pool: ptr GThreadPool, immediate: gboolean, wait_private: gboolean
): void {.cdecl, importc: "g_thread_pool_free".}

proc g_thread_pool_push*(
  pool: ptr GThreadPool, data: gpointer, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_thread_pool_push".}

proc g_thread_pool_unprocessed*(
  pool: ptr GThreadPool
): guint {.cdecl, importc: "g_thread_pool_unprocessed".}

proc g_thread_pool_set_sort_function*(
  pool: ptr GThreadPool, func_arg: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_thread_pool_set_sort_function".}

proc g_thread_pool_move_to_front*(
  pool: ptr GThreadPool, data: gpointer
): gboolean {.cdecl, importc: "g_thread_pool_move_to_front".}

proc g_thread_pool_set_max_threads*(
  pool: ptr GThreadPool, max_threads: gint, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_thread_pool_set_max_threads".}

proc g_thread_pool_get_max_threads*(
  pool: ptr GThreadPool
): gint {.cdecl, importc: "g_thread_pool_get_max_threads".}

proc g_thread_pool_get_num_threads*(
  pool: ptr GThreadPool
): guint {.cdecl, importc: "g_thread_pool_get_num_threads".}

proc g_thread_pool_set_max_unused_threads*(
  max_threads: gint
): void {.cdecl, importc: "g_thread_pool_set_max_unused_threads".}

proc g_thread_pool_get_max_unused_threads*(): gint {.
  cdecl, importc: "g_thread_pool_get_max_unused_threads"
.}

proc g_thread_pool_get_num_unused_threads*(): guint {.
  cdecl, importc: "g_thread_pool_get_num_unused_threads"
.}

proc g_thread_pool_stop_unused_threads*(): void {.
  cdecl, importc: "g_thread_pool_stop_unused_threads"
.}

proc g_thread_pool_set_max_idle_time*(
  interval: guint
): void {.cdecl, importc: "g_thread_pool_set_max_idle_time".}

proc g_thread_pool_get_max_idle_time*(): guint {.
  cdecl, importc: "g_thread_pool_get_max_idle_time"
.}

proc g_timer_new*(): ptr GTimer {.cdecl, importc: "g_timer_new".}
proc g_timer_destroy*(timer: ptr GTimer): void {.cdecl, importc: "g_timer_destroy".}
proc g_timer_start*(timer: ptr GTimer): void {.cdecl, importc: "g_timer_start".}
proc g_timer_stop*(timer: ptr GTimer): void {.cdecl, importc: "g_timer_stop".}
proc g_timer_reset*(timer: ptr GTimer): void {.cdecl, importc: "g_timer_reset".}
proc g_timer_continue*(timer: ptr GTimer): void {.cdecl, importc: "g_timer_continue".}
proc g_timer_elapsed*(
  timer: ptr GTimer, microseconds: ptr gulong
): gdouble {.cdecl, importc: "g_timer_elapsed".}

proc g_timer_is_active*(
  timer: ptr GTimer
): gboolean {.cdecl, importc: "g_timer_is_active".}

proc g_usleep*(microseconds: gulong): void {.cdecl, importc: "g_usleep".}
proc g_time_val_add*(
  time_private: ptr GTimeVal, microseconds: glong
): void {.cdecl, importc: "g_time_val_add".}

proc g_time_val_from_iso8601*(
  iso_date: cstring, time_private: ptr GTimeVal
): gboolean {.cdecl, importc: "g_time_val_from_iso8601".}

proc g_time_val_to_iso8601*(
  time_private: ptr GTimeVal
): cstring {.cdecl, importc: "g_time_val_to_iso8601".}

proc g_trash_stack_push*(
  stack_p: ptr ptr GTrashStack, data_p: gpointer
): void {.cdecl, importc: "g_trash_stack_push".}

proc g_trash_stack_pop*(
  stack_p: ptr ptr GTrashStack
): gpointer {.cdecl, importc: "g_trash_stack_pop".}

proc g_trash_stack_peek*(
  stack_p: ptr ptr GTrashStack
): gpointer {.cdecl, importc: "g_trash_stack_peek".}

proc g_trash_stack_height*(
  stack_p: ptr ptr GTrashStack
): guint {.cdecl, importc: "g_trash_stack_height".}

proc g_tree_new*(
  key_compare_func: GCompareFunc
): ptr GTree {.cdecl, importc: "g_tree_new".}

proc g_tree_new_with_data*(
  key_compare_func: GCompareDataFunc, key_compare_data: gpointer
): ptr GTree {.cdecl, importc: "g_tree_new_with_data".}

proc g_tree_new_full*(
  key_compare_func: GCompareDataFunc,
  key_compare_data: gpointer,
  key_destroy_func: GDestroyNotify,
  value_destroy_func: GDestroyNotify,
): ptr GTree {.cdecl, importc: "g_tree_new_full".}

proc g_tree_node_first*(
  tree: ptr GTree
): ptr GTreeNode {.cdecl, importc: "g_tree_node_first".}

proc g_tree_node_last*(
  tree: ptr GTree
): ptr GTreeNode {.cdecl, importc: "g_tree_node_last".}

proc g_tree_node_previous*(
  node: ptr GTreeNode
): ptr GTreeNode {.cdecl, importc: "g_tree_node_previous".}

proc g_tree_node_next*(
  node: ptr GTreeNode
): ptr GTreeNode {.cdecl, importc: "g_tree_node_next".}

proc g_tree_ref*(tree: ptr GTree): ptr GTree {.cdecl, importc: "g_tree_ref".}
proc g_tree_unref*(tree: ptr GTree): void {.cdecl, importc: "g_tree_unref".}
proc g_tree_destroy*(tree: ptr GTree): void {.cdecl, importc: "g_tree_destroy".}
proc g_tree_insert_node*(
  tree: ptr GTree, key: gpointer, value: gpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_insert_node".}

proc g_tree_insert*(
  tree: ptr GTree, key: gpointer, value: gpointer
): void {.cdecl, importc: "g_tree_insert".}

proc g_tree_replace_node*(
  tree: ptr GTree, key: gpointer, value: gpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_replace_node".}

proc g_tree_replace*(
  tree: ptr GTree, key: gpointer, value: gpointer
): void {.cdecl, importc: "g_tree_replace".}

proc g_tree_remove*(
  tree: ptr GTree, key: gconstpointer
): gboolean {.cdecl, importc: "g_tree_remove".}

proc g_tree_remove_all*(tree: ptr GTree): void {.cdecl, importc: "g_tree_remove_all".}
proc g_tree_steal*(
  tree: ptr GTree, key: gconstpointer
): gboolean {.cdecl, importc: "g_tree_steal".}

proc g_tree_node_key*(
  node: ptr GTreeNode
): gpointer {.cdecl, importc: "g_tree_node_key".}

proc g_tree_node_value*(
  node: ptr GTreeNode
): gpointer {.cdecl, importc: "g_tree_node_value".}

proc g_tree_lookup_node*(
  tree: ptr GTree, key: gconstpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_lookup_node".}

proc g_tree_lookup*(
  tree: ptr GTree, key: gconstpointer
): gpointer {.cdecl, importc: "g_tree_lookup".}

proc g_tree_lookup_extended*(
  tree: ptr GTree,
  lookup_key: gconstpointer,
  orig_key: ptr gpointer,
  value: ptr gpointer,
): gboolean {.cdecl, importc: "g_tree_lookup_extended".}

proc g_tree_foreach*(
  tree: ptr GTree, func_arg: GTraverseFunc, user_data: gpointer
): void {.cdecl, importc: "g_tree_foreach".}

proc g_tree_foreach_node*(
  tree: ptr GTree, func_arg: GTraverseNodeFunc, user_data: gpointer
): void {.cdecl, importc: "g_tree_foreach_node".}

proc g_tree_traverse*(
  tree: ptr GTree,
  traverse_func: GTraverseFunc,
  traverse_type: GTraverseType,
  user_data: gpointer,
): void {.cdecl, importc: "g_tree_traverse".}

proc g_tree_search_node*(
  tree: ptr GTree, search_func: GCompareFunc, user_data: gconstpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_search_node".}

proc g_tree_search*(
  tree: ptr GTree, search_func: GCompareFunc, user_data: gconstpointer
): gpointer {.cdecl, importc: "g_tree_search".}

proc g_tree_lower_bound*(
  tree: ptr GTree, key: gconstpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_lower_bound".}

proc g_tree_upper_bound*(
  tree: ptr GTree, key: gconstpointer
): ptr GTreeNode {.cdecl, importc: "g_tree_upper_bound".}

proc g_tree_height*(tree: ptr GTree): gint {.cdecl, importc: "g_tree_height".}
proc g_tree_nnodes*(tree: ptr GTree): gint {.cdecl, importc: "g_tree_nnodes".}
proc g_uri_ref*(uri: ptr GUri): ptr GUri {.cdecl, importc: "g_uri_ref".}
proc g_uri_unref*(uri: ptr GUri): void {.cdecl, importc: "g_uri_unref".}
proc g_uri_split*(
  uri_ref: cstring,
  flags: GUriFlags,
  scheme: ptr cstring,
  userinfo: ptr cstring,
  host: ptr cstring,
  port: ptr gint,
  path: ptr cstring,
  query: ptr cstring,
  fragment: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_uri_split".}

proc g_uri_split_with_user*(
  uri_ref: cstring,
  flags: GUriFlags,
  scheme: ptr cstring,
  user: ptr cstring,
  password: ptr cstring,
  auth_params: ptr cstring,
  host: ptr cstring,
  port: ptr gint,
  path: ptr cstring,
  query: ptr cstring,
  fragment: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_uri_split_with_user".}

proc g_uri_split_network*(
  uri_string: cstring,
  flags: GUriFlags,
  scheme: ptr cstring,
  host: ptr cstring,
  port: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_uri_split_network".}

proc g_uri_is_valid*(
  uri_string: cstring, flags: GUriFlags, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_uri_is_valid".}

proc g_uri_join*(
  flags: GUriFlags,
  scheme: cstring,
  userinfo: cstring,
  host: cstring,
  port: gint,
  path: cstring,
  query: cstring,
  fragment: cstring,
): cstring {.cdecl, importc: "g_uri_join".}

proc g_uri_join_with_user*(
  flags: GUriFlags,
  scheme: cstring,
  user: cstring,
  password: cstring,
  auth_params: cstring,
  host: cstring,
  port: gint,
  path: cstring,
  query: cstring,
  fragment: cstring,
): cstring {.cdecl, importc: "g_uri_join_with_user".}

proc g_uri_parse*(
  uri_string: cstring, flags: GUriFlags, error: ptr ptr GError
): ptr GUri {.cdecl, importc: "g_uri_parse".}

proc g_uri_parse_relative*(
  base_uri: ptr GUri, uri_ref: cstring, flags: GUriFlags, error: ptr ptr GError
): ptr GUri {.cdecl, importc: "g_uri_parse_relative".}

proc g_uri_resolve_relative*(
  base_uri_string: cstring, uri_ref: cstring, flags: GUriFlags, error: ptr ptr GError
): cstring {.cdecl, importc: "g_uri_resolve_relative".}

proc g_uri_build*(
  flags: GUriFlags,
  scheme: cstring,
  userinfo: cstring,
  host: cstring,
  port: gint,
  path: cstring,
  query: cstring,
  fragment: cstring,
): ptr GUri {.cdecl, importc: "g_uri_build".}

proc g_uri_build_with_user*(
  flags: GUriFlags,
  scheme: cstring,
  user: cstring,
  password: cstring,
  auth_params: cstring,
  host: cstring,
  port: gint,
  path: cstring,
  query: cstring,
  fragment: cstring,
): ptr GUri {.cdecl, importc: "g_uri_build_with_user".}

proc g_uri_to_string*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_to_string".}
proc g_uri_to_string_partial*(
  uri: ptr GUri, flags: GUriHideFlags
): cstring {.cdecl, importc: "g_uri_to_string_partial".}

proc g_uri_get_scheme*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_get_scheme".}
proc g_uri_get_userinfo*(
  uri: ptr GUri
): cstring {.cdecl, importc: "g_uri_get_userinfo".}

proc g_uri_get_user*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_get_user".}
proc g_uri_get_password*(
  uri: ptr GUri
): cstring {.cdecl, importc: "g_uri_get_password".}

proc g_uri_get_auth_params*(
  uri: ptr GUri
): cstring {.cdecl, importc: "g_uri_get_auth_params".}

proc g_uri_get_host*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_get_host".}
proc g_uri_get_port*(uri: ptr GUri): gint {.cdecl, importc: "g_uri_get_port".}
proc g_uri_get_path*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_get_path".}
proc g_uri_get_query*(uri: ptr GUri): cstring {.cdecl, importc: "g_uri_get_query".}
proc g_uri_get_fragment*(
  uri: ptr GUri
): cstring {.cdecl, importc: "g_uri_get_fragment".}

proc g_uri_get_flags*(uri: ptr GUri): GUriFlags {.cdecl, importc: "g_uri_get_flags".}
proc g_uri_parse_params*(
  params: cstring,
  length: gssize,
  separators: cstring,
  flags: GUriParamsFlags,
  error: ptr ptr GError,
): ptr GHashTable {.cdecl, importc: "g_uri_parse_params".}

proc g_uri_params_iter_init*(
  iter: ptr GUriParamsIter,
  params: cstring,
  length: gssize,
  separators: cstring,
  flags: GUriParamsFlags,
): void {.cdecl, importc: "g_uri_params_iter_init".}

proc g_uri_params_iter_next*(
  iter: ptr GUriParamsIter,
  attribute: ptr cstring,
  value: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_uri_params_iter_next".}

proc g_uri_error_quark*(): GQuark {.cdecl, importc: "g_uri_error_quark".}
proc g_uri_unescape_string*(
  escaped_string: cstring, illegal_characters: cstring
): cstring {.cdecl, importc: "g_uri_unescape_string".}

proc g_uri_unescape_segment*(
  escaped_string: cstring, escaped_string_end: cstring, illegal_characters: cstring
): cstring {.cdecl, importc: "g_uri_unescape_segment".}

proc g_uri_parse_scheme*(uri: cstring): cstring {.cdecl, importc: "g_uri_parse_scheme".}
proc g_uri_peek_scheme*(uri: cstring): cstring {.cdecl, importc: "g_uri_peek_scheme".}
proc g_uri_escape_string*(
  unescaped: cstring, reserved_chars_allowed: cstring, allow_utf8: gboolean
): cstring {.cdecl, importc: "g_uri_escape_string".}

proc g_uri_unescape_bytes*(
  escaped_string: cstring,
  length: gssize,
  illegal_characters: cstring,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_uri_unescape_bytes".}

proc g_uri_escape_bytes*(
  unescaped: ptr guint8, length: gsize, reserved_chars_allowed: cstring
): cstring {.cdecl, importc: "g_uri_escape_bytes".}

proc g_uuid_string_is_valid*(
  str: cstring
): gboolean {.cdecl, importc: "g_uuid_string_is_valid".}

proc g_uuid_string_random*(): cstring {.cdecl, importc: "g_uuid_string_random".}
var glib_major_version* {.importc: "glib_major_version".}: guint
var glib_minor_version* {.importc: "glib_minor_version".}: guint
var glib_micro_version* {.importc: "glib_micro_version".}: guint
var glib_interface_age* {.importc: "glib_interface_age".}: guint
var glib_binary_age* {.importc: "glib_binary_age".}: guint
proc glib_check_version*(
  required_major: guint, required_minor: guint, required_micro: guint
): cstring {.cdecl, importc: "glib_check_version".}

proc g_mem_chunk_new*(
  name: cstring, atom_size: gint, area_size: gsize, type_arg: gint
): ptr GMemChunk {.cdecl, importc: "g_mem_chunk_new".}

proc g_mem_chunk_destroy*(
  mem_chunk: ptr GMemChunk
): void {.cdecl, importc: "g_mem_chunk_destroy".}

proc g_mem_chunk_alloc*(
  mem_chunk: ptr GMemChunk
): gpointer {.cdecl, importc: "g_mem_chunk_alloc".}

proc g_mem_chunk_alloc0*(
  mem_chunk: ptr GMemChunk
): gpointer {.cdecl, importc: "g_mem_chunk_alloc0".}

proc g_mem_chunk_free*(
  mem_chunk: ptr GMemChunk, mem: gpointer
): void {.cdecl, importc: "g_mem_chunk_free".}

proc g_mem_chunk_clean*(
  mem_chunk: ptr GMemChunk
): void {.cdecl, importc: "g_mem_chunk_clean".}

proc g_mem_chunk_reset*(
  mem_chunk: ptr GMemChunk
): void {.cdecl, importc: "g_mem_chunk_reset".}

proc g_mem_chunk_print*(
  mem_chunk: ptr GMemChunk
): void {.cdecl, importc: "g_mem_chunk_print".}

proc g_mem_chunk_info*(): void {.cdecl, importc: "g_mem_chunk_info".}
proc g_blow_chunks*(): void {.cdecl, importc: "g_blow_chunks".}
proc g_allocator_new*(
  name: cstring, n_preallocs: guint
): ptr GAllocator {.cdecl, importc: "g_allocator_new".}

proc g_allocator_free*(
  allocator: ptr GAllocator
): void {.cdecl, importc: "g_allocator_free".}

proc g_list_push_allocator*(
  allocator: ptr GAllocator
): void {.cdecl, importc: "g_list_push_allocator".}

proc g_list_pop_allocator*(): void {.cdecl, importc: "g_list_pop_allocator".}
proc g_slist_push_allocator*(
  allocator: ptr GAllocator
): void {.cdecl, importc: "g_slist_push_allocator".}

proc g_slist_pop_allocator*(): void {.cdecl, importc: "g_slist_pop_allocator".}
proc g_node_push_allocator*(
  allocator: ptr GAllocator
): void {.cdecl, importc: "g_node_push_allocator".}

proc g_node_pop_allocator*(): void {.cdecl, importc: "g_node_pop_allocator".}
proc g_cache_new*(
  value_new_func: GCacheNewFunc,
  value_destroy_func: GCacheDestroyFunc,
  key_dup_func: GCacheDupFunc,
  key_destroy_func: GCacheDestroyFunc,
  hash_key_func: GHashFunc,
  hash_value_func: GHashFunc,
  key_equal_func: GEqualFunc,
): ptr GCache {.cdecl, importc: "g_cache_new".}

proc g_cache_destroy*(cache: ptr GCache): void {.cdecl, importc: "g_cache_destroy".}
proc g_cache_insert*(
  cache: ptr GCache, key: gpointer
): gpointer {.cdecl, importc: "g_cache_insert".}

proc g_cache_remove*(
  cache: ptr GCache, value: gconstpointer
): void {.cdecl, importc: "g_cache_remove".}

proc g_cache_key_foreach*(
  cache: ptr GCache, func_arg: GHFunc, user_data: gpointer
): void {.cdecl, importc: "g_cache_key_foreach".}

proc g_cache_value_foreach*(
  cache: ptr GCache, func_arg: GHFunc, user_data: gpointer
): void {.cdecl, importc: "g_cache_value_foreach".}

proc g_completion_new*(
  func_arg: GCompletionFunc
): ptr GCompletion {.cdecl, importc: "g_completion_new".}

proc g_completion_add_items*(
  cmp: ptr GCompletion, items: ptr GList
): void {.cdecl, importc: "g_completion_add_items".}

proc g_completion_remove_items*(
  cmp: ptr GCompletion, items: ptr GList
): void {.cdecl, importc: "g_completion_remove_items".}

proc g_completion_clear_items*(
  cmp: ptr GCompletion
): void {.cdecl, importc: "g_completion_clear_items".}

proc g_completion_complete*(
  cmp: ptr GCompletion, prefix: cstring, new_prefix: ptr cstring
): ptr GList {.cdecl, importc: "g_completion_complete".}

proc g_completion_complete_utf8*(
  cmp: ptr GCompletion, prefix: cstring, new_prefix: ptr cstring
): ptr GList {.cdecl, importc: "g_completion_complete_utf8".}

proc g_completion_set_compare*(
  cmp: ptr GCompletion, strncmp_func: GCompletionStrncmpFunc
): void {.cdecl, importc: "g_completion_set_compare".}

proc g_completion_free*(
  cmp: ptr GCompletion
): void {.cdecl, importc: "g_completion_free".}

proc g_relation_new*(fields: gint): ptr GRelation {.cdecl, importc: "g_relation_new".}
proc g_relation_destroy*(
  relation: ptr GRelation
): void {.cdecl, importc: "g_relation_destroy".}

proc g_relation_index*(
  relation: ptr GRelation, field: gint, hash_func: GHashFunc, key_equal_func: GEqualFunc
): void {.cdecl, importc: "g_relation_index".}

proc g_relation_insert*(
  relation: ptr GRelation
): void {.cdecl, varargs, importc: "g_relation_insert".}

proc g_relation_delete*(
  relation: ptr GRelation, key: gconstpointer, field: gint
): gint {.cdecl, importc: "g_relation_delete".}

proc g_relation_select*(
  relation: ptr GRelation, key: gconstpointer, field: gint
): ptr GTuples {.cdecl, importc: "g_relation_select".}

proc g_relation_count*(
  relation: ptr GRelation, key: gconstpointer, field: gint
): gint {.cdecl, importc: "g_relation_count".}

proc g_relation_exists*(
  relation: ptr GRelation
): gboolean {.cdecl, varargs, importc: "g_relation_exists".}

proc g_relation_print*(
  relation: ptr GRelation
): void {.cdecl, importc: "g_relation_print".}

proc g_tuples_destroy*(tuples: ptr GTuples): void {.cdecl, importc: "g_tuples_destroy".}
proc g_tuples_index*(
  tuples: ptr GTuples, index_private: gint, field: gint
): gpointer {.cdecl, importc: "g_tuples_index".}

var g_thread_functions_for_glib_use* {.importc: "g_thread_functions_for_glib_use".}:
  GThreadFunctions
var g_thread_use_default_impl* {.importc: "g_thread_use_default_impl".}: gboolean
var g_thread_gettime* {.importc: "g_thread_gettime".}: proc(): guint64 {.cdecl.}
proc g_thread_create*(
  func_arg: GThreadFunc, data: gpointer, joinable: gboolean, error: ptr ptr GError
): ptr GThread {.cdecl, importc: "g_thread_create".}

proc g_thread_create_full*(
  func_arg: GThreadFunc,
  data: gpointer,
  stack_size: gulong,
  joinable: gboolean,
  bound: gboolean,
  priority: GThreadPriority,
  error: ptr ptr GError,
): ptr GThread {.cdecl, importc: "g_thread_create_full".}

proc g_thread_set_priority*(
  thread: ptr GThread, priority: GThreadPriority
): void {.cdecl, importc: "g_thread_set_priority".}

proc g_thread_foreach*(
  thread_func: GFunc, user_data: gpointer
): void {.cdecl, importc: "g_thread_foreach".}

proc g_static_mutex_init*(
  mutex: ptr GStaticMutex
): void {.cdecl, importc: "g_static_mutex_init".}

proc g_static_mutex_free*(
  mutex: ptr GStaticMutex
): void {.cdecl, importc: "g_static_mutex_free".}

proc g_static_mutex_get_mutex_impl*(
  mutex: ptr GStaticMutex
): ptr GMutex {.cdecl, importc: "g_static_mutex_get_mutex_impl".}

proc g_static_rec_mutex_init*(
  mutex: ptr GStaticRecMutex
): void {.cdecl, importc: "g_static_rec_mutex_init".}

proc g_static_rec_mutex_lock*(
  mutex: ptr GStaticRecMutex
): void {.cdecl, importc: "g_static_rec_mutex_lock".}

proc g_static_rec_mutex_trylock*(
  mutex: ptr GStaticRecMutex
): gboolean {.cdecl, importc: "g_static_rec_mutex_trylock".}

proc g_static_rec_mutex_unlock*(
  mutex: ptr GStaticRecMutex
): void {.cdecl, importc: "g_static_rec_mutex_unlock".}

proc g_static_rec_mutex_lock_full*(
  mutex: ptr GStaticRecMutex, depth: guint
): void {.cdecl, importc: "g_static_rec_mutex_lock_full".}

proc g_static_rec_mutex_unlock_full*(
  mutex: ptr GStaticRecMutex
): guint {.cdecl, importc: "g_static_rec_mutex_unlock_full".}

proc g_static_rec_mutex_free*(
  mutex: ptr GStaticRecMutex
): void {.cdecl, importc: "g_static_rec_mutex_free".}

proc g_static_rw_lock_init*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_init".}

proc g_static_rw_lock_reader_lock*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_reader_lock".}

proc g_static_rw_lock_reader_trylock*(
  lock: ptr GStaticRWLock
): gboolean {.cdecl, importc: "g_static_rw_lock_reader_trylock".}

proc g_static_rw_lock_reader_unlock*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_reader_unlock".}

proc g_static_rw_lock_writer_lock*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_writer_lock".}

proc g_static_rw_lock_writer_trylock*(
  lock: ptr GStaticRWLock
): gboolean {.cdecl, importc: "g_static_rw_lock_writer_trylock".}

proc g_static_rw_lock_writer_unlock*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_writer_unlock".}

proc g_static_rw_lock_free*(
  lock: ptr GStaticRWLock
): void {.cdecl, importc: "g_static_rw_lock_free".}

proc g_private_new*(
  notify: GDestroyNotify
): ptr GPrivate {.cdecl, importc: "g_private_new".}

proc g_static_private_init*(
  private_key: ptr GStaticPrivate
): void {.cdecl, importc: "g_static_private_init".}

proc g_static_private_get*(
  private_key: ptr GStaticPrivate
): gpointer {.cdecl, importc: "g_static_private_get".}

proc g_static_private_set*(
  private_key: ptr GStaticPrivate, data: gpointer, notify: GDestroyNotify
): void {.cdecl, importc: "g_static_private_set".}

proc g_static_private_free*(
  private_key: ptr GStaticPrivate
): void {.cdecl, importc: "g_static_private_free".}

proc g_once_init_enter_impl*(
  location: ptr gsize
): gboolean {.cdecl, importc: "g_once_init_enter_impl".}

proc g_thread_init*(vtable: gpointer): void {.cdecl, importc: "g_thread_init".}
proc g_thread_init_with_errorcheck_mutexes*(
  vtable: gpointer
): void {.cdecl, importc: "g_thread_init_with_errorcheck_mutexes".}

proc g_thread_get_initialized*(): gboolean {.
  cdecl, importc: "g_thread_get_initialized"
.}

var g_threads_got_initialized* {.importc: "g_threads_got_initialized".}: gboolean
proc g_mutex_new*(): ptr GMutex {.cdecl, importc: "g_mutex_new".}
proc g_mutex_free*(mutex: ptr GMutex): void {.cdecl, importc: "g_mutex_free".}
proc g_cond_new*(): ptr GCond {.cdecl, importc: "g_cond_new".}
proc g_cond_free*(cond: ptr GCond): void {.cdecl, importc: "g_cond_free".}
proc g_cond_timed_wait*(
  cond: ptr GCond, mutex: ptr GMutex, abs_time: ptr GTimeVal
): gboolean {.cdecl, importc: "g_cond_timed_wait".}

proc g_type_init*(): void {.cdecl, importc: "g_type_init".}
proc g_type_init_with_debug_flags*(
  debug_flags: GTypeDebugFlags
): void {.cdecl, importc: "g_type_init_with_debug_flags".}

proc g_type_name*(type_arg: GType): cstring {.cdecl, importc: "g_type_name".}
proc g_type_qname*(type_arg: GType): GQuark {.cdecl, importc: "g_type_qname".}
proc g_type_from_name*(name: cstring): GType {.cdecl, importc: "g_type_from_name".}
proc g_type_parent*(type_arg: GType): GType {.cdecl, importc: "g_type_parent".}
proc g_type_depth*(type_arg: GType): guint {.cdecl, importc: "g_type_depth".}
proc g_type_next_base*(
  leaf_type: GType, root_type: GType
): GType {.cdecl, importc: "g_type_next_base".}

proc g_type_is_a*(
  type_arg: GType, is_a_type: GType
): gboolean {.cdecl, importc: "g_type_is_a".}

proc g_type_class_get*(type_arg: GType): gpointer {.cdecl, importc: "g_type_class_get".}
proc g_type_class_ref*(type_arg: GType): gpointer {.cdecl, importc: "g_type_class_ref".}
proc g_type_class_peek*(
  type_arg: GType
): gpointer {.cdecl, importc: "g_type_class_peek".}

proc g_type_class_peek_static*(
  type_arg: GType
): gpointer {.cdecl, importc: "g_type_class_peek_static".}

proc g_type_class_unref*(
  g_class: gpointer
): void {.cdecl, importc: "g_type_class_unref".}

proc g_type_class_peek_parent*(
  g_class: gpointer
): gpointer {.cdecl, importc: "g_type_class_peek_parent".}

proc g_type_interface_peek*(
  instance_class: gpointer, iface_type: GType
): gpointer {.cdecl, importc: "g_type_interface_peek".}

proc g_type_interface_peek_parent*(
  g_iface: gpointer
): gpointer {.cdecl, importc: "g_type_interface_peek_parent".}

proc g_type_default_interface_get*(
  g_type: GType
): gpointer {.cdecl, importc: "g_type_default_interface_get".}

proc g_type_default_interface_ref*(
  g_type: GType
): gpointer {.cdecl, importc: "g_type_default_interface_ref".}

proc g_type_default_interface_peek*(
  g_type: GType
): gpointer {.cdecl, importc: "g_type_default_interface_peek".}

proc g_type_default_interface_unref*(
  g_iface: gpointer
): void {.cdecl, importc: "g_type_default_interface_unref".}

proc g_type_children*(
  type_arg: GType, n_children: ptr guint
): ptr GType {.cdecl, importc: "g_type_children".}

proc g_type_interfaces*(
  type_arg: GType, n_interfaces: ptr guint
): ptr GType {.cdecl, importc: "g_type_interfaces".}

proc g_type_set_qdata*(
  type_arg: GType, quark: GQuark, data: gpointer
): void {.cdecl, importc: "g_type_set_qdata".}

proc g_type_get_qdata*(
  type_arg: GType, quark: GQuark
): gpointer {.cdecl, importc: "g_type_get_qdata".}

proc g_type_query*(
  type_arg: GType, query: ptr GTypeQuery
): void {.cdecl, importc: "g_type_query".}

proc g_type_get_instance_count*(
  type_arg: GType
): cint {.cdecl, importc: "g_type_get_instance_count".}

proc g_type_register_static*(
  parent_type: GType, type_name: cstring, info: ptr GTypeInfo, flags: GTypeFlags
): GType {.cdecl, importc: "g_type_register_static".}

proc g_type_register_static_simple*(
  parent_type: GType,
  type_name: cstring,
  class_size: guint,
  class_init: GClassInitFunc,
  instance_size: guint,
  instance_init: GInstanceInitFunc,
  flags: GTypeFlags,
): GType {.cdecl, importc: "g_type_register_static_simple".}

proc g_type_register_dynamic*(
  parent_type: GType, type_name: cstring, plugin: ptr GTypePlugin, flags: GTypeFlags
): GType {.cdecl, importc: "g_type_register_dynamic".}

proc g_type_register_fundamental*(
  type_id: GType,
  type_name: cstring,
  info: ptr GTypeInfo,
  finfo: ptr GTypeFundamentalInfo,
  flags: GTypeFlags,
): GType {.cdecl, importc: "g_type_register_fundamental".}

proc g_type_add_interface_static*(
  instance_type: GType, interface_type: GType, info: ptr GInterfaceInfo
): void {.cdecl, importc: "g_type_add_interface_static".}

proc g_type_add_interface_dynamic*(
  instance_type: GType, interface_type: GType, plugin: ptr GTypePlugin
): void {.cdecl, importc: "g_type_add_interface_dynamic".}

proc g_type_interface_add_prerequisite*(
  interface_type: GType, prerequisite_type: GType
): void {.cdecl, importc: "g_type_interface_add_prerequisite".}

proc g_type_interface_prerequisites*(
  interface_type: GType, n_prerequisites: ptr guint
): ptr GType {.cdecl, importc: "g_type_interface_prerequisites".}

proc g_type_interface_instantiatable_prerequisite*(
  interface_type: GType
): GType {.cdecl, importc: "g_type_interface_instantiatable_prerequisite".}

proc g_type_class_add_private*(
  g_class: gpointer, private_size: gsize
): void {.cdecl, importc: "g_type_class_add_private".}

proc g_type_add_instance_private*(
  class_type: GType, private_size: gsize
): gint {.cdecl, importc: "g_type_add_instance_private".}

proc g_type_instance_get_private*(
  instance: ptr GTypeInstance, private_type: GType
): gpointer {.cdecl, importc: "g_type_instance_get_private".}

proc g_type_class_adjust_private_offset*(
  g_class: gpointer, private_size_or_offset: ptr gint
): void {.cdecl, importc: "g_type_class_adjust_private_offset".}

proc g_type_add_class_private*(
  class_type: GType, private_size: gsize
): void {.cdecl, importc: "g_type_add_class_private".}

proc g_type_class_get_private*(
  klass: ptr GTypeClass, private_type: GType
): gpointer {.cdecl, importc: "g_type_class_get_private".}

proc g_type_class_get_instance_private_offset*(
  g_class: gpointer
): gint {.cdecl, importc: "g_type_class_get_instance_private_offset".}

proc g_type_ensure*(type_arg: GType): void {.cdecl, importc: "g_type_ensure".}
proc g_type_get_type_registration_serial*(): guint {.
  cdecl, importc: "g_type_get_type_registration_serial"
.}

proc g_type_get_plugin*(
  type_arg: GType
): ptr GTypePlugin {.cdecl, importc: "g_type_get_plugin".}

proc g_type_interface_get_plugin*(
  instance_type: GType, interface_type: GType
): ptr GTypePlugin {.cdecl, importc: "g_type_interface_get_plugin".}

proc g_type_fundamental_next*(): GType {.cdecl, importc: "g_type_fundamental_next".}
proc g_type_fundamental*(type_id: GType): GType {.cdecl, importc: "g_type_fundamental".}
proc g_type_create_instance*(
  type_arg: GType
): ptr GTypeInstance {.cdecl, importc: "g_type_create_instance".}

proc g_type_free_instance*(
  instance: ptr GTypeInstance
): void {.cdecl, importc: "g_type_free_instance".}

proc g_type_add_class_cache_func*(
  cache_data: gpointer, cache_func: GTypeClassCacheFunc
): void {.cdecl, importc: "g_type_add_class_cache_func".}

proc g_type_remove_class_cache_func*(
  cache_data: gpointer, cache_func: GTypeClassCacheFunc
): void {.cdecl, importc: "g_type_remove_class_cache_func".}

proc g_type_class_unref_uncached*(
  g_class: gpointer
): void {.cdecl, importc: "g_type_class_unref_uncached".}

proc g_type_add_interface_check*(
  check_data: gpointer, check_func: GTypeInterfaceCheckFunc
): void {.cdecl, importc: "g_type_add_interface_check".}

proc g_type_remove_interface_check*(
  check_data: gpointer, check_func: GTypeInterfaceCheckFunc
): void {.cdecl, importc: "g_type_remove_interface_check".}

proc g_type_value_table_peek*(
  type_arg: GType
): ptr GTypeValueTable {.cdecl, importc: "g_type_value_table_peek".}

proc g_type_check_instance*(
  instance: ptr GTypeInstance
): gboolean {.cdecl, importc: "g_type_check_instance".}

proc g_type_check_instance_cast*(
  instance: ptr GTypeInstance, iface_type: GType
): ptr GTypeInstance {.cdecl, importc: "g_type_check_instance_cast".}

proc g_type_check_instance_is_a*(
  instance: ptr GTypeInstance, iface_type: GType
): gboolean {.cdecl, importc: "g_type_check_instance_is_a".}

proc g_type_check_instance_is_fundamentally_a*(
  instance: ptr GTypeInstance, fundamental_type: GType
): gboolean {.cdecl, importc: "g_type_check_instance_is_fundamentally_a".}

proc g_type_check_class_cast*(
  g_class: ptr GTypeClass, is_a_type: GType
): ptr GTypeClass {.cdecl, importc: "g_type_check_class_cast".}

proc g_type_check_class_is_a*(
  g_class: ptr GTypeClass, is_a_type: GType
): gboolean {.cdecl, importc: "g_type_check_class_is_a".}

proc g_type_check_is_value_type*(
  type_arg: GType
): gboolean {.cdecl, importc: "g_type_check_is_value_type".}

proc g_type_check_value*(
  value: ptr GValue
): gboolean {.cdecl, importc: "g_type_check_value".}

proc g_type_check_value_holds*(
  value: ptr GValue, type_arg: GType
): gboolean {.cdecl, importc: "g_type_check_value_holds".}

proc g_type_test_flags*(
  type_arg: GType, flags: guint
): gboolean {.cdecl, importc: "g_type_test_flags".}

proc g_type_name_from_instance*(
  instance: ptr GTypeInstance
): cstring {.cdecl, importc: "g_type_name_from_instance".}

proc g_type_name_from_class*(
  g_class: ptr GTypeClass
): cstring {.cdecl, importc: "g_type_name_from_class".}

proc g_value_init*(
  value: ptr GValue, g_type: GType
): ptr GValue {.cdecl, importc: "g_value_init".}

proc g_value_copy*(
  src_value: ptr GValue, dest_value: ptr GValue
): void {.cdecl, importc: "g_value_copy".}

proc g_value_reset*(value: ptr GValue): ptr GValue {.cdecl, importc: "g_value_reset".}
proc g_value_unset*(value: ptr GValue): void {.cdecl, importc: "g_value_unset".}
proc g_value_set_instance*(
  value: ptr GValue, instance: gpointer
): void {.cdecl, importc: "g_value_set_instance".}

proc g_value_init_from_instance*(
  value: ptr GValue, instance: gpointer
): void {.cdecl, importc: "g_value_init_from_instance".}

proc g_value_fits_pointer*(
  value: ptr GValue
): gboolean {.cdecl, importc: "g_value_fits_pointer".}

proc g_value_peek_pointer*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_peek_pointer".}

proc g_value_type_compatible*(
  src_type: GType, dest_type: GType
): gboolean {.cdecl, importc: "g_value_type_compatible".}

proc g_value_type_transformable*(
  src_type: GType, dest_type: GType
): gboolean {.cdecl, importc: "g_value_type_transformable".}

proc g_value_transform*(
  src_value: ptr GValue, dest_value: ptr GValue
): gboolean {.cdecl, importc: "g_value_transform".}

proc g_value_register_transform_func*(
  src_type: GType, dest_type: GType, transform_func: GValueTransform
): void {.cdecl, importc: "g_value_register_transform_func".}

proc g_param_spec_ref*(
  pspec: ptr GParamSpec
): ptr GParamSpec {.cdecl, importc: "g_param_spec_ref".}

proc g_param_spec_unref*(
  pspec: ptr GParamSpec
): void {.cdecl, importc: "g_param_spec_unref".}

proc g_param_spec_sink*(
  pspec: ptr GParamSpec
): void {.cdecl, importc: "g_param_spec_sink".}

proc g_param_spec_ref_sink*(
  pspec: ptr GParamSpec
): ptr GParamSpec {.cdecl, importc: "g_param_spec_ref_sink".}

proc g_param_spec_get_qdata*(
  pspec: ptr GParamSpec, quark: GQuark
): gpointer {.cdecl, importc: "g_param_spec_get_qdata".}

proc g_param_spec_set_qdata*(
  pspec: ptr GParamSpec, quark: GQuark, data: gpointer
): void {.cdecl, importc: "g_param_spec_set_qdata".}

proc g_param_spec_set_qdata_full*(
  pspec: ptr GParamSpec, quark: GQuark, data: gpointer, destroy: GDestroyNotify
): void {.cdecl, importc: "g_param_spec_set_qdata_full".}

proc g_param_spec_steal_qdata*(
  pspec: ptr GParamSpec, quark: GQuark
): gpointer {.cdecl, importc: "g_param_spec_steal_qdata".}

proc g_param_spec_get_redirect_target*(
  pspec: ptr GParamSpec
): ptr GParamSpec {.cdecl, importc: "g_param_spec_get_redirect_target".}

proc g_param_value_set_default*(
  pspec: ptr GParamSpec, value: ptr GValue
): void {.cdecl, importc: "g_param_value_set_default".}

proc g_param_value_defaults*(
  pspec: ptr GParamSpec, value: ptr GValue
): gboolean {.cdecl, importc: "g_param_value_defaults".}

proc g_param_value_validate*(
  pspec: ptr GParamSpec, value: ptr GValue
): gboolean {.cdecl, importc: "g_param_value_validate".}

proc g_param_value_is_valid*(
  pspec: ptr GParamSpec, value: ptr GValue
): gboolean {.cdecl, importc: "g_param_value_is_valid".}

proc g_param_value_convert*(
  pspec: ptr GParamSpec,
  src_value: ptr GValue,
  dest_value: ptr GValue,
  strict_validation: gboolean,
): gboolean {.cdecl, importc: "g_param_value_convert".}

proc g_param_values_cmp*(
  pspec: ptr GParamSpec, value1: ptr GValue, value2: ptr GValue
): gint {.cdecl, importc: "g_param_values_cmp".}

proc g_param_spec_get_name*(
  pspec: ptr GParamSpec
): cstring {.cdecl, importc: "g_param_spec_get_name".}

proc g_param_spec_get_nick*(
  pspec: ptr GParamSpec
): cstring {.cdecl, importc: "g_param_spec_get_nick".}

proc g_param_spec_get_blurb*(
  pspec: ptr GParamSpec
): cstring {.cdecl, importc: "g_param_spec_get_blurb".}

proc g_value_set_param*(
  value: ptr GValue, param: ptr GParamSpec
): void {.cdecl, importc: "g_value_set_param".}

proc g_value_get_param*(
  value: ptr GValue
): ptr GParamSpec {.cdecl, importc: "g_value_get_param".}

proc g_value_dup_param*(
  value: ptr GValue
): ptr GParamSpec {.cdecl, importc: "g_value_dup_param".}

proc g_value_take_param*(
  value: ptr GValue, param: ptr GParamSpec
): void {.cdecl, importc: "g_value_take_param".}

proc g_value_set_param_take_ownership*(
  value: ptr GValue, param: ptr GParamSpec
): void {.cdecl, importc: "g_value_set_param_take_ownership".}

proc g_param_spec_get_default_value*(
  pspec: ptr GParamSpec
): ptr GValue {.cdecl, importc: "g_param_spec_get_default_value".}

proc g_param_spec_get_name_quark*(
  pspec: ptr GParamSpec
): GQuark {.cdecl, importc: "g_param_spec_get_name_quark".}

proc g_param_type_register_static*(
  name: cstring, pspec_info: ptr GParamSpecTypeInfo
): GType {.cdecl, importc: "g_param_type_register_static".}

proc g_param_spec_is_valid_name*(
  name: cstring
): gboolean {.cdecl, importc: "g_param_spec_is_valid_name".}

proc internal_g_param_type_register_static_constant*(
  name: cstring, pspec_info: ptr GParamSpecTypeInfo, opt_type: GType
): GType {.cdecl, importc: "_g_param_type_register_static_constant".}

proc g_param_spec_internal*(
  param_type: GType, name: cstring, nick: cstring, blurb: cstring, flags: GParamFlags
): gpointer {.cdecl, importc: "g_param_spec_internal".}

proc g_param_spec_pool_new*(
  type_prefixing: gboolean
): ptr GParamSpecPool {.cdecl, importc: "g_param_spec_pool_new".}

proc g_param_spec_pool_insert*(
  pool: ptr GParamSpecPool, pspec: ptr GParamSpec, owner_type: GType
): void {.cdecl, importc: "g_param_spec_pool_insert".}

proc g_param_spec_pool_remove*(
  pool: ptr GParamSpecPool, pspec: ptr GParamSpec
): void {.cdecl, importc: "g_param_spec_pool_remove".}

proc g_param_spec_pool_lookup*(
  pool: ptr GParamSpecPool,
  param_name: cstring,
  owner_type: GType,
  walk_ancestors: gboolean,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_pool_lookup".}

proc g_param_spec_pool_list_owned*(
  pool: ptr GParamSpecPool, owner_type: GType
): ptr GList {.cdecl, importc: "g_param_spec_pool_list_owned".}

proc g_param_spec_pool_list*(
  pool: ptr GParamSpecPool, owner_type: GType, n_pspecs_p: ptr guint
): ptr ptr GParamSpec {.cdecl, importc: "g_param_spec_pool_list".}

proc g_param_spec_pool_free*(
  pool: ptr GParamSpecPool
): void {.cdecl, importc: "g_param_spec_pool_free".}

proc g_cclosure_new*(
  callback_func: GCallback, user_data: gpointer, destroy_data: GClosureNotify
): ptr GClosure {.cdecl, importc: "g_cclosure_new".}

proc g_cclosure_new_swap*(
  callback_func: GCallback, user_data: gpointer, destroy_data: GClosureNotify
): ptr GClosure {.cdecl, importc: "g_cclosure_new_swap".}

proc g_signal_type_cclosure_new*(
  itype: GType, struct_offset: guint
): ptr GClosure {.cdecl, importc: "g_signal_type_cclosure_new".}

proc g_closure_ref*(
  closure: ptr GClosure
): ptr GClosure {.cdecl, importc: "g_closure_ref".}

proc g_closure_sink*(closure: ptr GClosure): void {.cdecl, importc: "g_closure_sink".}
proc g_closure_unref*(closure: ptr GClosure): void {.cdecl, importc: "g_closure_unref".}
proc g_closure_new_simple*(
  sizeof_closure: guint, data: gpointer
): ptr GClosure {.cdecl, importc: "g_closure_new_simple".}

proc g_closure_add_finalize_notifier*(
  closure: ptr GClosure, notify_data: gpointer, notify_func: GClosureNotify
): void {.cdecl, importc: "g_closure_add_finalize_notifier".}

proc g_closure_remove_finalize_notifier*(
  closure: ptr GClosure, notify_data: gpointer, notify_func: GClosureNotify
): void {.cdecl, importc: "g_closure_remove_finalize_notifier".}

proc g_closure_add_invalidate_notifier*(
  closure: ptr GClosure, notify_data: gpointer, notify_func: GClosureNotify
): void {.cdecl, importc: "g_closure_add_invalidate_notifier".}

proc g_closure_remove_invalidate_notifier*(
  closure: ptr GClosure, notify_data: gpointer, notify_func: GClosureNotify
): void {.cdecl, importc: "g_closure_remove_invalidate_notifier".}

proc g_closure_add_marshal_guards*(
  closure: ptr GClosure,
  pre_marshal_data: gpointer,
  pre_marshal_notify: GClosureNotify,
  post_marshal_data: gpointer,
  post_marshal_notify: GClosureNotify,
): void {.cdecl, importc: "g_closure_add_marshal_guards".}

proc g_closure_set_marshal*(
  closure: ptr GClosure, marshal: GClosureMarshal
): void {.cdecl, importc: "g_closure_set_marshal".}

proc g_closure_set_meta_marshal*(
  closure: ptr GClosure, marshal_data: gpointer, meta_marshal: GClosureMarshal
): void {.cdecl, importc: "g_closure_set_meta_marshal".}

proc g_closure_invalidate*(
  closure: ptr GClosure
): void {.cdecl, importc: "g_closure_invalidate".}

proc g_closure_invoke*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
): void {.cdecl, importc: "g_closure_invoke".}

proc g_cclosure_marshal_generic*(
  closure: ptr GClosure,
  return_gvalue: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_generic".}

proc g_cclosure_marshal_generic_va*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args_list: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_generic_va".}

proc g_cclosure_marshal_VOID_VOID*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__VOID".}

proc g_cclosure_marshal_VOID_VOIDv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__VOIDv".}

proc g_cclosure_marshal_VOID_BOOLEAN*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__BOOLEAN".}

proc g_cclosure_marshal_VOID_BOOLEANv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__BOOLEANv".}

proc g_cclosure_marshal_VOID_CHAR*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__CHAR".}

proc g_cclosure_marshal_VOID_CHARv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__CHARv".}

proc g_cclosure_marshal_VOID_UCHAR*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UCHAR".}

proc g_cclosure_marshal_VOID_UCHARv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UCHARv".}

proc g_cclosure_marshal_VOID_INT*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__INT".}

proc g_cclosure_marshal_VOID_INTv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__INTv".}

proc g_cclosure_marshal_VOID_UINT*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UINT".}

proc g_cclosure_marshal_VOID_UINTv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UINTv".}

proc g_cclosure_marshal_VOID_LONG*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__LONG".}

proc g_cclosure_marshal_VOID_LONGv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__LONGv".}

proc g_cclosure_marshal_VOID_ULONG*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__ULONG".}

proc g_cclosure_marshal_VOID_ULONGv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__ULONGv".}

proc g_cclosure_marshal_VOID_ENUM*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__ENUM".}

proc g_cclosure_marshal_VOID_ENUMv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__ENUMv".}

proc g_cclosure_marshal_VOID_FLAGS*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__FLAGS".}

proc g_cclosure_marshal_VOID_FLAGSv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__FLAGSv".}

proc g_cclosure_marshal_VOID_FLOAT*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__FLOAT".}

proc g_cclosure_marshal_VOID_FLOATv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__FLOATv".}

proc g_cclosure_marshal_VOID_DOUBLE*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__DOUBLE".}

proc g_cclosure_marshal_VOID_DOUBLEv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__DOUBLEv".}

proc g_cclosure_marshal_VOID_STRING*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__STRING".}

proc g_cclosure_marshal_VOID_STRINGv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__STRINGv".}

proc g_cclosure_marshal_VOID_PARAM*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__PARAM".}

proc g_cclosure_marshal_VOID_PARAMv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__PARAMv".}

proc g_cclosure_marshal_VOID_BOXED*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__BOXED".}

proc g_cclosure_marshal_VOID_BOXEDv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__BOXEDv".}

proc g_cclosure_marshal_VOID_POINTER*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__POINTER".}

proc g_cclosure_marshal_VOID_POINTERv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__POINTERv".}

proc g_cclosure_marshal_VOID_OBJECT*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__OBJECT".}

proc g_cclosure_marshal_VOID_OBJECTv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__OBJECTv".}

proc g_cclosure_marshal_VOID_VARIANT*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__VARIANT".}

proc g_cclosure_marshal_VOID_VARIANTv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__VARIANTv".}

proc g_cclosure_marshal_VOID_UINT_POINTER*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UINT_POINTER".}

proc g_cclosure_marshal_VOID_UINT_POINTERv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_VOID__UINT_POINTERv".}

proc g_cclosure_marshal_BOOLEAN_FLAGSv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_BOOLEAN__FLAGSv".}

proc g_cclosure_marshal_STRING_OBJECT_POINTER*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  n_param_values: guint,
  param_values: ptr GValue,
  invocation_hint: gpointer,
  marshal_data: gpointer,
): void {.cdecl, importc: "g_cclosure_marshal_STRING__OBJECT_POINTER".}

proc g_cclosure_marshal_STRING_OBJECT_POINTERv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_STRING__OBJECT_POINTERv".}

proc g_cclosure_marshal_BOOLEAN_BOXED_BOXEDv*(
  closure: ptr GClosure,
  return_value: ptr GValue,
  instance: gpointer,
  args: va_list,
  marshal_data: gpointer,
  n_params: cint,
  param_types: ptr GType,
): void {.cdecl, importc: "g_cclosure_marshal_BOOLEAN__BOXED_BOXEDv".}

proc g_signal_newv*(
  signal_name: cstring,
  itype: GType,
  signal_flags: GSignalFlags,
  class_closure: ptr GClosure,
  accumulator: GSignalAccumulator,
  accu_data: gpointer,
  c_marshaller: GSignalCMarshaller,
  return_type: GType,
  n_params: guint,
  param_types: ptr GType,
): guint {.cdecl, importc: "g_signal_newv".}

proc g_signal_new_valist*(
  signal_name: cstring,
  itype: GType,
  signal_flags: GSignalFlags,
  class_closure: ptr GClosure,
  accumulator: GSignalAccumulator,
  accu_data: gpointer,
  c_marshaller: GSignalCMarshaller,
  return_type: GType,
  n_params: guint,
): guint {.cdecl, varargs, importc: "g_signal_new_valist".}

proc g_signal_new*(
  signal_name: cstring,
  itype: GType,
  signal_flags: GSignalFlags,
  class_offset: guint,
  accumulator: GSignalAccumulator,
  accu_data: gpointer,
  c_marshaller: GSignalCMarshaller,
  return_type: GType,
  n_params: guint,
): guint {.cdecl, varargs, importc: "g_signal_new".}

proc g_signal_new_class_handler*(
  signal_name: cstring,
  itype: GType,
  signal_flags: GSignalFlags,
  class_handler: GCallback,
  accumulator: GSignalAccumulator,
  accu_data: gpointer,
  c_marshaller: GSignalCMarshaller,
  return_type: GType,
  n_params: guint,
): guint {.cdecl, varargs, importc: "g_signal_new_class_handler".}

proc g_signal_set_va_marshaller*(
  signal_id: guint, instance_type: GType, va_marshaller: GSignalCVaMarshaller
): void {.cdecl, importc: "g_signal_set_va_marshaller".}

proc g_signal_emitv*(
  instance_and_params: ptr GValue,
  signal_id: guint,
  detail: GQuark,
  return_value: ptr GValue,
): void {.cdecl, importc: "g_signal_emitv".}

proc g_signal_emit_valist*(
  instance: gpointer, signal_id: guint, detail: GQuark
): void {.cdecl, varargs, importc: "g_signal_emit_valist".}

proc g_signal_emit*(
  instance: gpointer, signal_id: guint, detail: GQuark
): void {.cdecl, varargs, importc: "g_signal_emit".}

proc g_signal_emit_by_name*(
  instance: gpointer, detailed_signal: cstring
): void {.cdecl, varargs, importc: "g_signal_emit_by_name".}

proc g_signal_lookup*(
  name: cstring, itype: GType
): guint {.cdecl, importc: "g_signal_lookup".}

proc g_signal_name*(signal_id: guint): cstring {.cdecl, importc: "g_signal_name".}
proc g_signal_query*(
  signal_id: guint, query: ptr GSignalQuery
): void {.cdecl, importc: "g_signal_query".}

proc g_signal_list_ids*(
  itype: GType, n_ids: ptr guint
): ptr guint {.cdecl, importc: "g_signal_list_ids".}

proc g_signal_is_valid_name*(
  name: cstring
): gboolean {.cdecl, importc: "g_signal_is_valid_name".}

proc g_signal_parse_name*(
  detailed_signal: cstring,
  itype: GType,
  signal_id_p: ptr guint,
  detail_p: ptr GQuark,
  force_detail_quark: gboolean,
): gboolean {.cdecl, importc: "g_signal_parse_name".}

proc g_signal_get_invocation_hint*(
  instance: gpointer
): ptr GSignalInvocationHint {.cdecl, importc: "g_signal_get_invocation_hint".}

proc g_signal_stop_emission*(
  instance: gpointer, signal_id: guint, detail: GQuark
): void {.cdecl, importc: "g_signal_stop_emission".}

proc g_signal_stop_emission_by_name*(
  instance: gpointer, detailed_signal: cstring
): void {.cdecl, importc: "g_signal_stop_emission_by_name".}

proc g_signal_add_emission_hook*(
  signal_id: guint,
  detail: GQuark,
  hook_func: GSignalEmissionHook,
  hook_data: gpointer,
  data_destroy: GDestroyNotify,
): gulong {.cdecl, importc: "g_signal_add_emission_hook".}

proc g_signal_remove_emission_hook*(
  signal_id: guint, hook_id: gulong
): void {.cdecl, importc: "g_signal_remove_emission_hook".}

proc g_signal_has_handler_pending*(
  instance: gpointer, signal_id: guint, detail: GQuark, may_be_blocked: gboolean
): gboolean {.cdecl, importc: "g_signal_has_handler_pending".}

proc g_signal_connect_closure_by_id*(
  instance: gpointer,
  signal_id: guint,
  detail: GQuark,
  closure: ptr GClosure,
  after: gboolean,
): gulong {.cdecl, importc: "g_signal_connect_closure_by_id".}

proc g_signal_connect_closure*(
  instance: gpointer, detailed_signal: cstring, closure: ptr GClosure, after: gboolean
): gulong {.cdecl, importc: "g_signal_connect_closure".}

proc g_signal_connect_data*(
  instance: gpointer,
  detailed_signal: cstring,
  c_handler: GCallback,
  data: gpointer,
  destroy_data: GClosureNotify,
  connect_flags: GConnectFlags,
): gulong {.cdecl, importc: "g_signal_connect_data".}

proc g_signal_handler_block*(
  instance: gpointer, handler_id: gulong
): void {.cdecl, importc: "g_signal_handler_block".}

proc g_signal_handler_unblock*(
  instance: gpointer, handler_id: gulong
): void {.cdecl, importc: "g_signal_handler_unblock".}

proc g_signal_handler_disconnect*(
  instance: gpointer, handler_id: gulong
): void {.cdecl, importc: "g_signal_handler_disconnect".}

proc g_signal_handler_is_connected*(
  instance: gpointer, handler_id: gulong
): gboolean {.cdecl, importc: "g_signal_handler_is_connected".}

proc g_signal_handler_find*(
  instance: gpointer,
  mask: GSignalMatchType,
  signal_id: guint,
  detail: GQuark,
  closure: ptr GClosure,
  func_arg: gpointer,
  data: gpointer,
): gulong {.cdecl, importc: "g_signal_handler_find".}

proc g_signal_handlers_block_matched*(
  instance: gpointer,
  mask: GSignalMatchType,
  signal_id: guint,
  detail: GQuark,
  closure: ptr GClosure,
  func_arg: gpointer,
  data: gpointer,
): guint {.cdecl, importc: "g_signal_handlers_block_matched".}

proc g_signal_handlers_unblock_matched*(
  instance: gpointer,
  mask: GSignalMatchType,
  signal_id: guint,
  detail: GQuark,
  closure: ptr GClosure,
  func_arg: gpointer,
  data: gpointer,
): guint {.cdecl, importc: "g_signal_handlers_unblock_matched".}

proc g_signal_handlers_disconnect_matched*(
  instance: gpointer,
  mask: GSignalMatchType,
  signal_id: guint,
  detail: GQuark,
  closure: ptr GClosure,
  func_arg: gpointer,
  data: gpointer,
): guint {.cdecl, importc: "g_signal_handlers_disconnect_matched".}

proc g_clear_signal_handler*(
  handler_id_ptr: ptr gulong, instance: gpointer
): void {.cdecl, importc: "g_clear_signal_handler".}

proc g_signal_override_class_closure*(
  signal_id: guint, instance_type: GType, class_closure: ptr GClosure
): void {.cdecl, importc: "g_signal_override_class_closure".}

proc g_signal_override_class_handler*(
  signal_name: cstring, instance_type: GType, class_handler: GCallback
): void {.cdecl, importc: "g_signal_override_class_handler".}

proc g_signal_chain_from_overridden*(
  instance_and_params: ptr GValue, return_value: ptr GValue
): void {.cdecl, importc: "g_signal_chain_from_overridden".}

proc g_signal_chain_from_overridden_handler*(
  instance: gpointer
): void {.cdecl, varargs, importc: "g_signal_chain_from_overridden_handler".}

proc g_signal_accumulator_true_handled*(
  ihint: ptr GSignalInvocationHint,
  return_accu: ptr GValue,
  handler_return: ptr GValue,
  dummy: gpointer,
): gboolean {.cdecl, importc: "g_signal_accumulator_true_handled".}

proc g_signal_accumulator_first_wins*(
  ihint: ptr GSignalInvocationHint,
  return_accu: ptr GValue,
  handler_return: ptr GValue,
  dummy: gpointer,
): gboolean {.cdecl, importc: "g_signal_accumulator_first_wins".}

proc g_signal_handlers_destroy*(
  instance: gpointer
): void {.cdecl, importc: "g_signal_handlers_destroy".}

proc internal_g_signals_destroy*(
  itype: GType
): void {.cdecl, importc: "_g_signals_destroy".}

proc g_date_get_type*(): GType {.cdecl, importc: "g_date_get_type".}
proc g_strv_get_type*(): GType {.cdecl, importc: "g_strv_get_type".}
proc g_gstring_get_type*(): GType {.cdecl, importc: "g_gstring_get_type".}
proc g_hash_table_get_type*(): GType {.cdecl, importc: "g_hash_table_get_type".}
proc g_array_get_type*(): GType {.cdecl, importc: "g_array_get_type".}
proc g_byte_array_get_type*(): GType {.cdecl, importc: "g_byte_array_get_type".}
proc g_ptr_array_get_type*(): GType {.cdecl, importc: "g_ptr_array_get_type".}
proc g_bytes_get_type*(): GType {.cdecl, importc: "g_bytes_get_type".}
proc g_variant_type_get_gtype*(): GType {.cdecl, importc: "g_variant_type_get_gtype".}
proc g_regex_get_type*(): GType {.cdecl, importc: "g_regex_get_type".}
proc g_match_info_get_type*(): GType {.cdecl, importc: "g_match_info_get_type".}
proc g_error_get_type*(): GType {.cdecl, importc: "g_error_get_type".}
proc g_date_time_get_type*(): GType {.cdecl, importc: "g_date_time_get_type".}
proc g_time_zone_get_type*(): GType {.cdecl, importc: "g_time_zone_get_type".}
proc g_io_channel_get_type*(): GType {.cdecl, importc: "g_io_channel_get_type".}
proc g_io_condition_get_type*(): GType {.cdecl, importc: "g_io_condition_get_type".}
proc g_variant_builder_get_type*(): GType {.
  cdecl, importc: "g_variant_builder_get_type"
.}

proc g_variant_dict_get_type*(): GType {.cdecl, importc: "g_variant_dict_get_type".}
proc g_key_file_get_type*(): GType {.cdecl, importc: "g_key_file_get_type".}
proc g_main_loop_get_type*(): GType {.cdecl, importc: "g_main_loop_get_type".}
proc g_main_context_get_type*(): GType {.cdecl, importc: "g_main_context_get_type".}
proc g_source_get_type*(): GType {.cdecl, importc: "g_source_get_type".}
proc g_pollfd_get_type*(): GType {.cdecl, importc: "g_pollfd_get_type".}
proc g_thread_get_type*(): GType {.cdecl, importc: "g_thread_get_type".}
proc g_checksum_get_type*(): GType {.cdecl, importc: "g_checksum_get_type".}
proc g_markup_parse_context_get_type*(): GType {.
  cdecl, importc: "g_markup_parse_context_get_type"
.}

proc g_mapped_file_get_type*(): GType {.cdecl, importc: "g_mapped_file_get_type".}
proc g_option_group_get_type*(): GType {.cdecl, importc: "g_option_group_get_type".}
proc g_uri_get_type*(): GType {.cdecl, importc: "g_uri_get_type".}
proc g_tree_get_type*(): GType {.cdecl, importc: "g_tree_get_type".}
proc g_pattern_spec_get_type*(): GType {.cdecl, importc: "g_pattern_spec_get_type".}
proc g_bookmark_file_get_type*(): GType {.cdecl, importc: "g_bookmark_file_get_type".}
proc g_hmac_get_type*(): GType {.cdecl, importc: "g_hmac_get_type".}
proc g_dir_get_type*(): GType {.cdecl, importc: "g_dir_get_type".}
proc g_rand_get_type*(): GType {.cdecl, importc: "g_rand_get_type".}
proc g_strv_builder_get_type*(): GType {.cdecl, importc: "g_strv_builder_get_type".}
proc g_variant_get_gtype*(): GType {.cdecl, importc: "g_variant_get_gtype".}
proc g_boxed_copy*(
  boxed_type: GType, src_boxed: gconstpointer
): gpointer {.cdecl, importc: "g_boxed_copy".}

proc g_boxed_free*(
  boxed_type: GType, boxed: gpointer
): void {.cdecl, importc: "g_boxed_free".}

proc g_value_set_boxed*(
  value: ptr GValue, v_boxed: gconstpointer
): void {.cdecl, importc: "g_value_set_boxed".}

proc g_value_set_static_boxed*(
  value: ptr GValue, v_boxed: gconstpointer
): void {.cdecl, importc: "g_value_set_static_boxed".}

proc g_value_take_boxed*(
  value: ptr GValue, v_boxed: gconstpointer
): void {.cdecl, importc: "g_value_take_boxed".}

proc g_value_set_boxed_take_ownership*(
  value: ptr GValue, v_boxed: gconstpointer
): void {.cdecl, importc: "g_value_set_boxed_take_ownership".}

proc g_value_get_boxed*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_get_boxed".}

proc g_value_dup_boxed*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_dup_boxed".}

proc g_boxed_type_register_static*(
  name: cstring, boxed_copy: GBoxedCopyFunc, boxed_free: GBoxedFreeFunc
): GType {.cdecl, importc: "g_boxed_type_register_static".}

proc g_closure_get_type*(): GType {.cdecl, importc: "g_closure_get_type".}
proc g_value_get_type*(): GType {.cdecl, importc: "g_value_get_type".}
proc g_initially_unowned_get_type*(): GType {.
  cdecl, importc: "g_initially_unowned_get_type"
.}

proc g_object_class_install_property*(
  oclass: ptr GObjectClass, property_id: guint, pspec: ptr GParamSpec
): void {.cdecl, importc: "g_object_class_install_property".}

proc g_object_class_find_property*(
  oclass: ptr GObjectClass, property_name: cstring
): ptr GParamSpec {.cdecl, importc: "g_object_class_find_property".}

proc g_object_class_list_properties*(
  oclass: ptr GObjectClass, n_properties: ptr guint
): ptr ptr GParamSpec {.cdecl, importc: "g_object_class_list_properties".}

proc g_object_class_override_property*(
  oclass: ptr GObjectClass, property_id: guint, name: cstring
): void {.cdecl, importc: "g_object_class_override_property".}

proc g_object_class_install_properties*(
  oclass: ptr GObjectClass, n_pspecs: guint, pspecs: ptr ptr GParamSpec
): void {.cdecl, importc: "g_object_class_install_properties".}

proc g_object_interface_install_property*(
  g_iface: gpointer, pspec: ptr GParamSpec
): void {.cdecl, importc: "g_object_interface_install_property".}

proc g_object_interface_find_property*(
  g_iface: gpointer, property_name: cstring
): ptr GParamSpec {.cdecl, importc: "g_object_interface_find_property".}

proc g_object_interface_list_properties*(
  g_iface: gpointer, n_properties_p: ptr guint
): ptr ptr GParamSpec {.cdecl, importc: "g_object_interface_list_properties".}

proc g_object_get_type*(): GType {.cdecl, importc: "g_object_get_type".}
proc g_object_new*(
  object_type: GType, first_property_name: cstring
): gpointer {.cdecl, varargs, importc: "g_object_new".}

proc g_object_new_with_properties*(
  object_type: GType,
  n_properties: guint,
  names: ptr UncheckedArray[cstring],
  values: ptr UncheckedArray[GValue],
): ptr GObject {.cdecl, importc: "g_object_new_with_properties".}

proc g_object_newv*(
  object_type: GType, n_parameters: guint, parameters: ptr GParameter
): gpointer {.cdecl, importc: "g_object_newv".}

proc g_object_new_valist*(
  object_type: GType, first_property_name: cstring
): ptr GObject {.cdecl, varargs, importc: "g_object_new_valist".}

proc g_object_set*(
  object_arg: gpointer, first_property_name: cstring
): void {.cdecl, varargs, importc: "g_object_set".}

proc g_object_get*(
  object_arg: gpointer, first_property_name: cstring
): void {.cdecl, varargs, importc: "g_object_get".}

proc g_object_connect*(
  object_arg: gpointer, signal_spec: cstring
): gpointer {.cdecl, varargs, importc: "g_object_connect".}

proc g_object_disconnect*(
  object_arg: gpointer, signal_spec: cstring
): void {.cdecl, varargs, importc: "g_object_disconnect".}

proc g_object_setv*(
  object_arg: ptr GObject,
  n_properties: guint,
  names: ptr UncheckedArray[cstring],
  values: ptr UncheckedArray[GValue],
): void {.cdecl, importc: "g_object_setv".}

proc g_object_set_valist*(
  object_arg: ptr GObject, first_property_name: cstring
): void {.cdecl, varargs, importc: "g_object_set_valist".}

proc g_object_getv*(
  object_arg: ptr GObject,
  n_properties: guint,
  names: ptr UncheckedArray[cstring],
  values: ptr UncheckedArray[GValue],
): void {.cdecl, importc: "g_object_getv".}

proc g_object_get_valist*(
  object_arg: ptr GObject, first_property_name: cstring
): void {.cdecl, varargs, importc: "g_object_get_valist".}

proc g_object_set_property*(
  object_arg: ptr GObject, property_name: cstring, value: ptr GValue
): void {.cdecl, importc: "g_object_set_property".}

proc g_object_get_property*(
  object_arg: ptr GObject, property_name: cstring, value: ptr GValue
): void {.cdecl, importc: "g_object_get_property".}

proc g_object_freeze_notify*(
  object_arg: ptr GObject
): void {.cdecl, importc: "g_object_freeze_notify".}

proc g_object_notify*(
  object_arg: ptr GObject, property_name: cstring
): void {.cdecl, importc: "g_object_notify".}

proc g_object_notify_by_pspec*(
  object_arg: ptr GObject, pspec: ptr GParamSpec
): void {.cdecl, importc: "g_object_notify_by_pspec".}

proc g_object_thaw_notify*(
  object_arg: ptr GObject
): void {.cdecl, importc: "g_object_thaw_notify".}

proc g_object_is_floating*(
  object_arg: gpointer
): gboolean {.cdecl, importc: "g_object_is_floating".}

proc g_object_ref_sink*(
  object_arg: gpointer
): gpointer {.cdecl, importc: "g_object_ref_sink".}

proc g_object_take_ref*(
  object_arg: gpointer
): gpointer {.cdecl, importc: "g_object_take_ref".}

proc g_object_ref*(object_arg: gpointer): gpointer {.cdecl, importc: "g_object_ref".}
proc g_object_unref*(object_arg: gpointer): void {.cdecl, importc: "g_object_unref".}
proc g_object_weak_ref*(
  object_arg: ptr GObject, notify: GWeakNotify, data: gpointer
): void {.cdecl, importc: "g_object_weak_ref".}

proc g_object_weak_unref*(
  object_arg: ptr GObject, notify: GWeakNotify, data: gpointer
): void {.cdecl, importc: "g_object_weak_unref".}

proc g_object_add_weak_pointer*(
  object_arg: ptr GObject, weak_pointer_location: ptr gpointer
): void {.cdecl, importc: "g_object_add_weak_pointer".}

proc g_object_remove_weak_pointer*(
  object_arg: ptr GObject, weak_pointer_location: ptr gpointer
): void {.cdecl, importc: "g_object_remove_weak_pointer".}

proc g_object_add_toggle_ref*(
  object_arg: ptr GObject, notify: GToggleNotify, data: gpointer
): void {.cdecl, importc: "g_object_add_toggle_ref".}

proc g_object_remove_toggle_ref*(
  object_arg: ptr GObject, notify: GToggleNotify, data: gpointer
): void {.cdecl, importc: "g_object_remove_toggle_ref".}

proc g_object_get_qdata*(
  object_arg: ptr GObject, quark: GQuark
): gpointer {.cdecl, importc: "g_object_get_qdata".}

proc g_object_set_qdata*(
  object_arg: ptr GObject, quark: GQuark, data: gpointer
): void {.cdecl, importc: "g_object_set_qdata".}

proc g_object_set_qdata_full*(
  object_arg: ptr GObject, quark: GQuark, data: gpointer, destroy: GDestroyNotify
): void {.cdecl, importc: "g_object_set_qdata_full".}

proc g_object_steal_qdata*(
  object_arg: ptr GObject, quark: GQuark
): gpointer {.cdecl, importc: "g_object_steal_qdata".}

proc g_object_dup_qdata*(
  object_arg: ptr GObject, quark: GQuark, dup_func: GDuplicateFunc, user_data: gpointer
): gpointer {.cdecl, importc: "g_object_dup_qdata".}

proc g_object_replace_qdata*(
  object_arg: ptr GObject,
  quark: GQuark,
  oldval: gpointer,
  newval: gpointer,
  destroy: GDestroyNotify,
  old_destroy: GDestroyNotify,
): gboolean {.cdecl, importc: "g_object_replace_qdata".}

proc g_object_get_data*(
  object_arg: ptr GObject, key: cstring
): gpointer {.cdecl, importc: "g_object_get_data".}

proc g_object_set_data*(
  object_arg: ptr GObject, key: cstring, data: gpointer
): void {.cdecl, importc: "g_object_set_data".}

proc g_object_set_data_full*(
  object_arg: ptr GObject, key: cstring, data: gpointer, destroy: GDestroyNotify
): void {.cdecl, importc: "g_object_set_data_full".}

proc g_object_steal_data*(
  object_arg: ptr GObject, key: cstring
): gpointer {.cdecl, importc: "g_object_steal_data".}

proc g_object_dup_data*(
  object_arg: ptr GObject, key: cstring, dup_func: GDuplicateFunc, user_data: gpointer
): gpointer {.cdecl, importc: "g_object_dup_data".}

proc g_object_replace_data*(
  object_arg: ptr GObject,
  key: cstring,
  oldval: gpointer,
  newval: gpointer,
  destroy: GDestroyNotify,
  old_destroy: GDestroyNotify,
): gboolean {.cdecl, importc: "g_object_replace_data".}

proc g_object_watch_closure*(
  object_arg: ptr GObject, closure: ptr GClosure
): void {.cdecl, importc: "g_object_watch_closure".}

proc g_cclosure_new_object*(
  callback_func: GCallback, object_arg: ptr GObject
): ptr GClosure {.cdecl, importc: "g_cclosure_new_object".}

proc g_cclosure_new_object_swap*(
  callback_func: GCallback, object_arg: ptr GObject
): ptr GClosure {.cdecl, importc: "g_cclosure_new_object_swap".}

proc g_closure_new_object*(
  sizeof_closure: guint, object_arg: ptr GObject
): ptr GClosure {.cdecl, importc: "g_closure_new_object".}

proc g_value_set_object*(
  value: ptr GValue, v_object: gpointer
): void {.cdecl, importc: "g_value_set_object".}

proc g_value_get_object*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_get_object".}

proc g_value_dup_object*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_dup_object".}

proc g_signal_connect_object*(
  instance: gpointer,
  detailed_signal: cstring,
  c_handler: GCallback,
  gobject: gpointer,
  connect_flags: GConnectFlags,
): gulong {.cdecl, importc: "g_signal_connect_object".}

proc g_object_force_floating*(
  object_arg: ptr GObject
): void {.cdecl, importc: "g_object_force_floating".}

proc g_object_run_dispose*(
  object_arg: ptr GObject
): void {.cdecl, importc: "g_object_run_dispose".}

proc g_value_take_object*(
  value: ptr GValue, v_object: gpointer
): void {.cdecl, importc: "g_value_take_object".}

proc g_value_set_object_take_ownership*(
  value: ptr GValue, v_object: gpointer
): void {.cdecl, importc: "g_value_set_object_take_ownership".}

proc g_object_compat_control*(
  what: gsize, data: gpointer
): gsize {.cdecl, importc: "g_object_compat_control".}

proc g_clear_object*(
  object_ptr: ptr ptr GObject
): void {.cdecl, importc: "g_clear_object".}

proc g_weak_ref_init*(
  weak_ref: ptr GWeakRef, object_arg: gpointer
): void {.cdecl, importc: "g_weak_ref_init".}

proc g_weak_ref_clear*(
  weak_ref: ptr GWeakRef
): void {.cdecl, importc: "g_weak_ref_clear".}

proc g_weak_ref_get*(
  weak_ref: ptr GWeakRef
): gpointer {.cdecl, importc: "g_weak_ref_get".}

proc g_weak_ref_set*(
  weak_ref: ptr GWeakRef, object_arg: gpointer
): void {.cdecl, importc: "g_weak_ref_set".}

proc g_binding_flags_get_type*(): GType {.cdecl, importc: "g_binding_flags_get_type".}
proc g_binding_get_type*(): GType {.cdecl, importc: "g_binding_get_type".}
proc g_binding_get_flags*(
  binding: ptr GBinding
): GBindingFlags {.cdecl, importc: "g_binding_get_flags".}

proc g_binding_get_source*(
  binding: ptr GBinding
): ptr GObject {.cdecl, importc: "g_binding_get_source".}

proc g_binding_dup_source*(
  binding: ptr GBinding
): ptr GObject {.cdecl, importc: "g_binding_dup_source".}

proc g_binding_get_target*(
  binding: ptr GBinding
): ptr GObject {.cdecl, importc: "g_binding_get_target".}

proc g_binding_dup_target*(
  binding: ptr GBinding
): ptr GObject {.cdecl, importc: "g_binding_dup_target".}

proc g_binding_get_source_property*(
  binding: ptr GBinding
): cstring {.cdecl, importc: "g_binding_get_source_property".}

proc g_binding_get_target_property*(
  binding: ptr GBinding
): cstring {.cdecl, importc: "g_binding_get_target_property".}

proc g_binding_unbind*(
  binding: ptr GBinding
): void {.cdecl, importc: "g_binding_unbind".}

proc g_object_bind_property*(
  source: gpointer,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
): ptr GBinding {.cdecl, importc: "g_object_bind_property".}

proc g_object_bind_property_full*(
  source: gpointer,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
  transform_to: GBindingTransformFunc,
  transform_from: GBindingTransformFunc,
  user_data: gpointer,
  notify: GDestroyNotify,
): ptr GBinding {.cdecl, importc: "g_object_bind_property_full".}

proc g_object_bind_property_with_closures*(
  source: gpointer,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
  transform_to: ptr GClosure,
  transform_from: ptr GClosure,
): ptr GBinding {.cdecl, importc: "g_object_bind_property_with_closures".}

proc g_binding_group_get_type*(): GType {.cdecl, importc: "g_binding_group_get_type".}
proc g_binding_group_new*(): ptr GBindingGroup {.cdecl, importc: "g_binding_group_new".}
proc g_binding_group_dup_source*(
  self: ptr GBindingGroup
): gpointer {.cdecl, importc: "g_binding_group_dup_source".}

proc g_binding_group_set_source*(
  self: ptr GBindingGroup, source: gpointer
): void {.cdecl, importc: "g_binding_group_set_source".}

proc g_binding_group_bind*(
  self: ptr GBindingGroup,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
): void {.cdecl, importc: "g_binding_group_bind".}

proc g_binding_group_bind_full*(
  self: ptr GBindingGroup,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
  transform_to: GBindingTransformFunc,
  transform_from: GBindingTransformFunc,
  user_data: gpointer,
  user_data_destroy: GDestroyNotify,
): void {.cdecl, importc: "g_binding_group_bind_full".}

proc g_binding_group_bind_with_closures*(
  self: ptr GBindingGroup,
  source_property: cstring,
  target: gpointer,
  target_property: cstring,
  flags: GBindingFlags,
  transform_to: ptr GClosure,
  transform_from: ptr GClosure,
): void {.cdecl, importc: "g_binding_group_bind_with_closures".}

proc g_enum_get_value*(
  enum_class: ptr GEnumClass, value: gint
): ptr GEnumValue {.cdecl, importc: "g_enum_get_value".}

proc g_enum_get_value_by_name*(
  enum_class: ptr GEnumClass, name: cstring
): ptr GEnumValue {.cdecl, importc: "g_enum_get_value_by_name".}

proc g_enum_get_value_by_nick*(
  enum_class: ptr GEnumClass, nick: cstring
): ptr GEnumValue {.cdecl, importc: "g_enum_get_value_by_nick".}

proc g_flags_get_first_value*(
  flags_class: ptr GFlagsClass, value: guint
): ptr GFlagsValue {.cdecl, importc: "g_flags_get_first_value".}

proc g_flags_get_value_by_name*(
  flags_class: ptr GFlagsClass, name: cstring
): ptr GFlagsValue {.cdecl, importc: "g_flags_get_value_by_name".}

proc g_flags_get_value_by_nick*(
  flags_class: ptr GFlagsClass, nick: cstring
): ptr GFlagsValue {.cdecl, importc: "g_flags_get_value_by_nick".}

proc g_enum_to_string*(
  g_enum_type: GType, value: gint
): cstring {.cdecl, importc: "g_enum_to_string".}

proc g_flags_to_string*(
  flags_type: GType, value: guint
): cstring {.cdecl, importc: "g_flags_to_string".}

proc g_value_set_enum*(
  value: ptr GValue, v_enum: gint
): void {.cdecl, importc: "g_value_set_enum".}

proc g_value_get_enum*(value: ptr GValue): gint {.cdecl, importc: "g_value_get_enum".}
proc g_value_set_flags*(
  value: ptr GValue, v_flags: guint
): void {.cdecl, importc: "g_value_set_flags".}

proc g_value_get_flags*(
  value: ptr GValue
): guint {.cdecl, importc: "g_value_get_flags".}

proc g_enum_register_static*(
  name: cstring, const_static_values: ptr GEnumValue
): GType {.cdecl, importc: "g_enum_register_static".}

proc g_flags_register_static*(
  name: cstring, const_static_values: ptr GFlagsValue
): GType {.cdecl, importc: "g_flags_register_static".}

proc g_enum_complete_type_info*(
  g_enum_type: GType, info: ptr GTypeInfo, const_values: ptr GEnumValue
): void {.cdecl, importc: "g_enum_complete_type_info".}

proc g_flags_complete_type_info*(
  g_flags_type: GType, info: ptr GTypeInfo, const_values: ptr GFlagsValue
): void {.cdecl, importc: "g_flags_complete_type_info".}

proc g_unicode_type_get_type*(): GType {.cdecl, importc: "g_unicode_type_get_type".}
proc g_unicode_break_type_get_type*(): GType {.
  cdecl, importc: "g_unicode_break_type_get_type"
.}

proc g_unicode_script_get_type*(): GType {.cdecl, importc: "g_unicode_script_get_type".}
proc g_normalize_mode_get_type*(): GType {.cdecl, importc: "g_normalize_mode_get_type".}
proc g_param_spec_char*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gint8,
  maximum: gint8,
  default_value: gint8,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_char".}

proc g_param_spec_uchar*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: guint8,
  maximum: guint8,
  default_value: guint8,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_uchar".}

proc g_param_spec_boolean*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  default_value: gboolean,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_boolean".}

proc g_param_spec_int*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gint,
  maximum: gint,
  default_value: gint,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_int".}

proc g_param_spec_uint*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: guint,
  maximum: guint,
  default_value: guint,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_uint".}

proc g_param_spec_long*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: glong,
  maximum: glong,
  default_value: glong,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_long".}

proc g_param_spec_ulong*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gulong,
  maximum: gulong,
  default_value: gulong,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_ulong".}

proc g_param_spec_int64*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gint64,
  maximum: gint64,
  default_value: gint64,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_int64".}

proc g_param_spec_uint64*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: guint64,
  maximum: guint64,
  default_value: guint64,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_uint64".}

proc g_param_spec_unichar*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  default_value: gunichar,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_unichar".}

proc g_param_spec_enum*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  enum_type: GType,
  default_value: gint,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_enum".}

proc g_param_spec_flags*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  flags_type: GType,
  default_value: guint,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_flags".}

proc g_param_spec_float*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gfloat,
  maximum: gfloat,
  default_value: gfloat,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_float".}

proc g_param_spec_double*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  minimum: gdouble,
  maximum: gdouble,
  default_value: gdouble,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_double".}

proc g_param_spec_string*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  default_value: cstring,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_string".}

proc g_param_spec_param*(
  name: cstring, nick: cstring, blurb: cstring, param_type: GType, flags: GParamFlags
): ptr GParamSpec {.cdecl, importc: "g_param_spec_param".}

proc g_param_spec_boxed*(
  name: cstring, nick: cstring, blurb: cstring, boxed_type: GType, flags: GParamFlags
): ptr GParamSpec {.cdecl, importc: "g_param_spec_boxed".}

proc g_param_spec_pointer*(
  name: cstring, nick: cstring, blurb: cstring, flags: GParamFlags
): ptr GParamSpec {.cdecl, importc: "g_param_spec_pointer".}

proc g_param_spec_value_array*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  element_spec: ptr GParamSpec,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_value_array".}

proc g_param_spec_object*(
  name: cstring, nick: cstring, blurb: cstring, object_type: GType, flags: GParamFlags
): ptr GParamSpec {.cdecl, importc: "g_param_spec_object".}

proc g_param_spec_override*(
  name: cstring, overridden: ptr GParamSpec
): ptr GParamSpec {.cdecl, importc: "g_param_spec_override".}

proc g_param_spec_gtype*(
  name: cstring, nick: cstring, blurb: cstring, is_a_type: GType, flags: GParamFlags
): ptr GParamSpec {.cdecl, importc: "g_param_spec_gtype".}

proc g_param_spec_variant*(
  name: cstring,
  nick: cstring,
  blurb: cstring,
  type_arg: ptr GVariantType,
  default_value: ptr GVariant,
  flags: GParamFlags,
): ptr GParamSpec {.cdecl, importc: "g_param_spec_variant".}

var g_param_spec_types* {.importc: "g_param_spec_types".}: ptr GType
proc g_signal_group_get_type*(): GType {.cdecl, importc: "g_signal_group_get_type".}
proc g_signal_group_new*(
  target_type: GType
): ptr GSignalGroup {.cdecl, importc: "g_signal_group_new".}

proc g_signal_group_set_target*(
  self: ptr GSignalGroup, target: gpointer
): void {.cdecl, importc: "g_signal_group_set_target".}

proc g_signal_group_dup_target*(
  self: ptr GSignalGroup
): gpointer {.cdecl, importc: "g_signal_group_dup_target".}

proc g_signal_group_block*(
  self: ptr GSignalGroup
): void {.cdecl, importc: "g_signal_group_block".}

proc g_signal_group_unblock*(
  self: ptr GSignalGroup
): void {.cdecl, importc: "g_signal_group_unblock".}

proc g_signal_group_connect_closure*(
  self: ptr GSignalGroup,
  detailed_signal: cstring,
  closure: ptr GClosure,
  after: gboolean,
): void {.cdecl, importc: "g_signal_group_connect_closure".}

proc g_signal_group_connect_object*(
  self: ptr GSignalGroup,
  detailed_signal: cstring,
  c_handler: GCallback,
  object_arg: gpointer,
  flags: GConnectFlags,
): void {.cdecl, importc: "g_signal_group_connect_object".}

proc g_signal_group_connect_data*(
  self: ptr GSignalGroup,
  detailed_signal: cstring,
  c_handler: GCallback,
  data: gpointer,
  notify: GClosureNotify,
  flags: GConnectFlags,
): void {.cdecl, importc: "g_signal_group_connect_data".}

proc g_signal_group_connect*(
  self: ptr GSignalGroup, detailed_signal: cstring, c_handler: GCallback, data: gpointer
): void {.cdecl, importc: "g_signal_group_connect".}

proc g_signal_group_connect_after*(
  self: ptr GSignalGroup, detailed_signal: cstring, c_handler: GCallback, data: gpointer
): void {.cdecl, importc: "g_signal_group_connect_after".}

proc g_signal_group_connect_swapped*(
  self: ptr GSignalGroup, detailed_signal: cstring, c_handler: GCallback, data: gpointer
): void {.cdecl, importc: "g_signal_group_connect_swapped".}

proc g_source_set_closure*(
  source: ptr GSource, closure: ptr GClosure
): void {.cdecl, importc: "g_source_set_closure".}

proc g_source_set_dummy_callback*(
  source: ptr GSource
): void {.cdecl, importc: "g_source_set_dummy_callback".}

proc g_type_module_get_type*(): GType {.cdecl, importc: "g_type_module_get_type".}
proc g_type_module_use*(
  module: ptr GTypeModule
): gboolean {.cdecl, importc: "g_type_module_use".}

proc g_type_module_unuse*(
  module: ptr GTypeModule
): void {.cdecl, importc: "g_type_module_unuse".}

proc g_type_module_set_name*(
  module: ptr GTypeModule, name: cstring
): void {.cdecl, importc: "g_type_module_set_name".}

proc g_type_module_register_type*(
  module: ptr GTypeModule,
  parent_type: GType,
  type_name: cstring,
  type_info: ptr GTypeInfo,
  flags: GTypeFlags,
): GType {.cdecl, importc: "g_type_module_register_type".}

proc g_type_module_add_interface*(
  module: ptr GTypeModule,
  instance_type: GType,
  interface_type: GType,
  interface_info: ptr GInterfaceInfo,
): void {.cdecl, importc: "g_type_module_add_interface".}

proc g_type_module_register_enum*(
  module: ptr GTypeModule, name: cstring, const_static_values: ptr GEnumValue
): GType {.cdecl, importc: "g_type_module_register_enum".}

proc g_type_module_register_flags*(
  module: ptr GTypeModule, name: cstring, const_static_values: ptr GFlagsValue
): GType {.cdecl, importc: "g_type_module_register_flags".}

proc g_type_plugin_get_type*(): GType {.cdecl, importc: "g_type_plugin_get_type".}
proc g_type_plugin_use*(
  plugin: ptr GTypePlugin
): void {.cdecl, importc: "g_type_plugin_use".}

proc g_type_plugin_unuse*(
  plugin: ptr GTypePlugin
): void {.cdecl, importc: "g_type_plugin_unuse".}

proc g_type_plugin_complete_type_info*(
  plugin: ptr GTypePlugin,
  g_type: GType,
  info: ptr GTypeInfo,
  value_table: ptr GTypeValueTable,
): void {.cdecl, importc: "g_type_plugin_complete_type_info".}

proc g_type_plugin_complete_interface_info*(
  plugin: ptr GTypePlugin,
  instance_type: GType,
  interface_type: GType,
  info: ptr GInterfaceInfo,
): void {.cdecl, importc: "g_type_plugin_complete_interface_info".}

proc g_value_array_get_type*(): GType {.cdecl, importc: "g_value_array_get_type".}
proc g_value_array_get_nth*(
  value_array: ptr GValueArray, index_private: guint
): ptr GValue {.cdecl, importc: "g_value_array_get_nth".}

proc g_value_array_new*(
  n_prealloced: guint
): ptr GValueArray {.cdecl, importc: "g_value_array_new".}

proc g_value_array_free*(
  value_array: ptr GValueArray
): void {.cdecl, importc: "g_value_array_free".}

proc g_value_array_copy*(
  value_array: ptr GValueArray
): ptr GValueArray {.cdecl, importc: "g_value_array_copy".}

proc g_value_array_prepend*(
  value_array: ptr GValueArray, value: ptr GValue
): ptr GValueArray {.cdecl, importc: "g_value_array_prepend".}

proc g_value_array_append*(
  value_array: ptr GValueArray, value: ptr GValue
): ptr GValueArray {.cdecl, importc: "g_value_array_append".}

proc g_value_array_insert*(
  value_array: ptr GValueArray, index_private: guint, value: ptr GValue
): ptr GValueArray {.cdecl, importc: "g_value_array_insert".}

proc g_value_array_remove*(
  value_array: ptr GValueArray, index_private: guint
): ptr GValueArray {.cdecl, importc: "g_value_array_remove".}

proc g_value_array_sort*(
  value_array: ptr GValueArray, compare_func: GCompareFunc
): ptr GValueArray {.cdecl, importc: "g_value_array_sort".}

proc g_value_array_sort_with_data*(
  value_array: ptr GValueArray, compare_func: GCompareDataFunc, user_data: gpointer
): ptr GValueArray {.cdecl, importc: "g_value_array_sort_with_data".}

proc g_value_set_char*(
  value: ptr GValue, v_char: gchar
): void {.cdecl, importc: "g_value_set_char".}

proc g_value_get_char*(value: ptr GValue): gchar {.cdecl, importc: "g_value_get_char".}
proc g_value_set_schar*(
  value: ptr GValue, v_char: gint8
): void {.cdecl, importc: "g_value_set_schar".}

proc g_value_get_schar*(
  value: ptr GValue
): gint8 {.cdecl, importc: "g_value_get_schar".}

proc g_value_set_uchar*(
  value: ptr GValue, v_uchar: guchar
): void {.cdecl, importc: "g_value_set_uchar".}

proc g_value_get_uchar*(
  value: ptr GValue
): guchar {.cdecl, importc: "g_value_get_uchar".}

proc g_value_set_boolean*(
  value: ptr GValue, v_boolean: gboolean
): void {.cdecl, importc: "g_value_set_boolean".}

proc g_value_get_boolean*(
  value: ptr GValue
): gboolean {.cdecl, importc: "g_value_get_boolean".}

proc g_value_set_int*(
  value: ptr GValue, v_int: gint
): void {.cdecl, importc: "g_value_set_int".}

proc g_value_get_int*(value: ptr GValue): gint {.cdecl, importc: "g_value_get_int".}
proc g_value_set_uint*(
  value: ptr GValue, v_uint: guint
): void {.cdecl, importc: "g_value_set_uint".}

proc g_value_get_uint*(value: ptr GValue): guint {.cdecl, importc: "g_value_get_uint".}
proc g_value_set_long*(
  value: ptr GValue, v_long: glong
): void {.cdecl, importc: "g_value_set_long".}

proc g_value_get_long*(value: ptr GValue): glong {.cdecl, importc: "g_value_get_long".}
proc g_value_set_ulong*(
  value: ptr GValue, v_ulong: gulong
): void {.cdecl, importc: "g_value_set_ulong".}

proc g_value_get_ulong*(
  value: ptr GValue
): gulong {.cdecl, importc: "g_value_get_ulong".}

proc g_value_set_int64*(
  value: ptr GValue, v_int64: gint64
): void {.cdecl, importc: "g_value_set_int64".}

proc g_value_get_int64*(
  value: ptr GValue
): gint64 {.cdecl, importc: "g_value_get_int64".}

proc g_value_set_uint64*(
  value: ptr GValue, v_uint64: guint64
): void {.cdecl, importc: "g_value_set_uint64".}

proc g_value_get_uint64*(
  value: ptr GValue
): guint64 {.cdecl, importc: "g_value_get_uint64".}

proc g_value_set_float*(
  value: ptr GValue, v_float: gfloat
): void {.cdecl, importc: "g_value_set_float".}

proc g_value_get_float*(
  value: ptr GValue
): gfloat {.cdecl, importc: "g_value_get_float".}

proc g_value_set_double*(
  value: ptr GValue, v_double: gdouble
): void {.cdecl, importc: "g_value_set_double".}

proc g_value_get_double*(
  value: ptr GValue
): gdouble {.cdecl, importc: "g_value_get_double".}

proc g_value_set_string*(
  value: ptr GValue, v_string: cstring
): void {.cdecl, importc: "g_value_set_string".}

proc g_value_set_static_string*(
  value: ptr GValue, v_string: cstring
): void {.cdecl, importc: "g_value_set_static_string".}

proc g_value_set_interned_string*(
  value: ptr GValue, v_string: cstring
): void {.cdecl, importc: "g_value_set_interned_string".}

proc g_value_get_string*(
  value: ptr GValue
): cstring {.cdecl, importc: "g_value_get_string".}

proc g_value_dup_string*(
  value: ptr GValue
): cstring {.cdecl, importc: "g_value_dup_string".}

proc g_value_steal_string*(
  value: ptr GValue
): cstring {.cdecl, importc: "g_value_steal_string".}

proc g_value_set_pointer*(
  value: ptr GValue, v_pointer: gpointer
): void {.cdecl, importc: "g_value_set_pointer".}

proc g_value_get_pointer*(
  value: ptr GValue
): gpointer {.cdecl, importc: "g_value_get_pointer".}

proc g_gtype_get_type*(): GType {.cdecl, importc: "g_gtype_get_type".}
proc g_value_set_gtype*(
  value: ptr GValue, v_gtype: GType
): void {.cdecl, importc: "g_value_set_gtype".}

proc g_value_get_gtype*(
  value: ptr GValue
): GType {.cdecl, importc: "g_value_get_gtype".}

proc g_value_set_variant*(
  value: ptr GValue, variant: ptr GVariant
): void {.cdecl, importc: "g_value_set_variant".}

proc g_value_take_variant*(
  value: ptr GValue, variant: ptr GVariant
): void {.cdecl, importc: "g_value_take_variant".}

proc g_value_get_variant*(
  value: ptr GValue
): ptr GVariant {.cdecl, importc: "g_value_get_variant".}

proc g_value_dup_variant*(
  value: ptr GValue
): ptr GVariant {.cdecl, importc: "g_value_dup_variant".}

proc g_pointer_type_register_static*(
  name: cstring
): GType {.cdecl, importc: "g_pointer_type_register_static".}

proc g_strdup_value_contents*(
  value: ptr GValue
): cstring {.cdecl, importc: "g_strdup_value_contents".}

proc g_value_take_string*(
  value: ptr GValue, v_string: cstring
): void {.cdecl, importc: "g_value_take_string".}

proc g_value_set_string_take_ownership*(
  value: ptr GValue, v_string: cstring
): void {.cdecl, importc: "g_value_set_string_take_ownership".}

proc garrow_array_get_type*(): GType {.cdecl, importc: "garrow_array_get_type".}
proc garrow_extension_array_get_type*(): GType {.
  cdecl, importc: "garrow_extension_array_get_type"
.}

proc garrow_chunked_array_get_type*(): GType {.
  cdecl, importc: "garrow_chunked_array_get_type"
.}

proc garrow_decimal32_get_type*(): GType {.cdecl, importc: "garrow_decimal32_get_type".}
proc garrow_decimal32_new_string*(
  data: cstring, error: ptr ptr GError
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_new_string".}

proc garrow_decimal32_new_integer*(
  data: gint64
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_new_integer".}

proc garrow_decimal32_copy*(
  decimal: ptr GArrowDecimal32
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_copy".}

proc garrow_decimal32_equal*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_equal".}

proc garrow_decimal32_not_equal*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_not_equal".}

proc garrow_decimal32_less_than*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_less_than".}

proc garrow_decimal32_less_than_or_equal*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_less_than_or_equal".}

proc garrow_decimal32_greater_than*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_greater_than".}

proc garrow_decimal32_greater_than_or_equal*(
  decimal: ptr GArrowDecimal32, other_decimal: ptr GArrowDecimal32
): gboolean {.cdecl, importc: "garrow_decimal32_greater_than_or_equal".}

proc garrow_decimal32_to_string_scale*(
  decimal: ptr GArrowDecimal32, scale: gint32
): cstring {.cdecl, importc: "garrow_decimal32_to_string_scale".}

proc garrow_decimal32_to_string*(
  decimal: ptr GArrowDecimal32
): cstring {.cdecl, importc: "garrow_decimal32_to_string".}

proc garrow_decimal32_to_bytes*(
  decimal: ptr GArrowDecimal32
): ptr GBytes {.cdecl, importc: "garrow_decimal32_to_bytes".}

proc garrow_decimal32_abs*(
  decimal: ptr GArrowDecimal32
): void {.cdecl, importc: "garrow_decimal32_abs".}

proc garrow_decimal32_negate*(
  decimal: ptr GArrowDecimal32
): void {.cdecl, importc: "garrow_decimal32_negate".}

proc garrow_decimal32_to_integer*(
  decimal: ptr GArrowDecimal32
): gint64 {.cdecl, importc: "garrow_decimal32_to_integer".}

proc garrow_decimal32_plus*(
  left: ptr GArrowDecimal32, right: ptr GArrowDecimal32
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_plus".}

proc garrow_decimal32_minus*(
  left: ptr GArrowDecimal32, right: ptr GArrowDecimal32
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_minus".}

proc garrow_decimal32_multiply*(
  left: ptr GArrowDecimal32, right: ptr GArrowDecimal32
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_multiply".}

proc garrow_decimal32_divide*(
  left: ptr GArrowDecimal32,
  right: ptr GArrowDecimal32,
  remainder: ptr ptr GArrowDecimal32,
  error: ptr ptr GError,
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_divide".}

proc garrow_decimal32_rescale*(
  decimal: ptr GArrowDecimal32,
  original_scale: gint32,
  new_scale: gint32,
  error: ptr ptr GError,
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_rescale".}

proc garrow_decimal64_get_type*(): GType {.cdecl, importc: "garrow_decimal64_get_type".}
proc garrow_decimal64_new_string*(
  data: cstring, error: ptr ptr GError
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_new_string".}

proc garrow_decimal64_new_integer*(
  data: gint64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_new_integer".}

proc garrow_decimal64_copy*(
  decimal: ptr GArrowDecimal64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_copy".}

proc garrow_decimal64_equal*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_equal".}

proc garrow_decimal64_not_equal*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_not_equal".}

proc garrow_decimal64_less_than*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_less_than".}

proc garrow_decimal64_less_than_or_equal*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_less_than_or_equal".}

proc garrow_decimal64_greater_than*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_greater_than".}

proc garrow_decimal64_greater_than_or_equal*(
  decimal: ptr GArrowDecimal64, other_decimal: ptr GArrowDecimal64
): gboolean {.cdecl, importc: "garrow_decimal64_greater_than_or_equal".}

proc garrow_decimal64_to_string_scale*(
  decimal: ptr GArrowDecimal64, scale: gint32
): cstring {.cdecl, importc: "garrow_decimal64_to_string_scale".}

proc garrow_decimal64_to_string*(
  decimal: ptr GArrowDecimal64
): cstring {.cdecl, importc: "garrow_decimal64_to_string".}

proc garrow_decimal64_to_bytes*(
  decimal: ptr GArrowDecimal64
): ptr GBytes {.cdecl, importc: "garrow_decimal64_to_bytes".}

proc garrow_decimal64_abs*(
  decimal: ptr GArrowDecimal64
): void {.cdecl, importc: "garrow_decimal64_abs".}

proc garrow_decimal64_negate*(
  decimal: ptr GArrowDecimal64
): void {.cdecl, importc: "garrow_decimal64_negate".}

proc garrow_decimal64_to_integer*(
  decimal: ptr GArrowDecimal64
): gint64 {.cdecl, importc: "garrow_decimal64_to_integer".}

proc garrow_decimal64_plus*(
  left: ptr GArrowDecimal64, right: ptr GArrowDecimal64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_plus".}

proc garrow_decimal64_minus*(
  left: ptr GArrowDecimal64, right: ptr GArrowDecimal64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_minus".}

proc garrow_decimal64_multiply*(
  left: ptr GArrowDecimal64, right: ptr GArrowDecimal64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_multiply".}

proc garrow_decimal64_divide*(
  left: ptr GArrowDecimal64,
  right: ptr GArrowDecimal64,
  remainder: ptr ptr GArrowDecimal64,
  error: ptr ptr GError,
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_divide".}

proc garrow_decimal64_rescale*(
  decimal: ptr GArrowDecimal64,
  original_scale: gint32,
  new_scale: gint32,
  error: ptr ptr GError,
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_rescale".}

proc garrow_decimal128_get_type*(): GType {.
  cdecl, importc: "garrow_decimal128_get_type"
.}

proc garrow_decimal128_new_string*(
  data: cstring, error: ptr ptr GError
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_new_string".}

proc garrow_decimal128_new_integer*(
  data: gint64
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_new_integer".}

proc garrow_decimal128_copy*(
  decimal: ptr GArrowDecimal128
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_copy".}

proc garrow_decimal128_equal*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_equal".}

proc garrow_decimal128_not_equal*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_not_equal".}

proc garrow_decimal128_less_than*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_less_than".}

proc garrow_decimal128_less_than_or_equal*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_less_than_or_equal".}

proc garrow_decimal128_greater_than*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_greater_than".}

proc garrow_decimal128_greater_than_or_equal*(
  decimal: ptr GArrowDecimal128, other_decimal: ptr GArrowDecimal128
): gboolean {.cdecl, importc: "garrow_decimal128_greater_than_or_equal".}

proc garrow_decimal128_to_string_scale*(
  decimal: ptr GArrowDecimal128, scale: gint32
): cstring {.cdecl, importc: "garrow_decimal128_to_string_scale".}

proc garrow_decimal128_to_string*(
  decimal: ptr GArrowDecimal128
): cstring {.cdecl, importc: "garrow_decimal128_to_string".}

proc garrow_decimal128_to_bytes*(
  decimal: ptr GArrowDecimal128
): ptr GBytes {.cdecl, importc: "garrow_decimal128_to_bytes".}

proc garrow_decimal128_abs*(
  decimal: ptr GArrowDecimal128
): void {.cdecl, importc: "garrow_decimal128_abs".}

proc garrow_decimal128_negate*(
  decimal: ptr GArrowDecimal128
): void {.cdecl, importc: "garrow_decimal128_negate".}

proc garrow_decimal128_to_integer*(
  decimal: ptr GArrowDecimal128
): gint64 {.cdecl, importc: "garrow_decimal128_to_integer".}

proc garrow_decimal128_plus*(
  left: ptr GArrowDecimal128, right: ptr GArrowDecimal128
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_plus".}

proc garrow_decimal128_minus*(
  left: ptr GArrowDecimal128, right: ptr GArrowDecimal128
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_minus".}

proc garrow_decimal128_multiply*(
  left: ptr GArrowDecimal128, right: ptr GArrowDecimal128
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_multiply".}

proc garrow_decimal128_divide*(
  left: ptr GArrowDecimal128,
  right: ptr GArrowDecimal128,
  remainder: ptr ptr GArrowDecimal128,
  error: ptr ptr GError,
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_divide".}

proc garrow_decimal128_rescale*(
  decimal: ptr GArrowDecimal128,
  original_scale: gint32,
  new_scale: gint32,
  error: ptr ptr GError,
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_rescale".}

proc garrow_decimal256_get_type*(): GType {.
  cdecl, importc: "garrow_decimal256_get_type"
.}

proc garrow_decimal256_new_string*(
  data: cstring, error: ptr ptr GError
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_new_string".}

proc garrow_decimal256_new_integer*(
  data: gint64
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_new_integer".}

proc garrow_decimal256_copy*(
  decimal: ptr GArrowDecimal256
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_copy".}

proc garrow_decimal256_equal*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_equal".}

proc garrow_decimal256_not_equal*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_not_equal".}

proc garrow_decimal256_less_than*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_less_than".}

proc garrow_decimal256_less_than_or_equal*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_less_than_or_equal".}

proc garrow_decimal256_greater_than*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_greater_than".}

proc garrow_decimal256_greater_than_or_equal*(
  decimal: ptr GArrowDecimal256, other_decimal: ptr GArrowDecimal256
): gboolean {.cdecl, importc: "garrow_decimal256_greater_than_or_equal".}

proc garrow_decimal256_to_string_scale*(
  decimal: ptr GArrowDecimal256, scale: gint32
): cstring {.cdecl, importc: "garrow_decimal256_to_string_scale".}

proc garrow_decimal256_to_string*(
  decimal: ptr GArrowDecimal256
): cstring {.cdecl, importc: "garrow_decimal256_to_string".}

proc garrow_decimal256_to_bytes*(
  decimal: ptr GArrowDecimal256
): ptr GBytes {.cdecl, importc: "garrow_decimal256_to_bytes".}

proc garrow_decimal256_abs*(
  decimal: ptr GArrowDecimal256
): void {.cdecl, importc: "garrow_decimal256_abs".}

proc garrow_decimal256_negate*(
  decimal: ptr GArrowDecimal256
): void {.cdecl, importc: "garrow_decimal256_negate".}

proc garrow_decimal256_plus*(
  left: ptr GArrowDecimal256, right: ptr GArrowDecimal256
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_plus".}

proc garrow_decimal256_multiply*(
  left: ptr GArrowDecimal256, right: ptr GArrowDecimal256
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_multiply".}

proc garrow_decimal256_divide*(
  left: ptr GArrowDecimal256,
  right: ptr GArrowDecimal256,
  remainder: ptr ptr GArrowDecimal256,
  error: ptr ptr GError,
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_divide".}

proc garrow_decimal256_rescale*(
  decimal: ptr GArrowDecimal256,
  original_scale: gint32,
  new_scale: gint32,
  error: ptr ptr GError,
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_rescale".}

proc garrow_data_type_get_type*(): GType {.cdecl, importc: "garrow_data_type_get_type".}
proc garrow_data_type_import*(
  c_abi_schema: gpointer, error: ptr ptr GError
): ptr GArrowDataType {.cdecl, importc: "garrow_data_type_import".}

proc garrow_data_type_export*(
  data_type: ptr GArrowDataType, error: ptr ptr GError
): gpointer {.cdecl, importc: "garrow_data_type_export".}

proc garrow_data_type_equal*(
  data_type: ptr GArrowDataType, other_data_type: ptr GArrowDataType
): gboolean {.cdecl, importc: "garrow_data_type_equal".}

proc garrow_data_type_to_string*(
  data_type: ptr GArrowDataType
): cstring {.cdecl, importc: "garrow_data_type_to_string".}

proc garrow_data_type_get_id*(
  data_type: ptr GArrowDataType
): GArrowType {.cdecl, importc: "garrow_data_type_get_id".}

proc garrow_data_type_get_name*(
  data_type: ptr GArrowDataType
): cstring {.cdecl, importc: "garrow_data_type_get_name".}

proc garrow_fixed_width_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_width_data_type_get_type"
.}

proc garrow_fixed_width_data_type_get_bit_width*(
  data_type: ptr GArrowFixedWidthDataType
): gint {.cdecl, importc: "garrow_fixed_width_data_type_get_bit_width".}

proc garrow_null_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_null_data_type_get_type"
.}

proc garrow_null_data_type_new*(): ptr GArrowNullDataType {.
  cdecl, importc: "garrow_null_data_type_new"
.}

proc garrow_boolean_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_boolean_data_type_get_type"
.}

proc garrow_boolean_data_type_new*(): ptr GArrowBooleanDataType {.
  cdecl, importc: "garrow_boolean_data_type_new"
.}

proc garrow_numeric_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_numeric_data_type_get_type"
.}

proc garrow_integer_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_integer_data_type_get_type"
.}

proc garrow_integer_data_type_is_signed*(
  data_type: ptr GArrowIntegerDataType
): gboolean {.cdecl, importc: "garrow_integer_data_type_is_signed".}

proc garrow_int8_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_int8_data_type_get_type"
.}

proc garrow_int8_data_type_new*(): ptr GArrowInt8DataType {.
  cdecl, importc: "garrow_int8_data_type_new"
.}

proc garrow_uint8_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_uint8_data_type_get_type"
.}

proc garrow_uint8_data_type_new*(): ptr GArrowUInt8DataType {.
  cdecl, importc: "garrow_uint8_data_type_new"
.}

proc garrow_int16_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_int16_data_type_get_type"
.}

proc garrow_int16_data_type_new*(): ptr GArrowInt16DataType {.
  cdecl, importc: "garrow_int16_data_type_new"
.}

proc garrow_uint16_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_uint16_data_type_get_type"
.}

proc garrow_uint16_data_type_new*(): ptr GArrowUInt16DataType {.
  cdecl, importc: "garrow_uint16_data_type_new"
.}

proc garrow_int32_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_int32_data_type_get_type"
.}

proc garrow_int32_data_type_new*(): ptr GArrowInt32DataType {.
  cdecl, importc: "garrow_int32_data_type_new"
.}

proc garrow_uint32_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_uint32_data_type_get_type"
.}

proc garrow_uint32_data_type_new*(): ptr GArrowUInt32DataType {.
  cdecl, importc: "garrow_uint32_data_type_new"
.}

proc garrow_int64_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_int64_data_type_get_type"
.}

proc garrow_int64_data_type_new*(): ptr GArrowInt64DataType {.
  cdecl, importc: "garrow_int64_data_type_new"
.}

proc garrow_uint64_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_uint64_data_type_get_type"
.}

proc garrow_uint64_data_type_new*(): ptr GArrowUInt64DataType {.
  cdecl, importc: "garrow_uint64_data_type_new"
.}

proc garrow_floating_point_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_floating_point_data_type_get_type"
.}

proc garrow_half_float_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_half_float_data_type_get_type"
.}

proc garrow_half_float_data_type_new*(): ptr GArrowHalfFloatDataType {.
  cdecl, importc: "garrow_half_float_data_type_new"
.}

proc garrow_float_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_float_data_type_get_type"
.}

proc garrow_float_data_type_new*(): ptr GArrowFloatDataType {.
  cdecl, importc: "garrow_float_data_type_new"
.}

proc garrow_double_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_double_data_type_get_type"
.}

proc garrow_double_data_type_new*(): ptr GArrowDoubleDataType {.
  cdecl, importc: "garrow_double_data_type_new"
.}

proc garrow_binary_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_binary_data_type_get_type"
.}

proc garrow_binary_data_type_new*(): ptr GArrowBinaryDataType {.
  cdecl, importc: "garrow_binary_data_type_new"
.}

proc garrow_fixed_size_binary_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_size_binary_data_type_get_type"
.}

proc garrow_fixed_size_binary_data_type_new*(
  byte_width: gint32
): ptr GArrowFixedSizeBinaryDataType {.
  cdecl, importc: "garrow_fixed_size_binary_data_type_new"
.}

proc garrow_fixed_size_binary_data_type_get_byte_width*(
  data_type: ptr GArrowFixedSizeBinaryDataType
): gint32 {.cdecl, importc: "garrow_fixed_size_binary_data_type_get_byte_width".}

proc garrow_large_binary_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_large_binary_data_type_get_type"
.}

proc garrow_large_binary_data_type_new*(): ptr GArrowLargeBinaryDataType {.
  cdecl, importc: "garrow_large_binary_data_type_new"
.}

proc garrow_string_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_string_data_type_get_type"
.}

proc garrow_string_data_type_new*(): ptr GArrowStringDataType {.
  cdecl, importc: "garrow_string_data_type_new"
.}

proc garrow_large_string_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_large_string_data_type_get_type"
.}

proc garrow_large_string_data_type_new*(): ptr GArrowLargeStringDataType {.
  cdecl, importc: "garrow_large_string_data_type_new"
.}

proc garrow_temporal_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_temporal_data_type_get_type"
.}

proc garrow_date32_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_date32_data_type_get_type"
.}

proc garrow_date32_data_type_new*(): ptr GArrowDate32DataType {.
  cdecl, importc: "garrow_date32_data_type_new"
.}

proc garrow_date64_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_date64_data_type_get_type"
.}

proc garrow_date64_data_type_new*(): ptr GArrowDate64DataType {.
  cdecl, importc: "garrow_date64_data_type_new"
.}

proc garrow_timestamp_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_timestamp_data_type_get_type"
.}

proc garrow_timestamp_data_type_new*(
  unit: GArrowTimeUnit, time_zone: ptr GTimeZone
): ptr GArrowTimestampDataType {.cdecl, importc: "garrow_timestamp_data_type_new".}

proc garrow_timestamp_data_type_get_unit*(
  data_type: ptr GArrowTimestampDataType
): GArrowTimeUnit {.cdecl, importc: "garrow_timestamp_data_type_get_unit".}

proc garrow_time_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_time_data_type_get_type"
.}

proc garrow_time_data_type_get_unit*(
  time_data_type: ptr GArrowTimeDataType
): GArrowTimeUnit {.cdecl, importc: "garrow_time_data_type_get_unit".}

proc garrow_time32_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_time32_data_type_get_type"
.}

proc garrow_time32_data_type_new*(
  unit: GArrowTimeUnit, error: ptr ptr GError
): ptr GArrowTime32DataType {.cdecl, importc: "garrow_time32_data_type_new".}

proc garrow_time64_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_time64_data_type_get_type"
.}

proc garrow_time64_data_type_new*(
  unit: GArrowTimeUnit, error: ptr ptr GError
): ptr GArrowTime64DataType {.cdecl, importc: "garrow_time64_data_type_new".}

proc garrow_interval_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_interval_data_type_get_type"
.}

proc garrow_interval_data_type_get_interval_type*(
  type_arg: ptr GArrowIntervalDataType
): GArrowIntervalType {.cdecl, importc: "garrow_interval_data_type_get_interval_type".}

proc garrow_month_interval_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_month_interval_data_type_get_type"
.}

proc garrow_month_interval_data_type_new*(): ptr GArrowMonthIntervalDataType {.
  cdecl, importc: "garrow_month_interval_data_type_new"
.}

proc garrow_day_time_interval_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_day_time_interval_data_type_get_type"
.}

proc garrow_day_time_interval_data_type_new*(): ptr GArrowDayTimeIntervalDataType {.
  cdecl, importc: "garrow_day_time_interval_data_type_new"
.}

proc garrow_month_day_nano_interval_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_month_day_nano_interval_data_type_get_type"
.}

proc garrow_month_day_nano_interval_data_type_new*(): ptr GArrowMonthDayNanoIntervalDataType {.
  cdecl, importc: "garrow_month_day_nano_interval_data_type_new"
.}

proc garrow_decimal_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_decimal_data_type_get_type"
.}

proc garrow_decimal_data_type_new*(
  precision: gint32, scale: gint32, error: ptr ptr GError
): ptr GArrowDecimalDataType {.cdecl, importc: "garrow_decimal_data_type_new".}

proc garrow_decimal_data_type_get_precision*(
  decimal_data_type: ptr GArrowDecimalDataType
): gint32 {.cdecl, importc: "garrow_decimal_data_type_get_precision".}

proc garrow_decimal_data_type_get_scale*(
  decimal_data_type: ptr GArrowDecimalDataType
): gint32 {.cdecl, importc: "garrow_decimal_data_type_get_scale".}

proc garrow_decimal32_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_decimal32_data_type_get_type"
.}

proc garrow_decimal32_data_type_max_precision*(): gint32 {.
  cdecl, importc: "garrow_decimal32_data_type_max_precision"
.}

proc garrow_decimal32_data_type_new*(
  precision: gint32, scale: gint32, error: ptr ptr GError
): ptr GArrowDecimal32DataType {.cdecl, importc: "garrow_decimal32_data_type_new".}

proc garrow_decimal64_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_decimal64_data_type_get_type"
.}

proc garrow_decimal64_data_type_max_precision*(): gint32 {.
  cdecl, importc: "garrow_decimal64_data_type_max_precision"
.}

proc garrow_decimal64_data_type_new*(
  precision: gint32, scale: gint32, error: ptr ptr GError
): ptr GArrowDecimal64DataType {.cdecl, importc: "garrow_decimal64_data_type_new".}

proc garrow_decimal128_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_decimal128_data_type_get_type"
.}

proc garrow_decimal128_data_type_max_precision*(): gint32 {.
  cdecl, importc: "garrow_decimal128_data_type_max_precision"
.}

proc garrow_decimal128_data_type_new*(
  precision: gint32, scale: gint32, error: ptr ptr GError
): ptr GArrowDecimal128DataType {.cdecl, importc: "garrow_decimal128_data_type_new".}

proc garrow_decimal256_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_decimal256_data_type_get_type"
.}

proc garrow_decimal256_data_type_max_precision*(): gint32 {.
  cdecl, importc: "garrow_decimal256_data_type_max_precision"
.}

proc garrow_decimal256_data_type_new*(
  precision: gint32, scale: gint32, error: ptr ptr GError
): ptr GArrowDecimal256DataType {.cdecl, importc: "garrow_decimal256_data_type_new".}

proc garrow_extension_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_extension_data_type_get_type"
.}

proc garrow_extension_data_type_get_extension_name*(
  data_type: ptr GArrowExtensionDataType
): cstring {.cdecl, importc: "garrow_extension_data_type_get_extension_name".}

proc garrow_extension_data_type_wrap_array*(
  data_type: ptr GArrowExtensionDataType, storage: ptr GArrowArray
): ptr GArrowExtensionArray {.cdecl, importc: "garrow_extension_data_type_wrap_array".}

proc garrow_extension_data_type_wrap_chunked_array*(
  data_type: ptr GArrowExtensionDataType, storage: ptr GArrowChunkedArray
): ptr GArrowChunkedArray {.
  cdecl, importc: "garrow_extension_data_type_wrap_chunked_array"
.}

proc garrow_extension_data_type_registry_get_type*(): GType {.
  cdecl, importc: "garrow_extension_data_type_registry_get_type"
.}

proc garrow_extension_data_type_registry_default*(): ptr GArrowExtensionDataTypeRegistry {.
  cdecl, importc: "garrow_extension_data_type_registry_default"
.}

proc garrow_extension_data_type_registry_register*(
  registry: ptr GArrowExtensionDataTypeRegistry,
  data_type: ptr GArrowExtensionDataType,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_extension_data_type_registry_register".}

proc garrow_extension_data_type_registry_unregister*(
  registry: ptr GArrowExtensionDataTypeRegistry, name: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_extension_data_type_registry_unregister".}

proc garrow_extension_data_type_registry_lookup*(
  registry: ptr GArrowExtensionDataTypeRegistry, name: cstring
): ptr GArrowExtensionDataType {.
  cdecl, importc: "garrow_extension_data_type_registry_lookup"
.}

proc garrow_binary_view_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_binary_view_data_type_get_type"
.}

proc garrow_binary_view_data_type_new*(): ptr GArrowBinaryViewDataType {.
  cdecl, importc: "garrow_binary_view_data_type_new"
.}

proc garrow_string_view_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_string_view_data_type_get_type"
.}

proc garrow_string_view_data_type_new*(): ptr GArrowStringViewDataType {.
  cdecl, importc: "garrow_string_view_data_type_new"
.}

proc garrow_fixed_shape_tensor_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_shape_tensor_data_type_get_type"
.}

proc garrow_fixed_shape_tensor_data_type_new*(
  value_type: ptr GArrowDataType,
  shape: ptr gint64,
  shape_length: gsize,
  permutation: ptr gint64,
  permutation_length: gsize,
  dim_names: ptr cstring,
  n_dim_names: gsize,
  error: ptr ptr GError,
): ptr GArrowFixedShapeTensorDataType {.
  cdecl, importc: "garrow_fixed_shape_tensor_data_type_new"
.}

proc garrow_fixed_shape_tensor_data_type_get_shape*(
  data_type: ptr GArrowFixedShapeTensorDataType, length: ptr gsize
): ptr gint64 {.cdecl, importc: "garrow_fixed_shape_tensor_data_type_get_shape".}

proc garrow_fixed_shape_tensor_data_type_get_permutation*(
  data_type: ptr GArrowFixedShapeTensorDataType, length: ptr gsize
): ptr gint64 {.cdecl, importc: "garrow_fixed_shape_tensor_data_type_get_permutation".}

proc garrow_fixed_shape_tensor_data_type_get_dim_names*(
  data_type: ptr GArrowFixedShapeTensorDataType
): ptr cstring {.cdecl, importc: "garrow_fixed_shape_tensor_data_type_get_dim_names".}

proc garrow_fixed_shape_tensor_data_type_get_strides*(
  data_type: ptr GArrowFixedShapeTensorDataType, length: ptr gsize
): ptr gint64 {.cdecl, importc: "garrow_fixed_shape_tensor_data_type_get_strides".}

proc garrow_uuid_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_uuid_data_type_get_type"
.}

proc garrow_uuid_data_type_new*(
  error: ptr ptr GError
): ptr GArrowUUIDDataType {.cdecl, importc: "garrow_uuid_data_type_new".}

proc garrow_buffer_get_type*(): GType {.cdecl, importc: "garrow_buffer_get_type".}
proc garrow_buffer_new*(
  data: ptr guint8, size: gint64
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_new".}

proc garrow_buffer_new_bytes*(
  data: ptr GBytes
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_new_bytes".}

proc garrow_buffer_equal*(
  buffer: ptr GArrowBuffer, other_buffer: ptr GArrowBuffer
): gboolean {.cdecl, importc: "garrow_buffer_equal".}

proc garrow_buffer_equal_n_bytes*(
  buffer: ptr GArrowBuffer, other_buffer: ptr GArrowBuffer, n_bytes: gint64
): gboolean {.cdecl, importc: "garrow_buffer_equal_n_bytes".}

proc garrow_buffer_is_mutable*(
  buffer: ptr GArrowBuffer
): gboolean {.cdecl, importc: "garrow_buffer_is_mutable".}

proc garrow_buffer_get_capacity*(
  buffer: ptr GArrowBuffer
): gint64 {.cdecl, importc: "garrow_buffer_get_capacity".}

proc garrow_buffer_get_data*(
  buffer: ptr GArrowBuffer
): ptr GBytes {.cdecl, importc: "garrow_buffer_get_data".}

proc garrow_buffer_get_mutable_data*(
  buffer: ptr GArrowBuffer
): ptr GBytes {.cdecl, importc: "garrow_buffer_get_mutable_data".}

proc garrow_buffer_get_size*(
  buffer: ptr GArrowBuffer
): gint64 {.cdecl, importc: "garrow_buffer_get_size".}

proc garrow_buffer_get_parent*(
  buffer: ptr GArrowBuffer
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_get_parent".}

proc garrow_buffer_copy*(
  buffer: ptr GArrowBuffer, start: gint64, size: gint64, error: ptr ptr GError
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_copy".}

proc garrow_buffer_slice*(
  buffer: ptr GArrowBuffer, offset: gint64, size: gint64
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_slice".}

proc garrow_mutable_buffer_get_type*(): GType {.
  cdecl, importc: "garrow_mutable_buffer_get_type"
.}

proc garrow_mutable_buffer_new*(
  data: ptr guint8, size: gint64
): ptr GArrowMutableBuffer {.cdecl, importc: "garrow_mutable_buffer_new".}

proc garrow_mutable_buffer_new_bytes*(
  data: ptr GBytes
): ptr GArrowMutableBuffer {.cdecl, importc: "garrow_mutable_buffer_new_bytes".}

proc garrow_mutable_buffer_slice*(
  buffer: ptr GArrowMutableBuffer, offset: gint64, size: gint64
): ptr GArrowMutableBuffer {.cdecl, importc: "garrow_mutable_buffer_slice".}

proc garrow_mutable_buffer_set_data*(
  buffer: ptr GArrowMutableBuffer,
  offset: gint64,
  data: ptr guint8,
  size: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_mutable_buffer_set_data".}

proc garrow_resizable_buffer_get_type*(): GType {.
  cdecl, importc: "garrow_resizable_buffer_get_type"
.}

proc garrow_resizable_buffer_new*(
  initial_size: gint64, error: ptr ptr GError
): ptr GArrowResizableBuffer {.cdecl, importc: "garrow_resizable_buffer_new".}

proc garrow_resizable_buffer_resize*(
  buffer: ptr GArrowResizableBuffer, new_size: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_resizable_buffer_resize".}

proc garrow_resizable_buffer_reserve*(
  buffer: ptr GArrowResizableBuffer, new_capacity: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_resizable_buffer_reserve".}

proc garrow_day_millisecond_get_type*(): GType {.
  cdecl, importc: "garrow_day_millisecond_get_type"
.}

proc garrow_day_millisecond_new*(
  day: gint32, millisecond: gint32
): ptr GArrowDayMillisecond {.cdecl, importc: "garrow_day_millisecond_new".}

proc garrow_day_millisecond_equal*(
  day_millisecond: ptr GArrowDayMillisecond,
  other_day_millisecond: ptr GArrowDayMillisecond,
): gboolean {.cdecl, importc: "garrow_day_millisecond_equal".}

proc garrow_day_millisecond_less_than*(
  day_millisecond: ptr GArrowDayMillisecond,
  other_day_millisecond: ptr GArrowDayMillisecond,
): gboolean {.cdecl, importc: "garrow_day_millisecond_less_than".}

proc garrow_month_day_nano_get_type*(): GType {.
  cdecl, importc: "garrow_month_day_nano_get_type"
.}

proc garrow_month_day_nano_new*(
  month: gint32, day: gint32, nanosecond: gint64
): ptr GArrowMonthDayNano {.cdecl, importc: "garrow_month_day_nano_new".}

proc garrow_month_day_nano_equal*(
  month_nano_day: ptr GArrowMonthDayNano, other_month_nano_day: ptr GArrowMonthDayNano
): gboolean {.cdecl, importc: "garrow_month_day_nano_equal".}

proc garrow_equal_options_get_type*(): GType {.
  cdecl, importc: "garrow_equal_options_get_type"
.}

proc garrow_equal_options_new*(): ptr GArrowEqualOptions {.
  cdecl, importc: "garrow_equal_options_new"
.}

proc garrow_equal_options_is_approx*(
  options: ptr GArrowEqualOptions
): gboolean {.cdecl, importc: "garrow_equal_options_is_approx".}

proc garrow_array_statistics_get_type*(): GType {.
  cdecl, importc: "garrow_array_statistics_get_type"
.}

proc garrow_array_statistics_has_null_count*(
  statistics: ptr GArrowArrayStatistics
): gboolean {.cdecl, importc: "garrow_array_statistics_has_null_count".}

proc garrow_array_statistics_get_null_count*(
  statistics: ptr GArrowArrayStatistics
): gint64 {.cdecl, importc: "garrow_array_statistics_get_null_count".}

proc garrow_array_statistics_has_distinct_count*(
  statistics: ptr GArrowArrayStatistics
): gboolean {.cdecl, importc: "garrow_array_statistics_has_distinct_count".}

proc garrow_array_statistics_get_distinct_count*(
  statistics: ptr GArrowArrayStatistics
): gint64 {.cdecl, importc: "garrow_array_statistics_get_distinct_count".}

proc garrow_array_import*(
  c_abi_array: gpointer, data_type: ptr GArrowDataType, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_array_import".}

proc garrow_array_export*(
  array: ptr GArrowArray,
  c_abi_array: ptr gpointer,
  c_abi_schema: ptr gpointer,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_array_export".}

proc garrow_array_equal*(
  array: ptr GArrowArray, other_array: ptr GArrowArray
): gboolean {.cdecl, importc: "garrow_array_equal".}

proc garrow_array_equal_options*(
  array: ptr GArrowArray, other_array: ptr GArrowArray, options: ptr GArrowEqualOptions
): gboolean {.cdecl, importc: "garrow_array_equal_options".}

proc garrow_array_equal_approx*(
  array: ptr GArrowArray, other_array: ptr GArrowArray
): gboolean {.cdecl, importc: "garrow_array_equal_approx".}

proc garrow_array_equal_range*(
  array: ptr GArrowArray,
  start_index: gint64,
  other_array: ptr GArrowArray,
  other_start_index: gint64,
  end_index: gint64,
  options: ptr GArrowEqualOptions,
): gboolean {.cdecl, importc: "garrow_array_equal_range".}

proc garrow_array_is_null*(
  array: ptr GArrowArray, i: gint64
): gboolean {.cdecl, importc: "garrow_array_is_null".}

proc garrow_array_is_valid*(
  array: ptr GArrowArray, i: gint64
): gboolean {.cdecl, importc: "garrow_array_is_valid".}

proc garrow_array_get_length*(
  array: ptr GArrowArray
): gint64 {.cdecl, importc: "garrow_array_get_length".}

proc garrow_array_get_offset*(
  array: ptr GArrowArray
): gint64 {.cdecl, importc: "garrow_array_get_offset".}

proc garrow_array_get_n_nulls*(
  array: ptr GArrowArray
): gint64 {.cdecl, importc: "garrow_array_get_n_nulls".}

proc garrow_array_get_null_bitmap*(
  array: ptr GArrowArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_array_get_null_bitmap".}

proc garrow_array_get_value_data_type*(
  array: ptr GArrowArray
): ptr GArrowDataType {.cdecl, importc: "garrow_array_get_value_data_type".}

proc garrow_array_get_value_type*(
  array: ptr GArrowArray
): GArrowType {.cdecl, importc: "garrow_array_get_value_type".}

proc garrow_array_slice*(
  array: ptr GArrowArray, offset: gint64, length: gint64
): ptr GArrowArray {.cdecl, importc: "garrow_array_slice".}

proc garrow_array_to_string*(
  array: ptr GArrowArray, error: ptr ptr GError
): cstring {.cdecl, importc: "garrow_array_to_string".}

proc garrow_array_view*(
  array: ptr GArrowArray, return_type: ptr GArrowDataType, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_array_view".}

proc garrow_array_diff_unified*(
  array: ptr GArrowArray, other_array: ptr GArrowArray
): cstring {.cdecl, importc: "garrow_array_diff_unified".}

proc garrow_array_concatenate*(
  array: ptr GArrowArray, other_arrays: ptr GList, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_array_concatenate".}

proc garrow_array_validate*(
  array: ptr GArrowArray, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_validate".}

proc garrow_array_validate_full*(
  array: ptr GArrowArray, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_validate_full".}

proc garrow_array_get_statistics*(
  array: ptr GArrowArray
): ptr GArrowArrayStatistics {.cdecl, importc: "garrow_array_get_statistics".}

proc garrow_null_array_get_type*(): GType {.
  cdecl, importc: "garrow_null_array_get_type"
.}

proc garrow_null_array_new*(
  length: gint64
): ptr GArrowNullArray {.cdecl, importc: "garrow_null_array_new".}

proc garrow_primitive_array_get_type*(): GType {.
  cdecl, importc: "garrow_primitive_array_get_type"
.}

proc garrow_primitive_array_get_buffer*(
  array: ptr GArrowPrimitiveArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_primitive_array_get_buffer".}

proc garrow_primitive_array_get_data_buffer*(
  array: ptr GArrowPrimitiveArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_primitive_array_get_data_buffer".}

proc garrow_boolean_array_get_type*(): GType {.
  cdecl, importc: "garrow_boolean_array_get_type"
.}

proc garrow_boolean_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_boolean_array_new".}

proc garrow_boolean_array_get_value*(
  array: ptr GArrowBooleanArray, i: gint64
): gboolean {.cdecl, importc: "garrow_boolean_array_get_value".}

proc garrow_boolean_array_get_values*(
  array: ptr GArrowBooleanArray, length: ptr gint64
): ptr gboolean {.cdecl, importc: "garrow_boolean_array_get_values".}

proc garrow_numeric_array_get_type*(): GType {.
  cdecl, importc: "garrow_numeric_array_get_type"
.}

proc garrow_int8_array_get_type*(): GType {.
  cdecl, importc: "garrow_int8_array_get_type"
.}

proc garrow_int8_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowInt8Array {.cdecl, importc: "garrow_int8_array_new".}

proc garrow_int8_array_get_value*(
  array: ptr GArrowInt8Array, i: gint64
): gint8 {.cdecl, importc: "garrow_int8_array_get_value".}

proc garrow_int8_array_get_values*(
  array: ptr GArrowInt8Array, length: ptr gint64
): cstring {.cdecl, importc: "garrow_int8_array_get_values".}

proc garrow_uint8_array_get_type*(): GType {.
  cdecl, importc: "garrow_uint8_array_get_type"
.}

proc garrow_uint8_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowUInt8Array {.cdecl, importc: "garrow_uint8_array_new".}

proc garrow_uint8_array_get_value*(
  array: ptr GArrowUInt8Array, i: gint64
): guint8 {.cdecl, importc: "garrow_uint8_array_get_value".}

proc garrow_uint8_array_get_values*(
  array: ptr GArrowUInt8Array, length: ptr gint64
): ptr guint8 {.cdecl, importc: "garrow_uint8_array_get_values".}

proc garrow_int16_array_get_type*(): GType {.
  cdecl, importc: "garrow_int16_array_get_type"
.}

proc garrow_int16_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowInt16Array {.cdecl, importc: "garrow_int16_array_new".}

proc garrow_int16_array_get_value*(
  array: ptr GArrowInt16Array, i: gint64
): gint16 {.cdecl, importc: "garrow_int16_array_get_value".}

proc garrow_int16_array_get_values*(
  array: ptr GArrowInt16Array, length: ptr gint64
): ptr gint16 {.cdecl, importc: "garrow_int16_array_get_values".}

proc garrow_uint16_array_get_type*(): GType {.
  cdecl, importc: "garrow_uint16_array_get_type"
.}

proc garrow_uint16_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowUInt16Array {.cdecl, importc: "garrow_uint16_array_new".}

proc garrow_uint16_array_get_value*(
  array: ptr GArrowUInt16Array, i: gint64
): guint16 {.cdecl, importc: "garrow_uint16_array_get_value".}

proc garrow_uint16_array_get_values*(
  array: ptr GArrowUInt16Array, length: ptr gint64
): ptr guint16 {.cdecl, importc: "garrow_uint16_array_get_values".}

proc garrow_int32_array_get_type*(): GType {.
  cdecl, importc: "garrow_int32_array_get_type"
.}

proc garrow_int32_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowInt32Array {.cdecl, importc: "garrow_int32_array_new".}

proc garrow_int32_array_get_value*(
  array: ptr GArrowInt32Array, i: gint64
): gint32 {.cdecl, importc: "garrow_int32_array_get_value".}

proc garrow_int32_array_get_values*(
  array: ptr GArrowInt32Array, length: ptr gint64
): ptr gint32 {.cdecl, importc: "garrow_int32_array_get_values".}

proc garrow_uint32_array_get_type*(): GType {.
  cdecl, importc: "garrow_uint32_array_get_type"
.}

proc garrow_uint32_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowUInt32Array {.cdecl, importc: "garrow_uint32_array_new".}

proc garrow_uint32_array_get_value*(
  array: ptr GArrowUInt32Array, i: gint64
): guint32 {.cdecl, importc: "garrow_uint32_array_get_value".}

proc garrow_uint32_array_get_values*(
  array: ptr GArrowUInt32Array, length: ptr gint64
): ptr guint32 {.cdecl, importc: "garrow_uint32_array_get_values".}

proc garrow_int64_array_get_type*(): GType {.
  cdecl, importc: "garrow_int64_array_get_type"
.}

proc garrow_int64_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowInt64Array {.cdecl, importc: "garrow_int64_array_new".}

proc garrow_int64_array_get_value*(
  array: ptr GArrowInt64Array, i: gint64
): gint64 {.cdecl, importc: "garrow_int64_array_get_value".}

proc garrow_int64_array_get_values*(
  array: ptr GArrowInt64Array, length: ptr gint64
): ptr gint64 {.cdecl, importc: "garrow_int64_array_get_values".}

proc garrow_uint64_array_get_type*(): GType {.
  cdecl, importc: "garrow_uint64_array_get_type"
.}

proc garrow_uint64_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_uint64_array_new".}

proc garrow_uint64_array_get_value*(
  array: ptr GArrowUInt64Array, i: gint64
): guint64 {.cdecl, importc: "garrow_uint64_array_get_value".}

proc garrow_uint64_array_get_values*(
  array: ptr GArrowUInt64Array, length: ptr gint64
): ptr guint64 {.cdecl, importc: "garrow_uint64_array_get_values".}

proc garrow_half_float_array_get_type*(): GType {.
  cdecl, importc: "garrow_half_float_array_get_type"
.}

proc garrow_half_float_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowHalfFloatArray {.cdecl, importc: "garrow_half_float_array_new".}

proc garrow_half_float_array_get_value*(
  array: ptr GArrowHalfFloatArray, i: gint64
): guint16 {.cdecl, importc: "garrow_half_float_array_get_value".}

proc garrow_half_float_array_get_values*(
  array: ptr GArrowHalfFloatArray, length: ptr gint64
): ptr guint16 {.cdecl, importc: "garrow_half_float_array_get_values".}

proc garrow_float_array_get_type*(): GType {.
  cdecl, importc: "garrow_float_array_get_type"
.}

proc garrow_float_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowFloatArray {.cdecl, importc: "garrow_float_array_new".}

proc garrow_float_array_get_value*(
  array: ptr GArrowFloatArray, i: gint64
): gfloat {.cdecl, importc: "garrow_float_array_get_value".}

proc garrow_float_array_get_values*(
  array: ptr GArrowFloatArray, length: ptr gint64
): ptr gfloat {.cdecl, importc: "garrow_float_array_get_values".}

proc garrow_double_array_get_type*(): GType {.
  cdecl, importc: "garrow_double_array_get_type"
.}

proc garrow_double_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowDoubleArray {.cdecl, importc: "garrow_double_array_new".}

proc garrow_double_array_get_value*(
  array: ptr GArrowDoubleArray, i: gint64
): gdouble {.cdecl, importc: "garrow_double_array_get_value".}

proc garrow_double_array_get_values*(
  array: ptr GArrowDoubleArray, length: ptr gint64
): ptr gdouble {.cdecl, importc: "garrow_double_array_get_values".}

proc garrow_binary_array_get_type*(): GType {.
  cdecl, importc: "garrow_binary_array_get_type"
.}

proc garrow_binary_array_new*(
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  value_data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowBinaryArray {.cdecl, importc: "garrow_binary_array_new".}

proc garrow_binary_array_get_value*(
  array: ptr GArrowBinaryArray, i: gint64
): ptr GBytes {.cdecl, importc: "garrow_binary_array_get_value".}

proc garrow_binary_array_get_buffer*(
  array: ptr GArrowBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_binary_array_get_buffer".}

proc garrow_binary_array_get_data_buffer*(
  array: ptr GArrowBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_binary_array_get_data_buffer".}

proc garrow_binary_array_get_offsets_buffer*(
  array: ptr GArrowBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_binary_array_get_offsets_buffer".}

proc garrow_large_binary_array_get_type*(): GType {.
  cdecl, importc: "garrow_large_binary_array_get_type"
.}

proc garrow_large_binary_array_new*(
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  value_data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowLargeBinaryArray {.cdecl, importc: "garrow_large_binary_array_new".}

proc garrow_large_binary_array_get_value*(
  array: ptr GArrowLargeBinaryArray, i: gint64
): ptr GBytes {.cdecl, importc: "garrow_large_binary_array_get_value".}

proc garrow_large_binary_array_get_buffer*(
  array: ptr GArrowLargeBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_large_binary_array_get_buffer".}

proc garrow_large_binary_array_get_data_buffer*(
  array: ptr GArrowLargeBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_large_binary_array_get_data_buffer".}

proc garrow_large_binary_array_get_offsets_buffer*(
  array: ptr GArrowLargeBinaryArray
): ptr GArrowBuffer {.cdecl, importc: "garrow_large_binary_array_get_offsets_buffer".}

proc garrow_string_array_get_type*(): GType {.
  cdecl, importc: "garrow_string_array_get_type"
.}

proc garrow_string_array_new*(
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  value_data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowStringArray {.cdecl, importc: "garrow_string_array_new".}

proc garrow_string_array_get_string*(
  array: ptr GArrowStringArray, i: gint64
): cstring {.cdecl, importc: "garrow_string_array_get_string".}

proc garrow_large_string_array_get_type*(): GType {.
  cdecl, importc: "garrow_large_string_array_get_type"
.}

proc garrow_large_string_array_new*(
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  value_data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowLargeStringArray {.cdecl, importc: "garrow_large_string_array_new".}

proc garrow_large_string_array_get_string*(
  array: ptr GArrowLargeStringArray, i: gint64
): cstring {.cdecl, importc: "garrow_large_string_array_get_string".}

proc garrow_binary_view_array_get_type*(): GType {.
  cdecl, importc: "garrow_binary_view_array_get_type"
.}

proc garrow_binary_view_array_new*(
  length: gint64,
  views: ptr GArrowBuffer,
  data_buffers: ptr GList,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
  offset: gint64,
): ptr GArrowBinaryViewArray {.cdecl, importc: "garrow_binary_view_array_new".}

proc garrow_binary_view_array_get_value*(
  array: ptr GArrowBinaryViewArray, i: gint64
): ptr GBytes {.cdecl, importc: "garrow_binary_view_array_get_value".}

proc garrow_string_view_array_get_type*(): GType {.
  cdecl, importc: "garrow_string_view_array_get_type"
.}

proc garrow_string_view_array_new*(
  length: gint64,
  views: ptr GArrowBuffer,
  data_buffers: ptr GList,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
  offset: gint64,
): ptr GArrowStringViewArray {.cdecl, importc: "garrow_string_view_array_new".}

proc garrow_string_view_array_get_value*(
  array: ptr GArrowStringViewArray, i: gint64
): ptr GBytes {.cdecl, importc: "garrow_string_view_array_get_value".}

proc garrow_date32_array_get_type*(): GType {.
  cdecl, importc: "garrow_date32_array_get_type"
.}

proc garrow_date32_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowDate32Array {.cdecl, importc: "garrow_date32_array_new".}

proc garrow_date32_array_get_value*(
  array: ptr GArrowDate32Array, i: gint64
): gint32 {.cdecl, importc: "garrow_date32_array_get_value".}

proc garrow_date32_array_get_values*(
  array: ptr GArrowDate32Array, length: ptr gint64
): ptr gint32 {.cdecl, importc: "garrow_date32_array_get_values".}

proc garrow_date64_array_get_type*(): GType {.
  cdecl, importc: "garrow_date64_array_get_type"
.}

proc garrow_date64_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowDate64Array {.cdecl, importc: "garrow_date64_array_new".}

proc garrow_date64_array_get_value*(
  array: ptr GArrowDate64Array, i: gint64
): gint64 {.cdecl, importc: "garrow_date64_array_get_value".}

proc garrow_date64_array_get_values*(
  array: ptr GArrowDate64Array, length: ptr gint64
): ptr gint64 {.cdecl, importc: "garrow_date64_array_get_values".}

proc garrow_timestamp_array_get_type*(): GType {.
  cdecl, importc: "garrow_timestamp_array_get_type"
.}

proc garrow_timestamp_array_new*(
  data_type: ptr GArrowTimestampDataType,
  length: gint64,
  data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowTimestampArray {.cdecl, importc: "garrow_timestamp_array_new".}

proc garrow_timestamp_array_get_value*(
  array: ptr GArrowTimestampArray, i: gint64
): gint64 {.cdecl, importc: "garrow_timestamp_array_get_value".}

proc garrow_timestamp_array_get_values*(
  array: ptr GArrowTimestampArray, length: ptr gint64
): ptr gint64 {.cdecl, importc: "garrow_timestamp_array_get_values".}

proc garrow_time32_array_get_type*(): GType {.
  cdecl, importc: "garrow_time32_array_get_type"
.}

proc garrow_time32_array_new*(
  data_type: ptr GArrowTime32DataType,
  length: gint64,
  data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowTime32Array {.cdecl, importc: "garrow_time32_array_new".}

proc garrow_time32_array_get_value*(
  array: ptr GArrowTime32Array, i: gint64
): gint32 {.cdecl, importc: "garrow_time32_array_get_value".}

proc garrow_time32_array_get_values*(
  array: ptr GArrowTime32Array, length: ptr gint64
): ptr gint32 {.cdecl, importc: "garrow_time32_array_get_values".}

proc garrow_time64_array_get_type*(): GType {.
  cdecl, importc: "garrow_time64_array_get_type"
.}

proc garrow_time64_array_new*(
  data_type: ptr GArrowTime64DataType,
  length: gint64,
  data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowTime64Array {.cdecl, importc: "garrow_time64_array_new".}

proc garrow_time64_array_get_value*(
  array: ptr GArrowTime64Array, i: gint64
): gint64 {.cdecl, importc: "garrow_time64_array_get_value".}

proc garrow_time64_array_get_values*(
  array: ptr GArrowTime64Array, length: ptr gint64
): ptr gint64 {.cdecl, importc: "garrow_time64_array_get_values".}

proc garrow_month_interval_array_get_type*(): GType {.
  cdecl, importc: "garrow_month_interval_array_get_type"
.}

proc garrow_month_interval_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowMonthIntervalArray {.cdecl, importc: "garrow_month_interval_array_new".}

proc garrow_month_interval_array_get_value*(
  array: ptr GArrowMonthIntervalArray, i: gint64
): gint32 {.cdecl, importc: "garrow_month_interval_array_get_value".}

proc garrow_month_interval_array_get_values*(
  array: ptr GArrowMonthIntervalArray, length: ptr gint64
): ptr gint32 {.cdecl, importc: "garrow_month_interval_array_get_values".}

proc garrow_day_time_interval_array_get_type*(): GType {.
  cdecl, importc: "garrow_day_time_interval_array_get_type"
.}

proc garrow_day_time_interval_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowDayTimeIntervalArray {.
  cdecl, importc: "garrow_day_time_interval_array_new"
.}

proc garrow_day_time_interval_array_get_value*(
  array: ptr GArrowDayTimeIntervalArray, i: gint64
): ptr GArrowDayMillisecond {.
  cdecl, importc: "garrow_day_time_interval_array_get_value"
.}

proc garrow_day_time_interval_array_get_values*(
  array: ptr GArrowDayTimeIntervalArray
): ptr GList {.cdecl, importc: "garrow_day_time_interval_array_get_values".}

proc garrow_month_day_nano_interval_array_get_type*(): GType {.
  cdecl, importc: "garrow_month_day_nano_interval_array_get_type"
.}

proc garrow_month_day_nano_interval_array_new*(
  length: gint64, data: ptr GArrowBuffer, null_bitmap: ptr GArrowBuffer, n_nulls: gint64
): ptr GArrowMonthDayNanoIntervalArray {.
  cdecl, importc: "garrow_month_day_nano_interval_array_new"
.}

proc garrow_month_day_nano_interval_array_get_value*(
  array: ptr GArrowMonthDayNanoIntervalArray, i: gint64
): ptr GArrowMonthDayNano {.
  cdecl, importc: "garrow_month_day_nano_interval_array_get_value"
.}

proc garrow_month_day_nano_interval_array_get_values*(
  array: ptr GArrowMonthDayNanoIntervalArray
): ptr GList {.cdecl, importc: "garrow_month_day_nano_interval_array_get_values".}

proc garrow_fixed_size_binary_array_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_size_binary_array_get_type"
.}

proc garrow_fixed_size_binary_array_new*(
  data_type: ptr GArrowFixedSizeBinaryDataType,
  length: gint64,
  data: ptr GArrowBuffer,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowFixedSizeBinaryArray {.
  cdecl, importc: "garrow_fixed_size_binary_array_new"
.}

proc garrow_fixed_size_binary_array_get_byte_width*(
  array: ptr GArrowFixedSizeBinaryArray
): gint32 {.cdecl, importc: "garrow_fixed_size_binary_array_get_byte_width".}

proc garrow_fixed_size_binary_array_get_value*(
  array: ptr GArrowFixedSizeBinaryArray, i: gint64
): ptr GBytes {.cdecl, importc: "garrow_fixed_size_binary_array_get_value".}

proc garrow_fixed_size_binary_array_get_values_bytes*(
  array: ptr GArrowFixedSizeBinaryArray
): ptr GBytes {.cdecl, importc: "garrow_fixed_size_binary_array_get_values_bytes".}

proc garrow_decimal32_array_get_type*(): GType {.
  cdecl, importc: "garrow_decimal32_array_get_type"
.}

proc garrow_decimal32_array_format_value*(
  array: ptr GArrowDecimal32Array, i: gint64
): cstring {.cdecl, importc: "garrow_decimal32_array_format_value".}

proc garrow_decimal32_array_get_value*(
  array: ptr GArrowDecimal32Array, i: gint64
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_array_get_value".}

proc garrow_decimal64_array_get_type*(): GType {.
  cdecl, importc: "garrow_decimal64_array_get_type"
.}

proc garrow_decimal64_array_format_value*(
  array: ptr GArrowDecimal64Array, i: gint64
): cstring {.cdecl, importc: "garrow_decimal64_array_format_value".}

proc garrow_decimal64_array_get_value*(
  array: ptr GArrowDecimal64Array, i: gint64
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_array_get_value".}

proc garrow_decimal128_array_get_type*(): GType {.
  cdecl, importc: "garrow_decimal128_array_get_type"
.}

proc garrow_decimal128_array_format_value*(
  array: ptr GArrowDecimal128Array, i: gint64
): cstring {.cdecl, importc: "garrow_decimal128_array_format_value".}

proc garrow_decimal128_array_get_value*(
  array: ptr GArrowDecimal128Array, i: gint64
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_array_get_value".}

proc garrow_decimal256_array_get_type*(): GType {.
  cdecl, importc: "garrow_decimal256_array_get_type"
.}

proc garrow_decimal256_array_format_value*(
  array: ptr GArrowDecimal256Array, i: gint64
): cstring {.cdecl, importc: "garrow_decimal256_array_format_value".}

proc garrow_decimal256_array_get_value*(
  array: ptr GArrowDecimal256Array, i: gint64
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_array_get_value".}

proc garrow_extension_array_get_storage*(
  array: ptr GArrowExtensionArray
): ptr GArrowArray {.cdecl, importc: "garrow_extension_array_get_storage".}

proc garrow_field_get_type*(): GType {.cdecl, importc: "garrow_field_get_type".}
proc garrow_field_import*(
  c_abi_schema: gpointer, error: ptr ptr GError
): ptr GArrowField {.cdecl, importc: "garrow_field_import".}

proc garrow_field_new*(
  name: cstring, data_type: ptr GArrowDataType
): ptr GArrowField {.cdecl, importc: "garrow_field_new".}

proc garrow_field_new_full*(
  name: cstring, data_type: ptr GArrowDataType, nullable: gboolean
): ptr GArrowField {.cdecl, importc: "garrow_field_new_full".}

proc garrow_field_export*(
  field: ptr GArrowField, error: ptr ptr GError
): gpointer {.cdecl, importc: "garrow_field_export".}

proc garrow_field_get_name*(
  field: ptr GArrowField
): cstring {.cdecl, importc: "garrow_field_get_name".}

proc garrow_field_get_data_type*(
  field: ptr GArrowField
): ptr GArrowDataType {.cdecl, importc: "garrow_field_get_data_type".}

proc garrow_field_is_nullable*(
  field: ptr GArrowField
): gboolean {.cdecl, importc: "garrow_field_is_nullable".}

proc garrow_field_equal*(
  field: ptr GArrowField, other_field: ptr GArrowField
): gboolean {.cdecl, importc: "garrow_field_equal".}

proc garrow_field_to_string*(
  field: ptr GArrowField
): cstring {.cdecl, importc: "garrow_field_to_string".}

proc garrow_field_to_string_metadata*(
  field: ptr GArrowField, show_metadata: gboolean
): cstring {.cdecl, importc: "garrow_field_to_string_metadata".}

proc garrow_field_has_metadata*(
  field: ptr GArrowField
): gboolean {.cdecl, importc: "garrow_field_has_metadata".}

proc garrow_field_get_metadata*(
  field: ptr GArrowField
): ptr GHashTable {.cdecl, importc: "garrow_field_get_metadata".}

proc garrow_field_with_metadata*(
  field: ptr GArrowField, metadata: ptr GHashTable
): ptr GArrowField {.cdecl, importc: "garrow_field_with_metadata".}

proc garrow_field_with_merged_metadata*(
  field: ptr GArrowField, metadata: ptr GHashTable
): ptr GArrowField {.cdecl, importc: "garrow_field_with_merged_metadata".}

proc garrow_field_remove_metadata*(
  field: ptr GArrowField
): ptr GArrowField {.cdecl, importc: "garrow_field_remove_metadata".}

proc garrow_base_list_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_base_list_data_type_get_type"
.}

proc garrow_base_list_data_type_get_field*(
  base_list_data_type: ptr GArrowBaseListDataType
): ptr GArrowField {.cdecl, importc: "garrow_base_list_data_type_get_field".}

proc garrow_list_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_list_data_type_get_type"
.}

proc garrow_list_data_type_new*(
  field: ptr GArrowField
): ptr GArrowListDataType {.cdecl, importc: "garrow_list_data_type_new".}

proc garrow_list_data_type_get_value_field*(
  list_data_type: ptr GArrowListDataType
): ptr GArrowField {.cdecl, importc: "garrow_list_data_type_get_value_field".}

proc garrow_list_data_type_get_field*(
  list_data_type: ptr GArrowListDataType
): ptr GArrowField {.cdecl, importc: "garrow_list_data_type_get_field".}

proc garrow_large_list_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_large_list_data_type_get_type"
.}

proc garrow_large_list_data_type_new*(
  field: ptr GArrowField
): ptr GArrowLargeListDataType {.cdecl, importc: "garrow_large_list_data_type_new".}

proc garrow_large_list_data_type_get_field*(
  large_list_data_type: ptr GArrowLargeListDataType
): ptr GArrowField {.cdecl, importc: "garrow_large_list_data_type_get_field".}

proc garrow_struct_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_struct_data_type_get_type"
.}

proc garrow_struct_data_type_new*(
  fields: ptr GList
): ptr GArrowStructDataType {.cdecl, importc: "garrow_struct_data_type_new".}

proc garrow_struct_data_type_get_n_fields*(
  struct_data_type: ptr GArrowStructDataType
): gint {.cdecl, importc: "garrow_struct_data_type_get_n_fields".}

proc garrow_struct_data_type_get_fields*(
  struct_data_type: ptr GArrowStructDataType
): ptr GList {.cdecl, importc: "garrow_struct_data_type_get_fields".}

proc garrow_struct_data_type_get_field*(
  struct_data_type: ptr GArrowStructDataType, i: gint
): ptr GArrowField {.cdecl, importc: "garrow_struct_data_type_get_field".}

proc garrow_struct_data_type_get_field_by_name*(
  struct_data_type: ptr GArrowStructDataType, name: cstring
): ptr GArrowField {.cdecl, importc: "garrow_struct_data_type_get_field_by_name".}

proc garrow_struct_data_type_get_field_index*(
  struct_data_type: ptr GArrowStructDataType, name: cstring
): gint {.cdecl, importc: "garrow_struct_data_type_get_field_index".}

proc garrow_map_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_map_data_type_get_type"
.}

proc garrow_map_data_type_new*(
  key_type: ptr GArrowDataType, item_type: ptr GArrowDataType
): ptr GArrowMapDataType {.cdecl, importc: "garrow_map_data_type_new".}

proc garrow_map_data_type_get_key_type*(
  map_data_type: ptr GArrowMapDataType
): ptr GArrowDataType {.cdecl, importc: "garrow_map_data_type_get_key_type".}

proc garrow_map_data_type_get_item_type*(
  map_data_type: ptr GArrowMapDataType
): ptr GArrowDataType {.cdecl, importc: "garrow_map_data_type_get_item_type".}

proc garrow_union_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_union_data_type_get_type"
.}

proc garrow_union_data_type_get_n_fields*(
  union_data_type: ptr GArrowUnionDataType
): gint {.cdecl, importc: "garrow_union_data_type_get_n_fields".}

proc garrow_union_data_type_get_fields*(
  union_data_type: ptr GArrowUnionDataType
): ptr GList {.cdecl, importc: "garrow_union_data_type_get_fields".}

proc garrow_union_data_type_get_field*(
  union_data_type: ptr GArrowUnionDataType, i: gint
): ptr GArrowField {.cdecl, importc: "garrow_union_data_type_get_field".}

proc garrow_union_data_type_get_type_codes*(
  union_data_type: ptr GArrowUnionDataType, n_type_codes: ptr gsize
): cstring {.cdecl, importc: "garrow_union_data_type_get_type_codes".}

proc garrow_sparse_union_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_sparse_union_data_type_get_type"
.}

proc garrow_sparse_union_data_type_new*(
  fields: ptr GList, type_codes: cstring, n_type_codes: gsize
): ptr GArrowSparseUnionDataType {.cdecl, importc: "garrow_sparse_union_data_type_new".}

proc garrow_dense_union_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_dense_union_data_type_get_type"
.}

proc garrow_dense_union_data_type_new*(
  fields: ptr GList, type_codes: cstring, n_type_codes: gsize
): ptr GArrowDenseUnionDataType {.cdecl, importc: "garrow_dense_union_data_type_new".}

proc garrow_dictionary_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_dictionary_data_type_get_type"
.}

proc garrow_dictionary_data_type_new*(
  index_data_type: ptr GArrowDataType,
  value_data_type: ptr GArrowDataType,
  ordered: gboolean,
): ptr GArrowDictionaryDataType {.cdecl, importc: "garrow_dictionary_data_type_new".}

proc garrow_dictionary_data_type_get_index_data_type*(
  dictionary_data_type: ptr GArrowDictionaryDataType
): ptr GArrowDataType {.
  cdecl, importc: "garrow_dictionary_data_type_get_index_data_type"
.}

proc garrow_dictionary_data_type_get_value_data_type*(
  dictionary_data_type: ptr GArrowDictionaryDataType
): ptr GArrowDataType {.
  cdecl, importc: "garrow_dictionary_data_type_get_value_data_type"
.}

proc garrow_dictionary_data_type_is_ordered*(
  dictionary_data_type: ptr GArrowDictionaryDataType
): gboolean {.cdecl, importc: "garrow_dictionary_data_type_is_ordered".}

proc garrow_run_end_encoded_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_run_end_encoded_data_type_get_type"
.}

proc garrow_run_end_encoded_data_type_new*(
  run_end_data_type: ptr GArrowDataType, value_data_type: ptr GArrowDataType
): ptr GArrowRunEndEncodedDataType {.
  cdecl, importc: "garrow_run_end_encoded_data_type_new"
.}

proc garrow_run_end_encoded_data_type_get_run_end_data_type*(
  data_type: ptr GArrowRunEndEncodedDataType
): ptr GArrowDataType {.
  cdecl, importc: "garrow_run_end_encoded_data_type_get_run_end_data_type"
.}

proc garrow_run_end_encoded_data_type_get_value_data_type*(
  data_type: ptr GArrowRunEndEncodedDataType
): ptr GArrowDataType {.
  cdecl, importc: "garrow_run_end_encoded_data_type_get_value_data_type"
.}

proc garrow_fixed_size_list_data_type_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_size_list_data_type_get_type"
.}

proc garrow_fixed_size_list_data_type_new_data_type*(
  value_type: ptr GArrowDataType, list_size: gint32
): ptr GArrowFixedSizeListDataType {.
  cdecl, importc: "garrow_fixed_size_list_data_type_new_data_type"
.}

proc garrow_fixed_size_list_data_type_new_field*(
  field: ptr GArrowField, list_size: gint32
): ptr GArrowFixedSizeListDataType {.
  cdecl, importc: "garrow_fixed_size_list_data_type_new_field"
.}

proc garrow_list_array_get_type*(): GType {.
  cdecl, importc: "garrow_list_array_get_type"
.}

proc garrow_list_array_new*(
  data_type: ptr GArrowDataType,
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  values: ptr GArrowArray,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowListArray {.cdecl, importc: "garrow_list_array_new".}

proc garrow_list_array_get_value_type*(
  array: ptr GArrowListArray
): ptr GArrowDataType {.cdecl, importc: "garrow_list_array_get_value_type".}

proc garrow_list_array_get_value*(
  array: ptr GArrowListArray, i: gint64
): ptr GArrowArray {.cdecl, importc: "garrow_list_array_get_value".}

proc garrow_list_array_get_values*(
  array: ptr GArrowListArray
): ptr GArrowArray {.cdecl, importc: "garrow_list_array_get_values".}

proc garrow_list_array_get_value_offset*(
  array: ptr GArrowListArray, i: gint64
): gint32 {.cdecl, importc: "garrow_list_array_get_value_offset".}

proc garrow_list_array_get_value_length*(
  array: ptr GArrowListArray, i: gint64
): gint32 {.cdecl, importc: "garrow_list_array_get_value_length".}

proc garrow_list_array_get_value_offsets*(
  array: ptr GArrowListArray, n_offsets: ptr gint64
): ptr gint32 {.cdecl, importc: "garrow_list_array_get_value_offsets".}

proc garrow_large_list_array_get_type*(): GType {.
  cdecl, importc: "garrow_large_list_array_get_type"
.}

proc garrow_large_list_array_new*(
  data_type: ptr GArrowDataType,
  length: gint64,
  value_offsets: ptr GArrowBuffer,
  values: ptr GArrowArray,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowLargeListArray {.cdecl, importc: "garrow_large_list_array_new".}

proc garrow_large_list_array_get_value_type*(
  array: ptr GArrowLargeListArray
): ptr GArrowDataType {.cdecl, importc: "garrow_large_list_array_get_value_type".}

proc garrow_large_list_array_get_value*(
  array: ptr GArrowLargeListArray, i: gint64
): ptr GArrowArray {.cdecl, importc: "garrow_large_list_array_get_value".}

proc garrow_large_list_array_get_values*(
  array: ptr GArrowLargeListArray
): ptr GArrowArray {.cdecl, importc: "garrow_large_list_array_get_values".}

proc garrow_large_list_array_get_value_offset*(
  array: ptr GArrowLargeListArray, i: gint64
): gint64 {.cdecl, importc: "garrow_large_list_array_get_value_offset".}

proc garrow_large_list_array_get_value_length*(
  array: ptr GArrowLargeListArray, i: gint64
): gint64 {.cdecl, importc: "garrow_large_list_array_get_value_length".}

proc garrow_large_list_array_get_value_offsets*(
  array: ptr GArrowLargeListArray, n_offsets: ptr gint64
): ptr gint64 {.cdecl, importc: "garrow_large_list_array_get_value_offsets".}

proc garrow_struct_array_get_type*(): GType {.
  cdecl, importc: "garrow_struct_array_get_type"
.}

proc garrow_struct_array_new*(
  data_type: ptr GArrowDataType,
  length: gint64,
  fields: ptr GList,
  null_bitmap: ptr GArrowBuffer,
  n_nulls: gint64,
): ptr GArrowStructArray {.cdecl, importc: "garrow_struct_array_new".}

proc garrow_struct_array_get_field*(
  array: ptr GArrowStructArray, i: gint
): ptr GArrowArray {.cdecl, importc: "garrow_struct_array_get_field".}

proc garrow_struct_array_get_fields*(
  array: ptr GArrowStructArray
): ptr GList {.cdecl, importc: "garrow_struct_array_get_fields".}

proc garrow_struct_array_flatten*(
  array: ptr GArrowStructArray, error: ptr ptr GError
): ptr GList {.cdecl, importc: "garrow_struct_array_flatten".}

proc garrow_map_array_get_type*(): GType {.cdecl, importc: "garrow_map_array_get_type".}
proc garrow_map_array_new*(
  offsets: ptr GArrowArray,
  keys: ptr GArrowArray,
  items: ptr GArrowArray,
  error: ptr ptr GError,
): ptr GArrowMapArray {.cdecl, importc: "garrow_map_array_new".}

proc garrow_map_array_get_keys*(
  array: ptr GArrowMapArray
): ptr GArrowArray {.cdecl, importc: "garrow_map_array_get_keys".}

proc garrow_map_array_get_items*(
  array: ptr GArrowMapArray
): ptr GArrowArray {.cdecl, importc: "garrow_map_array_get_items".}

proc garrow_union_array_get_type*(): GType {.
  cdecl, importc: "garrow_union_array_get_type"
.}

proc garrow_union_array_get_type_code*(
  array: ptr GArrowUnionArray, i: gint64
): gint8 {.cdecl, importc: "garrow_union_array_get_type_code".}

proc garrow_union_array_get_child_id*(
  array: ptr GArrowUnionArray, i: gint64
): gint {.cdecl, importc: "garrow_union_array_get_child_id".}

proc garrow_union_array_get_field*(
  array: ptr GArrowUnionArray, i: gint
): ptr GArrowArray {.cdecl, importc: "garrow_union_array_get_field".}

proc garrow_sparse_union_array_get_type*(): GType {.
  cdecl, importc: "garrow_sparse_union_array_get_type"
.}

proc garrow_sparse_union_array_new*(
  type_ids: ptr GArrowInt8Array, fields: ptr GList, error: ptr ptr GError
): ptr GArrowSparseUnionArray {.cdecl, importc: "garrow_sparse_union_array_new".}

proc garrow_sparse_union_array_new_data_type*(
  data_type: ptr GArrowSparseUnionDataType,
  type_ids: ptr GArrowInt8Array,
  fields: ptr GList,
  error: ptr ptr GError,
): ptr GArrowSparseUnionArray {.
  cdecl, importc: "garrow_sparse_union_array_new_data_type"
.}

proc garrow_dense_union_array_get_type*(): GType {.
  cdecl, importc: "garrow_dense_union_array_get_type"
.}

proc garrow_dense_union_array_new*(
  type_ids: ptr GArrowInt8Array,
  value_offsets: ptr GArrowInt32Array,
  fields: ptr GList,
  error: ptr ptr GError,
): ptr GArrowDenseUnionArray {.cdecl, importc: "garrow_dense_union_array_new".}

proc garrow_dense_union_array_new_data_type*(
  data_type: ptr GArrowDenseUnionDataType,
  type_ids: ptr GArrowInt8Array,
  value_offsets: ptr GArrowInt32Array,
  fields: ptr GList,
  error: ptr ptr GError,
): ptr GArrowDenseUnionArray {.
  cdecl, importc: "garrow_dense_union_array_new_data_type"
.}

proc garrow_dense_union_array_get_value_offset*(
  array: ptr GArrowDenseUnionArray, i: gint64
): gint32 {.cdecl, importc: "garrow_dense_union_array_get_value_offset".}

proc garrow_dictionary_array_get_type*(): GType {.
  cdecl, importc: "garrow_dictionary_array_get_type"
.}

proc garrow_dictionary_array_new*(
  data_type: ptr GArrowDataType,
  indices: ptr GArrowArray,
  dictionary: ptr GArrowArray,
  error: ptr ptr GError,
): ptr GArrowDictionaryArray {.cdecl, importc: "garrow_dictionary_array_new".}

proc garrow_dictionary_array_get_indices*(
  array: ptr GArrowDictionaryArray
): ptr GArrowArray {.cdecl, importc: "garrow_dictionary_array_get_indices".}

proc garrow_dictionary_array_get_dictionary*(
  array: ptr GArrowDictionaryArray
): ptr GArrowArray {.cdecl, importc: "garrow_dictionary_array_get_dictionary".}

proc garrow_dictionary_array_get_dictionary_data_type*(
  array: ptr GArrowDictionaryArray
): ptr GArrowDictionaryDataType {.
  cdecl, importc: "garrow_dictionary_array_get_dictionary_data_type"
.}

proc garrow_run_end_encoded_array_get_type*(): GType {.
  cdecl, importc: "garrow_run_end_encoded_array_get_type"
.}

proc garrow_run_end_encoded_array_new*(
  data_type: ptr GArrowDataType,
  logical_length: gint64,
  run_ends: ptr GArrowArray,
  values: ptr GArrowArray,
  logical_offset: gint64,
  error: ptr ptr GError,
): ptr GArrowRunEndEncodedArray {.cdecl, importc: "garrow_run_end_encoded_array_new".}

proc garrow_run_end_encoded_array_get_run_ends*(
  array: ptr GArrowRunEndEncodedArray
): ptr GArrowArray {.cdecl, importc: "garrow_run_end_encoded_array_get_run_ends".}

proc garrow_run_end_encoded_array_get_values*(
  array: ptr GArrowRunEndEncodedArray
): ptr GArrowArray {.cdecl, importc: "garrow_run_end_encoded_array_get_values".}

proc garrow_run_end_encoded_array_get_logical_run_ends*(
  array: ptr GArrowRunEndEncodedArray, error: ptr ptr GError
): ptr GArrowArray {.
  cdecl, importc: "garrow_run_end_encoded_array_get_logical_run_ends"
.}

proc garrow_run_end_encoded_array_get_logical_values*(
  array: ptr GArrowRunEndEncodedArray
): ptr GArrowArray {.cdecl, importc: "garrow_run_end_encoded_array_get_logical_values".}

proc garrow_run_end_encoded_array_find_physical_offset*(
  array: ptr GArrowRunEndEncodedArray
): gint64 {.cdecl, importc: "garrow_run_end_encoded_array_find_physical_offset".}

proc garrow_run_end_encoded_array_find_physical_length*(
  array: ptr GArrowRunEndEncodedArray
): gint64 {.cdecl, importc: "garrow_run_end_encoded_array_find_physical_length".}

proc garrow_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_array_builder_get_type"
.}

proc garrow_array_builder_get_value_data_type*(
  builder: ptr GArrowArrayBuilder
): ptr GArrowDataType {.cdecl, importc: "garrow_array_builder_get_value_data_type".}

proc garrow_array_builder_get_value_type*(
  builder: ptr GArrowArrayBuilder
): GArrowType {.cdecl, importc: "garrow_array_builder_get_value_type".}

proc garrow_array_builder_finish*(
  builder: ptr GArrowArrayBuilder, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_array_builder_finish".}

proc garrow_array_builder_reset*(
  builder: ptr GArrowArrayBuilder
): void {.cdecl, importc: "garrow_array_builder_reset".}

proc garrow_array_builder_get_capacity*(
  builder: ptr GArrowArrayBuilder
): gint64 {.cdecl, importc: "garrow_array_builder_get_capacity".}

proc garrow_array_builder_get_length*(
  builder: ptr GArrowArrayBuilder
): gint64 {.cdecl, importc: "garrow_array_builder_get_length".}

proc garrow_array_builder_get_n_nulls*(
  builder: ptr GArrowArrayBuilder
): gint64 {.cdecl, importc: "garrow_array_builder_get_n_nulls".}

proc garrow_array_builder_get_child*(
  builder: ptr GArrowArrayBuilder, i: gint
): ptr GArrowArrayBuilder {.cdecl, importc: "garrow_array_builder_get_child".}

proc garrow_array_builder_get_children*(
  builder: ptr GArrowArrayBuilder
): ptr GList {.cdecl, importc: "garrow_array_builder_get_children".}

proc garrow_array_builder_resize*(
  builder: ptr GArrowArrayBuilder, capacity: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_resize".}

proc garrow_array_builder_reserve*(
  builder: ptr GArrowArrayBuilder, additional_capacity: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_reserve".}

proc garrow_array_builder_append_null*(
  builder: ptr GArrowArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_append_null".}

proc garrow_array_builder_append_nulls*(
  builder: ptr GArrowArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_append_nulls".}

proc garrow_array_builder_append_empty_value*(
  builder: ptr GArrowArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_append_empty_value".}

proc garrow_array_builder_append_empty_values*(
  builder: ptr GArrowArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_array_builder_append_empty_values".}

proc garrow_null_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_null_array_builder_get_type"
.}

proc garrow_null_array_builder_new*(): ptr GArrowNullArrayBuilder {.
  cdecl, importc: "garrow_null_array_builder_new"
.}

proc garrow_null_array_builder_append_null*(
  builder: ptr GArrowNullArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_null_array_builder_append_null".}

proc garrow_null_array_builder_append_nulls*(
  builder: ptr GArrowNullArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_null_array_builder_append_nulls".}

proc garrow_boolean_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_boolean_array_builder_get_type"
.}

proc garrow_boolean_array_builder_new*(): ptr GArrowBooleanArrayBuilder {.
  cdecl, importc: "garrow_boolean_array_builder_new"
.}

proc garrow_boolean_array_builder_append*(
  builder: ptr GArrowBooleanArrayBuilder, value: gboolean, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_boolean_array_builder_append".}

proc garrow_boolean_array_builder_append_value*(
  builder: ptr GArrowBooleanArrayBuilder, value: gboolean, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_boolean_array_builder_append_value".}

proc garrow_boolean_array_builder_append_values*(
  builder: ptr GArrowBooleanArrayBuilder,
  values: ptr gboolean,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_boolean_array_builder_append_values".}

proc garrow_boolean_array_builder_append_null*(
  builder: ptr GArrowBooleanArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_boolean_array_builder_append_null".}

proc garrow_boolean_array_builder_append_nulls*(
  builder: ptr GArrowBooleanArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_boolean_array_builder_append_nulls".}

proc garrow_int_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_int_array_builder_get_type"
.}

proc garrow_int_array_builder_new*(): ptr GArrowIntArrayBuilder {.
  cdecl, importc: "garrow_int_array_builder_new"
.}

proc garrow_int_array_builder_append*(
  builder: ptr GArrowIntArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int_array_builder_append".}

proc garrow_int_array_builder_append_value*(
  builder: ptr GArrowIntArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int_array_builder_append_value".}

proc garrow_int_array_builder_append_values*(
  builder: ptr GArrowIntArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_int_array_builder_append_values".}

proc garrow_int_array_builder_append_null*(
  builder: ptr GArrowIntArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int_array_builder_append_null".}

proc garrow_int_array_builder_append_nulls*(
  builder: ptr GArrowIntArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int_array_builder_append_nulls".}

proc garrow_uint_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_uint_array_builder_get_type"
.}

proc garrow_uint_array_builder_new*(): ptr GArrowUIntArrayBuilder {.
  cdecl, importc: "garrow_uint_array_builder_new"
.}

proc garrow_uint_array_builder_append*(
  builder: ptr GArrowUIntArrayBuilder, value: guint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint_array_builder_append".}

proc garrow_uint_array_builder_append_value*(
  builder: ptr GArrowUIntArrayBuilder, value: guint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint_array_builder_append_value".}

proc garrow_uint_array_builder_append_values*(
  builder: ptr GArrowUIntArrayBuilder,
  values: ptr guint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_uint_array_builder_append_values".}

proc garrow_uint_array_builder_append_null*(
  builder: ptr GArrowUIntArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint_array_builder_append_null".}

proc garrow_uint_array_builder_append_nulls*(
  builder: ptr GArrowUIntArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint_array_builder_append_nulls".}

proc garrow_int8_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_int8_array_builder_get_type"
.}

proc garrow_int8_array_builder_new*(): ptr GArrowInt8ArrayBuilder {.
  cdecl, importc: "garrow_int8_array_builder_new"
.}

proc garrow_int8_array_builder_append*(
  builder: ptr GArrowInt8ArrayBuilder, value: gint8, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int8_array_builder_append".}

proc garrow_int8_array_builder_append_value*(
  builder: ptr GArrowInt8ArrayBuilder, value: gint8, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int8_array_builder_append_value".}

proc garrow_int8_array_builder_append_values*(
  builder: ptr GArrowInt8ArrayBuilder,
  values: cstring,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_int8_array_builder_append_values".}

proc garrow_int8_array_builder_append_null*(
  builder: ptr GArrowInt8ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int8_array_builder_append_null".}

proc garrow_int8_array_builder_append_nulls*(
  builder: ptr GArrowInt8ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int8_array_builder_append_nulls".}

proc garrow_uint8_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_uint8_array_builder_get_type"
.}

proc garrow_uint8_array_builder_new*(): ptr GArrowUInt8ArrayBuilder {.
  cdecl, importc: "garrow_uint8_array_builder_new"
.}

proc garrow_uint8_array_builder_append*(
  builder: ptr GArrowUInt8ArrayBuilder, value: guint8, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint8_array_builder_append".}

proc garrow_uint8_array_builder_append_value*(
  builder: ptr GArrowUInt8ArrayBuilder, value: guint8, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint8_array_builder_append_value".}

proc garrow_uint8_array_builder_append_values*(
  builder: ptr GArrowUInt8ArrayBuilder,
  values: ptr guint8,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_uint8_array_builder_append_values".}

proc garrow_uint8_array_builder_append_null*(
  builder: ptr GArrowUInt8ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint8_array_builder_append_null".}

proc garrow_uint8_array_builder_append_nulls*(
  builder: ptr GArrowUInt8ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint8_array_builder_append_nulls".}

proc garrow_int16_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_int16_array_builder_get_type"
.}

proc garrow_int16_array_builder_new*(): ptr GArrowInt16ArrayBuilder {.
  cdecl, importc: "garrow_int16_array_builder_new"
.}

proc garrow_int16_array_builder_append*(
  builder: ptr GArrowInt16ArrayBuilder, value: gint16, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int16_array_builder_append".}

proc garrow_int16_array_builder_append_value*(
  builder: ptr GArrowInt16ArrayBuilder, value: gint16, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int16_array_builder_append_value".}

proc garrow_int16_array_builder_append_values*(
  builder: ptr GArrowInt16ArrayBuilder,
  values: ptr gint16,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_int16_array_builder_append_values".}

proc garrow_int16_array_builder_append_null*(
  builder: ptr GArrowInt16ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int16_array_builder_append_null".}

proc garrow_int16_array_builder_append_nulls*(
  builder: ptr GArrowInt16ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int16_array_builder_append_nulls".}

proc garrow_uint16_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_uint16_array_builder_get_type"
.}

proc garrow_uint16_array_builder_new*(): ptr GArrowUInt16ArrayBuilder {.
  cdecl, importc: "garrow_uint16_array_builder_new"
.}

proc garrow_uint16_array_builder_append*(
  builder: ptr GArrowUInt16ArrayBuilder, value: guint16, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint16_array_builder_append".}

proc garrow_uint16_array_builder_append_value*(
  builder: ptr GArrowUInt16ArrayBuilder, value: guint16, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint16_array_builder_append_value".}

proc garrow_uint16_array_builder_append_values*(
  builder: ptr GArrowUInt16ArrayBuilder,
  values: ptr guint16,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_uint16_array_builder_append_values".}

proc garrow_uint16_array_builder_append_null*(
  builder: ptr GArrowUInt16ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint16_array_builder_append_null".}

proc garrow_uint16_array_builder_append_nulls*(
  builder: ptr GArrowUInt16ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint16_array_builder_append_nulls".}

proc garrow_int32_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_int32_array_builder_get_type"
.}

proc garrow_int32_array_builder_new*(): ptr GArrowInt32ArrayBuilder {.
  cdecl, importc: "garrow_int32_array_builder_new"
.}

proc garrow_int32_array_builder_append*(
  builder: ptr GArrowInt32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int32_array_builder_append".}

proc garrow_int32_array_builder_append_value*(
  builder: ptr GArrowInt32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int32_array_builder_append_value".}

proc garrow_int32_array_builder_append_values*(
  builder: ptr GArrowInt32ArrayBuilder,
  values: ptr gint32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_int32_array_builder_append_values".}

proc garrow_int32_array_builder_append_null*(
  builder: ptr GArrowInt32ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int32_array_builder_append_null".}

proc garrow_int32_array_builder_append_nulls*(
  builder: ptr GArrowInt32ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int32_array_builder_append_nulls".}

proc garrow_uint32_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_uint32_array_builder_get_type"
.}

proc garrow_uint32_array_builder_new*(): ptr GArrowUInt32ArrayBuilder {.
  cdecl, importc: "garrow_uint32_array_builder_new"
.}

proc garrow_uint32_array_builder_append*(
  builder: ptr GArrowUInt32ArrayBuilder, value: guint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint32_array_builder_append".}

proc garrow_uint32_array_builder_append_value*(
  builder: ptr GArrowUInt32ArrayBuilder, value: guint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint32_array_builder_append_value".}

proc garrow_uint32_array_builder_append_values*(
  builder: ptr GArrowUInt32ArrayBuilder,
  values: ptr guint32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_uint32_array_builder_append_values".}

proc garrow_uint32_array_builder_append_null*(
  builder: ptr GArrowUInt32ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint32_array_builder_append_null".}

proc garrow_uint32_array_builder_append_nulls*(
  builder: ptr GArrowUInt32ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint32_array_builder_append_nulls".}

proc garrow_int64_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_int64_array_builder_get_type"
.}

proc garrow_int64_array_builder_new*(): ptr GArrowInt64ArrayBuilder {.
  cdecl, importc: "garrow_int64_array_builder_new"
.}

proc garrow_int64_array_builder_append*(
  builder: ptr GArrowInt64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int64_array_builder_append".}

proc garrow_int64_array_builder_append_value*(
  builder: ptr GArrowInt64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int64_array_builder_append_value".}

proc garrow_int64_array_builder_append_values*(
  builder: ptr GArrowInt64ArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_int64_array_builder_append_values".}

proc garrow_int64_array_builder_append_null*(
  builder: ptr GArrowInt64ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int64_array_builder_append_null".}

proc garrow_int64_array_builder_append_nulls*(
  builder: ptr GArrowInt64ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_int64_array_builder_append_nulls".}

proc garrow_uint64_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_uint64_array_builder_get_type"
.}

proc garrow_uint64_array_builder_new*(): ptr GArrowUInt64ArrayBuilder {.
  cdecl, importc: "garrow_uint64_array_builder_new"
.}

proc garrow_uint64_array_builder_append*(
  builder: ptr GArrowUInt64ArrayBuilder, value: guint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint64_array_builder_append".}

proc garrow_uint64_array_builder_append_value*(
  builder: ptr GArrowUInt64ArrayBuilder, value: guint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint64_array_builder_append_value".}

proc garrow_uint64_array_builder_append_values*(
  builder: ptr GArrowUInt64ArrayBuilder,
  values: ptr guint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_uint64_array_builder_append_values".}

proc garrow_uint64_array_builder_append_null*(
  builder: ptr GArrowUInt64ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint64_array_builder_append_null".}

proc garrow_uint64_array_builder_append_nulls*(
  builder: ptr GArrowUInt64ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_uint64_array_builder_append_nulls".}

proc garrow_half_float_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_half_float_array_builder_get_type"
.}

proc garrow_half_float_array_builder_new*(): ptr GArrowHalfFloatArrayBuilder {.
  cdecl, importc: "garrow_half_float_array_builder_new"
.}

proc garrow_half_float_array_builder_append_value*(
  builder: ptr GArrowHalfFloatArrayBuilder, value: guint16, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_half_float_array_builder_append_value".}

proc garrow_half_float_array_builder_append_values*(
  builder: ptr GArrowHalfFloatArrayBuilder,
  values: ptr guint16,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_half_float_array_builder_append_values".}

proc garrow_float_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_float_array_builder_get_type"
.}

proc garrow_float_array_builder_new*(): ptr GArrowFloatArrayBuilder {.
  cdecl, importc: "garrow_float_array_builder_new"
.}

proc garrow_float_array_builder_append*(
  builder: ptr GArrowFloatArrayBuilder, value: gfloat, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_float_array_builder_append".}

proc garrow_float_array_builder_append_value*(
  builder: ptr GArrowFloatArrayBuilder, value: gfloat, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_float_array_builder_append_value".}

proc garrow_float_array_builder_append_values*(
  builder: ptr GArrowFloatArrayBuilder,
  values: ptr gfloat,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_float_array_builder_append_values".}

proc garrow_float_array_builder_append_null*(
  builder: ptr GArrowFloatArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_float_array_builder_append_null".}

proc garrow_float_array_builder_append_nulls*(
  builder: ptr GArrowFloatArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_float_array_builder_append_nulls".}

proc garrow_double_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_double_array_builder_get_type"
.}

proc garrow_double_array_builder_new*(): ptr GArrowDoubleArrayBuilder {.
  cdecl, importc: "garrow_double_array_builder_new"
.}

proc garrow_double_array_builder_append*(
  builder: ptr GArrowDoubleArrayBuilder, value: gdouble, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_double_array_builder_append".}

proc garrow_double_array_builder_append_value*(
  builder: ptr GArrowDoubleArrayBuilder, value: gdouble, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_double_array_builder_append_value".}

proc garrow_double_array_builder_append_values*(
  builder: ptr GArrowDoubleArrayBuilder,
  values: ptr gdouble,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_double_array_builder_append_values".}

proc garrow_double_array_builder_append_null*(
  builder: ptr GArrowDoubleArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_double_array_builder_append_null".}

proc garrow_double_array_builder_append_nulls*(
  builder: ptr GArrowDoubleArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_double_array_builder_append_nulls".}

proc garrow_binary_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_binary_array_builder_get_type"
.}

proc garrow_binary_array_builder_new*(): ptr GArrowBinaryArrayBuilder {.
  cdecl, importc: "garrow_binary_array_builder_new"
.}

proc garrow_binary_array_builder_append*(
  builder: ptr GArrowBinaryArrayBuilder,
  value: ptr guint8,
  length: gint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append".}

proc garrow_binary_array_builder_append_value*(
  builder: ptr GArrowBinaryArrayBuilder,
  value: ptr guint8,
  length: gint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append_value".}

proc garrow_binary_array_builder_append_value_bytes*(
  builder: ptr GArrowBinaryArrayBuilder, value: ptr GBytes, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append_value_bytes".}

proc garrow_binary_array_builder_append_values*(
  builder: ptr GArrowBinaryArrayBuilder,
  values: ptr ptr GBytes,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append_values".}

proc garrow_binary_array_builder_append_null*(
  builder: ptr GArrowBinaryArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append_null".}

proc garrow_binary_array_builder_append_nulls*(
  builder: ptr GArrowBinaryArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_binary_array_builder_append_nulls".}

proc garrow_large_binary_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_large_binary_array_builder_get_type"
.}

proc garrow_large_binary_array_builder_new*(): ptr GArrowLargeBinaryArrayBuilder {.
  cdecl, importc: "garrow_large_binary_array_builder_new"
.}

proc garrow_large_binary_array_builder_append_value*(
  builder: ptr GArrowLargeBinaryArrayBuilder,
  value: ptr guint8,
  length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_large_binary_array_builder_append_value".}

proc garrow_large_binary_array_builder_append_value_bytes*(
  builder: ptr GArrowLargeBinaryArrayBuilder, value: ptr GBytes, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_binary_array_builder_append_value_bytes".}

proc garrow_large_binary_array_builder_append_values*(
  builder: ptr GArrowLargeBinaryArrayBuilder,
  values: ptr ptr GBytes,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_large_binary_array_builder_append_values".}

proc garrow_large_binary_array_builder_append_null*(
  builder: ptr GArrowLargeBinaryArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_binary_array_builder_append_null".}

proc garrow_large_binary_array_builder_append_nulls*(
  builder: ptr GArrowLargeBinaryArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_binary_array_builder_append_nulls".}

proc garrow_string_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_string_array_builder_get_type"
.}

proc garrow_string_array_builder_new*(): ptr GArrowStringArrayBuilder {.
  cdecl, importc: "garrow_string_array_builder_new"
.}

proc garrow_string_array_builder_append*(
  builder: ptr GArrowStringArrayBuilder, value: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_string_array_builder_append".}

proc garrow_string_array_builder_append_value*(
  builder: ptr GArrowStringArrayBuilder, value: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_string_array_builder_append_value".}

proc garrow_string_array_builder_append_string*(
  builder: ptr GArrowStringArrayBuilder, value: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_string_array_builder_append_string".}

proc garrow_string_array_builder_append_string_len*(
  builder: ptr GArrowStringArrayBuilder,
  value: cstring,
  length: gint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_array_builder_append_string_len".}

proc garrow_string_array_builder_append_values*(
  builder: ptr GArrowStringArrayBuilder,
  values: ptr cstring,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_array_builder_append_values".}

proc garrow_string_array_builder_append_strings*(
  builder: ptr GArrowStringArrayBuilder,
  values: ptr cstring,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_array_builder_append_strings".}

proc garrow_large_string_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_large_string_array_builder_get_type"
.}

proc garrow_large_string_array_builder_new*(): ptr GArrowLargeStringArrayBuilder {.
  cdecl, importc: "garrow_large_string_array_builder_new"
.}

proc garrow_large_string_array_builder_append_string*(
  builder: ptr GArrowLargeStringArrayBuilder, value: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_string_array_builder_append_string".}

proc garrow_large_string_array_builder_append_string_len*(
  builder: ptr GArrowLargeStringArrayBuilder,
  value: cstring,
  length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_large_string_array_builder_append_string_len".}

proc garrow_large_string_array_builder_append_strings*(
  builder: ptr GArrowLargeStringArrayBuilder,
  values: ptr cstring,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_large_string_array_builder_append_strings".}

proc garrow_fixed_size_binary_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_size_binary_array_builder_get_type"
.}

proc garrow_fixed_size_binary_array_builder_new*(
  data_type: ptr GArrowFixedSizeBinaryDataType
): ptr GArrowFixedSizeBinaryArrayBuilder {.
  cdecl, importc: "garrow_fixed_size_binary_array_builder_new"
.}

proc garrow_fixed_size_binary_array_builder_append_value*(
  builder: ptr GArrowFixedSizeBinaryArrayBuilder,
  value: ptr guint8,
  length: gint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_fixed_size_binary_array_builder_append_value".}

proc garrow_fixed_size_binary_array_builder_append_value_bytes*(
  builder: ptr GArrowFixedSizeBinaryArrayBuilder,
  value: ptr GBytes,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_fixed_size_binary_array_builder_append_value_bytes"
.}

proc garrow_fixed_size_binary_array_builder_append_values*(
  builder: ptr GArrowFixedSizeBinaryArrayBuilder,
  values: ptr ptr GBytes,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_fixed_size_binary_array_builder_append_values".}

proc garrow_fixed_size_binary_array_builder_append_values_packed*(
  builder: ptr GArrowFixedSizeBinaryArrayBuilder,
  values: ptr GBytes,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_fixed_size_binary_array_builder_append_values_packed"
.}

proc garrow_date32_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_date32_array_builder_get_type"
.}

proc garrow_date32_array_builder_new*(): ptr GArrowDate32ArrayBuilder {.
  cdecl, importc: "garrow_date32_array_builder_new"
.}

proc garrow_date32_array_builder_append*(
  builder: ptr GArrowDate32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date32_array_builder_append".}

proc garrow_date32_array_builder_append_value*(
  builder: ptr GArrowDate32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date32_array_builder_append_value".}

proc garrow_date32_array_builder_append_values*(
  builder: ptr GArrowDate32ArrayBuilder,
  values: ptr gint32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_date32_array_builder_append_values".}

proc garrow_date32_array_builder_append_null*(
  builder: ptr GArrowDate32ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date32_array_builder_append_null".}

proc garrow_date32_array_builder_append_nulls*(
  builder: ptr GArrowDate32ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date32_array_builder_append_nulls".}

proc garrow_date64_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_date64_array_builder_get_type"
.}

proc garrow_date64_array_builder_new*(): ptr GArrowDate64ArrayBuilder {.
  cdecl, importc: "garrow_date64_array_builder_new"
.}

proc garrow_date64_array_builder_append*(
  builder: ptr GArrowDate64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date64_array_builder_append".}

proc garrow_date64_array_builder_append_value*(
  builder: ptr GArrowDate64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date64_array_builder_append_value".}

proc garrow_date64_array_builder_append_values*(
  builder: ptr GArrowDate64ArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_date64_array_builder_append_values".}

proc garrow_date64_array_builder_append_null*(
  builder: ptr GArrowDate64ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date64_array_builder_append_null".}

proc garrow_date64_array_builder_append_nulls*(
  builder: ptr GArrowDate64ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_date64_array_builder_append_nulls".}

proc garrow_timestamp_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_timestamp_array_builder_get_type"
.}

proc garrow_timestamp_array_builder_new*(
  data_type: ptr GArrowTimestampDataType
): ptr GArrowTimestampArrayBuilder {.
  cdecl, importc: "garrow_timestamp_array_builder_new"
.}

proc garrow_timestamp_array_builder_append*(
  builder: ptr GArrowTimestampArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_timestamp_array_builder_append".}

proc garrow_timestamp_array_builder_append_value*(
  builder: ptr GArrowTimestampArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_timestamp_array_builder_append_value".}

proc garrow_timestamp_array_builder_append_values*(
  builder: ptr GArrowTimestampArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_timestamp_array_builder_append_values".}

proc garrow_timestamp_array_builder_append_null*(
  builder: ptr GArrowTimestampArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_timestamp_array_builder_append_null".}

proc garrow_timestamp_array_builder_append_nulls*(
  builder: ptr GArrowTimestampArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_timestamp_array_builder_append_nulls".}

proc garrow_time32_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_time32_array_builder_get_type"
.}

proc garrow_time32_array_builder_new*(
  data_type: ptr GArrowTime32DataType
): ptr GArrowTime32ArrayBuilder {.cdecl, importc: "garrow_time32_array_builder_new".}

proc garrow_time32_array_builder_append*(
  builder: ptr GArrowTime32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time32_array_builder_append".}

proc garrow_time32_array_builder_append_value*(
  builder: ptr GArrowTime32ArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time32_array_builder_append_value".}

proc garrow_time32_array_builder_append_values*(
  builder: ptr GArrowTime32ArrayBuilder,
  values: ptr gint32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_time32_array_builder_append_values".}

proc garrow_time32_array_builder_append_null*(
  builder: ptr GArrowTime32ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time32_array_builder_append_null".}

proc garrow_time32_array_builder_append_nulls*(
  builder: ptr GArrowTime32ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time32_array_builder_append_nulls".}

proc garrow_time64_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_time64_array_builder_get_type"
.}

proc garrow_time64_array_builder_new*(
  data_type: ptr GArrowTime64DataType
): ptr GArrowTime64ArrayBuilder {.cdecl, importc: "garrow_time64_array_builder_new".}

proc garrow_time64_array_builder_append*(
  builder: ptr GArrowTime64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time64_array_builder_append".}

proc garrow_time64_array_builder_append_value*(
  builder: ptr GArrowTime64ArrayBuilder, value: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time64_array_builder_append_value".}

proc garrow_time64_array_builder_append_values*(
  builder: ptr GArrowTime64ArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_time64_array_builder_append_values".}

proc garrow_time64_array_builder_append_null*(
  builder: ptr GArrowTime64ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time64_array_builder_append_null".}

proc garrow_time64_array_builder_append_nulls*(
  builder: ptr GArrowTime64ArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_time64_array_builder_append_nulls".}

proc garrow_month_interval_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_month_interval_array_builder_get_type"
.}

proc garrow_month_interval_array_builder_new*(): ptr GArrowMonthIntervalArrayBuilder {.
  cdecl, importc: "garrow_month_interval_array_builder_new"
.}

proc garrow_month_interval_array_builder_append_value*(
  builder: ptr GArrowMonthIntervalArrayBuilder, value: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_month_interval_array_builder_append_value".}

proc garrow_month_interval_array_builder_append_values*(
  builder: ptr GArrowMonthIntervalArrayBuilder,
  values: ptr gint32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_month_interval_array_builder_append_values".}

proc garrow_day_time_interval_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_day_time_interval_array_builder_get_type"
.}

proc garrow_day_time_interval_array_builder_new*(): ptr GArrowDayTimeIntervalArrayBuilder {.
  cdecl, importc: "garrow_day_time_interval_array_builder_new"
.}

proc garrow_day_time_interval_array_builder_append_value*(
  builder: ptr GArrowDayTimeIntervalArrayBuilder,
  value: ptr GArrowDayMillisecond,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_day_time_interval_array_builder_append_value".}

proc garrow_day_time_interval_array_builder_append_values*(
  builder: ptr GArrowDayTimeIntervalArrayBuilder,
  values: ptr ptr GArrowDayMillisecond,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_day_time_interval_array_builder_append_values".}

proc garrow_month_day_nano_interval_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_month_day_nano_interval_array_builder_get_type"
.}

proc garrow_month_day_nano_interval_array_builder_new*(): ptr GArrowMonthDayNanoIntervalArrayBuilder {.
  cdecl, importc: "garrow_month_day_nano_interval_array_builder_new"
.}

proc garrow_month_day_nano_interval_array_builder_append_value*(
  builder: ptr GArrowMonthDayNanoIntervalArrayBuilder,
  value: ptr GArrowMonthDayNano,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_month_day_nano_interval_array_builder_append_value"
.}

proc garrow_month_day_nano_interval_array_builder_append_values*(
  builder: ptr GArrowMonthDayNanoIntervalArrayBuilder,
  values: ptr ptr GArrowMonthDayNano,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_month_day_nano_interval_array_builder_append_values"
.}

proc garrow_binary_dictionary_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_binary_dictionary_array_builder_get_type"
.}

proc garrow_binary_dictionary_array_builder_new*(): ptr GArrowBinaryDictionaryArrayBuilder {.
  cdecl, importc: "garrow_binary_dictionary_array_builder_new"
.}

proc garrow_binary_dictionary_array_builder_append_null*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_binary_dictionary_array_builder_append_null".}

proc garrow_binary_dictionary_array_builder_append_value*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  value: ptr guint8,
  length: gint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_dictionary_array_builder_append_value".}

proc garrow_binary_dictionary_array_builder_append_value_bytes*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  value: ptr GBytes,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_binary_dictionary_array_builder_append_value_bytes"
.}

proc garrow_binary_dictionary_array_builder_append_array*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  array: ptr GArrowBinaryArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_dictionary_array_builder_append_array".}

proc garrow_binary_dictionary_array_builder_append_indices*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_dictionary_array_builder_append_indices".}

proc garrow_binary_dictionary_array_builder_get_dictionary_length*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder
): gint64 {.
  cdecl, importc: "garrow_binary_dictionary_array_builder_get_dictionary_length"
.}

proc garrow_binary_dictionary_array_builder_finish_delta*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  out_indices: ptr ptr GArrowArray,
  out_delta: ptr ptr GArrowArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_binary_dictionary_array_builder_finish_delta".}

proc garrow_binary_dictionary_array_builder_insert_memo_values*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder,
  values: ptr GArrowBinaryArray,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_binary_dictionary_array_builder_insert_memo_values"
.}

proc garrow_binary_dictionary_array_builder_reset_full*(
  builder: ptr GArrowBinaryDictionaryArrayBuilder
): void {.cdecl, importc: "garrow_binary_dictionary_array_builder_reset_full".}

proc garrow_string_dictionary_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_string_dictionary_array_builder_get_type"
.}

proc garrow_string_dictionary_array_builder_new*(): ptr GArrowStringDictionaryArrayBuilder {.
  cdecl, importc: "garrow_string_dictionary_array_builder_new"
.}

proc garrow_string_dictionary_array_builder_append_null*(
  builder: ptr GArrowStringDictionaryArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_string_dictionary_array_builder_append_null".}

proc garrow_string_dictionary_array_builder_append_string*(
  builder: ptr GArrowStringDictionaryArrayBuilder, value: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_string_dictionary_array_builder_append_string".}

proc garrow_string_dictionary_array_builder_append_array*(
  builder: ptr GArrowStringDictionaryArrayBuilder,
  array: ptr GArrowStringArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_dictionary_array_builder_append_array".}

proc garrow_string_dictionary_array_builder_append_indices*(
  builder: ptr GArrowStringDictionaryArrayBuilder,
  values: ptr gint64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_dictionary_array_builder_append_indices".}

proc garrow_string_dictionary_array_builder_get_dictionary_length*(
  builder: ptr GArrowStringDictionaryArrayBuilder
): gint64 {.
  cdecl, importc: "garrow_string_dictionary_array_builder_get_dictionary_length"
.}

proc garrow_string_dictionary_array_builder_finish_delta*(
  builder: ptr GArrowStringDictionaryArrayBuilder,
  out_indices: ptr ptr GArrowArray,
  out_delta: ptr ptr GArrowArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_string_dictionary_array_builder_finish_delta".}

proc garrow_string_dictionary_array_builder_insert_memo_values*(
  builder: ptr GArrowStringDictionaryArrayBuilder,
  values: ptr GArrowStringArray,
  error: ptr ptr GError,
): gboolean {.
  cdecl, importc: "garrow_string_dictionary_array_builder_insert_memo_values"
.}

proc garrow_string_dictionary_array_builder_reset_full*(
  builder: ptr GArrowStringDictionaryArrayBuilder
): void {.cdecl, importc: "garrow_string_dictionary_array_builder_reset_full".}

proc garrow_list_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_list_array_builder_get_type"
.}

proc garrow_list_array_builder_new*(
  data_type: ptr GArrowListDataType, error: ptr ptr GError
): ptr GArrowListArrayBuilder {.cdecl, importc: "garrow_list_array_builder_new".}

proc garrow_list_array_builder_append*(
  builder: ptr GArrowListArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_list_array_builder_append".}

proc garrow_list_array_builder_append_value*(
  builder: ptr GArrowListArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_list_array_builder_append_value".}

proc garrow_list_array_builder_append_null*(
  builder: ptr GArrowListArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_list_array_builder_append_null".}

proc garrow_list_array_builder_get_value_builder*(
  builder: ptr GArrowListArrayBuilder
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_list_array_builder_get_value_builder"
.}

proc garrow_large_list_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_large_list_array_builder_get_type"
.}

proc garrow_large_list_array_builder_new*(
  data_type: ptr GArrowLargeListDataType, error: ptr ptr GError
): ptr GArrowLargeListArrayBuilder {.
  cdecl, importc: "garrow_large_list_array_builder_new"
.}

proc garrow_large_list_array_builder_append_value*(
  builder: ptr GArrowLargeListArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_list_array_builder_append_value".}

proc garrow_large_list_array_builder_append_null*(
  builder: ptr GArrowLargeListArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_large_list_array_builder_append_null".}

proc garrow_large_list_array_builder_get_value_builder*(
  builder: ptr GArrowLargeListArrayBuilder
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_large_list_array_builder_get_value_builder"
.}

proc garrow_struct_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_struct_array_builder_get_type"
.}

proc garrow_struct_array_builder_new*(
  data_type: ptr GArrowStructDataType, error: ptr ptr GError
): ptr GArrowStructArrayBuilder {.cdecl, importc: "garrow_struct_array_builder_new".}

proc garrow_struct_array_builder_append*(
  builder: ptr GArrowStructArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_struct_array_builder_append".}

proc garrow_struct_array_builder_append_value*(
  builder: ptr GArrowStructArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_struct_array_builder_append_value".}

proc garrow_struct_array_builder_append_null*(
  builder: ptr GArrowStructArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_struct_array_builder_append_null".}

proc garrow_struct_array_builder_get_field_builder*(
  builder: ptr GArrowStructArrayBuilder, i: gint
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_struct_array_builder_get_field_builder"
.}

proc garrow_struct_array_builder_get_field_builders*(
  builder: ptr GArrowStructArrayBuilder
): ptr GList {.cdecl, importc: "garrow_struct_array_builder_get_field_builders".}

proc garrow_map_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_map_array_builder_get_type"
.}

proc garrow_map_array_builder_new*(
  data_type: ptr GArrowMapDataType, error: ptr ptr GError
): ptr GArrowMapArrayBuilder {.cdecl, importc: "garrow_map_array_builder_new".}

proc garrow_map_array_builder_append_value*(
  builder: ptr GArrowMapArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_map_array_builder_append_value".}

proc garrow_map_array_builder_append_values*(
  builder: ptr GArrowMapArrayBuilder,
  offsets: ptr gint32,
  offsets_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_map_array_builder_append_values".}

proc garrow_map_array_builder_append_null*(
  builder: ptr GArrowMapArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_map_array_builder_append_null".}

proc garrow_map_array_builder_append_nulls*(
  builder: ptr GArrowMapArrayBuilder, n: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_map_array_builder_append_nulls".}

proc garrow_map_array_builder_get_key_builder*(
  builder: ptr GArrowMapArrayBuilder
): ptr GArrowArrayBuilder {.cdecl, importc: "garrow_map_array_builder_get_key_builder".}

proc garrow_map_array_builder_get_item_builder*(
  builder: ptr GArrowMapArrayBuilder
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_map_array_builder_get_item_builder"
.}

proc garrow_map_array_builder_get_value_builder*(
  builder: ptr GArrowMapArrayBuilder
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_map_array_builder_get_value_builder"
.}

proc garrow_decimal32_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_decimal32_array_builder_get_type"
.}

proc garrow_decimal32_array_builder_new*(
  data_type: ptr GArrowDecimal32DataType
): ptr GArrowDecimal32ArrayBuilder {.
  cdecl, importc: "garrow_decimal32_array_builder_new"
.}

proc garrow_decimal32_array_builder_append_value*(
  builder: ptr GArrowDecimal32ArrayBuilder,
  value: ptr GArrowDecimal32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal32_array_builder_append_value".}

proc garrow_decimal32_array_builder_append_values*(
  builder: ptr GArrowDecimal32ArrayBuilder,
  values: ptr ptr GArrowDecimal32,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal32_array_builder_append_values".}

proc garrow_decimal64_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_decimal64_array_builder_get_type"
.}

proc garrow_decimal64_array_builder_new*(
  data_type: ptr GArrowDecimal64DataType
): ptr GArrowDecimal64ArrayBuilder {.
  cdecl, importc: "garrow_decimal64_array_builder_new"
.}

proc garrow_decimal64_array_builder_append_value*(
  builder: ptr GArrowDecimal64ArrayBuilder,
  value: ptr GArrowDecimal64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal64_array_builder_append_value".}

proc garrow_decimal64_array_builder_append_values*(
  builder: ptr GArrowDecimal64ArrayBuilder,
  values: ptr ptr GArrowDecimal64,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal64_array_builder_append_values".}

proc garrow_decimal128_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_decimal128_array_builder_get_type"
.}

proc garrow_decimal128_array_builder_new*(
  data_type: ptr GArrowDecimal128DataType
): ptr GArrowDecimal128ArrayBuilder {.
  cdecl, importc: "garrow_decimal128_array_builder_new"
.}

proc garrow_decimal128_array_builder_append*(
  builder: ptr GArrowDecimal128ArrayBuilder,
  value: ptr GArrowDecimal128,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal128_array_builder_append".}

proc garrow_decimal128_array_builder_append_value*(
  builder: ptr GArrowDecimal128ArrayBuilder,
  value: ptr GArrowDecimal128,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal128_array_builder_append_value".}

proc garrow_decimal128_array_builder_append_values*(
  builder: ptr GArrowDecimal128ArrayBuilder,
  values: ptr ptr GArrowDecimal128,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal128_array_builder_append_values".}

proc garrow_decimal128_array_builder_append_null*(
  builder: ptr GArrowDecimal128ArrayBuilder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_decimal128_array_builder_append_null".}

proc garrow_decimal256_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_decimal256_array_builder_get_type"
.}

proc garrow_decimal256_array_builder_new*(
  data_type: ptr GArrowDecimal256DataType
): ptr GArrowDecimal256ArrayBuilder {.
  cdecl, importc: "garrow_decimal256_array_builder_new"
.}

proc garrow_decimal256_array_builder_append_value*(
  builder: ptr GArrowDecimal256ArrayBuilder,
  value: ptr GArrowDecimal256,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal256_array_builder_append_value".}

proc garrow_decimal256_array_builder_append_values*(
  builder: ptr GArrowDecimal256ArrayBuilder,
  values: ptr ptr GArrowDecimal256,
  values_length: gint64,
  is_valids: ptr gboolean,
  is_valids_length: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_decimal256_array_builder_append_values".}

proc garrow_union_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_union_array_builder_get_type"
.}

proc garrow_union_array_builder_append_child*(
  builder: ptr GArrowUnionArrayBuilder,
  child: ptr GArrowArrayBuilder,
  field_name: cstring,
): gint8 {.cdecl, importc: "garrow_union_array_builder_append_child".}

proc garrow_union_array_builder_append_value*(
  builder: ptr GArrowUnionArrayBuilder, value: gint8, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_union_array_builder_append_value".}

proc garrow_dense_union_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_dense_union_array_builder_get_type"
.}

proc garrow_dense_union_array_builder_new*(
  data_type: ptr GArrowDenseUnionDataType, error: ptr ptr GError
): ptr GArrowDenseUnionArrayBuilder {.
  cdecl, importc: "garrow_dense_union_array_builder_new"
.}

proc garrow_sparse_union_array_builder_get_type*(): GType {.
  cdecl, importc: "garrow_sparse_union_array_builder_get_type"
.}

proc garrow_sparse_union_array_builder_new*(
  data_type: ptr GArrowSparseUnionDataType, error: ptr ptr GError
): ptr GArrowSparseUnionArrayBuilder {.
  cdecl, importc: "garrow_sparse_union_array_builder_new"
.}

proc garrow_chunked_array_new*(
  chunks: ptr GList, error: ptr ptr GError
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_new".}

proc garrow_chunked_array_new_empty*(
  data_type: ptr GArrowDataType, error: ptr ptr GError
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_new_empty".}

proc garrow_chunked_array_equal*(
  chunked_array: ptr GArrowChunkedArray, other_chunked_array: ptr GArrowChunkedArray
): gboolean {.cdecl, importc: "garrow_chunked_array_equal".}

proc garrow_chunked_array_get_value_data_type*(
  chunked_array: ptr GArrowChunkedArray
): ptr GArrowDataType {.cdecl, importc: "garrow_chunked_array_get_value_data_type".}

proc garrow_chunked_array_get_value_type*(
  chunked_array: ptr GArrowChunkedArray
): GArrowType {.cdecl, importc: "garrow_chunked_array_get_value_type".}

proc garrow_chunked_array_get_length*(
  chunked_array: ptr GArrowChunkedArray
): guint64 {.cdecl, importc: "garrow_chunked_array_get_length".}

proc garrow_chunked_array_get_n_rows*(
  chunked_array: ptr GArrowChunkedArray
): guint64 {.cdecl, importc: "garrow_chunked_array_get_n_rows".}

proc garrow_chunked_array_get_n_nulls*(
  chunked_array: ptr GArrowChunkedArray
): guint64 {.cdecl, importc: "garrow_chunked_array_get_n_nulls".}

proc garrow_chunked_array_get_n_chunks*(
  chunked_array: ptr GArrowChunkedArray
): guint {.cdecl, importc: "garrow_chunked_array_get_n_chunks".}

proc garrow_chunked_array_get_chunk*(
  chunked_array: ptr GArrowChunkedArray, i: guint
): ptr GArrowArray {.cdecl, importc: "garrow_chunked_array_get_chunk".}

proc garrow_chunked_array_get_chunks*(
  chunked_array: ptr GArrowChunkedArray
): ptr GList {.cdecl, importc: "garrow_chunked_array_get_chunks".}

proc garrow_chunked_array_slice*(
  chunked_array: ptr GArrowChunkedArray, offset: guint64, length: guint64
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_slice".}

proc garrow_chunked_array_to_string*(
  chunked_array: ptr GArrowChunkedArray, error: ptr ptr GError
): cstring {.cdecl, importc: "garrow_chunked_array_to_string".}

proc garrow_chunked_array_combine*(
  chunked_array: ptr GArrowChunkedArray, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_chunked_array_combine".}

proc garrow_chunked_array_import*(
  c_abi_array_stream: gpointer, error: ptr ptr GError
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_import".}

proc garrow_chunked_array_export*(
  chunked_array: ptr GArrowChunkedArray, error: ptr ptr GError
): gpointer {.cdecl, importc: "garrow_chunked_array_export".}

proc garrow_codec_get_type*(): GType {.cdecl, importc: "garrow_codec_get_type".}
proc garrow_codec_new*(
  type_arg: GArrowCompressionType, error: ptr ptr GError
): ptr GArrowCodec {.cdecl, importc: "garrow_codec_new".}

proc garrow_codec_get_name*(
  codec: ptr GArrowCodec
): cstring {.cdecl, importc: "garrow_codec_get_name".}

proc garrow_codec_get_compression_type*(
  codec: ptr GArrowCodec
): GArrowCompressionType {.cdecl, importc: "garrow_codec_get_compression_type".}

proc garrow_codec_get_compression_level*(
  codec: ptr GArrowCodec
): gint {.cdecl, importc: "garrow_codec_get_compression_level".}

proc garrow_function_options_get_type*(): GType {.
  cdecl, importc: "garrow_function_options_get_type"
.}

proc garrow_cast_options_get_type*(): GType {.
  cdecl, importc: "garrow_cast_options_get_type"
.}

proc garrow_expression_get_type*(): GType {.
  cdecl, importc: "garrow_expression_get_type"
.}

proc garrow_read_options_get_type*(): GType {.
  cdecl, importc: "garrow_read_options_get_type"
.}

proc garrow_read_options_new*(): ptr GArrowReadOptions {.
  cdecl, importc: "garrow_read_options_new"
.}

proc garrow_read_options_get_included_fields*(
  options: ptr GArrowReadOptions, n_fields: ptr gsize
): ptr cint {.cdecl, importc: "garrow_read_options_get_included_fields".}

proc garrow_read_options_set_included_fields*(
  options: ptr GArrowReadOptions, fields: ptr cint, n_fields: gsize
): void {.cdecl, importc: "garrow_read_options_set_included_fields".}

proc garrow_write_options_get_type*(): GType {.
  cdecl, importc: "garrow_write_options_get_type"
.}

proc garrow_write_options_new*(): ptr GArrowWriteOptions {.
  cdecl, importc: "garrow_write_options_new"
.}

proc garrow_schema_get_type*(): GType {.cdecl, importc: "garrow_schema_get_type".}
proc garrow_schema_import*(
  c_abi_schema: gpointer, error: ptr ptr GError
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_import".}

proc garrow_schema_new*(
  fields: ptr GList
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_new".}

proc garrow_schema_export*(
  schema: ptr GArrowSchema, error: ptr ptr GError
): gpointer {.cdecl, importc: "garrow_schema_export".}

proc garrow_schema_equal*(
  schema: ptr GArrowSchema, other_schema: ptr GArrowSchema
): gboolean {.cdecl, importc: "garrow_schema_equal".}

proc garrow_schema_get_field*(
  schema: ptr GArrowSchema, i: guint
): ptr GArrowField {.cdecl, importc: "garrow_schema_get_field".}

proc garrow_schema_get_field_by_name*(
  schema: ptr GArrowSchema, name: cstring
): ptr GArrowField {.cdecl, importc: "garrow_schema_get_field_by_name".}

proc garrow_schema_get_field_index*(
  schema: ptr GArrowSchema, name: cstring
): gint {.cdecl, importc: "garrow_schema_get_field_index".}

proc garrow_schema_n_fields*(
  schema: ptr GArrowSchema
): guint {.cdecl, importc: "garrow_schema_n_fields".}

proc garrow_schema_get_fields*(
  schema: ptr GArrowSchema
): ptr GList {.cdecl, importc: "garrow_schema_get_fields".}

proc garrow_schema_to_string*(
  schema: ptr GArrowSchema
): cstring {.cdecl, importc: "garrow_schema_to_string".}

proc garrow_schema_to_string_metadata*(
  schema: ptr GArrowSchema, show_metadata: gboolean
): cstring {.cdecl, importc: "garrow_schema_to_string_metadata".}

proc garrow_schema_add_field*(
  schema: ptr GArrowSchema, i: guint, field: ptr GArrowField, error: ptr ptr GError
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_add_field".}

proc garrow_schema_remove_field*(
  schema: ptr GArrowSchema, i: guint, error: ptr ptr GError
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_remove_field".}

proc garrow_schema_replace_field*(
  schema: ptr GArrowSchema, i: guint, field: ptr GArrowField, error: ptr ptr GError
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_replace_field".}

proc garrow_schema_has_metadata*(
  schema: ptr GArrowSchema
): gboolean {.cdecl, importc: "garrow_schema_has_metadata".}

proc garrow_schema_get_metadata*(
  schema: ptr GArrowSchema
): ptr GHashTable {.cdecl, importc: "garrow_schema_get_metadata".}

proc garrow_schema_with_metadata*(
  schema: ptr GArrowSchema, metadata: ptr GHashTable
): ptr GArrowSchema {.cdecl, importc: "garrow_schema_with_metadata".}

proc garrow_record_batch_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_get_type"
.}

proc garrow_record_batch_import*(
  c_abi_array: gpointer, schema: ptr GArrowSchema, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_import".}

proc garrow_record_batch_new*(
  schema: ptr GArrowSchema, n_rows: guint32, columns: ptr GList, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_new".}

proc garrow_record_batch_export*(
  record_batch: ptr GArrowRecordBatch,
  c_abi_array: ptr gpointer,
  c_abi_schema: ptr gpointer,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_record_batch_export".}

proc garrow_record_batch_equal*(
  record_batch: ptr GArrowRecordBatch, other_record_batch: ptr GArrowRecordBatch
): gboolean {.cdecl, importc: "garrow_record_batch_equal".}

proc garrow_record_batch_equal_metadata*(
  record_batch: ptr GArrowRecordBatch,
  other_record_batch: ptr GArrowRecordBatch,
  check_metadata: gboolean,
): gboolean {.cdecl, importc: "garrow_record_batch_equal_metadata".}

proc garrow_record_batch_get_schema*(
  record_batch: ptr GArrowRecordBatch
): ptr GArrowSchema {.cdecl, importc: "garrow_record_batch_get_schema".}

proc garrow_record_batch_get_column_data*(
  record_batch: ptr GArrowRecordBatch, i: gint
): ptr GArrowArray {.cdecl, importc: "garrow_record_batch_get_column_data".}

proc garrow_record_batch_get_column_name*(
  record_batch: ptr GArrowRecordBatch, i: gint
): cstring {.cdecl, importc: "garrow_record_batch_get_column_name".}

proc garrow_record_batch_get_n_columns*(
  record_batch: ptr GArrowRecordBatch
): guint {.cdecl, importc: "garrow_record_batch_get_n_columns".}

proc garrow_record_batch_get_n_rows*(
  record_batch: ptr GArrowRecordBatch
): gint64 {.cdecl, importc: "garrow_record_batch_get_n_rows".}

proc garrow_record_batch_slice*(
  record_batch: ptr GArrowRecordBatch, offset: gint64, length: gint64
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_slice".}

proc garrow_record_batch_to_string*(
  record_batch: ptr GArrowRecordBatch, error: ptr ptr GError
): cstring {.cdecl, importc: "garrow_record_batch_to_string".}

proc garrow_record_batch_add_column*(
  record_batch: ptr GArrowRecordBatch,
  i: guint,
  field: ptr GArrowField,
  column: ptr GArrowArray,
  error: ptr ptr GError,
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_add_column".}

proc garrow_record_batch_remove_column*(
  record_batch: ptr GArrowRecordBatch, i: guint, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_remove_column".}

proc garrow_record_batch_serialize*(
  record_batch: ptr GArrowRecordBatch,
  options: ptr GArrowWriteOptions,
  error: ptr ptr GError,
): ptr GArrowBuffer {.cdecl, importc: "garrow_record_batch_serialize".}

proc garrow_record_batch_validate*(
  record_batch: ptr GArrowRecordBatch, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_record_batch_validate".}

proc garrow_record_batch_validate_full*(
  record_batch: ptr GArrowRecordBatch, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_record_batch_validate_full".}

proc garrow_record_batch_iterator_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_iterator_get_type"
.}

proc garrow_record_batch_iterator_new*(
  record_batches: ptr GList
): ptr GArrowRecordBatchIterator {.cdecl, importc: "garrow_record_batch_iterator_new".}

proc garrow_record_batch_iterator_next*(
  iterator_arg: ptr GArrowRecordBatchIterator, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_iterator_next".}

proc garrow_record_batch_iterator_equal*(
  iterator_arg: ptr GArrowRecordBatchIterator,
  other_iterator: ptr GArrowRecordBatchIterator,
): gboolean {.cdecl, importc: "garrow_record_batch_iterator_equal".}

proc garrow_record_batch_iterator_to_list*(
  iterator_arg: ptr GArrowRecordBatchIterator, error: ptr ptr GError
): ptr GList {.cdecl, importc: "garrow_record_batch_iterator_to_list".}

proc garrow_scalar_get_type*(): GType {.cdecl, importc: "garrow_scalar_get_type".}
proc garrow_scalar_parse*(
  data_type: ptr GArrowDataType, data: ptr guint8, size: gsize, error: ptr ptr GError
): ptr GArrowScalar {.cdecl, importc: "garrow_scalar_parse".}

proc garrow_scalar_get_data_type*(
  scalar: ptr GArrowScalar
): ptr GArrowDataType {.cdecl, importc: "garrow_scalar_get_data_type".}

proc garrow_scalar_is_valid*(
  scalar: ptr GArrowScalar
): gboolean {.cdecl, importc: "garrow_scalar_is_valid".}

proc garrow_scalar_equal*(
  scalar: ptr GArrowScalar, other_scalar: ptr GArrowScalar
): gboolean {.cdecl, importc: "garrow_scalar_equal".}

proc garrow_scalar_equal_options*(
  scalar: ptr GArrowScalar,
  other_scalar: ptr GArrowScalar,
  options: ptr GArrowEqualOptions,
): gboolean {.cdecl, importc: "garrow_scalar_equal_options".}

proc garrow_scalar_to_string*(
  scalar: ptr GArrowScalar
): cstring {.cdecl, importc: "garrow_scalar_to_string".}

proc garrow_scalar_cast*(
  scalar: ptr GArrowScalar,
  data_type: ptr GArrowDataType,
  options: ptr GArrowCastOptions,
  error: ptr ptr GError,
): ptr GArrowScalar {.cdecl, importc: "garrow_scalar_cast".}

proc garrow_null_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_null_scalar_get_type"
.}

proc garrow_null_scalar_new*(): ptr GArrowNullScalar {.
  cdecl, importc: "garrow_null_scalar_new"
.}

proc garrow_boolean_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_boolean_scalar_get_type"
.}

proc garrow_boolean_scalar_new*(
  value: gboolean
): ptr GArrowBooleanScalar {.cdecl, importc: "garrow_boolean_scalar_new".}

proc garrow_boolean_scalar_get_value*(
  scalar: ptr GArrowBooleanScalar
): gboolean {.cdecl, importc: "garrow_boolean_scalar_get_value".}

proc garrow_int8_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_int8_scalar_get_type"
.}

proc garrow_int8_scalar_new*(
  value: gint8
): ptr GArrowInt8Scalar {.cdecl, importc: "garrow_int8_scalar_new".}

proc garrow_int8_scalar_get_value*(
  scalar: ptr GArrowInt8Scalar
): gint8 {.cdecl, importc: "garrow_int8_scalar_get_value".}

proc garrow_int16_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_int16_scalar_get_type"
.}

proc garrow_int16_scalar_new*(
  value: gint16
): ptr GArrowInt16Scalar {.cdecl, importc: "garrow_int16_scalar_new".}

proc garrow_int16_scalar_get_value*(
  scalar: ptr GArrowInt16Scalar
): gint16 {.cdecl, importc: "garrow_int16_scalar_get_value".}

proc garrow_int32_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_int32_scalar_get_type"
.}

proc garrow_int32_scalar_new*(
  value: gint32
): ptr GArrowInt32Scalar {.cdecl, importc: "garrow_int32_scalar_new".}

proc garrow_int32_scalar_get_value*(
  scalar: ptr GArrowInt32Scalar
): gint32 {.cdecl, importc: "garrow_int32_scalar_get_value".}

proc garrow_int64_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_int64_scalar_get_type"
.}

proc garrow_int64_scalar_new*(
  value: gint64
): ptr GArrowInt64Scalar {.cdecl, importc: "garrow_int64_scalar_new".}

proc garrow_int64_scalar_get_value*(
  scalar: ptr GArrowInt64Scalar
): gint64 {.cdecl, importc: "garrow_int64_scalar_get_value".}

proc garrow_uint8_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_uint8_scalar_get_type"
.}

proc garrow_uint8_scalar_new*(
  value: guint8
): ptr GArrowUInt8Scalar {.cdecl, importc: "garrow_uint8_scalar_new".}

proc garrow_uint8_scalar_get_value*(
  scalar: ptr GArrowUInt8Scalar
): guint8 {.cdecl, importc: "garrow_uint8_scalar_get_value".}

proc garrow_uint16_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_uint16_scalar_get_type"
.}

proc garrow_uint16_scalar_new*(
  value: guint16
): ptr GArrowUInt16Scalar {.cdecl, importc: "garrow_uint16_scalar_new".}

proc garrow_uint16_scalar_get_value*(
  scalar: ptr GArrowUInt16Scalar
): guint16 {.cdecl, importc: "garrow_uint16_scalar_get_value".}

proc garrow_uint32_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_uint32_scalar_get_type"
.}

proc garrow_uint32_scalar_new*(
  value: guint32
): ptr GArrowUInt32Scalar {.cdecl, importc: "garrow_uint32_scalar_new".}

proc garrow_uint32_scalar_get_value*(
  scalar: ptr GArrowUInt32Scalar
): guint32 {.cdecl, importc: "garrow_uint32_scalar_get_value".}

proc garrow_uint64_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_uint64_scalar_get_type"
.}

proc garrow_uint64_scalar_new*(
  value: guint64
): ptr GArrowUInt64Scalar {.cdecl, importc: "garrow_uint64_scalar_new".}

proc garrow_uint64_scalar_get_value*(
  scalar: ptr GArrowUInt64Scalar
): guint64 {.cdecl, importc: "garrow_uint64_scalar_get_value".}

proc garrow_half_float_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_half_float_scalar_get_type"
.}

proc garrow_half_float_scalar_new*(
  value: guint16
): ptr GArrowHalfFloatScalar {.cdecl, importc: "garrow_half_float_scalar_new".}

proc garrow_half_float_scalar_get_value*(
  scalar: ptr GArrowHalfFloatScalar
): guint16 {.cdecl, importc: "garrow_half_float_scalar_get_value".}

proc garrow_float_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_float_scalar_get_type"
.}

proc garrow_float_scalar_new*(
  value: gfloat
): ptr GArrowFloatScalar {.cdecl, importc: "garrow_float_scalar_new".}

proc garrow_float_scalar_get_value*(
  scalar: ptr GArrowFloatScalar
): gfloat {.cdecl, importc: "garrow_float_scalar_get_value".}

proc garrow_double_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_double_scalar_get_type"
.}

proc garrow_double_scalar_new*(
  value: gdouble
): ptr GArrowDoubleScalar {.cdecl, importc: "garrow_double_scalar_new".}

proc garrow_double_scalar_get_value*(
  scalar: ptr GArrowDoubleScalar
): gdouble {.cdecl, importc: "garrow_double_scalar_get_value".}

proc garrow_base_binary_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_base_binary_scalar_get_type"
.}

proc garrow_base_binary_scalar_get_value*(
  scalar: ptr GArrowBaseBinaryScalar
): ptr GArrowBuffer {.cdecl, importc: "garrow_base_binary_scalar_get_value".}

proc garrow_binary_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_binary_scalar_get_type"
.}

proc garrow_binary_scalar_new*(
  value: ptr GArrowBuffer
): ptr GArrowBinaryScalar {.cdecl, importc: "garrow_binary_scalar_new".}

proc garrow_string_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_string_scalar_get_type"
.}

proc garrow_string_scalar_new*(
  value: ptr GArrowBuffer
): ptr GArrowStringScalar {.cdecl, importc: "garrow_string_scalar_new".}

proc garrow_large_binary_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_large_binary_scalar_get_type"
.}

proc garrow_large_binary_scalar_new*(
  value: ptr GArrowBuffer
): ptr GArrowLargeBinaryScalar {.cdecl, importc: "garrow_large_binary_scalar_new".}

proc garrow_large_string_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_large_string_scalar_get_type"
.}

proc garrow_large_string_scalar_new*(
  value: ptr GArrowBuffer
): ptr GArrowLargeStringScalar {.cdecl, importc: "garrow_large_string_scalar_new".}

proc garrow_fixed_size_binary_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_fixed_size_binary_scalar_get_type"
.}

proc garrow_fixed_size_binary_scalar_new*(
  data_type: ptr GArrowFixedSizeBinaryDataType, value: ptr GArrowBuffer
): ptr GArrowFixedSizeBinaryScalar {.
  cdecl, importc: "garrow_fixed_size_binary_scalar_new"
.}

proc garrow_date32_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_date32_scalar_get_type"
.}

proc garrow_date32_scalar_new*(
  value: gint32
): ptr GArrowDate32Scalar {.cdecl, importc: "garrow_date32_scalar_new".}

proc garrow_date32_scalar_get_value*(
  scalar: ptr GArrowDate32Scalar
): gint32 {.cdecl, importc: "garrow_date32_scalar_get_value".}

proc garrow_date64_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_date64_scalar_get_type"
.}

proc garrow_date64_scalar_new*(
  value: gint64
): ptr GArrowDate64Scalar {.cdecl, importc: "garrow_date64_scalar_new".}

proc garrow_date64_scalar_get_value*(
  scalar: ptr GArrowDate64Scalar
): gint64 {.cdecl, importc: "garrow_date64_scalar_get_value".}

proc garrow_time32_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_time32_scalar_get_type"
.}

proc garrow_time32_scalar_new*(
  data_type: ptr GArrowTime32DataType, value: gint32
): ptr GArrowTime32Scalar {.cdecl, importc: "garrow_time32_scalar_new".}

proc garrow_time32_scalar_get_value*(
  scalar: ptr GArrowTime32Scalar
): gint32 {.cdecl, importc: "garrow_time32_scalar_get_value".}

proc garrow_time64_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_time64_scalar_get_type"
.}

proc garrow_time64_scalar_new*(
  data_type: ptr GArrowTime64DataType, value: gint64
): ptr GArrowTime64Scalar {.cdecl, importc: "garrow_time64_scalar_new".}

proc garrow_time64_scalar_get_value*(
  scalar: ptr GArrowTime64Scalar
): gint64 {.cdecl, importc: "garrow_time64_scalar_get_value".}

proc garrow_timestamp_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_timestamp_scalar_get_type"
.}

proc garrow_timestamp_scalar_new*(
  data_type: ptr GArrowTimestampDataType, value: gint64
): ptr GArrowTimestampScalar {.cdecl, importc: "garrow_timestamp_scalar_new".}

proc garrow_timestamp_scalar_get_value*(
  scalar: ptr GArrowTimestampScalar
): gint64 {.cdecl, importc: "garrow_timestamp_scalar_get_value".}

proc garrow_month_interval_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_month_interval_scalar_get_type"
.}

proc garrow_month_interval_scalar_new*(
  value: gint32
): ptr GArrowMonthIntervalScalar {.cdecl, importc: "garrow_month_interval_scalar_new".}

proc garrow_month_interval_scalar_get_value*(
  scalar: ptr GArrowMonthIntervalScalar
): gint32 {.cdecl, importc: "garrow_month_interval_scalar_get_value".}

proc garrow_day_time_interval_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_day_time_interval_scalar_get_type"
.}

proc garrow_day_time_interval_scalar_new*(
  value: ptr GArrowDayMillisecond
): ptr GArrowDayTimeIntervalScalar {.
  cdecl, importc: "garrow_day_time_interval_scalar_new"
.}

proc garrow_day_time_interval_scalar_get_value*(
  scalar: ptr GArrowDayTimeIntervalScalar
): ptr GArrowDayMillisecond {.
  cdecl, importc: "garrow_day_time_interval_scalar_get_value"
.}

proc garrow_month_day_nano_interval_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_month_day_nano_interval_scalar_get_type"
.}

proc garrow_month_day_nano_interval_scalar_new*(
  value: ptr GArrowMonthDayNano
): ptr GArrowMonthDayNanoIntervalScalar {.
  cdecl, importc: "garrow_month_day_nano_interval_scalar_new"
.}

proc garrow_month_day_nano_interval_scalar_get_value*(
  scalar: ptr GArrowMonthDayNanoIntervalScalar
): ptr GArrowMonthDayNano {.
  cdecl, importc: "garrow_month_day_nano_interval_scalar_get_value"
.}

proc garrow_decimal32_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_decimal32_scalar_get_type"
.}

proc garrow_decimal32_scalar_new*(
  data_type: ptr GArrowDecimal32DataType, value: ptr GArrowDecimal32
): ptr GArrowDecimal32Scalar {.cdecl, importc: "garrow_decimal32_scalar_new".}

proc garrow_decimal32_scalar_get_value*(
  scalar: ptr GArrowDecimal32Scalar
): ptr GArrowDecimal32 {.cdecl, importc: "garrow_decimal32_scalar_get_value".}

proc garrow_decimal64_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_decimal64_scalar_get_type"
.}

proc garrow_decimal64_scalar_new*(
  data_type: ptr GArrowDecimal64DataType, value: ptr GArrowDecimal64
): ptr GArrowDecimal64Scalar {.cdecl, importc: "garrow_decimal64_scalar_new".}

proc garrow_decimal64_scalar_get_value*(
  scalar: ptr GArrowDecimal64Scalar
): ptr GArrowDecimal64 {.cdecl, importc: "garrow_decimal64_scalar_get_value".}

proc garrow_decimal128_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_decimal128_scalar_get_type"
.}

proc garrow_decimal128_scalar_new*(
  data_type: ptr GArrowDecimal128DataType, value: ptr GArrowDecimal128
): ptr GArrowDecimal128Scalar {.cdecl, importc: "garrow_decimal128_scalar_new".}

proc garrow_decimal128_scalar_get_value*(
  scalar: ptr GArrowDecimal128Scalar
): ptr GArrowDecimal128 {.cdecl, importc: "garrow_decimal128_scalar_get_value".}

proc garrow_decimal256_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_decimal256_scalar_get_type"
.}

proc garrow_decimal256_scalar_new*(
  data_type: ptr GArrowDecimal256DataType, value: ptr GArrowDecimal256
): ptr GArrowDecimal256Scalar {.cdecl, importc: "garrow_decimal256_scalar_new".}

proc garrow_decimal256_scalar_get_value*(
  scalar: ptr GArrowDecimal256Scalar
): ptr GArrowDecimal256 {.cdecl, importc: "garrow_decimal256_scalar_get_value".}

proc garrow_base_list_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_base_list_scalar_get_type"
.}

proc garrow_base_list_scalar_get_value*(
  scalar: ptr GArrowBaseListScalar
): ptr GArrowArray {.cdecl, importc: "garrow_base_list_scalar_get_value".}

proc garrow_list_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_list_scalar_get_type"
.}

proc garrow_list_scalar_new*(
  value: ptr GArrowListArray
): ptr GArrowListScalar {.cdecl, importc: "garrow_list_scalar_new".}

proc garrow_large_list_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_large_list_scalar_get_type"
.}

proc garrow_large_list_scalar_new*(
  value: ptr GArrowLargeListArray
): ptr GArrowLargeListScalar {.cdecl, importc: "garrow_large_list_scalar_new".}

proc garrow_map_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_map_scalar_get_type"
.}

proc garrow_map_scalar_new*(
  value: ptr GArrowStructArray
): ptr GArrowMapScalar {.cdecl, importc: "garrow_map_scalar_new".}

proc garrow_struct_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_struct_scalar_get_type"
.}

proc garrow_struct_scalar_new*(
  data_type: ptr GArrowStructDataType, value: ptr GList
): ptr GArrowStructScalar {.cdecl, importc: "garrow_struct_scalar_new".}

proc garrow_struct_scalar_get_value*(
  scalar: ptr GArrowStructScalar
): ptr GList {.cdecl, importc: "garrow_struct_scalar_get_value".}

proc garrow_union_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_union_scalar_get_type"
.}

proc garrow_union_scalar_get_type_code*(
  scalar: ptr GArrowUnionScalar
): gint8 {.cdecl, importc: "garrow_union_scalar_get_type_code".}

proc garrow_union_scalar_get_value*(
  scalar: ptr GArrowUnionScalar
): ptr GArrowScalar {.cdecl, importc: "garrow_union_scalar_get_value".}

proc garrow_sparse_union_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_sparse_union_scalar_get_type"
.}

proc garrow_sparse_union_scalar_new*(
  data_type: ptr GArrowSparseUnionDataType, type_code: gint8, value: ptr GArrowScalar
): ptr GArrowSparseUnionScalar {.cdecl, importc: "garrow_sparse_union_scalar_new".}

proc garrow_dense_union_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_dense_union_scalar_get_type"
.}

proc garrow_dense_union_scalar_new*(
  data_type: ptr GArrowDenseUnionDataType, type_code: gint8, value: ptr GArrowScalar
): ptr GArrowDenseUnionScalar {.cdecl, importc: "garrow_dense_union_scalar_new".}

proc garrow_extension_scalar_get_type*(): GType {.
  cdecl, importc: "garrow_extension_scalar_get_type"
.}

proc g_action_get_type*(): GType {.cdecl, importc: "g_action_get_type".}
proc g_action_get_name*(
  action: ptr GAction
): cstring {.cdecl, importc: "g_action_get_name".}

proc g_action_get_parameter_type*(
  action: ptr GAction
): ptr GVariantType {.cdecl, importc: "g_action_get_parameter_type".}

proc g_action_get_state_type*(
  action: ptr GAction
): ptr GVariantType {.cdecl, importc: "g_action_get_state_type".}

proc g_action_get_state_hint*(
  action: ptr GAction
): ptr GVariant {.cdecl, importc: "g_action_get_state_hint".}

proc g_action_get_enabled*(
  action: ptr GAction
): gboolean {.cdecl, importc: "g_action_get_enabled".}

proc g_action_get_state*(
  action: ptr GAction
): ptr GVariant {.cdecl, importc: "g_action_get_state".}

proc g_action_change_state*(
  action: ptr GAction, value: ptr GVariant
): void {.cdecl, importc: "g_action_change_state".}

proc g_action_activate*(
  action: ptr GAction, parameter: ptr GVariant
): void {.cdecl, importc: "g_action_activate".}

proc g_action_name_is_valid*(
  action_name: cstring
): gboolean {.cdecl, importc: "g_action_name_is_valid".}

proc g_action_parse_detailed_name*(
  detailed_name: cstring,
  action_name: ptr cstring,
  target_value: ptr ptr GVariant,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_action_parse_detailed_name".}

proc g_action_print_detailed_name*(
  action_name: cstring, target_value: ptr GVariant
): cstring {.cdecl, importc: "g_action_print_detailed_name".}

proc g_action_group_get_type*(): GType {.cdecl, importc: "g_action_group_get_type".}
proc g_action_group_has_action*(
  action_group: ptr GActionGroup, action_name: cstring
): gboolean {.cdecl, importc: "g_action_group_has_action".}

proc g_action_group_list_actions*(
  action_group: ptr GActionGroup
): ptr cstring {.cdecl, importc: "g_action_group_list_actions".}

proc g_action_group_get_action_parameter_type*(
  action_group: ptr GActionGroup, action_name: cstring
): ptr GVariantType {.cdecl, importc: "g_action_group_get_action_parameter_type".}

proc g_action_group_get_action_state_type*(
  action_group: ptr GActionGroup, action_name: cstring
): ptr GVariantType {.cdecl, importc: "g_action_group_get_action_state_type".}

proc g_action_group_get_action_state_hint*(
  action_group: ptr GActionGroup, action_name: cstring
): ptr GVariant {.cdecl, importc: "g_action_group_get_action_state_hint".}

proc g_action_group_get_action_enabled*(
  action_group: ptr GActionGroup, action_name: cstring
): gboolean {.cdecl, importc: "g_action_group_get_action_enabled".}

proc g_action_group_get_action_state*(
  action_group: ptr GActionGroup, action_name: cstring
): ptr GVariant {.cdecl, importc: "g_action_group_get_action_state".}

proc g_action_group_change_action_state*(
  action_group: ptr GActionGroup, action_name: cstring, value: ptr GVariant
): void {.cdecl, importc: "g_action_group_change_action_state".}

proc g_action_group_activate_action*(
  action_group: ptr GActionGroup, action_name: cstring, parameter: ptr GVariant
): void {.cdecl, importc: "g_action_group_activate_action".}

proc g_action_group_action_added*(
  action_group: ptr GActionGroup, action_name: cstring
): void {.cdecl, importc: "g_action_group_action_added".}

proc g_action_group_action_removed*(
  action_group: ptr GActionGroup, action_name: cstring
): void {.cdecl, importc: "g_action_group_action_removed".}

proc g_action_group_action_enabled_changed*(
  action_group: ptr GActionGroup, action_name: cstring, enabled: gboolean
): void {.cdecl, importc: "g_action_group_action_enabled_changed".}

proc g_action_group_action_state_changed*(
  action_group: ptr GActionGroup, action_name: cstring, state: ptr GVariant
): void {.cdecl, importc: "g_action_group_action_state_changed".}

proc g_action_group_query_action*(
  action_group: ptr GActionGroup,
  action_name: cstring,
  enabled: ptr gboolean,
  parameter_type: ptr ptr GVariantType,
  state_type: ptr ptr GVariantType,
  state_hint: ptr ptr GVariant,
  state: ptr ptr GVariant,
): gboolean {.cdecl, importc: "g_action_group_query_action".}

proc g_dbus_connection_export_action_group*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  action_group: ptr GActionGroup,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_export_action_group".}

proc g_dbus_connection_unexport_action_group*(
  connection: ptr GDBusConnection, export_id: guint
): void {.cdecl, importc: "g_dbus_connection_unexport_action_group".}

proc g_action_map_get_type*(): GType {.cdecl, importc: "g_action_map_get_type".}
proc g_action_map_lookup_action*(
  action_map: ptr GActionMap, action_name: cstring
): ptr GAction {.cdecl, importc: "g_action_map_lookup_action".}

proc g_action_map_add_action*(
  action_map: ptr GActionMap, action: ptr GAction
): void {.cdecl, importc: "g_action_map_add_action".}

proc g_action_map_remove_action*(
  action_map: ptr GActionMap, action_name: cstring
): void {.cdecl, importc: "g_action_map_remove_action".}

proc g_action_map_add_action_entries*(
  action_map: ptr GActionMap,
  entries: ptr GActionEntry,
  n_entries: gint,
  user_data: gpointer,
): void {.cdecl, importc: "g_action_map_add_action_entries".}

proc g_action_map_remove_action_entries*(
  action_map: ptr GActionMap, entries: ptr GActionEntry, n_entries: gint
): void {.cdecl, importc: "g_action_map_remove_action_entries".}

proc g_app_info_get_type*(): GType {.cdecl, importc: "g_app_info_get_type".}
proc g_app_info_create_from_commandline*(
  commandline: cstring,
  application_name: cstring,
  flags: GAppInfoCreateFlags,
  error: ptr ptr GError,
): ptr GAppInfo {.cdecl, importc: "g_app_info_create_from_commandline".}

proc g_app_info_dup*(
  appinfo: ptr GAppInfo
): ptr GAppInfo {.cdecl, importc: "g_app_info_dup".}

proc g_app_info_equal*(
  appinfo1: ptr GAppInfo, appinfo2: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_equal".}

proc g_app_info_get_id*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_id".}

proc g_app_info_get_name*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_name".}

proc g_app_info_get_display_name*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_display_name".}

proc g_app_info_get_description*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_description".}

proc g_app_info_get_executable*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_executable".}

proc g_app_info_get_commandline*(
  appinfo: ptr GAppInfo
): cstring {.cdecl, importc: "g_app_info_get_commandline".}

proc g_app_info_get_icon*(
  appinfo: ptr GAppInfo
): ptr GIcon {.cdecl, importc: "g_app_info_get_icon".}

proc g_app_info_launch*(
  appinfo: ptr GAppInfo,
  files: ptr GList,
  context: ptr GAppLaunchContext,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_app_info_launch".}

proc g_app_info_supports_uris*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_supports_uris".}

proc g_app_info_supports_files*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_supports_files".}

proc g_app_info_launch_uris*(
  appinfo: ptr GAppInfo,
  uris: ptr GList,
  context: ptr GAppLaunchContext,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_app_info_launch_uris".}

proc g_app_info_launch_uris_async*(
  appinfo: ptr GAppInfo,
  uris: ptr GList,
  context: ptr GAppLaunchContext,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_app_info_launch_uris_async".}

proc g_app_info_launch_uris_finish*(
  appinfo: ptr GAppInfo, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_launch_uris_finish".}

proc g_app_info_should_show*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_should_show".}

proc g_app_info_set_as_default_for_type*(
  appinfo: ptr GAppInfo, content_type: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_set_as_default_for_type".}

proc g_app_info_set_as_default_for_extension*(
  appinfo: ptr GAppInfo, extension: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_set_as_default_for_extension".}

proc g_app_info_add_supports_type*(
  appinfo: ptr GAppInfo, content_type: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_add_supports_type".}

proc g_app_info_can_remove_supports_type*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_can_remove_supports_type".}

proc g_app_info_remove_supports_type*(
  appinfo: ptr GAppInfo, content_type: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_remove_supports_type".}

proc g_app_info_get_supported_types*(
  appinfo: ptr GAppInfo
): ptr cstring {.cdecl, importc: "g_app_info_get_supported_types".}

proc g_app_info_can_delete*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_can_delete".}

proc g_app_info_delete*(
  appinfo: ptr GAppInfo
): gboolean {.cdecl, importc: "g_app_info_delete".}

proc g_app_info_set_as_last_used_for_type*(
  appinfo: ptr GAppInfo, content_type: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_set_as_last_used_for_type".}

proc g_app_info_get_all*(): ptr GList {.cdecl, importc: "g_app_info_get_all".}
proc g_app_info_get_all_for_type*(
  content_type: cstring
): ptr GList {.cdecl, importc: "g_app_info_get_all_for_type".}

proc g_app_info_get_recommended_for_type*(
  content_type: cstring
): ptr GList {.cdecl, importc: "g_app_info_get_recommended_for_type".}

proc g_app_info_get_fallback_for_type*(
  content_type: cstring
): ptr GList {.cdecl, importc: "g_app_info_get_fallback_for_type".}

proc g_app_info_reset_type_associations*(
  content_type: cstring
): void {.cdecl, importc: "g_app_info_reset_type_associations".}

proc g_app_info_get_default_for_type*(
  content_type: cstring, must_support_uris: gboolean
): ptr GAppInfo {.cdecl, importc: "g_app_info_get_default_for_type".}

proc g_app_info_get_default_for_type_async*(
  content_type: cstring,
  must_support_uris: gboolean,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_app_info_get_default_for_type_async".}

proc g_app_info_get_default_for_type_finish*(
  result: ptr GAsyncResult, error: ptr ptr GError
): ptr GAppInfo {.cdecl, importc: "g_app_info_get_default_for_type_finish".}

proc g_app_info_get_default_for_uri_scheme*(
  uri_scheme: cstring
): ptr GAppInfo {.cdecl, importc: "g_app_info_get_default_for_uri_scheme".}

proc g_app_info_get_default_for_uri_scheme_async*(
  uri_scheme: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_app_info_get_default_for_uri_scheme_async".}

proc g_app_info_get_default_for_uri_scheme_finish*(
  result: ptr GAsyncResult, error: ptr ptr GError
): ptr GAppInfo {.cdecl, importc: "g_app_info_get_default_for_uri_scheme_finish".}

proc g_app_info_launch_default_for_uri*(
  uri: cstring, context: ptr GAppLaunchContext, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_launch_default_for_uri".}

proc g_app_info_launch_default_for_uri_async*(
  uri: cstring,
  context: ptr GAppLaunchContext,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_app_info_launch_default_for_uri_async".}

proc g_app_info_launch_default_for_uri_finish*(
  result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_app_info_launch_default_for_uri_finish".}

proc g_app_launch_context_get_type*(): GType {.
  cdecl, importc: "g_app_launch_context_get_type"
.}

proc g_app_launch_context_new*(): ptr GAppLaunchContext {.
  cdecl, importc: "g_app_launch_context_new"
.}

proc g_app_launch_context_setenv*(
  context: ptr GAppLaunchContext, variable: cstring, value: cstring
): void {.cdecl, importc: "g_app_launch_context_setenv".}

proc g_app_launch_context_unsetenv*(
  context: ptr GAppLaunchContext, variable: cstring
): void {.cdecl, importc: "g_app_launch_context_unsetenv".}

proc g_app_launch_context_get_environment*(
  context: ptr GAppLaunchContext
): ptr cstring {.cdecl, importc: "g_app_launch_context_get_environment".}

proc g_app_launch_context_get_display*(
  context: ptr GAppLaunchContext, info: ptr GAppInfo, files: ptr GList
): cstring {.cdecl, importc: "g_app_launch_context_get_display".}

proc g_app_launch_context_get_startup_notify_id*(
  context: ptr GAppLaunchContext, info: ptr GAppInfo, files: ptr GList
): cstring {.cdecl, importc: "g_app_launch_context_get_startup_notify_id".}

proc g_app_launch_context_launch_failed*(
  context: ptr GAppLaunchContext, startup_notify_id: cstring
): void {.cdecl, importc: "g_app_launch_context_launch_failed".}

proc g_app_info_monitor_get_type*(): GType {.
  cdecl, importc: "g_app_info_monitor_get_type"
.}

proc g_app_info_monitor_get*(): ptr GAppInfoMonitor {.
  cdecl, importc: "g_app_info_monitor_get"
.}

proc g_application_get_type*(): GType {.cdecl, importc: "g_application_get_type".}
proc g_application_id_is_valid*(
  application_id: cstring
): gboolean {.cdecl, importc: "g_application_id_is_valid".}

proc g_application_new*(
  application_id: cstring, flags: GApplicationFlags
): ptr GApplication {.cdecl, importc: "g_application_new".}

proc g_application_get_application_id*(
  application: ptr GApplication
): cstring {.cdecl, importc: "g_application_get_application_id".}

proc g_application_set_application_id*(
  application: ptr GApplication, application_id: cstring
): void {.cdecl, importc: "g_application_set_application_id".}

proc g_application_get_version*(
  application: ptr GApplication
): cstring {.cdecl, importc: "g_application_get_version".}

proc g_application_set_version*(
  application: ptr GApplication, version: cstring
): void {.cdecl, importc: "g_application_set_version".}

proc g_application_get_dbus_connection*(
  application: ptr GApplication
): ptr GDBusConnection {.cdecl, importc: "g_application_get_dbus_connection".}

proc g_application_get_dbus_object_path*(
  application: ptr GApplication
): cstring {.cdecl, importc: "g_application_get_dbus_object_path".}

proc g_application_get_inactivity_timeout*(
  application: ptr GApplication
): guint {.cdecl, importc: "g_application_get_inactivity_timeout".}

proc g_application_set_inactivity_timeout*(
  application: ptr GApplication, inactivity_timeout: guint
): void {.cdecl, importc: "g_application_set_inactivity_timeout".}

proc g_application_get_flags*(
  application: ptr GApplication
): GApplicationFlags {.cdecl, importc: "g_application_get_flags".}

proc g_application_set_flags*(
  application: ptr GApplication, flags: GApplicationFlags
): void {.cdecl, importc: "g_application_set_flags".}

proc g_application_get_resource_base_path*(
  application: ptr GApplication
): cstring {.cdecl, importc: "g_application_get_resource_base_path".}

proc g_application_set_resource_base_path*(
  application: ptr GApplication, resource_path: cstring
): void {.cdecl, importc: "g_application_set_resource_base_path".}

proc g_application_set_action_group*(
  application: ptr GApplication, action_group: ptr GActionGroup
): void {.cdecl, importc: "g_application_set_action_group".}

proc g_application_add_main_option_entries*(
  application: ptr GApplication, entries: ptr GOptionEntry
): void {.cdecl, importc: "g_application_add_main_option_entries".}

proc g_application_add_main_option*(
  application: ptr GApplication,
  long_name: cstring,
  short_name: cschar,
  flags: GOptionFlags,
  arg: GOptionArg,
  description: cstring,
  arg_description: cstring,
): void {.cdecl, importc: "g_application_add_main_option".}

proc g_application_add_option_group*(
  application: ptr GApplication, group: ptr GOptionGroup
): void {.cdecl, importc: "g_application_add_option_group".}

proc g_application_set_option_context_parameter_string*(
  application: ptr GApplication, parameter_string: cstring
): void {.cdecl, importc: "g_application_set_option_context_parameter_string".}

proc g_application_set_option_context_summary*(
  application: ptr GApplication, summary: cstring
): void {.cdecl, importc: "g_application_set_option_context_summary".}

proc g_application_set_option_context_description*(
  application: ptr GApplication, description: cstring
): void {.cdecl, importc: "g_application_set_option_context_description".}

proc g_application_get_is_registered*(
  application: ptr GApplication
): gboolean {.cdecl, importc: "g_application_get_is_registered".}

proc g_application_get_is_remote*(
  application: ptr GApplication
): gboolean {.cdecl, importc: "g_application_get_is_remote".}

proc g_application_register*(
  application: ptr GApplication, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_application_register".}

proc g_application_hold*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_hold".}

proc g_application_release*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_release".}

proc g_application_activate*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_activate".}

proc g_application_open*(
  application: ptr GApplication, files: ptr ptr GFile, n_files: gint, hint: cstring
): void {.cdecl, importc: "g_application_open".}

proc g_application_run*(
  application: ptr GApplication, argc: cint, argv: ptr cstring
): cint {.cdecl, importc: "g_application_run".}

proc g_application_quit*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_quit".}

proc g_application_get_default*(): ptr GApplication {.
  cdecl, importc: "g_application_get_default"
.}

proc g_application_set_default*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_set_default".}

proc g_application_mark_busy*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_mark_busy".}

proc g_application_unmark_busy*(
  application: ptr GApplication
): void {.cdecl, importc: "g_application_unmark_busy".}

proc g_application_get_is_busy*(
  application: ptr GApplication
): gboolean {.cdecl, importc: "g_application_get_is_busy".}

proc g_application_send_notification*(
  application: ptr GApplication, id: cstring, notification: ptr GNotification
): void {.cdecl, importc: "g_application_send_notification".}

proc g_application_withdraw_notification*(
  application: ptr GApplication, id: cstring
): void {.cdecl, importc: "g_application_withdraw_notification".}

proc g_application_bind_busy_property*(
  application: ptr GApplication, object_arg: gpointer, property: cstring
): void {.cdecl, importc: "g_application_bind_busy_property".}

proc g_application_unbind_busy_property*(
  application: ptr GApplication, object_arg: gpointer, property: cstring
): void {.cdecl, importc: "g_application_unbind_busy_property".}

proc g_application_command_line_get_type*(): GType {.
  cdecl, importc: "g_application_command_line_get_type"
.}

proc g_application_command_line_get_arguments*(
  cmdline: ptr GApplicationCommandLine, argc: ptr cint
): ptr cstring {.cdecl, importc: "g_application_command_line_get_arguments".}

proc g_application_command_line_get_options_dict*(
  cmdline: ptr GApplicationCommandLine
): ptr GVariantDict {.cdecl, importc: "g_application_command_line_get_options_dict".}

proc g_application_command_line_get_stdin*(
  cmdline: ptr GApplicationCommandLine
): ptr GInputStream {.cdecl, importc: "g_application_command_line_get_stdin".}

proc g_application_command_line_get_environ*(
  cmdline: ptr GApplicationCommandLine
): ptr cstring {.cdecl, importc: "g_application_command_line_get_environ".}

proc g_application_command_line_getenv*(
  cmdline: ptr GApplicationCommandLine, name: cstring
): cstring {.cdecl, importc: "g_application_command_line_getenv".}

proc g_application_command_line_get_cwd*(
  cmdline: ptr GApplicationCommandLine
): cstring {.cdecl, importc: "g_application_command_line_get_cwd".}

proc g_application_command_line_get_is_remote*(
  cmdline: ptr GApplicationCommandLine
): gboolean {.cdecl, importc: "g_application_command_line_get_is_remote".}

proc g_application_command_line_print_literal*(
  cmdline: ptr GApplicationCommandLine, message: cstring
): void {.cdecl, importc: "g_application_command_line_print_literal".}

proc g_application_command_line_printerr_literal*(
  cmdline: ptr GApplicationCommandLine, message: cstring
): void {.cdecl, importc: "g_application_command_line_printerr_literal".}

proc g_application_command_line_print*(
  cmdline: ptr GApplicationCommandLine, format: cstring
): void {.cdecl, varargs, importc: "g_application_command_line_print".}

proc g_application_command_line_printerr*(
  cmdline: ptr GApplicationCommandLine, format: cstring
): void {.cdecl, varargs, importc: "g_application_command_line_printerr".}

proc g_application_command_line_get_exit_status*(
  cmdline: ptr GApplicationCommandLine
): cint {.cdecl, importc: "g_application_command_line_get_exit_status".}

proc g_application_command_line_set_exit_status*(
  cmdline: ptr GApplicationCommandLine, exit_status: cint
): void {.cdecl, importc: "g_application_command_line_set_exit_status".}

proc g_application_command_line_get_platform_data*(
  cmdline: ptr GApplicationCommandLine
): ptr GVariant {.cdecl, importc: "g_application_command_line_get_platform_data".}

proc g_application_command_line_create_file_for_arg*(
  cmdline: ptr GApplicationCommandLine, arg: cstring
): ptr GFile {.cdecl, importc: "g_application_command_line_create_file_for_arg".}

proc g_application_command_line_done*(
  cmdline: ptr GApplicationCommandLine
): void {.cdecl, importc: "g_application_command_line_done".}

proc g_initable_get_type*(): GType {.cdecl, importc: "g_initable_get_type".}
proc g_initable_init*(
  initable: ptr GInitable, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_initable_init".}

proc g_initable_new*(
  object_type: GType,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
  first_property_name: cstring,
): gpointer {.cdecl, varargs, importc: "g_initable_new".}

proc g_initable_newv*(
  object_type: GType,
  n_parameters: guint,
  parameters: ptr GParameter,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gpointer {.cdecl, importc: "g_initable_newv".}

proc g_initable_new_valist*(
  object_type: GType,
  first_property_name: cstring,
  var_args: va_list,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GObject {.cdecl, importc: "g_initable_new_valist".}

proc g_async_initable_get_type*(): GType {.cdecl, importc: "g_async_initable_get_type".}
proc g_async_initable_init_async*(
  initable: ptr GAsyncInitable,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_async_initable_init_async".}

proc g_async_initable_init_finish*(
  initable: ptr GAsyncInitable, res: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_async_initable_init_finish".}

proc g_async_initable_new_async*(
  object_type: GType,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  first_property_name: cstring,
): void {.cdecl, varargs, importc: "g_async_initable_new_async".}

proc g_async_initable_newv_async*(
  object_type: GType,
  n_parameters: guint,
  parameters: ptr GParameter,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_async_initable_newv_async".}

proc g_async_initable_new_valist_async*(
  object_type: GType,
  first_property_name: cstring,
  var_args: va_list,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_async_initable_new_valist_async".}

proc g_async_initable_new_finish*(
  initable: ptr GAsyncInitable, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GObject {.cdecl, importc: "g_async_initable_new_finish".}

proc g_async_result_get_type*(): GType {.cdecl, importc: "g_async_result_get_type".}
proc g_async_result_get_user_data*(
  res: ptr GAsyncResult
): gpointer {.cdecl, importc: "g_async_result_get_user_data".}

proc g_async_result_get_source_object*(
  res: ptr GAsyncResult
): ptr GObject {.cdecl, importc: "g_async_result_get_source_object".}

proc g_async_result_legacy_propagate_error*(
  res: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_async_result_legacy_propagate_error".}

proc g_async_result_is_tagged*(
  res: ptr GAsyncResult, source_tag: gpointer
): gboolean {.cdecl, importc: "g_async_result_is_tagged".}

proc g_input_stream_get_type*(): GType {.cdecl, importc: "g_input_stream_get_type".}
proc g_input_stream_read*(
  stream: ptr GInputStream,
  buffer: pointer,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_input_stream_read".}

proc g_input_stream_read_all*(
  stream: ptr GInputStream,
  buffer: pointer,
  count: gsize,
  bytes_read: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_input_stream_read_all".}

proc g_input_stream_read_bytes*(
  stream: ptr GInputStream,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_input_stream_read_bytes".}

proc g_input_stream_skip*(
  stream: ptr GInputStream,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_input_stream_skip".}

proc g_input_stream_close*(
  stream: ptr GInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_input_stream_close".}

proc g_input_stream_read_async*(
  stream: ptr GInputStream,
  buffer: pointer,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_input_stream_read_async".}

proc g_input_stream_read_finish*(
  stream: ptr GInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_input_stream_read_finish".}

proc g_input_stream_read_all_async*(
  stream: ptr GInputStream,
  buffer: pointer,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_input_stream_read_all_async".}

proc g_input_stream_read_all_finish*(
  stream: ptr GInputStream,
  result: ptr GAsyncResult,
  bytes_read: ptr gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_input_stream_read_all_finish".}

proc g_input_stream_read_bytes_async*(
  stream: ptr GInputStream,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_input_stream_read_bytes_async".}

proc g_input_stream_read_bytes_finish*(
  stream: ptr GInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GBytes {.cdecl, importc: "g_input_stream_read_bytes_finish".}

proc g_input_stream_skip_async*(
  stream: ptr GInputStream,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_input_stream_skip_async".}

proc g_input_stream_skip_finish*(
  stream: ptr GInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_input_stream_skip_finish".}

proc g_input_stream_close_async*(
  stream: ptr GInputStream,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_input_stream_close_async".}

proc g_input_stream_close_finish*(
  stream: ptr GInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_input_stream_close_finish".}

proc g_input_stream_is_closed*(
  stream: ptr GInputStream
): gboolean {.cdecl, importc: "g_input_stream_is_closed".}

proc g_input_stream_has_pending*(
  stream: ptr GInputStream
): gboolean {.cdecl, importc: "g_input_stream_has_pending".}

proc g_input_stream_set_pending*(
  stream: ptr GInputStream, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_input_stream_set_pending".}

proc g_input_stream_clear_pending*(
  stream: ptr GInputStream
): void {.cdecl, importc: "g_input_stream_clear_pending".}

proc g_filter_input_stream_get_type*(): GType {.
  cdecl, importc: "g_filter_input_stream_get_type"
.}

proc g_filter_input_stream_get_base_stream*(
  stream: ptr GFilterInputStream
): ptr GInputStream {.cdecl, importc: "g_filter_input_stream_get_base_stream".}

proc g_filter_input_stream_get_close_base_stream*(
  stream: ptr GFilterInputStream
): gboolean {.cdecl, importc: "g_filter_input_stream_get_close_base_stream".}

proc g_filter_input_stream_set_close_base_stream*(
  stream: ptr GFilterInputStream, close_base: gboolean
): void {.cdecl, importc: "g_filter_input_stream_set_close_base_stream".}

proc g_buffered_input_stream_get_type*(): GType {.
  cdecl, importc: "g_buffered_input_stream_get_type"
.}

proc g_buffered_input_stream_new*(
  base_stream: ptr GInputStream
): ptr GInputStream {.cdecl, importc: "g_buffered_input_stream_new".}

proc g_buffered_input_stream_new_sized*(
  base_stream: ptr GInputStream, size: gsize
): ptr GInputStream {.cdecl, importc: "g_buffered_input_stream_new_sized".}

proc g_buffered_input_stream_get_buffer_size*(
  stream: ptr GBufferedInputStream
): gsize {.cdecl, importc: "g_buffered_input_stream_get_buffer_size".}

proc g_buffered_input_stream_set_buffer_size*(
  stream: ptr GBufferedInputStream, size: gsize
): void {.cdecl, importc: "g_buffered_input_stream_set_buffer_size".}

proc g_buffered_input_stream_get_available*(
  stream: ptr GBufferedInputStream
): gsize {.cdecl, importc: "g_buffered_input_stream_get_available".}

proc g_buffered_input_stream_peek*(
  stream: ptr GBufferedInputStream, buffer: pointer, offset: gsize, count: gsize
): gsize {.cdecl, importc: "g_buffered_input_stream_peek".}

proc g_buffered_input_stream_peek_buffer*(
  stream: ptr GBufferedInputStream, count: ptr gsize
): pointer {.cdecl, importc: "g_buffered_input_stream_peek_buffer".}

proc g_buffered_input_stream_fill*(
  stream: ptr GBufferedInputStream,
  count: gssize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_buffered_input_stream_fill".}

proc g_buffered_input_stream_fill_async*(
  stream: ptr GBufferedInputStream,
  count: gssize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_buffered_input_stream_fill_async".}

proc g_buffered_input_stream_fill_finish*(
  stream: ptr GBufferedInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_buffered_input_stream_fill_finish".}

proc g_buffered_input_stream_read_byte*(
  stream: ptr GBufferedInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): cint {.cdecl, importc: "g_buffered_input_stream_read_byte".}

proc g_output_stream_get_type*(): GType {.cdecl, importc: "g_output_stream_get_type".}
proc g_output_stream_write*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_output_stream_write".}

proc g_output_stream_write_all*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_write_all".}

proc g_output_stream_writev*(
  stream: ptr GOutputStream,
  vectors: ptr GOutputVector,
  n_vectors: gsize,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_writev".}

proc g_output_stream_writev_all*(
  stream: ptr GOutputStream,
  vectors: ptr GOutputVector,
  n_vectors: gsize,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_writev_all".}

proc g_output_stream_printf*(
  stream: ptr GOutputStream,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
  format: cstring,
): gboolean {.cdecl, varargs, importc: "g_output_stream_printf".}

proc g_output_stream_vprintf*(
  stream: ptr GOutputStream,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
  format: cstring,
): gboolean {.cdecl, varargs, importc: "g_output_stream_vprintf".}

proc g_output_stream_write_bytes*(
  stream: ptr GOutputStream,
  bytes: ptr GBytes,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_output_stream_write_bytes".}

proc g_output_stream_splice*(
  stream: ptr GOutputStream,
  source: ptr GInputStream,
  flags: GOutputStreamSpliceFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_output_stream_splice".}

proc g_output_stream_flush*(
  stream: ptr GOutputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_output_stream_flush".}

proc g_output_stream_close*(
  stream: ptr GOutputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_output_stream_close".}

proc g_output_stream_write_async*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_write_async".}

proc g_output_stream_write_finish*(
  stream: ptr GOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_output_stream_write_finish".}

proc g_output_stream_write_all_async*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_write_all_async".}

proc g_output_stream_write_all_finish*(
  stream: ptr GOutputStream,
  result: ptr GAsyncResult,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_write_all_finish".}

proc g_output_stream_writev_async*(
  stream: ptr GOutputStream,
  vectors: ptr GOutputVector,
  n_vectors: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_writev_async".}

proc g_output_stream_writev_finish*(
  stream: ptr GOutputStream,
  result: ptr GAsyncResult,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_writev_finish".}

proc g_output_stream_writev_all_async*(
  stream: ptr GOutputStream,
  vectors: ptr GOutputVector,
  n_vectors: gsize,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_writev_all_async".}

proc g_output_stream_writev_all_finish*(
  stream: ptr GOutputStream,
  result: ptr GAsyncResult,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_output_stream_writev_all_finish".}

proc g_output_stream_write_bytes_async*(
  stream: ptr GOutputStream,
  bytes: ptr GBytes,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_write_bytes_async".}

proc g_output_stream_write_bytes_finish*(
  stream: ptr GOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_output_stream_write_bytes_finish".}

proc g_output_stream_splice_async*(
  stream: ptr GOutputStream,
  source: ptr GInputStream,
  flags: GOutputStreamSpliceFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_splice_async".}

proc g_output_stream_splice_finish*(
  stream: ptr GOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gssize {.cdecl, importc: "g_output_stream_splice_finish".}

proc g_output_stream_flush_async*(
  stream: ptr GOutputStream,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_flush_async".}

proc g_output_stream_flush_finish*(
  stream: ptr GOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_output_stream_flush_finish".}

proc g_output_stream_close_async*(
  stream: ptr GOutputStream,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_output_stream_close_async".}

proc g_output_stream_close_finish*(
  stream: ptr GOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_output_stream_close_finish".}

proc g_output_stream_is_closed*(
  stream: ptr GOutputStream
): gboolean {.cdecl, importc: "g_output_stream_is_closed".}

proc g_output_stream_is_closing*(
  stream: ptr GOutputStream
): gboolean {.cdecl, importc: "g_output_stream_is_closing".}

proc g_output_stream_has_pending*(
  stream: ptr GOutputStream
): gboolean {.cdecl, importc: "g_output_stream_has_pending".}

proc g_output_stream_set_pending*(
  stream: ptr GOutputStream, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_output_stream_set_pending".}

proc g_output_stream_clear_pending*(
  stream: ptr GOutputStream
): void {.cdecl, importc: "g_output_stream_clear_pending".}

proc g_filter_output_stream_get_type*(): GType {.
  cdecl, importc: "g_filter_output_stream_get_type"
.}

proc g_filter_output_stream_get_base_stream*(
  stream: ptr GFilterOutputStream
): ptr GOutputStream {.cdecl, importc: "g_filter_output_stream_get_base_stream".}

proc g_filter_output_stream_get_close_base_stream*(
  stream: ptr GFilterOutputStream
): gboolean {.cdecl, importc: "g_filter_output_stream_get_close_base_stream".}

proc g_filter_output_stream_set_close_base_stream*(
  stream: ptr GFilterOutputStream, close_base: gboolean
): void {.cdecl, importc: "g_filter_output_stream_set_close_base_stream".}

proc g_buffered_output_stream_get_type*(): GType {.
  cdecl, importc: "g_buffered_output_stream_get_type"
.}

proc g_buffered_output_stream_new*(
  base_stream: ptr GOutputStream
): ptr GOutputStream {.cdecl, importc: "g_buffered_output_stream_new".}

proc g_buffered_output_stream_new_sized*(
  base_stream: ptr GOutputStream, size: gsize
): ptr GOutputStream {.cdecl, importc: "g_buffered_output_stream_new_sized".}

proc g_buffered_output_stream_get_buffer_size*(
  stream: ptr GBufferedOutputStream
): gsize {.cdecl, importc: "g_buffered_output_stream_get_buffer_size".}

proc g_buffered_output_stream_set_buffer_size*(
  stream: ptr GBufferedOutputStream, size: gsize
): void {.cdecl, importc: "g_buffered_output_stream_set_buffer_size".}

proc g_buffered_output_stream_get_auto_grow*(
  stream: ptr GBufferedOutputStream
): gboolean {.cdecl, importc: "g_buffered_output_stream_get_auto_grow".}

proc g_buffered_output_stream_set_auto_grow*(
  stream: ptr GBufferedOutputStream, auto_grow: gboolean
): void {.cdecl, importc: "g_buffered_output_stream_set_auto_grow".}

proc g_bytes_icon_get_type*(): GType {.cdecl, importc: "g_bytes_icon_get_type".}
proc g_bytes_icon_new*(
  bytes: ptr GBytes
): ptr GIcon {.cdecl, importc: "g_bytes_icon_new".}

proc g_bytes_icon_get_bytes*(
  icon: ptr GBytesIcon
): ptr GBytes {.cdecl, importc: "g_bytes_icon_get_bytes".}

proc g_cancellable_get_type*(): GType {.cdecl, importc: "g_cancellable_get_type".}
proc g_cancellable_new*(): ptr GCancellable {.cdecl, importc: "g_cancellable_new".}
proc g_cancellable_is_cancelled*(
  cancellable: ptr GCancellable
): gboolean {.cdecl, importc: "g_cancellable_is_cancelled".}

proc g_cancellable_set_error_if_cancelled*(
  cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_cancellable_set_error_if_cancelled".}

proc g_cancellable_get_fd*(
  cancellable: ptr GCancellable
): cint {.cdecl, importc: "g_cancellable_get_fd".}

proc g_cancellable_make_pollfd*(
  cancellable: ptr GCancellable, pollfd: ptr GPollFD
): gboolean {.cdecl, importc: "g_cancellable_make_pollfd".}

proc g_cancellable_release_fd*(
  cancellable: ptr GCancellable
): void {.cdecl, importc: "g_cancellable_release_fd".}

proc g_cancellable_source_new*(
  cancellable: ptr GCancellable
): ptr GSource {.cdecl, importc: "g_cancellable_source_new".}

proc g_cancellable_get_current*(): ptr GCancellable {.
  cdecl, importc: "g_cancellable_get_current"
.}

proc g_cancellable_push_current*(
  cancellable: ptr GCancellable
): void {.cdecl, importc: "g_cancellable_push_current".}

proc g_cancellable_pop_current*(
  cancellable: ptr GCancellable
): void {.cdecl, importc: "g_cancellable_pop_current".}

proc g_cancellable_reset*(
  cancellable: ptr GCancellable
): void {.cdecl, importc: "g_cancellable_reset".}

proc g_cancellable_connect*(
  cancellable: ptr GCancellable,
  callback: GCallback,
  data: gpointer,
  data_destroy_func: GDestroyNotify,
): gulong {.cdecl, importc: "g_cancellable_connect".}

proc g_cancellable_disconnect*(
  cancellable: ptr GCancellable, handler_id: gulong
): void {.cdecl, importc: "g_cancellable_disconnect".}

proc g_cancellable_cancel*(
  cancellable: ptr GCancellable
): void {.cdecl, importc: "g_cancellable_cancel".}

proc g_converter_get_type*(): GType {.cdecl, importc: "g_converter_get_type".}
proc g_converter_convert*(
  converter_arg: ptr GConverter,
  inbuf: pointer,
  inbuf_size: gsize,
  outbuf: pointer,
  outbuf_size: gsize,
  flags: GConverterFlags,
  bytes_read: ptr gsize,
  bytes_written: ptr gsize,
  error: ptr ptr GError,
): GConverterResult {.cdecl, importc: "g_converter_convert".}

proc g_converter_reset*(
  converter_arg: ptr GConverter
): void {.cdecl, importc: "g_converter_reset".}

proc g_converter_convert_bytes*(
  converter_arg: ptr GConverter, bytes: ptr GBytes, error: ptr ptr GError
): ptr GBytes {.cdecl, importc: "g_converter_convert_bytes".}

proc g_charset_converter_get_type*(): GType {.
  cdecl, importc: "g_charset_converter_get_type"
.}

proc g_charset_converter_new*(
  to_charset: cstring, from_charset: cstring, error: ptr ptr GError
): ptr GCharsetConverter {.cdecl, importc: "g_charset_converter_new".}

proc g_charset_converter_set_use_fallback*(
  converter_arg: ptr GCharsetConverter, use_fallback: gboolean
): void {.cdecl, importc: "g_charset_converter_set_use_fallback".}

proc g_charset_converter_get_use_fallback*(
  converter_arg: ptr GCharsetConverter
): gboolean {.cdecl, importc: "g_charset_converter_get_use_fallback".}

proc g_charset_converter_get_num_fallbacks*(
  converter_arg: ptr GCharsetConverter
): guint {.cdecl, importc: "g_charset_converter_get_num_fallbacks".}

proc g_content_type_equals*(
  type1: cstring, type2: cstring
): gboolean {.cdecl, importc: "g_content_type_equals".}

proc g_content_type_is_a*(
  type_arg: cstring, supertype: cstring
): gboolean {.cdecl, importc: "g_content_type_is_a".}

proc g_content_type_is_mime_type*(
  type_arg: cstring, mime_type: cstring
): gboolean {.cdecl, importc: "g_content_type_is_mime_type".}

proc g_content_type_is_unknown*(
  type_arg: cstring
): gboolean {.cdecl, importc: "g_content_type_is_unknown".}

proc g_content_type_get_description*(
  type_arg: cstring
): cstring {.cdecl, importc: "g_content_type_get_description".}

proc g_content_type_get_mime_type*(
  type_arg: cstring
): cstring {.cdecl, importc: "g_content_type_get_mime_type".}

proc g_content_type_get_icon*(
  type_arg: cstring
): ptr GIcon {.cdecl, importc: "g_content_type_get_icon".}

proc g_content_type_get_symbolic_icon*(
  type_arg: cstring
): ptr GIcon {.cdecl, importc: "g_content_type_get_symbolic_icon".}

proc g_content_type_get_generic_icon_name*(
  type_arg: cstring
): cstring {.cdecl, importc: "g_content_type_get_generic_icon_name".}

proc g_content_type_can_be_executable*(
  type_arg: cstring
): gboolean {.cdecl, importc: "g_content_type_can_be_executable".}

proc g_content_type_from_mime_type*(
  mime_type: cstring
): cstring {.cdecl, importc: "g_content_type_from_mime_type".}

proc g_content_type_guess*(
  filename: cstring, data: ptr guchar, data_size: gsize, result_uncertain: ptr gboolean
): cstring {.cdecl, importc: "g_content_type_guess".}

proc g_content_type_guess_for_tree*(
  root: ptr GFile
): ptr cstring {.cdecl, importc: "g_content_type_guess_for_tree".}

proc g_content_types_get_registered*(): ptr GList {.
  cdecl, importc: "g_content_types_get_registered"
.}

proc g_content_type_get_mime_dirs*(): ptr cstring {.
  cdecl, importc: "g_content_type_get_mime_dirs"
.}

proc g_content_type_set_mime_dirs*(
  dirs: ptr cstring
): void {.cdecl, importc: "g_content_type_set_mime_dirs".}

proc g_converter_input_stream_get_type*(): GType {.
  cdecl, importc: "g_converter_input_stream_get_type"
.}

proc g_converter_input_stream_new*(
  base_stream: ptr GInputStream, converter_arg: ptr GConverter
): ptr GInputStream {.cdecl, importc: "g_converter_input_stream_new".}

proc g_converter_input_stream_get_converter*(
  converter_stream: ptr GConverterInputStream
): ptr GConverter {.cdecl, importc: "g_converter_input_stream_get_converter".}

proc g_converter_output_stream_get_type*(): GType {.
  cdecl, importc: "g_converter_output_stream_get_type"
.}

proc g_converter_output_stream_new*(
  base_stream: ptr GOutputStream, converter_arg: ptr GConverter
): ptr GOutputStream {.cdecl, importc: "g_converter_output_stream_new".}

proc g_converter_output_stream_get_converter*(
  converter_stream: ptr GConverterOutputStream
): ptr GConverter {.cdecl, importc: "g_converter_output_stream_get_converter".}

proc g_credentials_get_type*(): GType {.cdecl, importc: "g_credentials_get_type".}
proc g_credentials_new*(): ptr GCredentials {.cdecl, importc: "g_credentials_new".}
proc g_credentials_to_string*(
  credentials: ptr GCredentials
): cstring {.cdecl, importc: "g_credentials_to_string".}

proc g_credentials_get_native*(
  credentials: ptr GCredentials, native_type: GCredentialsType
): gpointer {.cdecl, importc: "g_credentials_get_native".}

proc g_credentials_set_native*(
  credentials: ptr GCredentials, native_type: GCredentialsType, native: gpointer
): void {.cdecl, importc: "g_credentials_set_native".}

proc g_credentials_is_same_user*(
  credentials: ptr GCredentials,
  other_credentials: ptr GCredentials,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_credentials_is_same_user".}

proc g_credentials_get_unix_pid*(
  credentials: ptr GCredentials, error: ptr ptr GError
): pid_t {.cdecl, importc: "g_credentials_get_unix_pid".}

proc g_credentials_get_unix_user*(
  credentials: ptr GCredentials, error: ptr ptr GError
): uid_t {.cdecl, importc: "g_credentials_get_unix_user".}

proc g_credentials_set_unix_user*(
  credentials: ptr GCredentials, uid: uid_t, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_credentials_set_unix_user".}

proc g_datagram_based_get_type*(): GType {.cdecl, importc: "g_datagram_based_get_type".}
proc g_datagram_based_receive_messages*(
  datagram_based: ptr GDatagramBased,
  messages: ptr GInputMessage,
  num_messages: guint,
  flags: gint,
  timeout: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gint {.cdecl, importc: "g_datagram_based_receive_messages".}

proc g_datagram_based_send_messages*(
  datagram_based: ptr GDatagramBased,
  messages: ptr GOutputMessage,
  num_messages: guint,
  flags: gint,
  timeout: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gint {.cdecl, importc: "g_datagram_based_send_messages".}

proc g_datagram_based_create_source*(
  datagram_based: ptr GDatagramBased,
  condition: GIOCondition,
  cancellable: ptr GCancellable,
): ptr GSource {.cdecl, importc: "g_datagram_based_create_source".}

proc g_datagram_based_condition_check*(
  datagram_based: ptr GDatagramBased, condition: GIOCondition
): GIOCondition {.cdecl, importc: "g_datagram_based_condition_check".}

proc g_datagram_based_condition_wait*(
  datagram_based: ptr GDatagramBased,
  condition: GIOCondition,
  timeout: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_datagram_based_condition_wait".}

proc g_data_input_stream_get_type*(): GType {.
  cdecl, importc: "g_data_input_stream_get_type"
.}

proc g_data_input_stream_new*(
  base_stream: ptr GInputStream
): ptr GDataInputStream {.cdecl, importc: "g_data_input_stream_new".}

proc g_data_input_stream_set_byte_order*(
  stream: ptr GDataInputStream, order: GDataStreamByteOrder
): void {.cdecl, importc: "g_data_input_stream_set_byte_order".}

proc g_data_input_stream_get_byte_order*(
  stream: ptr GDataInputStream
): GDataStreamByteOrder {.cdecl, importc: "g_data_input_stream_get_byte_order".}

proc g_data_input_stream_set_newline_type*(
  stream: ptr GDataInputStream, type_arg: GDataStreamNewlineType
): void {.cdecl, importc: "g_data_input_stream_set_newline_type".}

proc g_data_input_stream_get_newline_type*(
  stream: ptr GDataInputStream
): GDataStreamNewlineType {.cdecl, importc: "g_data_input_stream_get_newline_type".}

proc g_data_input_stream_read_byte*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): guchar {.cdecl, importc: "g_data_input_stream_read_byte".}

proc g_data_input_stream_read_int16*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gint16 {.cdecl, importc: "g_data_input_stream_read_int16".}

proc g_data_input_stream_read_uint16*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): guint16 {.cdecl, importc: "g_data_input_stream_read_uint16".}

proc g_data_input_stream_read_int32*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gint32 {.cdecl, importc: "g_data_input_stream_read_int32".}

proc g_data_input_stream_read_uint32*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): guint32 {.cdecl, importc: "g_data_input_stream_read_uint32".}

proc g_data_input_stream_read_int64*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gint64 {.cdecl, importc: "g_data_input_stream_read_int64".}

proc g_data_input_stream_read_uint64*(
  stream: ptr GDataInputStream, cancellable: ptr GCancellable, error: ptr ptr GError
): guint64 {.cdecl, importc: "g_data_input_stream_read_uint64".}

proc g_data_input_stream_read_line*(
  stream: ptr GDataInputStream,
  length: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_line".}

proc g_data_input_stream_read_line_utf8*(
  stream: ptr GDataInputStream,
  length: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_line_utf8".}

proc g_data_input_stream_read_line_async*(
  stream: ptr GDataInputStream,
  io_priority: gint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_data_input_stream_read_line_async".}

proc g_data_input_stream_read_line_finish*(
  stream: ptr GDataInputStream,
  result: ptr GAsyncResult,
  length: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_line_finish".}

proc g_data_input_stream_read_line_finish_utf8*(
  stream: ptr GDataInputStream,
  result: ptr GAsyncResult,
  length: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_line_finish_utf8".}

proc g_data_input_stream_read_until*(
  stream: ptr GDataInputStream,
  stop_chars: cstring,
  length: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_until".}

proc g_data_input_stream_read_until_async*(
  stream: ptr GDataInputStream,
  stop_chars: cstring,
  io_priority: gint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_data_input_stream_read_until_async".}

proc g_data_input_stream_read_until_finish*(
  stream: ptr GDataInputStream,
  result: ptr GAsyncResult,
  length: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_until_finish".}

proc g_data_input_stream_read_upto*(
  stream: ptr GDataInputStream,
  stop_chars: cstring,
  stop_chars_len: gssize,
  length: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_upto".}

proc g_data_input_stream_read_upto_async*(
  stream: ptr GDataInputStream,
  stop_chars: cstring,
  stop_chars_len: gssize,
  io_priority: gint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_data_input_stream_read_upto_async".}

proc g_data_input_stream_read_upto_finish*(
  stream: ptr GDataInputStream,
  result: ptr GAsyncResult,
  length: ptr gsize,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_data_input_stream_read_upto_finish".}

proc g_data_output_stream_get_type*(): GType {.
  cdecl, importc: "g_data_output_stream_get_type"
.}

proc g_data_output_stream_new*(
  base_stream: ptr GOutputStream
): ptr GDataOutputStream {.cdecl, importc: "g_data_output_stream_new".}

proc g_data_output_stream_set_byte_order*(
  stream: ptr GDataOutputStream, order: GDataStreamByteOrder
): void {.cdecl, importc: "g_data_output_stream_set_byte_order".}

proc g_data_output_stream_get_byte_order*(
  stream: ptr GDataOutputStream
): GDataStreamByteOrder {.cdecl, importc: "g_data_output_stream_get_byte_order".}

proc g_data_output_stream_put_byte*(
  stream: ptr GDataOutputStream,
  data: guchar,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_byte".}

proc g_data_output_stream_put_int16*(
  stream: ptr GDataOutputStream,
  data: gint16,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_int16".}

proc g_data_output_stream_put_uint16*(
  stream: ptr GDataOutputStream,
  data: guint16,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_uint16".}

proc g_data_output_stream_put_int32*(
  stream: ptr GDataOutputStream,
  data: gint32,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_int32".}

proc g_data_output_stream_put_uint32*(
  stream: ptr GDataOutputStream,
  data: guint32,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_uint32".}

proc g_data_output_stream_put_int64*(
  stream: ptr GDataOutputStream,
  data: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_int64".}

proc g_data_output_stream_put_uint64*(
  stream: ptr GDataOutputStream,
  data: guint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_uint64".}

proc g_data_output_stream_put_string*(
  stream: ptr GDataOutputStream,
  str: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_data_output_stream_put_string".}

proc g_dbus_action_group_get_type*(): GType {.
  cdecl, importc: "g_dbus_action_group_get_type"
.}

proc g_dbus_action_group_get*(
  connection: ptr GDBusConnection, bus_name: cstring, object_path: cstring
): ptr GDBusActionGroup {.cdecl, importc: "g_dbus_action_group_get".}

proc g_dbus_address_escape_value*(
  string: cstring
): cstring {.cdecl, importc: "g_dbus_address_escape_value".}

proc g_dbus_is_address*(
  string: cstring
): gboolean {.cdecl, importc: "g_dbus_is_address".}

proc g_dbus_is_supported_address*(
  string: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_is_supported_address".}

proc g_dbus_address_get_stream*(
  address: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_address_get_stream".}

proc g_dbus_address_get_stream_finish*(
  res: ptr GAsyncResult, out_guid: ptr cstring, error: ptr ptr GError
): ptr GIOStream {.cdecl, importc: "g_dbus_address_get_stream_finish".}

proc g_dbus_address_get_stream_sync*(
  address: cstring,
  out_guid: ptr cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GIOStream {.cdecl, importc: "g_dbus_address_get_stream_sync".}

proc g_dbus_address_get_for_bus_sync*(
  bus_type: GBusType, cancellable: ptr GCancellable, error: ptr ptr GError
): cstring {.cdecl, importc: "g_dbus_address_get_for_bus_sync".}

proc g_dbus_auth_observer_get_type*(): GType {.
  cdecl, importc: "g_dbus_auth_observer_get_type"
.}

proc g_dbus_auth_observer_new*(): ptr GDBusAuthObserver {.
  cdecl, importc: "g_dbus_auth_observer_new"
.}

proc g_dbus_auth_observer_authorize_authenticated_peer*(
  observer: ptr GDBusAuthObserver, stream: ptr GIOStream, credentials: ptr GCredentials
): gboolean {.cdecl, importc: "g_dbus_auth_observer_authorize_authenticated_peer".}

proc g_dbus_auth_observer_allow_mechanism*(
  observer: ptr GDBusAuthObserver, mechanism: cstring
): gboolean {.cdecl, importc: "g_dbus_auth_observer_allow_mechanism".}

proc g_dbus_connection_get_type*(): GType {.
  cdecl, importc: "g_dbus_connection_get_type"
.}

proc g_bus_get*(
  bus_type: GBusType,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_bus_get".}

proc g_bus_get_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusConnection {.cdecl, importc: "g_bus_get_finish".}

proc g_bus_get_sync*(
  bus_type: GBusType, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GDBusConnection {.cdecl, importc: "g_bus_get_sync".}

proc g_dbus_connection_new*(
  stream: ptr GIOStream,
  guid: cstring,
  flags: GDBusConnectionFlags,
  observer: ptr GDBusAuthObserver,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_new".}

proc g_dbus_connection_new_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusConnection {.cdecl, importc: "g_dbus_connection_new_finish".}

proc g_dbus_connection_new_sync*(
  stream: ptr GIOStream,
  guid: cstring,
  flags: GDBusConnectionFlags,
  observer: ptr GDBusAuthObserver,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusConnection {.cdecl, importc: "g_dbus_connection_new_sync".}

proc g_dbus_connection_new_for_address*(
  address: cstring,
  flags: GDBusConnectionFlags,
  observer: ptr GDBusAuthObserver,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_new_for_address".}

proc g_dbus_connection_new_for_address_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusConnection {.cdecl, importc: "g_dbus_connection_new_for_address_finish".}

proc g_dbus_connection_new_for_address_sync*(
  address: cstring,
  flags: GDBusConnectionFlags,
  observer: ptr GDBusAuthObserver,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusConnection {.cdecl, importc: "g_dbus_connection_new_for_address_sync".}

proc g_dbus_connection_start_message_processing*(
  connection: ptr GDBusConnection
): void {.cdecl, importc: "g_dbus_connection_start_message_processing".}

proc g_dbus_connection_is_closed*(
  connection: ptr GDBusConnection
): gboolean {.cdecl, importc: "g_dbus_connection_is_closed".}

proc g_dbus_connection_get_stream*(
  connection: ptr GDBusConnection
): ptr GIOStream {.cdecl, importc: "g_dbus_connection_get_stream".}

proc g_dbus_connection_get_guid*(
  connection: ptr GDBusConnection
): cstring {.cdecl, importc: "g_dbus_connection_get_guid".}

proc g_dbus_connection_get_unique_name*(
  connection: ptr GDBusConnection
): cstring {.cdecl, importc: "g_dbus_connection_get_unique_name".}

proc g_dbus_connection_get_peer_credentials*(
  connection: ptr GDBusConnection
): ptr GCredentials {.cdecl, importc: "g_dbus_connection_get_peer_credentials".}

proc g_dbus_connection_get_last_serial*(
  connection: ptr GDBusConnection
): guint32 {.cdecl, importc: "g_dbus_connection_get_last_serial".}

proc g_dbus_connection_get_exit_on_close*(
  connection: ptr GDBusConnection
): gboolean {.cdecl, importc: "g_dbus_connection_get_exit_on_close".}

proc g_dbus_connection_set_exit_on_close*(
  connection: ptr GDBusConnection, exit_on_close: gboolean
): void {.cdecl, importc: "g_dbus_connection_set_exit_on_close".}

proc g_dbus_connection_get_capabilities*(
  connection: ptr GDBusConnection
): GDBusCapabilityFlags {.cdecl, importc: "g_dbus_connection_get_capabilities".}

proc g_dbus_connection_get_flags*(
  connection: ptr GDBusConnection
): GDBusConnectionFlags {.cdecl, importc: "g_dbus_connection_get_flags".}

proc g_dbus_connection_close*(
  connection: ptr GDBusConnection,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_close".}

proc g_dbus_connection_close_finish*(
  connection: ptr GDBusConnection, res: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_connection_close_finish".}

proc g_dbus_connection_close_sync*(
  connection: ptr GDBusConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_connection_close_sync".}

proc g_dbus_connection_flush*(
  connection: ptr GDBusConnection,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_flush".}

proc g_dbus_connection_flush_finish*(
  connection: ptr GDBusConnection, res: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_connection_flush_finish".}

proc g_dbus_connection_flush_sync*(
  connection: ptr GDBusConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_connection_flush_sync".}

proc g_dbus_connection_send_message*(
  connection: ptr GDBusConnection,
  message: ptr GDBusMessage,
  flags: GDBusSendMessageFlags,
  out_serial: ptr guint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_dbus_connection_send_message".}

proc g_dbus_connection_send_message_with_reply*(
  connection: ptr GDBusConnection,
  message: ptr GDBusMessage,
  flags: GDBusSendMessageFlags,
  timeout_msec: gint,
  out_serial: ptr guint32,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_send_message_with_reply".}

proc g_dbus_connection_send_message_with_reply_finish*(
  connection: ptr GDBusConnection, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusMessage {.
  cdecl, importc: "g_dbus_connection_send_message_with_reply_finish"
.}

proc g_dbus_connection_send_message_with_reply_sync*(
  connection: ptr GDBusConnection,
  message: ptr GDBusMessage,
  flags: GDBusSendMessageFlags,
  timeout_msec: gint,
  out_serial: ptr guint32,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusMessage {.cdecl, importc: "g_dbus_connection_send_message_with_reply_sync".}

proc g_dbus_connection_emit_signal*(
  connection: ptr GDBusConnection,
  destination_bus_name: cstring,
  object_path: cstring,
  interface_name: cstring,
  signal_name: cstring,
  parameters: ptr GVariant,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_dbus_connection_emit_signal".}

proc g_dbus_connection_call*(
  connection: ptr GDBusConnection,
  bus_name: cstring,
  object_path: cstring,
  interface_name: cstring,
  method_name: cstring,
  parameters: ptr GVariant,
  reply_type: ptr GVariantType,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_call".}

proc g_dbus_connection_call_finish*(
  connection: ptr GDBusConnection, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GVariant {.cdecl, importc: "g_dbus_connection_call_finish".}

proc g_dbus_connection_call_sync*(
  connection: ptr GDBusConnection,
  bus_name: cstring,
  object_path: cstring,
  interface_name: cstring,
  method_name: cstring,
  parameters: ptr GVariant,
  reply_type: ptr GVariantType,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_connection_call_sync".}

proc g_dbus_connection_call_with_unix_fd_list*(
  connection: ptr GDBusConnection,
  bus_name: cstring,
  object_path: cstring,
  interface_name: cstring,
  method_name: cstring,
  parameters: ptr GVariant,
  reply_type: ptr GVariantType,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  fd_list: ptr GUnixFDList,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_connection_call_with_unix_fd_list".}

proc g_dbus_connection_call_with_unix_fd_list_finish*(
  connection: ptr GDBusConnection,
  out_fd_list: ptr ptr GUnixFDList,
  res: ptr GAsyncResult,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_connection_call_with_unix_fd_list_finish".}

proc g_dbus_connection_call_with_unix_fd_list_sync*(
  connection: ptr GDBusConnection,
  bus_name: cstring,
  object_path: cstring,
  interface_name: cstring,
  method_name: cstring,
  parameters: ptr GVariant,
  reply_type: ptr GVariantType,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  fd_list: ptr GUnixFDList,
  out_fd_list: ptr ptr GUnixFDList,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_connection_call_with_unix_fd_list_sync".}

proc g_dbus_connection_register_object*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  interface_info: ptr GDBusInterfaceInfo,
  vtable: ptr GDBusInterfaceVTable,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_register_object".}

proc g_dbus_connection_register_object_with_closures*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  interface_info: ptr GDBusInterfaceInfo,
  method_call_closure: ptr GClosure,
  get_property_closure: ptr GClosure,
  set_property_closure: ptr GClosure,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_register_object_with_closures".}

proc g_dbus_connection_register_object_with_closures2*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  interface_info: ptr GDBusInterfaceInfo,
  method_call_closure: ptr GClosure,
  get_property_closure: ptr GClosure,
  set_property_closure: ptr GClosure,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_register_object_with_closures2".}

proc g_dbus_connection_unregister_object*(
  connection: ptr GDBusConnection, registration_id: guint
): gboolean {.cdecl, importc: "g_dbus_connection_unregister_object".}

proc g_dbus_connection_register_subtree*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  vtable: ptr GDBusSubtreeVTable,
  flags: GDBusSubtreeFlags,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_register_subtree".}

proc g_dbus_connection_unregister_subtree*(
  connection: ptr GDBusConnection, registration_id: guint
): gboolean {.cdecl, importc: "g_dbus_connection_unregister_subtree".}

proc g_dbus_connection_signal_subscribe*(
  connection: ptr GDBusConnection,
  sender: cstring,
  interface_name: cstring,
  member: cstring,
  object_path: cstring,
  arg0: cstring,
  flags: GDBusSignalFlags,
  callback: GDBusSignalCallback,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_dbus_connection_signal_subscribe".}

proc g_dbus_connection_signal_unsubscribe*(
  connection: ptr GDBusConnection, subscription_id: guint
): void {.cdecl, importc: "g_dbus_connection_signal_unsubscribe".}

proc g_dbus_connection_add_filter*(
  connection: ptr GDBusConnection,
  filter_function: GDBusMessageFilterFunction,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_dbus_connection_add_filter".}

proc g_dbus_connection_remove_filter*(
  connection: ptr GDBusConnection, filter_id: guint
): void {.cdecl, importc: "g_dbus_connection_remove_filter".}

proc g_dbus_error_quark*(): GQuark {.cdecl, importc: "g_dbus_error_quark".}
proc g_dbus_error_is_remote_error*(
  error: ptr GError
): gboolean {.cdecl, importc: "g_dbus_error_is_remote_error".}

proc g_dbus_error_get_remote_error*(
  error: ptr GError
): cstring {.cdecl, importc: "g_dbus_error_get_remote_error".}

proc g_dbus_error_strip_remote_error*(
  error: ptr GError
): gboolean {.cdecl, importc: "g_dbus_error_strip_remote_error".}

proc g_dbus_error_register_error*(
  error_domain: GQuark, error_code: gint, dbus_error_name: cstring
): gboolean {.cdecl, importc: "g_dbus_error_register_error".}

proc g_dbus_error_unregister_error*(
  error_domain: GQuark, error_code: gint, dbus_error_name: cstring
): gboolean {.cdecl, importc: "g_dbus_error_unregister_error".}

proc g_dbus_error_register_error_domain*(
  error_domain_quark_name: cstring,
  quark_volatile: ptr gsize,
  entries: ptr GDBusErrorEntry,
  num_entries: guint,
): void {.cdecl, importc: "g_dbus_error_register_error_domain".}

proc g_dbus_error_new_for_dbus_error*(
  dbus_error_name: cstring, dbus_error_message: cstring
): ptr GError {.cdecl, importc: "g_dbus_error_new_for_dbus_error".}

proc g_dbus_error_set_dbus_error*(
  error: ptr ptr GError,
  dbus_error_name: cstring,
  dbus_error_message: cstring,
  format: cstring,
): void {.cdecl, varargs, importc: "g_dbus_error_set_dbus_error".}

proc g_dbus_error_set_dbus_error_valist*(
  error: ptr ptr GError,
  dbus_error_name: cstring,
  dbus_error_message: cstring,
  format: cstring,
): void {.cdecl, varargs, importc: "g_dbus_error_set_dbus_error_valist".}

proc g_dbus_error_encode_gerror*(
  error: ptr GError
): cstring {.cdecl, importc: "g_dbus_error_encode_gerror".}

proc g_dbus_interface_get_type*(): GType {.cdecl, importc: "g_dbus_interface_get_type".}
proc g_dbus_interface_get_info*(
  interface_private: ptr GDBusInterface
): ptr GDBusInterfaceInfo {.cdecl, importc: "g_dbus_interface_get_info".}

proc g_dbus_interface_get_object*(
  interface_private: ptr GDBusInterface
): ptr GDBusObject {.cdecl, importc: "g_dbus_interface_get_object".}

proc g_dbus_interface_set_object*(
  interface_private: ptr GDBusInterface, object_arg: ptr GDBusObject
): void {.cdecl, importc: "g_dbus_interface_set_object".}

proc g_dbus_interface_dup_object*(
  interface_private: ptr GDBusInterface
): ptr GDBusObject {.cdecl, importc: "g_dbus_interface_dup_object".}

proc g_dbus_interface_skeleton_get_type*(): GType {.
  cdecl, importc: "g_dbus_interface_skeleton_get_type"
.}

proc g_dbus_interface_skeleton_get_flags*(
  interface_private: ptr GDBusInterfaceSkeleton
): GDBusInterfaceSkeletonFlags {.cdecl, importc: "g_dbus_interface_skeleton_get_flags".}

proc g_dbus_interface_skeleton_set_flags*(
  interface_private: ptr GDBusInterfaceSkeleton, flags: GDBusInterfaceSkeletonFlags
): void {.cdecl, importc: "g_dbus_interface_skeleton_set_flags".}

proc g_dbus_interface_skeleton_get_info*(
  interface_private: ptr GDBusInterfaceSkeleton
): ptr GDBusInterfaceInfo {.cdecl, importc: "g_dbus_interface_skeleton_get_info".}

proc g_dbus_interface_skeleton_get_vtable*(
  interface_private: ptr GDBusInterfaceSkeleton
): ptr GDBusInterfaceVTable {.cdecl, importc: "g_dbus_interface_skeleton_get_vtable".}

proc g_dbus_interface_skeleton_get_properties*(
  interface_private: ptr GDBusInterfaceSkeleton
): ptr GVariant {.cdecl, importc: "g_dbus_interface_skeleton_get_properties".}

proc g_dbus_interface_skeleton_flush*(
  interface_private: ptr GDBusInterfaceSkeleton
): void {.cdecl, importc: "g_dbus_interface_skeleton_flush".}

proc g_dbus_interface_skeleton_export*(
  interface_private: ptr GDBusInterfaceSkeleton,
  connection: ptr GDBusConnection,
  object_path: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_dbus_interface_skeleton_export".}

proc g_dbus_interface_skeleton_unexport*(
  interface_private: ptr GDBusInterfaceSkeleton
): void {.cdecl, importc: "g_dbus_interface_skeleton_unexport".}

proc g_dbus_interface_skeleton_unexport_from_connection*(
  interface_private: ptr GDBusInterfaceSkeleton, connection: ptr GDBusConnection
): void {.cdecl, importc: "g_dbus_interface_skeleton_unexport_from_connection".}

proc g_dbus_interface_skeleton_get_connection*(
  interface_private: ptr GDBusInterfaceSkeleton
): ptr GDBusConnection {.cdecl, importc: "g_dbus_interface_skeleton_get_connection".}

proc g_dbus_interface_skeleton_get_connections*(
  interface_private: ptr GDBusInterfaceSkeleton
): ptr GList {.cdecl, importc: "g_dbus_interface_skeleton_get_connections".}

proc g_dbus_interface_skeleton_has_connection*(
  interface_private: ptr GDBusInterfaceSkeleton, connection: ptr GDBusConnection
): gboolean {.cdecl, importc: "g_dbus_interface_skeleton_has_connection".}

proc g_dbus_interface_skeleton_get_object_path*(
  interface_private: ptr GDBusInterfaceSkeleton
): cstring {.cdecl, importc: "g_dbus_interface_skeleton_get_object_path".}

proc g_dbus_annotation_info_lookup*(
  annotations: ptr ptr GDBusAnnotationInfo, name: cstring
): cstring {.cdecl, importc: "g_dbus_annotation_info_lookup".}

proc g_dbus_interface_info_lookup_method*(
  info: ptr GDBusInterfaceInfo, name: cstring
): ptr GDBusMethodInfo {.cdecl, importc: "g_dbus_interface_info_lookup_method".}

proc g_dbus_interface_info_lookup_signal*(
  info: ptr GDBusInterfaceInfo, name: cstring
): ptr GDBusSignalInfo {.cdecl, importc: "g_dbus_interface_info_lookup_signal".}

proc g_dbus_interface_info_lookup_property*(
  info: ptr GDBusInterfaceInfo, name: cstring
): ptr GDBusPropertyInfo {.cdecl, importc: "g_dbus_interface_info_lookup_property".}

proc g_dbus_interface_info_cache_build*(
  info: ptr GDBusInterfaceInfo
): void {.cdecl, importc: "g_dbus_interface_info_cache_build".}

proc g_dbus_interface_info_cache_release*(
  info: ptr GDBusInterfaceInfo
): void {.cdecl, importc: "g_dbus_interface_info_cache_release".}

proc g_dbus_interface_info_generate_xml*(
  info: ptr GDBusInterfaceInfo, indent: guint, string_builder: ptr GString
): void {.cdecl, importc: "g_dbus_interface_info_generate_xml".}

proc g_dbus_node_info_new_for_xml*(
  xml_data: cstring, error: ptr ptr GError
): ptr GDBusNodeInfo {.cdecl, importc: "g_dbus_node_info_new_for_xml".}

proc g_dbus_node_info_lookup_interface*(
  info: ptr GDBusNodeInfo, name: cstring
): ptr GDBusInterfaceInfo {.cdecl, importc: "g_dbus_node_info_lookup_interface".}

proc g_dbus_node_info_generate_xml*(
  info: ptr GDBusNodeInfo, indent: guint, string_builder: ptr GString
): void {.cdecl, importc: "g_dbus_node_info_generate_xml".}

proc g_dbus_node_info_ref*(
  info: ptr GDBusNodeInfo
): ptr GDBusNodeInfo {.cdecl, importc: "g_dbus_node_info_ref".}

proc g_dbus_interface_info_ref*(
  info: ptr GDBusInterfaceInfo
): ptr GDBusInterfaceInfo {.cdecl, importc: "g_dbus_interface_info_ref".}

proc g_dbus_method_info_ref*(
  info: ptr GDBusMethodInfo
): ptr GDBusMethodInfo {.cdecl, importc: "g_dbus_method_info_ref".}

proc g_dbus_signal_info_ref*(
  info: ptr GDBusSignalInfo
): ptr GDBusSignalInfo {.cdecl, importc: "g_dbus_signal_info_ref".}

proc g_dbus_property_info_ref*(
  info: ptr GDBusPropertyInfo
): ptr GDBusPropertyInfo {.cdecl, importc: "g_dbus_property_info_ref".}

proc g_dbus_arg_info_ref*(
  info: ptr GDBusArgInfo
): ptr GDBusArgInfo {.cdecl, importc: "g_dbus_arg_info_ref".}

proc g_dbus_annotation_info_ref*(
  info: ptr GDBusAnnotationInfo
): ptr GDBusAnnotationInfo {.cdecl, importc: "g_dbus_annotation_info_ref".}

proc g_dbus_node_info_unref*(
  info: ptr GDBusNodeInfo
): void {.cdecl, importc: "g_dbus_node_info_unref".}

proc g_dbus_interface_info_unref*(
  info: ptr GDBusInterfaceInfo
): void {.cdecl, importc: "g_dbus_interface_info_unref".}

proc g_dbus_method_info_unref*(
  info: ptr GDBusMethodInfo
): void {.cdecl, importc: "g_dbus_method_info_unref".}

proc g_dbus_signal_info_unref*(
  info: ptr GDBusSignalInfo
): void {.cdecl, importc: "g_dbus_signal_info_unref".}

proc g_dbus_property_info_unref*(
  info: ptr GDBusPropertyInfo
): void {.cdecl, importc: "g_dbus_property_info_unref".}

proc g_dbus_arg_info_unref*(
  info: ptr GDBusArgInfo
): void {.cdecl, importc: "g_dbus_arg_info_unref".}

proc g_dbus_annotation_info_unref*(
  info: ptr GDBusAnnotationInfo
): void {.cdecl, importc: "g_dbus_annotation_info_unref".}

proc g_dbus_node_info_get_type*(): GType {.cdecl, importc: "g_dbus_node_info_get_type".}
proc g_dbus_interface_info_get_type*(): GType {.
  cdecl, importc: "g_dbus_interface_info_get_type"
.}

proc g_dbus_method_info_get_type*(): GType {.
  cdecl, importc: "g_dbus_method_info_get_type"
.}

proc g_dbus_signal_info_get_type*(): GType {.
  cdecl, importc: "g_dbus_signal_info_get_type"
.}

proc g_dbus_property_info_get_type*(): GType {.
  cdecl, importc: "g_dbus_property_info_get_type"
.}

proc g_dbus_arg_info_get_type*(): GType {.cdecl, importc: "g_dbus_arg_info_get_type".}
proc g_dbus_annotation_info_get_type*(): GType {.
  cdecl, importc: "g_dbus_annotation_info_get_type"
.}

proc g_dbus_menu_model_get_type*(): GType {.
  cdecl, importc: "g_dbus_menu_model_get_type"
.}

proc g_dbus_menu_model_get*(
  connection: ptr GDBusConnection, bus_name: cstring, object_path: cstring
): ptr GDBusMenuModel {.cdecl, importc: "g_dbus_menu_model_get".}

proc g_dbus_message_get_type*(): GType {.cdecl, importc: "g_dbus_message_get_type".}
proc g_dbus_message_new*(): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new".}
proc g_dbus_message_new_signal*(
  path: cstring, interface_private: cstring, signal: cstring
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new_signal".}

proc g_dbus_message_new_method_call*(
  name: cstring, path: cstring, interface_private: cstring, method_arg: cstring
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new_method_call".}

proc g_dbus_message_new_method_reply*(
  method_call_message: ptr GDBusMessage
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new_method_reply".}

proc g_dbus_message_new_method_error*(
  method_call_message: ptr GDBusMessage,
  error_name: cstring,
  error_message_format: cstring,
): ptr GDBusMessage {.cdecl, varargs, importc: "g_dbus_message_new_method_error".}

proc g_dbus_message_new_method_error_valist*(
  method_call_message: ptr GDBusMessage,
  error_name: cstring,
  error_message_format: cstring,
): ptr GDBusMessage {.
  cdecl, varargs, importc: "g_dbus_message_new_method_error_valist"
.}

proc g_dbus_message_new_method_error_literal*(
  method_call_message: ptr GDBusMessage, error_name: cstring, error_message: cstring
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new_method_error_literal".}

proc g_dbus_message_print*(
  message: ptr GDBusMessage, indent: guint
): cstring {.cdecl, importc: "g_dbus_message_print".}

proc g_dbus_message_get_locked*(
  message: ptr GDBusMessage
): gboolean {.cdecl, importc: "g_dbus_message_get_locked".}

proc g_dbus_message_lock*(
  message: ptr GDBusMessage
): void {.cdecl, importc: "g_dbus_message_lock".}

proc g_dbus_message_copy*(
  message: ptr GDBusMessage, error: ptr ptr GError
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_copy".}

proc g_dbus_message_get_byte_order*(
  message: ptr GDBusMessage
): GDBusMessageByteOrder {.cdecl, importc: "g_dbus_message_get_byte_order".}

proc g_dbus_message_set_byte_order*(
  message: ptr GDBusMessage, byte_order: GDBusMessageByteOrder
): void {.cdecl, importc: "g_dbus_message_set_byte_order".}

proc g_dbus_message_get_message_type*(
  message: ptr GDBusMessage
): GDBusMessageType {.cdecl, importc: "g_dbus_message_get_message_type".}

proc g_dbus_message_set_message_type*(
  message: ptr GDBusMessage, type_arg: GDBusMessageType
): void {.cdecl, importc: "g_dbus_message_set_message_type".}

proc g_dbus_message_get_flags*(
  message: ptr GDBusMessage
): GDBusMessageFlags {.cdecl, importc: "g_dbus_message_get_flags".}

proc g_dbus_message_set_flags*(
  message: ptr GDBusMessage, flags: GDBusMessageFlags
): void {.cdecl, importc: "g_dbus_message_set_flags".}

proc g_dbus_message_get_serial*(
  message: ptr GDBusMessage
): guint32 {.cdecl, importc: "g_dbus_message_get_serial".}

proc g_dbus_message_set_serial*(
  message: ptr GDBusMessage, serial: guint32
): void {.cdecl, importc: "g_dbus_message_set_serial".}

proc g_dbus_message_get_header*(
  message: ptr GDBusMessage, header_field: GDBusMessageHeaderField
): ptr GVariant {.cdecl, importc: "g_dbus_message_get_header".}

proc g_dbus_message_set_header*(
  message: ptr GDBusMessage, header_field: GDBusMessageHeaderField, value: ptr GVariant
): void {.cdecl, importc: "g_dbus_message_set_header".}

proc g_dbus_message_get_header_fields*(
  message: ptr GDBusMessage
): ptr guchar {.cdecl, importc: "g_dbus_message_get_header_fields".}

proc g_dbus_message_get_body*(
  message: ptr GDBusMessage
): ptr GVariant {.cdecl, importc: "g_dbus_message_get_body".}

proc g_dbus_message_set_body*(
  message: ptr GDBusMessage, body: ptr GVariant
): void {.cdecl, importc: "g_dbus_message_set_body".}

proc g_dbus_message_get_unix_fd_list*(
  message: ptr GDBusMessage
): ptr GUnixFDList {.cdecl, importc: "g_dbus_message_get_unix_fd_list".}

proc g_dbus_message_set_unix_fd_list*(
  message: ptr GDBusMessage, fd_list: ptr GUnixFDList
): void {.cdecl, importc: "g_dbus_message_set_unix_fd_list".}

proc g_dbus_message_get_reply_serial*(
  message: ptr GDBusMessage
): guint32 {.cdecl, importc: "g_dbus_message_get_reply_serial".}

proc g_dbus_message_set_reply_serial*(
  message: ptr GDBusMessage, value: guint32
): void {.cdecl, importc: "g_dbus_message_set_reply_serial".}

proc g_dbus_message_get_interface*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_interface".}

proc g_dbus_message_set_interface*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_interface".}

proc g_dbus_message_get_member*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_member".}

proc g_dbus_message_set_member*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_member".}

proc g_dbus_message_get_path*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_path".}

proc g_dbus_message_set_path*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_path".}

proc g_dbus_message_get_sender*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_sender".}

proc g_dbus_message_set_sender*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_sender".}

proc g_dbus_message_get_destination*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_destination".}

proc g_dbus_message_set_destination*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_destination".}

proc g_dbus_message_get_error_name*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_error_name".}

proc g_dbus_message_set_error_name*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_error_name".}

proc g_dbus_message_get_signature*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_signature".}

proc g_dbus_message_set_signature*(
  message: ptr GDBusMessage, value: cstring
): void {.cdecl, importc: "g_dbus_message_set_signature".}

proc g_dbus_message_get_num_unix_fds*(
  message: ptr GDBusMessage
): guint32 {.cdecl, importc: "g_dbus_message_get_num_unix_fds".}

proc g_dbus_message_set_num_unix_fds*(
  message: ptr GDBusMessage, value: guint32
): void {.cdecl, importc: "g_dbus_message_set_num_unix_fds".}

proc g_dbus_message_get_arg0*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_arg0".}

proc g_dbus_message_get_arg0_path*(
  message: ptr GDBusMessage
): cstring {.cdecl, importc: "g_dbus_message_get_arg0_path".}

proc g_dbus_message_new_from_blob*(
  blob: ptr guchar,
  blob_len: gsize,
  capabilities: GDBusCapabilityFlags,
  error: ptr ptr GError,
): ptr GDBusMessage {.cdecl, importc: "g_dbus_message_new_from_blob".}

proc g_dbus_message_bytes_needed*(
  blob: ptr guchar, blob_len: gsize, error: ptr ptr GError
): gssize {.cdecl, importc: "g_dbus_message_bytes_needed".}

proc g_dbus_message_to_blob*(
  message: ptr GDBusMessage,
  out_size: ptr gsize,
  capabilities: GDBusCapabilityFlags,
  error: ptr ptr GError,
): ptr guchar {.cdecl, importc: "g_dbus_message_to_blob".}

proc g_dbus_message_to_gerror*(
  message: ptr GDBusMessage, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dbus_message_to_gerror".}

proc g_dbus_method_invocation_get_type*(): GType {.
  cdecl, importc: "g_dbus_method_invocation_get_type"
.}

proc g_dbus_method_invocation_get_sender*(
  invocation: ptr GDBusMethodInvocation
): cstring {.cdecl, importc: "g_dbus_method_invocation_get_sender".}

proc g_dbus_method_invocation_get_object_path*(
  invocation: ptr GDBusMethodInvocation
): cstring {.cdecl, importc: "g_dbus_method_invocation_get_object_path".}

proc g_dbus_method_invocation_get_interface_name*(
  invocation: ptr GDBusMethodInvocation
): cstring {.cdecl, importc: "g_dbus_method_invocation_get_interface_name".}

proc g_dbus_method_invocation_get_method_name*(
  invocation: ptr GDBusMethodInvocation
): cstring {.cdecl, importc: "g_dbus_method_invocation_get_method_name".}

proc g_dbus_method_invocation_get_method_info*(
  invocation: ptr GDBusMethodInvocation
): ptr GDBusMethodInfo {.cdecl, importc: "g_dbus_method_invocation_get_method_info".}

proc g_dbus_method_invocation_get_property_info*(
  invocation: ptr GDBusMethodInvocation
): ptr GDBusPropertyInfo {.
  cdecl, importc: "g_dbus_method_invocation_get_property_info"
.}

proc g_dbus_method_invocation_get_connection*(
  invocation: ptr GDBusMethodInvocation
): ptr GDBusConnection {.cdecl, importc: "g_dbus_method_invocation_get_connection".}

proc g_dbus_method_invocation_get_message*(
  invocation: ptr GDBusMethodInvocation
): ptr GDBusMessage {.cdecl, importc: "g_dbus_method_invocation_get_message".}

proc g_dbus_method_invocation_get_parameters*(
  invocation: ptr GDBusMethodInvocation
): ptr GVariant {.cdecl, importc: "g_dbus_method_invocation_get_parameters".}

proc g_dbus_method_invocation_get_user_data*(
  invocation: ptr GDBusMethodInvocation
): gpointer {.cdecl, importc: "g_dbus_method_invocation_get_user_data".}

proc g_dbus_method_invocation_return_value*(
  invocation: ptr GDBusMethodInvocation, parameters: ptr GVariant
): void {.cdecl, importc: "g_dbus_method_invocation_return_value".}

proc g_dbus_method_invocation_return_value_with_unix_fd_list*(
  invocation: ptr GDBusMethodInvocation,
  parameters: ptr GVariant,
  fd_list: ptr GUnixFDList,
): void {.cdecl, importc: "g_dbus_method_invocation_return_value_with_unix_fd_list".}

proc g_dbus_method_invocation_return_error*(
  invocation: ptr GDBusMethodInvocation, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_dbus_method_invocation_return_error".}

proc g_dbus_method_invocation_return_error_valist*(
  invocation: ptr GDBusMethodInvocation, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_dbus_method_invocation_return_error_valist".}

proc g_dbus_method_invocation_return_error_literal*(
  invocation: ptr GDBusMethodInvocation, domain: GQuark, code: gint, message: cstring
): void {.cdecl, importc: "g_dbus_method_invocation_return_error_literal".}

proc g_dbus_method_invocation_return_gerror*(
  invocation: ptr GDBusMethodInvocation, error: ptr GError
): void {.cdecl, importc: "g_dbus_method_invocation_return_gerror".}

proc g_dbus_method_invocation_take_error*(
  invocation: ptr GDBusMethodInvocation, error: ptr GError
): void {.cdecl, importc: "g_dbus_method_invocation_take_error".}

proc g_dbus_method_invocation_return_dbus_error*(
  invocation: ptr GDBusMethodInvocation, error_name: cstring, error_message: cstring
): void {.cdecl, importc: "g_dbus_method_invocation_return_dbus_error".}

proc g_bus_own_name*(
  bus_type: GBusType,
  name: cstring,
  flags: GBusNameOwnerFlags,
  bus_acquired_handler: GBusAcquiredCallback,
  name_acquired_handler: GBusNameAcquiredCallback,
  name_lost_handler: GBusNameLostCallback,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_bus_own_name".}

proc g_bus_own_name_on_connection*(
  connection: ptr GDBusConnection,
  name: cstring,
  flags: GBusNameOwnerFlags,
  name_acquired_handler: GBusNameAcquiredCallback,
  name_lost_handler: GBusNameLostCallback,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_bus_own_name_on_connection".}

proc g_bus_own_name_with_closures*(
  bus_type: GBusType,
  name: cstring,
  flags: GBusNameOwnerFlags,
  bus_acquired_closure: ptr GClosure,
  name_acquired_closure: ptr GClosure,
  name_lost_closure: ptr GClosure,
): guint {.cdecl, importc: "g_bus_own_name_with_closures".}

proc g_bus_own_name_on_connection_with_closures*(
  connection: ptr GDBusConnection,
  name: cstring,
  flags: GBusNameOwnerFlags,
  name_acquired_closure: ptr GClosure,
  name_lost_closure: ptr GClosure,
): guint {.cdecl, importc: "g_bus_own_name_on_connection_with_closures".}

proc g_bus_unown_name*(owner_id: guint): void {.cdecl, importc: "g_bus_unown_name".}
proc g_bus_watch_name*(
  bus_type: GBusType,
  name: cstring,
  flags: GBusNameWatcherFlags,
  name_appeared_handler: GBusNameAppearedCallback,
  name_vanished_handler: GBusNameVanishedCallback,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_bus_watch_name".}

proc g_bus_watch_name_on_connection*(
  connection: ptr GDBusConnection,
  name: cstring,
  flags: GBusNameWatcherFlags,
  name_appeared_handler: GBusNameAppearedCallback,
  name_vanished_handler: GBusNameVanishedCallback,
  user_data: gpointer,
  user_data_free_func: GDestroyNotify,
): guint {.cdecl, importc: "g_bus_watch_name_on_connection".}

proc g_bus_watch_name_with_closures*(
  bus_type: GBusType,
  name: cstring,
  flags: GBusNameWatcherFlags,
  name_appeared_closure: ptr GClosure,
  name_vanished_closure: ptr GClosure,
): guint {.cdecl, importc: "g_bus_watch_name_with_closures".}

proc g_bus_watch_name_on_connection_with_closures*(
  connection: ptr GDBusConnection,
  name: cstring,
  flags: GBusNameWatcherFlags,
  name_appeared_closure: ptr GClosure,
  name_vanished_closure: ptr GClosure,
): guint {.cdecl, importc: "g_bus_watch_name_on_connection_with_closures".}

proc g_bus_unwatch_name*(
  watcher_id: guint
): void {.cdecl, importc: "g_bus_unwatch_name".}

proc g_dbus_object_get_type*(): GType {.cdecl, importc: "g_dbus_object_get_type".}
proc g_dbus_object_get_object_path*(
  object_arg: ptr GDBusObject
): cstring {.cdecl, importc: "g_dbus_object_get_object_path".}

proc g_dbus_object_get_interfaces*(
  object_arg: ptr GDBusObject
): ptr GList {.cdecl, importc: "g_dbus_object_get_interfaces".}

proc g_dbus_object_get_interface*(
  object_arg: ptr GDBusObject, interface_name: cstring
): ptr GDBusInterface {.cdecl, importc: "g_dbus_object_get_interface".}

proc g_dbus_object_manager_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_manager_get_type"
.}

proc g_dbus_object_manager_get_object_path*(
  manager: ptr GDBusObjectManager
): cstring {.cdecl, importc: "g_dbus_object_manager_get_object_path".}

proc g_dbus_object_manager_get_objects*(
  manager: ptr GDBusObjectManager
): ptr GList {.cdecl, importc: "g_dbus_object_manager_get_objects".}

proc g_dbus_object_manager_get_object*(
  manager: ptr GDBusObjectManager, object_path: cstring
): ptr GDBusObject {.cdecl, importc: "g_dbus_object_manager_get_object".}

proc g_dbus_object_manager_get_interface*(
  manager: ptr GDBusObjectManager, object_path: cstring, interface_name: cstring
): ptr GDBusInterface {.cdecl, importc: "g_dbus_object_manager_get_interface".}

proc g_dbus_object_manager_client_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_manager_client_get_type"
.}

proc g_dbus_object_manager_client_new*(
  connection: ptr GDBusConnection,
  flags: GDBusObjectManagerClientFlags,
  name: cstring,
  object_path: cstring,
  get_proxy_type_func: GDBusProxyTypeFunc,
  get_proxy_type_user_data: gpointer,
  get_proxy_type_destroy_notify: GDestroyNotify,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_object_manager_client_new".}

proc g_dbus_object_manager_client_new_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusObjectManager {.cdecl, importc: "g_dbus_object_manager_client_new_finish".}

proc g_dbus_object_manager_client_new_sync*(
  connection: ptr GDBusConnection,
  flags: GDBusObjectManagerClientFlags,
  name: cstring,
  object_path: cstring,
  get_proxy_type_func: GDBusProxyTypeFunc,
  get_proxy_type_user_data: gpointer,
  get_proxy_type_destroy_notify: GDestroyNotify,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusObjectManager {.cdecl, importc: "g_dbus_object_manager_client_new_sync".}

proc g_dbus_object_manager_client_new_for_bus*(
  bus_type: GBusType,
  flags: GDBusObjectManagerClientFlags,
  name: cstring,
  object_path: cstring,
  get_proxy_type_func: GDBusProxyTypeFunc,
  get_proxy_type_user_data: gpointer,
  get_proxy_type_destroy_notify: GDestroyNotify,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_object_manager_client_new_for_bus".}

proc g_dbus_object_manager_client_new_for_bus_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusObjectManager {.
  cdecl, importc: "g_dbus_object_manager_client_new_for_bus_finish"
.}

proc g_dbus_object_manager_client_new_for_bus_sync*(
  bus_type: GBusType,
  flags: GDBusObjectManagerClientFlags,
  name: cstring,
  object_path: cstring,
  get_proxy_type_func: GDBusProxyTypeFunc,
  get_proxy_type_user_data: gpointer,
  get_proxy_type_destroy_notify: GDestroyNotify,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusObjectManager {.
  cdecl, importc: "g_dbus_object_manager_client_new_for_bus_sync"
.}

proc g_dbus_object_manager_client_get_connection*(
  manager: ptr GDBusObjectManagerClient
): ptr GDBusConnection {.cdecl, importc: "g_dbus_object_manager_client_get_connection".}

proc g_dbus_object_manager_client_get_flags*(
  manager: ptr GDBusObjectManagerClient
): GDBusObjectManagerClientFlags {.
  cdecl, importc: "g_dbus_object_manager_client_get_flags"
.}

proc g_dbus_object_manager_client_get_name*(
  manager: ptr GDBusObjectManagerClient
): cstring {.cdecl, importc: "g_dbus_object_manager_client_get_name".}

proc g_dbus_object_manager_client_get_name_owner*(
  manager: ptr GDBusObjectManagerClient
): cstring {.cdecl, importc: "g_dbus_object_manager_client_get_name_owner".}

proc g_dbus_object_manager_server_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_manager_server_get_type"
.}

proc g_dbus_object_manager_server_new*(
  object_path: cstring
): ptr GDBusObjectManagerServer {.cdecl, importc: "g_dbus_object_manager_server_new".}

proc g_dbus_object_manager_server_get_connection*(
  manager: ptr GDBusObjectManagerServer
): ptr GDBusConnection {.cdecl, importc: "g_dbus_object_manager_server_get_connection".}

proc g_dbus_object_manager_server_set_connection*(
  manager: ptr GDBusObjectManagerServer, connection: ptr GDBusConnection
): void {.cdecl, importc: "g_dbus_object_manager_server_set_connection".}

proc g_dbus_object_manager_server_export*(
  manager: ptr GDBusObjectManagerServer, object_arg: ptr GDBusObjectSkeleton
): void {.cdecl, importc: "g_dbus_object_manager_server_export".}

proc g_dbus_object_manager_server_export_uniquely*(
  manager: ptr GDBusObjectManagerServer, object_arg: ptr GDBusObjectSkeleton
): void {.cdecl, importc: "g_dbus_object_manager_server_export_uniquely".}

proc g_dbus_object_manager_server_is_exported*(
  manager: ptr GDBusObjectManagerServer, object_arg: ptr GDBusObjectSkeleton
): gboolean {.cdecl, importc: "g_dbus_object_manager_server_is_exported".}

proc g_dbus_object_manager_server_unexport*(
  manager: ptr GDBusObjectManagerServer, object_path: cstring
): gboolean {.cdecl, importc: "g_dbus_object_manager_server_unexport".}

proc g_dbus_object_proxy_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_proxy_get_type"
.}

proc g_dbus_object_proxy_new*(
  connection: ptr GDBusConnection, object_path: cstring
): ptr GDBusObjectProxy {.cdecl, importc: "g_dbus_object_proxy_new".}

proc g_dbus_object_proxy_get_connection*(
  proxy: ptr GDBusObjectProxy
): ptr GDBusConnection {.cdecl, importc: "g_dbus_object_proxy_get_connection".}

proc g_dbus_object_skeleton_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_skeleton_get_type"
.}

proc g_dbus_object_skeleton_new*(
  object_path: cstring
): ptr GDBusObjectSkeleton {.cdecl, importc: "g_dbus_object_skeleton_new".}

proc g_dbus_object_skeleton_flush*(
  object_arg: ptr GDBusObjectSkeleton
): void {.cdecl, importc: "g_dbus_object_skeleton_flush".}

proc g_dbus_object_skeleton_add_interface*(
  object_arg: ptr GDBusObjectSkeleton, interface_private: ptr GDBusInterfaceSkeleton
): void {.cdecl, importc: "g_dbus_object_skeleton_add_interface".}

proc g_dbus_object_skeleton_remove_interface*(
  object_arg: ptr GDBusObjectSkeleton, interface_private: ptr GDBusInterfaceSkeleton
): void {.cdecl, importc: "g_dbus_object_skeleton_remove_interface".}

proc g_dbus_object_skeleton_remove_interface_by_name*(
  object_arg: ptr GDBusObjectSkeleton, interface_name: cstring
): void {.cdecl, importc: "g_dbus_object_skeleton_remove_interface_by_name".}

proc g_dbus_object_skeleton_set_object_path*(
  object_arg: ptr GDBusObjectSkeleton, object_path: cstring
): void {.cdecl, importc: "g_dbus_object_skeleton_set_object_path".}

proc g_dbus_proxy_get_type*(): GType {.cdecl, importc: "g_dbus_proxy_get_type".}
proc g_dbus_proxy_new*(
  connection: ptr GDBusConnection,
  flags: GDBusProxyFlags,
  info: ptr GDBusInterfaceInfo,
  name: cstring,
  object_path: cstring,
  interface_name: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_proxy_new".}

proc g_dbus_proxy_new_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusProxy {.cdecl, importc: "g_dbus_proxy_new_finish".}

proc g_dbus_proxy_new_sync*(
  connection: ptr GDBusConnection,
  flags: GDBusProxyFlags,
  info: ptr GDBusInterfaceInfo,
  name: cstring,
  object_path: cstring,
  interface_name: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusProxy {.cdecl, importc: "g_dbus_proxy_new_sync".}

proc g_dbus_proxy_new_for_bus*(
  bus_type: GBusType,
  flags: GDBusProxyFlags,
  info: ptr GDBusInterfaceInfo,
  name: cstring,
  object_path: cstring,
  interface_name: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_proxy_new_for_bus".}

proc g_dbus_proxy_new_for_bus_finish*(
  res: ptr GAsyncResult, error: ptr ptr GError
): ptr GDBusProxy {.cdecl, importc: "g_dbus_proxy_new_for_bus_finish".}

proc g_dbus_proxy_new_for_bus_sync*(
  bus_type: GBusType,
  flags: GDBusProxyFlags,
  info: ptr GDBusInterfaceInfo,
  name: cstring,
  object_path: cstring,
  interface_name: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusProxy {.cdecl, importc: "g_dbus_proxy_new_for_bus_sync".}

proc g_dbus_proxy_get_connection*(
  proxy: ptr GDBusProxy
): ptr GDBusConnection {.cdecl, importc: "g_dbus_proxy_get_connection".}

proc g_dbus_proxy_get_flags*(
  proxy: ptr GDBusProxy
): GDBusProxyFlags {.cdecl, importc: "g_dbus_proxy_get_flags".}

proc g_dbus_proxy_get_name*(
  proxy: ptr GDBusProxy
): cstring {.cdecl, importc: "g_dbus_proxy_get_name".}

proc g_dbus_proxy_get_name_owner*(
  proxy: ptr GDBusProxy
): cstring {.cdecl, importc: "g_dbus_proxy_get_name_owner".}

proc g_dbus_proxy_get_object_path*(
  proxy: ptr GDBusProxy
): cstring {.cdecl, importc: "g_dbus_proxy_get_object_path".}

proc g_dbus_proxy_get_interface_name*(
  proxy: ptr GDBusProxy
): cstring {.cdecl, importc: "g_dbus_proxy_get_interface_name".}

proc g_dbus_proxy_get_default_timeout*(
  proxy: ptr GDBusProxy
): gint {.cdecl, importc: "g_dbus_proxy_get_default_timeout".}

proc g_dbus_proxy_set_default_timeout*(
  proxy: ptr GDBusProxy, timeout_msec: gint
): void {.cdecl, importc: "g_dbus_proxy_set_default_timeout".}

proc g_dbus_proxy_get_interface_info*(
  proxy: ptr GDBusProxy
): ptr GDBusInterfaceInfo {.cdecl, importc: "g_dbus_proxy_get_interface_info".}

proc g_dbus_proxy_set_interface_info*(
  proxy: ptr GDBusProxy, info: ptr GDBusInterfaceInfo
): void {.cdecl, importc: "g_dbus_proxy_set_interface_info".}

proc g_dbus_proxy_get_cached_property*(
  proxy: ptr GDBusProxy, property_name: cstring
): ptr GVariant {.cdecl, importc: "g_dbus_proxy_get_cached_property".}

proc g_dbus_proxy_set_cached_property*(
  proxy: ptr GDBusProxy, property_name: cstring, value: ptr GVariant
): void {.cdecl, importc: "g_dbus_proxy_set_cached_property".}

proc g_dbus_proxy_get_cached_property_names*(
  proxy: ptr GDBusProxy
): ptr cstring {.cdecl, importc: "g_dbus_proxy_get_cached_property_names".}

proc g_dbus_proxy_call*(
  proxy: ptr GDBusProxy,
  method_name: cstring,
  parameters: ptr GVariant,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_proxy_call".}

proc g_dbus_proxy_call_finish*(
  proxy: ptr GDBusProxy, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GVariant {.cdecl, importc: "g_dbus_proxy_call_finish".}

proc g_dbus_proxy_call_sync*(
  proxy: ptr GDBusProxy,
  method_name: cstring,
  parameters: ptr GVariant,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_proxy_call_sync".}

proc g_dbus_proxy_call_with_unix_fd_list*(
  proxy: ptr GDBusProxy,
  method_name: cstring,
  parameters: ptr GVariant,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  fd_list: ptr GUnixFDList,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dbus_proxy_call_with_unix_fd_list".}

proc g_dbus_proxy_call_with_unix_fd_list_finish*(
  proxy: ptr GDBusProxy,
  out_fd_list: ptr ptr GUnixFDList,
  res: ptr GAsyncResult,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_proxy_call_with_unix_fd_list_finish".}

proc g_dbus_proxy_call_with_unix_fd_list_sync*(
  proxy: ptr GDBusProxy,
  method_name: cstring,
  parameters: ptr GVariant,
  flags: GDBusCallFlags,
  timeout_msec: gint,
  fd_list: ptr GUnixFDList,
  out_fd_list: ptr ptr GUnixFDList,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GVariant {.cdecl, importc: "g_dbus_proxy_call_with_unix_fd_list_sync".}

proc g_dbus_server_get_type*(): GType {.cdecl, importc: "g_dbus_server_get_type".}
proc g_dbus_server_new_sync*(
  address: cstring,
  flags: GDBusServerFlags,
  guid: cstring,
  observer: ptr GDBusAuthObserver,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GDBusServer {.cdecl, importc: "g_dbus_server_new_sync".}

proc g_dbus_server_get_client_address*(
  server: ptr GDBusServer
): cstring {.cdecl, importc: "g_dbus_server_get_client_address".}

proc g_dbus_server_get_guid*(
  server: ptr GDBusServer
): cstring {.cdecl, importc: "g_dbus_server_get_guid".}

proc g_dbus_server_get_flags*(
  server: ptr GDBusServer
): GDBusServerFlags {.cdecl, importc: "g_dbus_server_get_flags".}

proc g_dbus_server_start*(
  server: ptr GDBusServer
): void {.cdecl, importc: "g_dbus_server_start".}

proc g_dbus_server_stop*(
  server: ptr GDBusServer
): void {.cdecl, importc: "g_dbus_server_stop".}

proc g_dbus_server_is_active*(
  server: ptr GDBusServer
): gboolean {.cdecl, importc: "g_dbus_server_is_active".}

proc g_dbus_is_guid*(string: cstring): gboolean {.cdecl, importc: "g_dbus_is_guid".}
proc g_dbus_generate_guid*(): cstring {.cdecl, importc: "g_dbus_generate_guid".}
proc g_dbus_is_name*(string: cstring): gboolean {.cdecl, importc: "g_dbus_is_name".}
proc g_dbus_is_unique_name*(
  string: cstring
): gboolean {.cdecl, importc: "g_dbus_is_unique_name".}

proc g_dbus_is_member_name*(
  string: cstring
): gboolean {.cdecl, importc: "g_dbus_is_member_name".}

proc g_dbus_is_interface_name*(
  string: cstring
): gboolean {.cdecl, importc: "g_dbus_is_interface_name".}

proc g_dbus_is_error_name*(
  string: cstring
): gboolean {.cdecl, importc: "g_dbus_is_error_name".}

proc g_dbus_gvariant_to_gvalue*(
  value: ptr GVariant, out_gvalue: ptr GValue
): void {.cdecl, importc: "g_dbus_gvariant_to_gvalue".}

proc g_dbus_gvalue_to_gvariant*(
  gvalue: ptr GValue, type_arg: ptr GVariantType
): ptr GVariant {.cdecl, importc: "g_dbus_gvalue_to_gvariant".}

proc g_dbus_escape_object_path_bytestring*(
  bytes: ptr guint8
): cstring {.cdecl, importc: "g_dbus_escape_object_path_bytestring".}

proc g_dbus_escape_object_path*(
  s: cstring
): cstring {.cdecl, importc: "g_dbus_escape_object_path".}

proc g_dbus_unescape_object_path*(
  s: cstring
): ptr guint8 {.cdecl, importc: "g_dbus_unescape_object_path".}

proc g_debug_controller_get_type*(): GType {.
  cdecl, importc: "g_debug_controller_get_type"
.}

proc g_debug_controller_get_debug_enabled*(
  self: ptr GDebugController
): gboolean {.cdecl, importc: "g_debug_controller_get_debug_enabled".}

proc g_debug_controller_set_debug_enabled*(
  self: ptr GDebugController, debug_enabled: gboolean
): void {.cdecl, importc: "g_debug_controller_set_debug_enabled".}

proc g_debug_controller_dbus_get_type*(): GType {.
  cdecl, importc: "g_debug_controller_dbus_get_type"
.}

proc g_debug_controller_dbus_new*(
  connection: ptr GDBusConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GDebugControllerDBus {.cdecl, importc: "g_debug_controller_dbus_new".}

proc g_debug_controller_dbus_stop*(
  self: ptr GDebugControllerDBus
): void {.cdecl, importc: "g_debug_controller_dbus_stop".}

proc g_drive_get_type*(): GType {.cdecl, importc: "g_drive_get_type".}
proc g_drive_get_name*(
  drive: ptr GDrive
): cstring {.cdecl, importc: "g_drive_get_name".}

proc g_drive_get_icon*(
  drive: ptr GDrive
): ptr GIcon {.cdecl, importc: "g_drive_get_icon".}

proc g_drive_get_symbolic_icon*(
  drive: ptr GDrive
): ptr GIcon {.cdecl, importc: "g_drive_get_symbolic_icon".}

proc g_drive_has_volumes*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_has_volumes".}

proc g_drive_get_volumes*(
  drive: ptr GDrive
): ptr GList {.cdecl, importc: "g_drive_get_volumes".}

proc g_drive_is_removable*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_is_removable".}

proc g_drive_is_media_removable*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_is_media_removable".}

proc g_drive_has_media*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_has_media".}

proc g_drive_is_media_check_automatic*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_is_media_check_automatic".}

proc g_drive_can_poll_for_media*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_can_poll_for_media".}

proc g_drive_can_eject*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_can_eject".}

proc g_drive_eject*(
  drive: ptr GDrive,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_drive_eject".}

proc g_drive_eject_finish*(
  drive: ptr GDrive, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_drive_eject_finish".}

proc g_drive_poll_for_media*(
  drive: ptr GDrive,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_drive_poll_for_media".}

proc g_drive_poll_for_media_finish*(
  drive: ptr GDrive, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_drive_poll_for_media_finish".}

proc g_drive_get_identifier*(
  drive: ptr GDrive, kind: cstring
): cstring {.cdecl, importc: "g_drive_get_identifier".}

proc g_drive_enumerate_identifiers*(
  drive: ptr GDrive
): ptr cstring {.cdecl, importc: "g_drive_enumerate_identifiers".}

proc g_drive_get_start_stop_type*(
  drive: ptr GDrive
): GDriveStartStopType {.cdecl, importc: "g_drive_get_start_stop_type".}

proc g_drive_can_start*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_can_start".}

proc g_drive_can_start_degraded*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_can_start_degraded".}

proc g_drive_start*(
  drive: ptr GDrive,
  flags: GDriveStartFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_drive_start".}

proc g_drive_start_finish*(
  drive: ptr GDrive, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_drive_start_finish".}

proc g_drive_can_stop*(
  drive: ptr GDrive
): gboolean {.cdecl, importc: "g_drive_can_stop".}

proc g_drive_stop*(
  drive: ptr GDrive,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_drive_stop".}

proc g_drive_stop_finish*(
  drive: ptr GDrive, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_drive_stop_finish".}

proc g_drive_eject_with_operation*(
  drive: ptr GDrive,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_drive_eject_with_operation".}

proc g_drive_eject_with_operation_finish*(
  drive: ptr GDrive, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_drive_eject_with_operation_finish".}

proc g_drive_get_sort_key*(
  drive: ptr GDrive
): cstring {.cdecl, importc: "g_drive_get_sort_key".}

proc g_dtls_connection_get_type*(): GType {.
  cdecl, importc: "g_dtls_connection_get_type"
.}

proc g_dtls_connection_set_database*(
  conn: ptr GDtlsConnection, database: ptr GTlsDatabase
): void {.cdecl, importc: "g_dtls_connection_set_database".}

proc g_dtls_connection_get_database*(
  conn: ptr GDtlsConnection
): ptr GTlsDatabase {.cdecl, importc: "g_dtls_connection_get_database".}

proc g_dtls_connection_set_certificate*(
  conn: ptr GDtlsConnection, certificate: ptr GTlsCertificate
): void {.cdecl, importc: "g_dtls_connection_set_certificate".}

proc g_dtls_connection_get_certificate*(
  conn: ptr GDtlsConnection
): ptr GTlsCertificate {.cdecl, importc: "g_dtls_connection_get_certificate".}

proc g_dtls_connection_set_interaction*(
  conn: ptr GDtlsConnection, interaction: ptr GTlsInteraction
): void {.cdecl, importc: "g_dtls_connection_set_interaction".}

proc g_dtls_connection_get_interaction*(
  conn: ptr GDtlsConnection
): ptr GTlsInteraction {.cdecl, importc: "g_dtls_connection_get_interaction".}

proc g_dtls_connection_get_peer_certificate*(
  conn: ptr GDtlsConnection
): ptr GTlsCertificate {.cdecl, importc: "g_dtls_connection_get_peer_certificate".}

proc g_dtls_connection_get_peer_certificate_errors*(
  conn: ptr GDtlsConnection
): GTlsCertificateFlags {.
  cdecl, importc: "g_dtls_connection_get_peer_certificate_errors"
.}

proc g_dtls_connection_set_require_close_notify*(
  conn: ptr GDtlsConnection, require_close_notify: gboolean
): void {.cdecl, importc: "g_dtls_connection_set_require_close_notify".}

proc g_dtls_connection_get_require_close_notify*(
  conn: ptr GDtlsConnection
): gboolean {.cdecl, importc: "g_dtls_connection_get_require_close_notify".}

proc g_dtls_connection_set_rehandshake_mode*(
  conn: ptr GDtlsConnection, mode: GTlsRehandshakeMode
): void {.cdecl, importc: "g_dtls_connection_set_rehandshake_mode".}

proc g_dtls_connection_get_rehandshake_mode*(
  conn: ptr GDtlsConnection
): GTlsRehandshakeMode {.cdecl, importc: "g_dtls_connection_get_rehandshake_mode".}

proc g_dtls_connection_handshake*(
  conn: ptr GDtlsConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dtls_connection_handshake".}

proc g_dtls_connection_handshake_async*(
  conn: ptr GDtlsConnection,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dtls_connection_handshake_async".}

proc g_dtls_connection_handshake_finish*(
  conn: ptr GDtlsConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dtls_connection_handshake_finish".}

proc g_dtls_connection_shutdown*(
  conn: ptr GDtlsConnection,
  shutdown_read: gboolean,
  shutdown_write: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_dtls_connection_shutdown".}

proc g_dtls_connection_shutdown_async*(
  conn: ptr GDtlsConnection,
  shutdown_read: gboolean,
  shutdown_write: gboolean,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dtls_connection_shutdown_async".}

proc g_dtls_connection_shutdown_finish*(
  conn: ptr GDtlsConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dtls_connection_shutdown_finish".}

proc g_dtls_connection_close*(
  conn: ptr GDtlsConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dtls_connection_close".}

proc g_dtls_connection_close_async*(
  conn: ptr GDtlsConnection,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_dtls_connection_close_async".}

proc g_dtls_connection_close_finish*(
  conn: ptr GDtlsConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_dtls_connection_close_finish".}

proc g_dtls_connection_emit_accept_certificate*(
  conn: ptr GDtlsConnection,
  peer_cert: ptr GTlsCertificate,
  errors: GTlsCertificateFlags,
): gboolean {.cdecl, importc: "g_dtls_connection_emit_accept_certificate".}

proc g_dtls_connection_set_advertised_protocols*(
  conn: ptr GDtlsConnection, protocols: ptr cstring
): void {.cdecl, importc: "g_dtls_connection_set_advertised_protocols".}

proc g_dtls_connection_get_negotiated_protocol*(
  conn: ptr GDtlsConnection
): cstring {.cdecl, importc: "g_dtls_connection_get_negotiated_protocol".}

proc g_dtls_connection_get_channel_binding_data*(
  conn: ptr GDtlsConnection,
  type_arg: GTlsChannelBindingType,
  data: ptr GByteArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_dtls_connection_get_channel_binding_data".}

proc g_dtls_connection_get_protocol_version*(
  conn: ptr GDtlsConnection
): GTlsProtocolVersion {.cdecl, importc: "g_dtls_connection_get_protocol_version".}

proc g_dtls_connection_get_ciphersuite_name*(
  conn: ptr GDtlsConnection
): cstring {.cdecl, importc: "g_dtls_connection_get_ciphersuite_name".}

proc g_dtls_client_connection_get_type*(): GType {.
  cdecl, importc: "g_dtls_client_connection_get_type"
.}

proc g_dtls_client_connection_new*(
  base_socket: ptr GDatagramBased,
  server_identity: ptr GSocketConnectable,
  error: ptr ptr GError,
): ptr GDatagramBased {.cdecl, importc: "g_dtls_client_connection_new".}

proc g_dtls_client_connection_get_validation_flags*(
  conn: ptr GDtlsClientConnection
): GTlsCertificateFlags {.
  cdecl, importc: "g_dtls_client_connection_get_validation_flags"
.}

proc g_dtls_client_connection_set_validation_flags*(
  conn: ptr GDtlsClientConnection, flags: GTlsCertificateFlags
): void {.cdecl, importc: "g_dtls_client_connection_set_validation_flags".}

proc g_dtls_client_connection_get_server_identity*(
  conn: ptr GDtlsClientConnection
): ptr GSocketConnectable {.
  cdecl, importc: "g_dtls_client_connection_get_server_identity"
.}

proc g_dtls_client_connection_set_server_identity*(
  conn: ptr GDtlsClientConnection, identity: ptr GSocketConnectable
): void {.cdecl, importc: "g_dtls_client_connection_set_server_identity".}

proc g_dtls_client_connection_get_accepted_cas*(
  conn: ptr GDtlsClientConnection
): ptr GList {.cdecl, importc: "g_dtls_client_connection_get_accepted_cas".}

proc g_dtls_server_connection_get_type*(): GType {.
  cdecl, importc: "g_dtls_server_connection_get_type"
.}

proc g_dtls_server_connection_new*(
  base_socket: ptr GDatagramBased,
  certificate: ptr GTlsCertificate,
  error: ptr ptr GError,
): ptr GDatagramBased {.cdecl, importc: "g_dtls_server_connection_new".}

proc g_icon_get_type*(): GType {.cdecl, importc: "g_icon_get_type".}
proc g_icon_hash*(icon: gconstpointer): guint {.cdecl, importc: "g_icon_hash".}
proc g_icon_equal*(
  icon1: ptr GIcon, icon2: ptr GIcon
): gboolean {.cdecl, importc: "g_icon_equal".}

proc g_icon_to_string*(icon: ptr GIcon): cstring {.cdecl, importc: "g_icon_to_string".}
proc g_icon_new_for_string*(
  str: cstring, error: ptr ptr GError
): ptr GIcon {.cdecl, importc: "g_icon_new_for_string".}

proc g_icon_serialize*(
  icon: ptr GIcon
): ptr GVariant {.cdecl, importc: "g_icon_serialize".}

proc g_icon_deserialize*(
  value: ptr GVariant
): ptr GIcon {.cdecl, importc: "g_icon_deserialize".}

proc g_emblem_get_type*(): GType {.cdecl, importc: "g_emblem_get_type".}
proc g_emblem_new*(icon: ptr GIcon): ptr GEmblem {.cdecl, importc: "g_emblem_new".}
proc g_emblem_new_with_origin*(
  icon: ptr GIcon, origin: GEmblemOrigin
): ptr GEmblem {.cdecl, importc: "g_emblem_new_with_origin".}

proc g_emblem_get_icon*(
  emblem: ptr GEmblem
): ptr GIcon {.cdecl, importc: "g_emblem_get_icon".}

proc g_emblem_get_origin*(
  emblem: ptr GEmblem
): GEmblemOrigin {.cdecl, importc: "g_emblem_get_origin".}

proc g_emblemed_icon_get_type*(): GType {.cdecl, importc: "g_emblemed_icon_get_type".}
proc g_emblemed_icon_new*(
  icon: ptr GIcon, emblem: ptr GEmblem
): ptr GIcon {.cdecl, importc: "g_emblemed_icon_new".}

proc g_emblemed_icon_get_icon*(
  emblemed: ptr GEmblemedIcon
): ptr GIcon {.cdecl, importc: "g_emblemed_icon_get_icon".}

proc g_emblemed_icon_get_emblems*(
  emblemed: ptr GEmblemedIcon
): ptr GList {.cdecl, importc: "g_emblemed_icon_get_emblems".}

proc g_emblemed_icon_add_emblem*(
  emblemed: ptr GEmblemedIcon, emblem: ptr GEmblem
): void {.cdecl, importc: "g_emblemed_icon_add_emblem".}

proc g_emblemed_icon_clear_emblems*(
  emblemed: ptr GEmblemedIcon
): void {.cdecl, importc: "g_emblemed_icon_clear_emblems".}

proc g_file_get_type*(): GType {.cdecl, importc: "g_file_get_type".}
proc g_file_new_for_path*(
  path: cstring
): ptr GFile {.cdecl, importc: "g_file_new_for_path".}

proc g_file_new_for_uri*(
  uri: cstring
): ptr GFile {.cdecl, importc: "g_file_new_for_uri".}

proc g_file_new_for_commandline_arg*(
  arg: cstring
): ptr GFile {.cdecl, importc: "g_file_new_for_commandline_arg".}

proc g_file_new_for_commandline_arg_and_cwd*(
  arg: cstring, cwd: cstring
): ptr GFile {.cdecl, importc: "g_file_new_for_commandline_arg_and_cwd".}

proc g_file_new_tmp*(
  tmpl: cstring, iostream: ptr ptr GFileIOStream, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_new_tmp".}

proc g_file_new_tmp_async*(
  tmpl: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_new_tmp_async".}

proc g_file_new_tmp_finish*(
  result: ptr GAsyncResult, iostream: ptr ptr GFileIOStream, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_new_tmp_finish".}

proc g_file_new_tmp_dir_async*(
  tmpl: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_new_tmp_dir_async".}

proc g_file_new_tmp_dir_finish*(
  result: ptr GAsyncResult, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_new_tmp_dir_finish".}

proc g_file_parse_name*(
  parse_name: cstring
): ptr GFile {.cdecl, importc: "g_file_parse_name".}

proc g_file_new_build_filename*(
  first_element: cstring
): ptr GFile {.cdecl, varargs, importc: "g_file_new_build_filename".}

proc g_file_new_build_filenamev*(
  args: ptr cstring
): ptr GFile {.cdecl, importc: "g_file_new_build_filenamev".}

proc g_file_dup*(file: ptr GFile): ptr GFile {.cdecl, importc: "g_file_dup".}
proc g_file_hash*(file: gconstpointer): guint {.cdecl, importc: "g_file_hash".}
proc g_file_equal*(
  file1: ptr GFile, file2: ptr GFile
): gboolean {.cdecl, importc: "g_file_equal".}

proc g_file_get_basename*(
  file: ptr GFile
): cstring {.cdecl, importc: "g_file_get_basename".}

proc g_file_get_path*(file: ptr GFile): cstring {.cdecl, importc: "g_file_get_path".}
proc g_file_peek_path*(file: ptr GFile): cstring {.cdecl, importc: "g_file_peek_path".}
proc g_file_get_uri*(file: ptr GFile): cstring {.cdecl, importc: "g_file_get_uri".}
proc g_file_get_parse_name*(
  file: ptr GFile
): cstring {.cdecl, importc: "g_file_get_parse_name".}

proc g_file_get_parent*(
  file: ptr GFile
): ptr GFile {.cdecl, importc: "g_file_get_parent".}

proc g_file_has_parent*(
  file: ptr GFile, parent: ptr GFile
): gboolean {.cdecl, importc: "g_file_has_parent".}

proc g_file_get_child*(
  file: ptr GFile, name: cstring
): ptr GFile {.cdecl, importc: "g_file_get_child".}

proc g_file_get_child_for_display_name*(
  file: ptr GFile, display_name: cstring, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_get_child_for_display_name".}

proc g_file_has_prefix*(
  file: ptr GFile, prefix: ptr GFile
): gboolean {.cdecl, importc: "g_file_has_prefix".}

proc g_file_get_relative_path*(
  parent: ptr GFile, descendant: ptr GFile
): cstring {.cdecl, importc: "g_file_get_relative_path".}

proc g_file_resolve_relative_path*(
  file: ptr GFile, relative_path: cstring
): ptr GFile {.cdecl, importc: "g_file_resolve_relative_path".}

proc g_file_is_native*(file: ptr GFile): gboolean {.cdecl, importc: "g_file_is_native".}
proc g_file_has_uri_scheme*(
  file: ptr GFile, uri_scheme: cstring
): gboolean {.cdecl, importc: "g_file_has_uri_scheme".}

proc g_file_get_uri_scheme*(
  file: ptr GFile
): cstring {.cdecl, importc: "g_file_get_uri_scheme".}

proc g_file_read*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GFileInputStream {.cdecl, importc: "g_file_read".}

proc g_file_read_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_read_async".}

proc g_file_read_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInputStream {.cdecl, importc: "g_file_read_finish".}

proc g_file_append_to*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileOutputStream {.cdecl, importc: "g_file_append_to".}

proc g_file_create*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileOutputStream {.cdecl, importc: "g_file_create".}

proc g_file_replace*(
  file: ptr GFile,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileOutputStream {.cdecl, importc: "g_file_replace".}

proc g_file_append_to_async*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_append_to_async".}

proc g_file_append_to_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileOutputStream {.cdecl, importc: "g_file_append_to_finish".}

proc g_file_create_async*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_create_async".}

proc g_file_create_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileOutputStream {.cdecl, importc: "g_file_create_finish".}

proc g_file_replace_async*(
  file: ptr GFile,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_replace_async".}

proc g_file_replace_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileOutputStream {.cdecl, importc: "g_file_replace_finish".}

proc g_file_open_readwrite*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GFileIOStream {.cdecl, importc: "g_file_open_readwrite".}

proc g_file_open_readwrite_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_open_readwrite_async".}

proc g_file_open_readwrite_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileIOStream {.cdecl, importc: "g_file_open_readwrite_finish".}

proc g_file_create_readwrite*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileIOStream {.cdecl, importc: "g_file_create_readwrite".}

proc g_file_create_readwrite_async*(
  file: ptr GFile,
  flags: GFileCreateFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_create_readwrite_async".}

proc g_file_create_readwrite_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileIOStream {.cdecl, importc: "g_file_create_readwrite_finish".}

proc g_file_replace_readwrite*(
  file: ptr GFile,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileIOStream {.cdecl, importc: "g_file_replace_readwrite".}

proc g_file_replace_readwrite_async*(
  file: ptr GFile,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_replace_readwrite_async".}

proc g_file_replace_readwrite_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileIOStream {.cdecl, importc: "g_file_replace_readwrite_finish".}

proc g_file_query_exists*(
  file: ptr GFile, cancellable: ptr GCancellable
): gboolean {.cdecl, importc: "g_file_query_exists".}

proc g_file_query_file_type*(
  file: ptr GFile, flags: GFileQueryInfoFlags, cancellable: ptr GCancellable
): GFileType {.cdecl, importc: "g_file_query_file_type".}

proc g_file_query_info*(
  file: ptr GFile,
  attributes: cstring,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileInfo {.cdecl, importc: "g_file_query_info".}

proc g_file_query_info_async*(
  file: ptr GFile,
  attributes: cstring,
  flags: GFileQueryInfoFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_query_info_async".}

proc g_file_query_info_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_query_info_finish".}

proc g_file_query_filesystem_info*(
  file: ptr GFile,
  attributes: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileInfo {.cdecl, importc: "g_file_query_filesystem_info".}

proc g_file_query_filesystem_info_async*(
  file: ptr GFile,
  attributes: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_query_filesystem_info_async".}

proc g_file_query_filesystem_info_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_query_filesystem_info_finish".}

proc g_file_find_enclosing_mount*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GMount {.cdecl, importc: "g_file_find_enclosing_mount".}

proc g_file_find_enclosing_mount_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_find_enclosing_mount_async".}

proc g_file_find_enclosing_mount_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GMount {.cdecl, importc: "g_file_find_enclosing_mount_finish".}

proc g_file_enumerate_children*(
  file: ptr GFile,
  attributes: cstring,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileEnumerator {.cdecl, importc: "g_file_enumerate_children".}

proc g_file_enumerate_children_async*(
  file: ptr GFile,
  attributes: cstring,
  flags: GFileQueryInfoFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_enumerate_children_async".}

proc g_file_enumerate_children_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileEnumerator {.cdecl, importc: "g_file_enumerate_children_finish".}

proc g_file_set_display_name*(
  file: ptr GFile,
  display_name: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFile {.cdecl, importc: "g_file_set_display_name".}

proc g_file_set_display_name_async*(
  file: ptr GFile,
  display_name: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_set_display_name_async".}

proc g_file_set_display_name_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_set_display_name_finish".}

proc g_file_delete*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_delete".}

proc g_file_delete_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_delete_async".}

proc g_file_delete_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_delete_finish".}

proc g_file_trash*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_trash".}

proc g_file_trash_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_trash_async".}

proc g_file_trash_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_trash_finish".}

proc g_file_copy*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  cancellable: ptr GCancellable,
  progress_callback: GFileProgressCallback,
  progress_callback_data: gpointer,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_copy".}

proc g_file_copy_async*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  progress_callback: GFileProgressCallback,
  progress_callback_data: gpointer,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_copy_async".}

proc g_file_copy_async_with_closures*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  progress_callback_closure: ptr GClosure,
  ready_callback_closure: ptr GClosure,
): void {.cdecl, importc: "g_file_copy_async_with_closures".}

proc g_file_copy_finish*(
  file: ptr GFile, res: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_copy_finish".}

proc g_file_move*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  cancellable: ptr GCancellable,
  progress_callback: GFileProgressCallback,
  progress_callback_data: gpointer,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_move".}

proc g_file_move_async*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  progress_callback: GFileProgressCallback,
  progress_callback_data: gpointer,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_move_async".}

proc g_file_move_async_with_closures*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  progress_callback_closure: ptr GClosure,
  ready_callback_closure: ptr GClosure,
): void {.cdecl, importc: "g_file_move_async_with_closures".}

proc g_file_move_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_move_finish".}

proc g_file_make_directory*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_make_directory".}

proc g_file_make_directory_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_make_directory_async".}

proc g_file_make_directory_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_make_directory_finish".}

proc g_file_make_directory_with_parents*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_make_directory_with_parents".}

proc g_file_make_symbolic_link*(
  file: ptr GFile,
  symlink_value: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_make_symbolic_link".}

proc g_file_make_symbolic_link_async*(
  file: ptr GFile,
  symlink_value: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_make_symbolic_link_async".}

proc g_file_make_symbolic_link_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_make_symbolic_link_finish".}

proc g_file_query_settable_attributes*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GFileAttributeInfoList {.cdecl, importc: "g_file_query_settable_attributes".}

proc g_file_query_writable_namespaces*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GFileAttributeInfoList {.cdecl, importc: "g_file_query_writable_namespaces".}

proc g_file_set_attribute*(
  file: ptr GFile,
  attribute: cstring,
  type_arg: GFileAttributeType,
  value_p: gpointer,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute".}

proc g_file_set_attributes_from_info*(
  file: ptr GFile,
  info: ptr GFileInfo,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attributes_from_info".}

proc g_file_set_attributes_async*(
  file: ptr GFile,
  info: ptr GFileInfo,
  flags: GFileQueryInfoFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_set_attributes_async".}

proc g_file_set_attributes_finish*(
  file: ptr GFile,
  result: ptr GAsyncResult,
  info: ptr ptr GFileInfo,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attributes_finish".}

proc g_file_set_attribute_string*(
  file: ptr GFile,
  attribute: cstring,
  value: cstring,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_string".}

proc g_file_set_attribute_byte_string*(
  file: ptr GFile,
  attribute: cstring,
  value: cstring,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_byte_string".}

proc g_file_set_attribute_uint32*(
  file: ptr GFile,
  attribute: cstring,
  value: guint32,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_uint32".}

proc g_file_set_attribute_int32*(
  file: ptr GFile,
  attribute: cstring,
  value: gint32,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_int32".}

proc g_file_set_attribute_uint64*(
  file: ptr GFile,
  attribute: cstring,
  value: guint64,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_uint64".}

proc g_file_set_attribute_int64*(
  file: ptr GFile,
  attribute: cstring,
  value: gint64,
  flags: GFileQueryInfoFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_set_attribute_int64".}

proc g_file_mount_enclosing_volume*(
  location: ptr GFile,
  flags: GMountMountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_mount_enclosing_volume".}

proc g_file_mount_enclosing_volume_finish*(
  location: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_mount_enclosing_volume_finish".}

proc g_file_mount_mountable*(
  file: ptr GFile,
  flags: GMountMountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_mount_mountable".}

proc g_file_mount_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GFile {.cdecl, importc: "g_file_mount_mountable_finish".}

proc g_file_unmount_mountable*(
  file: ptr GFile,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_unmount_mountable".}

proc g_file_unmount_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_unmount_mountable_finish".}

proc g_file_unmount_mountable_with_operation*(
  file: ptr GFile,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_unmount_mountable_with_operation".}

proc g_file_unmount_mountable_with_operation_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_unmount_mountable_with_operation_finish".}

proc g_file_eject_mountable*(
  file: ptr GFile,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_eject_mountable".}

proc g_file_eject_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_eject_mountable_finish".}

proc g_file_eject_mountable_with_operation*(
  file: ptr GFile,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_eject_mountable_with_operation".}

proc g_file_eject_mountable_with_operation_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_eject_mountable_with_operation_finish".}

proc g_file_build_attribute_list_for_copy*(
  file: ptr GFile,
  flags: GFileCopyFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_file_build_attribute_list_for_copy".}

proc g_file_copy_attributes*(
  source: ptr GFile,
  destination: ptr GFile,
  flags: GFileCopyFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_copy_attributes".}

proc g_file_monitor_directory*(
  file: ptr GFile,
  flags: GFileMonitorFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileMonitor {.cdecl, importc: "g_file_monitor_directory".}

proc g_file_monitor_file*(
  file: ptr GFile,
  flags: GFileMonitorFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileMonitor {.cdecl, importc: "g_file_monitor_file".}

proc g_file_monitor*(
  file: ptr GFile,
  flags: GFileMonitorFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileMonitor {.cdecl, importc: "g_file_monitor".}

proc g_file_measure_disk_usage*(
  file: ptr GFile,
  flags: GFileMeasureFlags,
  cancellable: ptr GCancellable,
  progress_callback: GFileMeasureProgressCallback,
  progress_data: gpointer,
  disk_usage: ptr guint64,
  num_dirs: ptr guint64,
  num_files: ptr guint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_measure_disk_usage".}

proc g_file_measure_disk_usage_async*(
  file: ptr GFile,
  flags: GFileMeasureFlags,
  io_priority: gint,
  cancellable: ptr GCancellable,
  progress_callback: GFileMeasureProgressCallback,
  progress_data: gpointer,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_measure_disk_usage_async".}

proc g_file_measure_disk_usage_finish*(
  file: ptr GFile,
  result: ptr GAsyncResult,
  disk_usage: ptr guint64,
  num_dirs: ptr guint64,
  num_files: ptr guint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_measure_disk_usage_finish".}

proc g_file_start_mountable*(
  file: ptr GFile,
  flags: GDriveStartFlags,
  start_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_start_mountable".}

proc g_file_start_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_start_mountable_finish".}

proc g_file_stop_mountable*(
  file: ptr GFile,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_stop_mountable".}

proc g_file_stop_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_stop_mountable_finish".}

proc g_file_poll_mountable*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_poll_mountable".}

proc g_file_poll_mountable_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_poll_mountable_finish".}

proc g_file_query_default_handler*(
  file: ptr GFile, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GAppInfo {.cdecl, importc: "g_file_query_default_handler".}

proc g_file_query_default_handler_async*(
  file: ptr GFile,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_query_default_handler_async".}

proc g_file_query_default_handler_finish*(
  file: ptr GFile, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GAppInfo {.cdecl, importc: "g_file_query_default_handler_finish".}

proc g_file_load_contents*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  contents: ptr cstring,
  length: ptr gsize,
  etag_out: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_load_contents".}

proc g_file_load_contents_async*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_load_contents_async".}

proc g_file_load_contents_finish*(
  file: ptr GFile,
  res: ptr GAsyncResult,
  contents: ptr cstring,
  length: ptr gsize,
  etag_out: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_load_contents_finish".}

proc g_file_load_partial_contents_async*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  read_more_callback: GFileReadMoreCallback,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_load_partial_contents_async".}

proc g_file_load_partial_contents_finish*(
  file: ptr GFile,
  res: ptr GAsyncResult,
  contents: ptr cstring,
  length: ptr gsize,
  etag_out: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_load_partial_contents_finish".}

proc g_file_replace_contents*(
  file: ptr GFile,
  contents: cstring,
  length: gsize,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  new_etag: ptr cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_replace_contents".}

proc g_file_replace_contents_async*(
  file: ptr GFile,
  contents: cstring,
  length: gsize,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_replace_contents_async".}

proc g_file_replace_contents_bytes_async*(
  file: ptr GFile,
  contents: ptr GBytes,
  etag: cstring,
  make_backup: gboolean,
  flags: GFileCreateFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_replace_contents_bytes_async".}

proc g_file_replace_contents_finish*(
  file: ptr GFile, res: ptr GAsyncResult, new_etag: ptr cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_replace_contents_finish".}

proc g_file_supports_thread_contexts*(
  file: ptr GFile
): gboolean {.cdecl, importc: "g_file_supports_thread_contexts".}

proc g_file_load_bytes*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  etag_out: ptr cstring,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_file_load_bytes".}

proc g_file_load_bytes_async*(
  file: ptr GFile,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_load_bytes_async".}

proc g_file_load_bytes_finish*(
  file: ptr GFile,
  result: ptr GAsyncResult,
  etag_out: ptr cstring,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_file_load_bytes_finish".}

proc g_file_attribute_info_list_get_type*(): GType {.
  cdecl, importc: "g_file_attribute_info_list_get_type"
.}

proc g_file_attribute_info_list_new*(): ptr GFileAttributeInfoList {.
  cdecl, importc: "g_file_attribute_info_list_new"
.}

proc g_file_attribute_info_list_ref*(
  list: ptr GFileAttributeInfoList
): ptr GFileAttributeInfoList {.cdecl, importc: "g_file_attribute_info_list_ref".}

proc g_file_attribute_info_list_unref*(
  list: ptr GFileAttributeInfoList
): void {.cdecl, importc: "g_file_attribute_info_list_unref".}

proc g_file_attribute_info_list_dup*(
  list: ptr GFileAttributeInfoList
): ptr GFileAttributeInfoList {.cdecl, importc: "g_file_attribute_info_list_dup".}

proc g_file_attribute_info_list_lookup*(
  list: ptr GFileAttributeInfoList, name: cstring
): ptr GFileAttributeInfo {.cdecl, importc: "g_file_attribute_info_list_lookup".}

proc g_file_attribute_info_list_add*(
  list: ptr GFileAttributeInfoList,
  name: cstring,
  type_arg: GFileAttributeType,
  flags: GFileAttributeInfoFlags,
): void {.cdecl, importc: "g_file_attribute_info_list_add".}

proc g_file_enumerator_get_type*(): GType {.
  cdecl, importc: "g_file_enumerator_get_type"
.}

proc g_file_enumerator_next_file*(
  enumerator: ptr GFileEnumerator, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_enumerator_next_file".}

proc g_file_enumerator_close*(
  enumerator: ptr GFileEnumerator, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_enumerator_close".}

proc g_file_enumerator_next_files_async*(
  enumerator: ptr GFileEnumerator,
  num_files: cint,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_enumerator_next_files_async".}

proc g_file_enumerator_next_files_finish*(
  enumerator: ptr GFileEnumerator, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_file_enumerator_next_files_finish".}

proc g_file_enumerator_close_async*(
  enumerator: ptr GFileEnumerator,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_enumerator_close_async".}

proc g_file_enumerator_close_finish*(
  enumerator: ptr GFileEnumerator, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_file_enumerator_close_finish".}

proc g_file_enumerator_is_closed*(
  enumerator: ptr GFileEnumerator
): gboolean {.cdecl, importc: "g_file_enumerator_is_closed".}

proc g_file_enumerator_has_pending*(
  enumerator: ptr GFileEnumerator
): gboolean {.cdecl, importc: "g_file_enumerator_has_pending".}

proc g_file_enumerator_set_pending*(
  enumerator: ptr GFileEnumerator, pending: gboolean
): void {.cdecl, importc: "g_file_enumerator_set_pending".}

proc g_file_enumerator_get_container*(
  enumerator: ptr GFileEnumerator
): ptr GFile {.cdecl, importc: "g_file_enumerator_get_container".}

proc g_file_enumerator_get_child*(
  enumerator: ptr GFileEnumerator, info: ptr GFileInfo
): ptr GFile {.cdecl, importc: "g_file_enumerator_get_child".}

proc g_file_enumerator_iterate*(
  direnum: ptr GFileEnumerator,
  out_info: ptr ptr GFileInfo,
  out_child: ptr ptr GFile,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_file_enumerator_iterate".}

proc g_file_icon_get_type*(): GType {.cdecl, importc: "g_file_icon_get_type".}
proc g_file_icon_new*(file: ptr GFile): ptr GIcon {.cdecl, importc: "g_file_icon_new".}
proc g_file_icon_get_file*(
  icon: ptr GFileIcon
): ptr GFile {.cdecl, importc: "g_file_icon_get_file".}

proc g_file_info_get_type*(): GType {.cdecl, importc: "g_file_info_get_type".}
proc g_file_info_new*(): ptr GFileInfo {.cdecl, importc: "g_file_info_new".}
proc g_file_info_dup*(
  other: ptr GFileInfo
): ptr GFileInfo {.cdecl, importc: "g_file_info_dup".}

proc g_file_info_copy_into*(
  src_info: ptr GFileInfo, dest_info: ptr GFileInfo
): void {.cdecl, importc: "g_file_info_copy_into".}

proc g_file_info_has_attribute*(
  info: ptr GFileInfo, attribute: cstring
): gboolean {.cdecl, importc: "g_file_info_has_attribute".}

proc g_file_info_has_namespace*(
  info: ptr GFileInfo, name_space: cstring
): gboolean {.cdecl, importc: "g_file_info_has_namespace".}

proc g_file_info_list_attributes*(
  info: ptr GFileInfo, name_space: cstring
): ptr cstring {.cdecl, importc: "g_file_info_list_attributes".}

proc g_file_info_get_attribute_data*(
  info: ptr GFileInfo,
  attribute: cstring,
  type_arg: ptr GFileAttributeType,
  value_pp: ptr gpointer,
  status: ptr GFileAttributeStatus,
): gboolean {.cdecl, importc: "g_file_info_get_attribute_data".}

proc g_file_info_get_attribute_type*(
  info: ptr GFileInfo, attribute: cstring
): GFileAttributeType {.cdecl, importc: "g_file_info_get_attribute_type".}

proc g_file_info_remove_attribute*(
  info: ptr GFileInfo, attribute: cstring
): void {.cdecl, importc: "g_file_info_remove_attribute".}

proc g_file_info_get_attribute_status*(
  info: ptr GFileInfo, attribute: cstring
): GFileAttributeStatus {.cdecl, importc: "g_file_info_get_attribute_status".}

proc g_file_info_set_attribute_status*(
  info: ptr GFileInfo, attribute: cstring, status: GFileAttributeStatus
): gboolean {.cdecl, importc: "g_file_info_set_attribute_status".}

proc g_file_info_get_attribute_as_string*(
  info: ptr GFileInfo, attribute: cstring
): cstring {.cdecl, importc: "g_file_info_get_attribute_as_string".}

proc g_file_info_get_attribute_string*(
  info: ptr GFileInfo, attribute: cstring
): cstring {.cdecl, importc: "g_file_info_get_attribute_string".}

proc g_file_info_get_attribute_byte_string*(
  info: ptr GFileInfo, attribute: cstring
): cstring {.cdecl, importc: "g_file_info_get_attribute_byte_string".}

proc g_file_info_get_attribute_boolean*(
  info: ptr GFileInfo, attribute: cstring
): gboolean {.cdecl, importc: "g_file_info_get_attribute_boolean".}

proc g_file_info_get_attribute_uint32*(
  info: ptr GFileInfo, attribute: cstring
): guint32 {.cdecl, importc: "g_file_info_get_attribute_uint32".}

proc g_file_info_get_attribute_int32*(
  info: ptr GFileInfo, attribute: cstring
): gint32 {.cdecl, importc: "g_file_info_get_attribute_int32".}

proc g_file_info_get_attribute_uint64*(
  info: ptr GFileInfo, attribute: cstring
): guint64 {.cdecl, importc: "g_file_info_get_attribute_uint64".}

proc g_file_info_get_attribute_int64*(
  info: ptr GFileInfo, attribute: cstring
): gint64 {.cdecl, importc: "g_file_info_get_attribute_int64".}

proc g_file_info_get_attribute_object*(
  info: ptr GFileInfo, attribute: cstring
): ptr GObject {.cdecl, importc: "g_file_info_get_attribute_object".}

proc g_file_info_get_attribute_stringv*(
  info: ptr GFileInfo, attribute: cstring
): ptr cstring {.cdecl, importc: "g_file_info_get_attribute_stringv".}

proc g_file_info_get_attribute_file_path*(
  info: ptr GFileInfo, attribute: cstring
): cstring {.cdecl, importc: "g_file_info_get_attribute_file_path".}

proc g_file_info_set_attribute*(
  info: ptr GFileInfo,
  attribute: cstring,
  type_arg: GFileAttributeType,
  value_p: gpointer,
): void {.cdecl, importc: "g_file_info_set_attribute".}

proc g_file_info_set_attribute_string*(
  info: ptr GFileInfo, attribute: cstring, attr_value: cstring
): void {.cdecl, importc: "g_file_info_set_attribute_string".}

proc g_file_info_set_attribute_byte_string*(
  info: ptr GFileInfo, attribute: cstring, attr_value: cstring
): void {.cdecl, importc: "g_file_info_set_attribute_byte_string".}

proc g_file_info_set_attribute_boolean*(
  info: ptr GFileInfo, attribute: cstring, attr_value: gboolean
): void {.cdecl, importc: "g_file_info_set_attribute_boolean".}

proc g_file_info_set_attribute_uint32*(
  info: ptr GFileInfo, attribute: cstring, attr_value: guint32
): void {.cdecl, importc: "g_file_info_set_attribute_uint32".}

proc g_file_info_set_attribute_int32*(
  info: ptr GFileInfo, attribute: cstring, attr_value: gint32
): void {.cdecl, importc: "g_file_info_set_attribute_int32".}

proc g_file_info_set_attribute_uint64*(
  info: ptr GFileInfo, attribute: cstring, attr_value: guint64
): void {.cdecl, importc: "g_file_info_set_attribute_uint64".}

proc g_file_info_set_attribute_int64*(
  info: ptr GFileInfo, attribute: cstring, attr_value: gint64
): void {.cdecl, importc: "g_file_info_set_attribute_int64".}

proc g_file_info_set_attribute_object*(
  info: ptr GFileInfo, attribute: cstring, attr_value: ptr GObject
): void {.cdecl, importc: "g_file_info_set_attribute_object".}

proc g_file_info_set_attribute_stringv*(
  info: ptr GFileInfo, attribute: cstring, attr_value: ptr cstring
): void {.cdecl, importc: "g_file_info_set_attribute_stringv".}

proc g_file_info_set_attribute_file_path*(
  info: ptr GFileInfo, attribute: cstring, attr_value: cstring
): void {.cdecl, importc: "g_file_info_set_attribute_file_path".}

proc g_file_info_clear_status*(
  info: ptr GFileInfo
): void {.cdecl, importc: "g_file_info_clear_status".}

proc g_file_info_get_deletion_date*(
  info: ptr GFileInfo
): ptr GDateTime {.cdecl, importc: "g_file_info_get_deletion_date".}

proc g_file_info_get_file_type*(
  info: ptr GFileInfo
): GFileType {.cdecl, importc: "g_file_info_get_file_type".}

proc g_file_info_get_is_hidden*(
  info: ptr GFileInfo
): gboolean {.cdecl, importc: "g_file_info_get_is_hidden".}

proc g_file_info_get_is_backup*(
  info: ptr GFileInfo
): gboolean {.cdecl, importc: "g_file_info_get_is_backup".}

proc g_file_info_get_is_symlink*(
  info: ptr GFileInfo
): gboolean {.cdecl, importc: "g_file_info_get_is_symlink".}

proc g_file_info_get_name*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_name".}

proc g_file_info_get_display_name*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_display_name".}

proc g_file_info_get_edit_name*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_edit_name".}

proc g_file_info_get_icon*(
  info: ptr GFileInfo
): ptr GIcon {.cdecl, importc: "g_file_info_get_icon".}

proc g_file_info_get_symbolic_icon*(
  info: ptr GFileInfo
): ptr GIcon {.cdecl, importc: "g_file_info_get_symbolic_icon".}

proc g_file_info_get_content_type*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_content_type".}

proc g_file_info_get_size*(
  info: ptr GFileInfo
): goffset {.cdecl, importc: "g_file_info_get_size".}

proc g_file_info_get_modification_time*(
  info: ptr GFileInfo, result: ptr GTimeVal
): void {.cdecl, importc: "g_file_info_get_modification_time".}

proc g_file_info_get_modification_date_time*(
  info: ptr GFileInfo
): ptr GDateTime {.cdecl, importc: "g_file_info_get_modification_date_time".}

proc g_file_info_get_access_date_time*(
  info: ptr GFileInfo
): ptr GDateTime {.cdecl, importc: "g_file_info_get_access_date_time".}

proc g_file_info_get_creation_date_time*(
  info: ptr GFileInfo
): ptr GDateTime {.cdecl, importc: "g_file_info_get_creation_date_time".}

proc g_file_info_get_symlink_target*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_symlink_target".}

proc g_file_info_get_etag*(
  info: ptr GFileInfo
): cstring {.cdecl, importc: "g_file_info_get_etag".}

proc g_file_info_get_sort_order*(
  info: ptr GFileInfo
): gint32 {.cdecl, importc: "g_file_info_get_sort_order".}

proc g_file_info_set_attribute_mask*(
  info: ptr GFileInfo, mask: ptr GFileAttributeMatcher
): void {.cdecl, importc: "g_file_info_set_attribute_mask".}

proc g_file_info_unset_attribute_mask*(
  info: ptr GFileInfo
): void {.cdecl, importc: "g_file_info_unset_attribute_mask".}

proc g_file_info_set_file_type*(
  info: ptr GFileInfo, type_arg: GFileType
): void {.cdecl, importc: "g_file_info_set_file_type".}

proc g_file_info_set_is_hidden*(
  info: ptr GFileInfo, is_hidden: gboolean
): void {.cdecl, importc: "g_file_info_set_is_hidden".}

proc g_file_info_set_is_symlink*(
  info: ptr GFileInfo, is_symlink: gboolean
): void {.cdecl, importc: "g_file_info_set_is_symlink".}

proc g_file_info_set_name*(
  info: ptr GFileInfo, name: cstring
): void {.cdecl, importc: "g_file_info_set_name".}

proc g_file_info_set_display_name*(
  info: ptr GFileInfo, display_name: cstring
): void {.cdecl, importc: "g_file_info_set_display_name".}

proc g_file_info_set_edit_name*(
  info: ptr GFileInfo, edit_name: cstring
): void {.cdecl, importc: "g_file_info_set_edit_name".}

proc g_file_info_set_icon*(
  info: ptr GFileInfo, icon: ptr GIcon
): void {.cdecl, importc: "g_file_info_set_icon".}

proc g_file_info_set_symbolic_icon*(
  info: ptr GFileInfo, icon: ptr GIcon
): void {.cdecl, importc: "g_file_info_set_symbolic_icon".}

proc g_file_info_set_content_type*(
  info: ptr GFileInfo, content_type: cstring
): void {.cdecl, importc: "g_file_info_set_content_type".}

proc g_file_info_set_size*(
  info: ptr GFileInfo, size: goffset
): void {.cdecl, importc: "g_file_info_set_size".}

proc g_file_info_set_modification_time*(
  info: ptr GFileInfo, mtime: ptr GTimeVal
): void {.cdecl, importc: "g_file_info_set_modification_time".}

proc g_file_info_set_modification_date_time*(
  info: ptr GFileInfo, mtime: ptr GDateTime
): void {.cdecl, importc: "g_file_info_set_modification_date_time".}

proc g_file_info_set_access_date_time*(
  info: ptr GFileInfo, atime: ptr GDateTime
): void {.cdecl, importc: "g_file_info_set_access_date_time".}

proc g_file_info_set_creation_date_time*(
  info: ptr GFileInfo, creation_time: ptr GDateTime
): void {.cdecl, importc: "g_file_info_set_creation_date_time".}

proc g_file_info_set_symlink_target*(
  info: ptr GFileInfo, symlink_target: cstring
): void {.cdecl, importc: "g_file_info_set_symlink_target".}

proc g_file_info_set_sort_order*(
  info: ptr GFileInfo, sort_order: gint32
): void {.cdecl, importc: "g_file_info_set_sort_order".}

proc g_file_attribute_matcher_get_type*(): GType {.
  cdecl, importc: "g_file_attribute_matcher_get_type"
.}

proc g_file_attribute_matcher_new*(
  attributes: cstring
): ptr GFileAttributeMatcher {.cdecl, importc: "g_file_attribute_matcher_new".}

proc g_file_attribute_matcher_ref*(
  matcher: ptr GFileAttributeMatcher
): ptr GFileAttributeMatcher {.cdecl, importc: "g_file_attribute_matcher_ref".}

proc g_file_attribute_matcher_unref*(
  matcher: ptr GFileAttributeMatcher
): void {.cdecl, importc: "g_file_attribute_matcher_unref".}

proc g_file_attribute_matcher_subtract*(
  matcher: ptr GFileAttributeMatcher, subtract: ptr GFileAttributeMatcher
): ptr GFileAttributeMatcher {.cdecl, importc: "g_file_attribute_matcher_subtract".}

proc g_file_attribute_matcher_matches*(
  matcher: ptr GFileAttributeMatcher, attribute: cstring
): gboolean {.cdecl, importc: "g_file_attribute_matcher_matches".}

proc g_file_attribute_matcher_matches_only*(
  matcher: ptr GFileAttributeMatcher, attribute: cstring
): gboolean {.cdecl, importc: "g_file_attribute_matcher_matches_only".}

proc g_file_attribute_matcher_enumerate_namespace*(
  matcher: ptr GFileAttributeMatcher, ns: cstring
): gboolean {.cdecl, importc: "g_file_attribute_matcher_enumerate_namespace".}

proc g_file_attribute_matcher_enumerate_next*(
  matcher: ptr GFileAttributeMatcher
): cstring {.cdecl, importc: "g_file_attribute_matcher_enumerate_next".}

proc g_file_attribute_matcher_to_string*(
  matcher: ptr GFileAttributeMatcher
): cstring {.cdecl, importc: "g_file_attribute_matcher_to_string".}

proc g_file_input_stream_get_type*(): GType {.
  cdecl, importc: "g_file_input_stream_get_type"
.}

proc g_file_input_stream_query_info*(
  stream: ptr GFileInputStream,
  attributes: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileInfo {.cdecl, importc: "g_file_input_stream_query_info".}

proc g_file_input_stream_query_info_async*(
  stream: ptr GFileInputStream,
  attributes: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_input_stream_query_info_async".}

proc g_file_input_stream_query_info_finish*(
  stream: ptr GFileInputStream, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_input_stream_query_info_finish".}

proc g_io_error_quark*(): GQuark {.cdecl, importc: "g_io_error_quark".}
proc g_io_error_from_errno*(
  err_no: gint
): GIOErrorEnum {.cdecl, importc: "g_io_error_from_errno".}

proc g_io_error_from_file_error*(
  file_error: GFileError
): GIOErrorEnum {.cdecl, importc: "g_io_error_from_file_error".}

proc g_io_stream_get_type*(): GType {.cdecl, importc: "g_io_stream_get_type".}
proc g_io_stream_get_input_stream*(
  stream: ptr GIOStream
): ptr GInputStream {.cdecl, importc: "g_io_stream_get_input_stream".}

proc g_io_stream_get_output_stream*(
  stream: ptr GIOStream
): ptr GOutputStream {.cdecl, importc: "g_io_stream_get_output_stream".}

proc g_io_stream_splice_async*(
  stream1: ptr GIOStream,
  stream2: ptr GIOStream,
  flags: GIOStreamSpliceFlags,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_io_stream_splice_async".}

proc g_io_stream_splice_finish*(
  result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_io_stream_splice_finish".}

proc g_io_stream_close*(
  stream: ptr GIOStream, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_io_stream_close".}

proc g_io_stream_close_async*(
  stream: ptr GIOStream,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_io_stream_close_async".}

proc g_io_stream_close_finish*(
  stream: ptr GIOStream, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_io_stream_close_finish".}

proc g_io_stream_is_closed*(
  stream: ptr GIOStream
): gboolean {.cdecl, importc: "g_io_stream_is_closed".}

proc g_io_stream_has_pending*(
  stream: ptr GIOStream
): gboolean {.cdecl, importc: "g_io_stream_has_pending".}

proc g_io_stream_set_pending*(
  stream: ptr GIOStream, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_io_stream_set_pending".}

proc g_io_stream_clear_pending*(
  stream: ptr GIOStream
): void {.cdecl, importc: "g_io_stream_clear_pending".}

proc g_file_io_stream_get_type*(): GType {.cdecl, importc: "g_file_io_stream_get_type".}
proc g_file_io_stream_query_info*(
  stream: ptr GFileIOStream,
  attributes: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileInfo {.cdecl, importc: "g_file_io_stream_query_info".}

proc g_file_io_stream_query_info_async*(
  stream: ptr GFileIOStream,
  attributes: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_io_stream_query_info_async".}

proc g_file_io_stream_query_info_finish*(
  stream: ptr GFileIOStream, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_io_stream_query_info_finish".}

proc g_file_io_stream_get_etag*(
  stream: ptr GFileIOStream
): cstring {.cdecl, importc: "g_file_io_stream_get_etag".}

proc g_file_monitor_get_type*(): GType {.cdecl, importc: "g_file_monitor_get_type".}
proc g_file_monitor_cancel*(
  monitor: ptr GFileMonitor
): gboolean {.cdecl, importc: "g_file_monitor_cancel".}

proc g_file_monitor_is_cancelled*(
  monitor: ptr GFileMonitor
): gboolean {.cdecl, importc: "g_file_monitor_is_cancelled".}

proc g_file_monitor_set_rate_limit*(
  monitor: ptr GFileMonitor, limit_msecs: gint
): void {.cdecl, importc: "g_file_monitor_set_rate_limit".}

proc g_file_monitor_emit_event*(
  monitor: ptr GFileMonitor,
  child: ptr GFile,
  other_file: ptr GFile,
  event_type: GFileMonitorEvent,
): void {.cdecl, importc: "g_file_monitor_emit_event".}

proc g_filename_completer_get_type*(): GType {.
  cdecl, importc: "g_filename_completer_get_type"
.}

proc g_filename_completer_new*(): ptr GFilenameCompleter {.
  cdecl, importc: "g_filename_completer_new"
.}

proc g_filename_completer_get_completion_suffix*(
  completer: ptr GFilenameCompleter, initial_text: cstring
): cstring {.cdecl, importc: "g_filename_completer_get_completion_suffix".}

proc g_filename_completer_get_completions*(
  completer: ptr GFilenameCompleter, initial_text: cstring
): ptr cstring {.cdecl, importc: "g_filename_completer_get_completions".}

proc g_filename_completer_set_dirs_only*(
  completer: ptr GFilenameCompleter, dirs_only: gboolean
): void {.cdecl, importc: "g_filename_completer_set_dirs_only".}

proc g_file_output_stream_get_type*(): GType {.
  cdecl, importc: "g_file_output_stream_get_type"
.}

proc g_file_output_stream_query_info*(
  stream: ptr GFileOutputStream,
  attributes: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GFileInfo {.cdecl, importc: "g_file_output_stream_query_info".}

proc g_file_output_stream_query_info_async*(
  stream: ptr GFileOutputStream,
  attributes: cstring,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_file_output_stream_query_info_async".}

proc g_file_output_stream_query_info_finish*(
  stream: ptr GFileOutputStream, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GFileInfo {.cdecl, importc: "g_file_output_stream_query_info_finish".}

proc g_file_output_stream_get_etag*(
  stream: ptr GFileOutputStream
): cstring {.cdecl, importc: "g_file_output_stream_get_etag".}

proc g_inet_address_get_type*(): GType {.cdecl, importc: "g_inet_address_get_type".}
proc g_inet_address_new_from_string*(
  string: cstring
): ptr GInetAddress {.cdecl, importc: "g_inet_address_new_from_string".}

proc g_inet_address_new_from_bytes*(
  bytes: ptr guint8, family: GSocketFamily
): ptr GInetAddress {.cdecl, importc: "g_inet_address_new_from_bytes".}

proc g_inet_address_new_loopback*(
  family: GSocketFamily
): ptr GInetAddress {.cdecl, importc: "g_inet_address_new_loopback".}

proc g_inet_address_new_any*(
  family: GSocketFamily
): ptr GInetAddress {.cdecl, importc: "g_inet_address_new_any".}

proc g_inet_address_equal*(
  address: ptr GInetAddress, other_address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_equal".}

proc g_inet_address_to_string*(
  address: ptr GInetAddress
): cstring {.cdecl, importc: "g_inet_address_to_string".}

proc g_inet_address_to_bytes*(
  address: ptr GInetAddress
): ptr guint8 {.cdecl, importc: "g_inet_address_to_bytes".}

proc g_inet_address_get_native_size*(
  address: ptr GInetAddress
): gsize {.cdecl, importc: "g_inet_address_get_native_size".}

proc g_inet_address_get_family*(
  address: ptr GInetAddress
): GSocketFamily {.cdecl, importc: "g_inet_address_get_family".}

proc g_inet_address_get_is_any*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_any".}

proc g_inet_address_get_is_loopback*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_loopback".}

proc g_inet_address_get_is_link_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_link_local".}

proc g_inet_address_get_is_site_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_site_local".}

proc g_inet_address_get_is_multicast*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_multicast".}

proc g_inet_address_get_is_mc_global*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_mc_global".}

proc g_inet_address_get_is_mc_link_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_mc_link_local".}

proc g_inet_address_get_is_mc_node_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_mc_node_local".}

proc g_inet_address_get_is_mc_org_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_mc_org_local".}

proc g_inet_address_get_is_mc_site_local*(
  address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_get_is_mc_site_local".}

proc g_inet_address_mask_get_type*(): GType {.
  cdecl, importc: "g_inet_address_mask_get_type"
.}

proc g_inet_address_mask_new*(
  addr_arg: ptr GInetAddress, length: guint, error: ptr ptr GError
): ptr GInetAddressMask {.cdecl, importc: "g_inet_address_mask_new".}

proc g_inet_address_mask_new_from_string*(
  mask_string: cstring, error: ptr ptr GError
): ptr GInetAddressMask {.cdecl, importc: "g_inet_address_mask_new_from_string".}

proc g_inet_address_mask_to_string*(
  mask: ptr GInetAddressMask
): cstring {.cdecl, importc: "g_inet_address_mask_to_string".}

proc g_inet_address_mask_get_family*(
  mask: ptr GInetAddressMask
): GSocketFamily {.cdecl, importc: "g_inet_address_mask_get_family".}

proc g_inet_address_mask_get_address*(
  mask: ptr GInetAddressMask
): ptr GInetAddress {.cdecl, importc: "g_inet_address_mask_get_address".}

proc g_inet_address_mask_get_length*(
  mask: ptr GInetAddressMask
): guint {.cdecl, importc: "g_inet_address_mask_get_length".}

proc g_inet_address_mask_matches*(
  mask: ptr GInetAddressMask, address: ptr GInetAddress
): gboolean {.cdecl, importc: "g_inet_address_mask_matches".}

proc g_inet_address_mask_equal*(
  mask: ptr GInetAddressMask, mask2: ptr GInetAddressMask
): gboolean {.cdecl, importc: "g_inet_address_mask_equal".}

proc g_socket_address_get_type*(): GType {.cdecl, importc: "g_socket_address_get_type".}
proc g_socket_address_get_family*(
  address: ptr GSocketAddress
): GSocketFamily {.cdecl, importc: "g_socket_address_get_family".}

proc g_socket_address_new_from_native*(
  native: gpointer, len: gsize
): ptr GSocketAddress {.cdecl, importc: "g_socket_address_new_from_native".}

proc g_socket_address_to_native*(
  address: ptr GSocketAddress, dest: gpointer, destlen: gsize, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_address_to_native".}

proc g_socket_address_get_native_size*(
  address: ptr GSocketAddress
): gssize {.cdecl, importc: "g_socket_address_get_native_size".}

proc g_inet_socket_address_get_type*(): GType {.
  cdecl, importc: "g_inet_socket_address_get_type"
.}

proc g_inet_socket_address_new*(
  address: ptr GInetAddress, port: guint16
): ptr GSocketAddress {.cdecl, importc: "g_inet_socket_address_new".}

proc g_inet_socket_address_new_from_string*(
  address: cstring, port: guint
): ptr GSocketAddress {.cdecl, importc: "g_inet_socket_address_new_from_string".}

proc g_inet_socket_address_get_address*(
  address: ptr GInetSocketAddress
): ptr GInetAddress {.cdecl, importc: "g_inet_socket_address_get_address".}

proc g_inet_socket_address_get_port*(
  address: ptr GInetSocketAddress
): guint16 {.cdecl, importc: "g_inet_socket_address_get_port".}

proc g_inet_socket_address_get_flowinfo*(
  address: ptr GInetSocketAddress
): guint32 {.cdecl, importc: "g_inet_socket_address_get_flowinfo".}

proc g_inet_socket_address_get_scope_id*(
  address: ptr GInetSocketAddress
): guint32 {.cdecl, importc: "g_inet_socket_address_get_scope_id".}

proc g_app_info_create_flags_get_type*(): GType {.
  cdecl, importc: "g_app_info_create_flags_get_type"
.}

proc g_converter_flags_get_type*(): GType {.
  cdecl, importc: "g_converter_flags_get_type"
.}

proc g_converter_result_get_type*(): GType {.
  cdecl, importc: "g_converter_result_get_type"
.}

proc g_data_stream_byte_order_get_type*(): GType {.
  cdecl, importc: "g_data_stream_byte_order_get_type"
.}

proc g_data_stream_newline_type_get_type*(): GType {.
  cdecl, importc: "g_data_stream_newline_type_get_type"
.}

proc g_file_attribute_type_get_type*(): GType {.
  cdecl, importc: "g_file_attribute_type_get_type"
.}

proc g_file_attribute_info_flags_get_type*(): GType {.
  cdecl, importc: "g_file_attribute_info_flags_get_type"
.}

proc g_file_attribute_status_get_type*(): GType {.
  cdecl, importc: "g_file_attribute_status_get_type"
.}

proc g_file_query_info_flags_get_type*(): GType {.
  cdecl, importc: "g_file_query_info_flags_get_type"
.}

proc g_file_create_flags_get_type*(): GType {.
  cdecl, importc: "g_file_create_flags_get_type"
.}

proc g_file_measure_flags_get_type*(): GType {.
  cdecl, importc: "g_file_measure_flags_get_type"
.}

proc g_mount_mount_flags_get_type*(): GType {.
  cdecl, importc: "g_mount_mount_flags_get_type"
.}

proc g_mount_unmount_flags_get_type*(): GType {.
  cdecl, importc: "g_mount_unmount_flags_get_type"
.}

proc g_drive_start_flags_get_type*(): GType {.
  cdecl, importc: "g_drive_start_flags_get_type"
.}

proc g_drive_start_stop_type_get_type*(): GType {.
  cdecl, importc: "g_drive_start_stop_type_get_type"
.}

proc g_file_copy_flags_get_type*(): GType {.
  cdecl, importc: "g_file_copy_flags_get_type"
.}

proc g_file_monitor_flags_get_type*(): GType {.
  cdecl, importc: "g_file_monitor_flags_get_type"
.}

proc g_file_type_get_type*(): GType {.cdecl, importc: "g_file_type_get_type".}
proc g_filesystem_preview_type_get_type*(): GType {.
  cdecl, importc: "g_filesystem_preview_type_get_type"
.}

proc g_file_monitor_event_get_type*(): GType {.
  cdecl, importc: "g_file_monitor_event_get_type"
.}

proc g_io_error_enum_get_type*(): GType {.cdecl, importc: "g_io_error_enum_get_type".}
proc g_ask_password_flags_get_type*(): GType {.
  cdecl, importc: "g_ask_password_flags_get_type"
.}

proc g_password_save_get_type*(): GType {.cdecl, importc: "g_password_save_get_type".}
proc g_mount_operation_result_get_type*(): GType {.
  cdecl, importc: "g_mount_operation_result_get_type"
.}

proc g_output_stream_splice_flags_get_type*(): GType {.
  cdecl, importc: "g_output_stream_splice_flags_get_type"
.}

proc g_io_stream_splice_flags_get_type*(): GType {.
  cdecl, importc: "g_io_stream_splice_flags_get_type"
.}

proc g_emblem_origin_get_type*(): GType {.cdecl, importc: "g_emblem_origin_get_type".}
proc g_resolver_error_get_type*(): GType {.cdecl, importc: "g_resolver_error_get_type".}
proc g_resolver_record_type_get_type*(): GType {.
  cdecl, importc: "g_resolver_record_type_get_type"
.}

proc g_resource_error_get_type*(): GType {.cdecl, importc: "g_resource_error_get_type".}
proc g_resource_flags_get_type*(): GType {.cdecl, importc: "g_resource_flags_get_type".}
proc g_resource_lookup_flags_get_type*(): GType {.
  cdecl, importc: "g_resource_lookup_flags_get_type"
.}

proc g_socket_family_get_type*(): GType {.cdecl, importc: "g_socket_family_get_type".}
proc g_socket_type_get_type*(): GType {.cdecl, importc: "g_socket_type_get_type".}
proc g_socket_msg_flags_get_type*(): GType {.
  cdecl, importc: "g_socket_msg_flags_get_type"
.}

proc g_socket_protocol_get_type*(): GType {.
  cdecl, importc: "g_socket_protocol_get_type"
.}

proc g_zlib_compressor_format_get_type*(): GType {.
  cdecl, importc: "g_zlib_compressor_format_get_type"
.}

proc g_unix_socket_address_type_get_type*(): GType {.
  cdecl, importc: "g_unix_socket_address_type_get_type"
.}

proc g_bus_type_get_type*(): GType {.cdecl, importc: "g_bus_type_get_type".}
proc g_bus_name_owner_flags_get_type*(): GType {.
  cdecl, importc: "g_bus_name_owner_flags_get_type"
.}

proc g_bus_name_watcher_flags_get_type*(): GType {.
  cdecl, importc: "g_bus_name_watcher_flags_get_type"
.}

proc g_dbus_proxy_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_proxy_flags_get_type"
.}

proc g_dbus_error_get_type*(): GType {.cdecl, importc: "g_dbus_error_get_type".}
proc g_dbus_connection_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_connection_flags_get_type"
.}

proc g_dbus_capability_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_capability_flags_get_type"
.}

proc g_dbus_call_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_call_flags_get_type"
.}

proc g_dbus_message_type_get_type*(): GType {.
  cdecl, importc: "g_dbus_message_type_get_type"
.}

proc g_dbus_message_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_message_flags_get_type"
.}

proc g_dbus_message_header_field_get_type*(): GType {.
  cdecl, importc: "g_dbus_message_header_field_get_type"
.}

proc g_dbus_property_info_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_property_info_flags_get_type"
.}

proc g_dbus_subtree_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_subtree_flags_get_type"
.}

proc g_dbus_server_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_server_flags_get_type"
.}

proc g_dbus_signal_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_signal_flags_get_type"
.}

proc g_dbus_send_message_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_send_message_flags_get_type"
.}

proc g_credentials_type_get_type*(): GType {.
  cdecl, importc: "g_credentials_type_get_type"
.}

proc g_dbus_message_byte_order_get_type*(): GType {.
  cdecl, importc: "g_dbus_message_byte_order_get_type"
.}

proc g_application_flags_get_type*(): GType {.
  cdecl, importc: "g_application_flags_get_type"
.}

proc g_tls_error_get_type*(): GType {.cdecl, importc: "g_tls_error_get_type".}
proc g_tls_certificate_flags_get_type*(): GType {.
  cdecl, importc: "g_tls_certificate_flags_get_type"
.}

proc g_tls_authentication_mode_get_type*(): GType {.
  cdecl, importc: "g_tls_authentication_mode_get_type"
.}

proc g_tls_channel_binding_type_get_type*(): GType {.
  cdecl, importc: "g_tls_channel_binding_type_get_type"
.}

proc g_tls_channel_binding_error_get_type*(): GType {.
  cdecl, importc: "g_tls_channel_binding_error_get_type"
.}

proc g_tls_rehandshake_mode_get_type*(): GType {.
  cdecl, importc: "g_tls_rehandshake_mode_get_type"
.}

proc g_tls_password_flags_get_type*(): GType {.
  cdecl, importc: "g_tls_password_flags_get_type"
.}

proc g_tls_interaction_result_get_type*(): GType {.
  cdecl, importc: "g_tls_interaction_result_get_type"
.}

proc g_dbus_interface_skeleton_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_interface_skeleton_flags_get_type"
.}

proc g_dbus_object_manager_client_flags_get_type*(): GType {.
  cdecl, importc: "g_dbus_object_manager_client_flags_get_type"
.}

proc g_tls_database_verify_flags_get_type*(): GType {.
  cdecl, importc: "g_tls_database_verify_flags_get_type"
.}

proc g_tls_database_lookup_flags_get_type*(): GType {.
  cdecl, importc: "g_tls_database_lookup_flags_get_type"
.}

proc g_tls_certificate_request_flags_get_type*(): GType {.
  cdecl, importc: "g_tls_certificate_request_flags_get_type"
.}

proc g_tls_protocol_version_get_type*(): GType {.
  cdecl, importc: "g_tls_protocol_version_get_type"
.}

proc g_io_module_scope_flags_get_type*(): GType {.
  cdecl, importc: "g_io_module_scope_flags_get_type"
.}

proc g_socket_client_event_get_type*(): GType {.
  cdecl, importc: "g_socket_client_event_get_type"
.}

proc g_socket_listener_event_get_type*(): GType {.
  cdecl, importc: "g_socket_listener_event_get_type"
.}

proc g_test_dbus_flags_get_type*(): GType {.
  cdecl, importc: "g_test_dbus_flags_get_type"
.}

proc g_subprocess_flags_get_type*(): GType {.
  cdecl, importc: "g_subprocess_flags_get_type"
.}

proc g_notification_priority_get_type*(): GType {.
  cdecl, importc: "g_notification_priority_get_type"
.}

proc g_network_connectivity_get_type*(): GType {.
  cdecl, importc: "g_network_connectivity_get_type"
.}

proc g_pollable_return_get_type*(): GType {.
  cdecl, importc: "g_pollable_return_get_type"
.}

proc g_memory_monitor_warning_level_get_type*(): GType {.
  cdecl, importc: "g_memory_monitor_warning_level_get_type"
.}

proc g_resolver_name_lookup_flags_get_type*(): GType {.
  cdecl, importc: "g_resolver_name_lookup_flags_get_type"
.}

proc g_settings_bind_flags_get_type*(): GType {.
  cdecl, importc: "g_settings_bind_flags_get_type"
.}

proc g_module_error_quark*(): GQuark {.cdecl, importc: "g_module_error_quark".}
proc g_module_supported*(): gboolean {.cdecl, importc: "g_module_supported".}
proc g_module_open*(
  file_name: cstring, flags: GModuleFlags
): ptr GModule {.cdecl, importc: "g_module_open".}

proc g_module_open_full*(
  file_name: cstring, flags: GModuleFlags, error: ptr ptr GError
): ptr GModule {.cdecl, importc: "g_module_open_full".}

proc g_module_close*(module: ptr GModule): gboolean {.cdecl, importc: "g_module_close".}
proc g_module_make_resident*(
  module: ptr GModule
): void {.cdecl, importc: "g_module_make_resident".}

proc g_module_error*(): cstring {.cdecl, importc: "g_module_error".}
proc g_module_symbol*(
  module: ptr GModule, symbol_name: cstring, symbol: ptr gpointer
): gboolean {.cdecl, importc: "g_module_symbol".}

proc g_module_name*(module: ptr GModule): cstring {.cdecl, importc: "g_module_name".}
proc g_module_build_path*(
  directory: cstring, module_name: cstring
): cstring {.cdecl, importc: "g_module_build_path".}

proc g_io_module_scope_new*(
  flags: GIOModuleScopeFlags
): ptr GIOModuleScope {.cdecl, importc: "g_io_module_scope_new".}

proc g_io_module_scope_free*(
  scope: ptr GIOModuleScope
): void {.cdecl, importc: "g_io_module_scope_free".}

proc g_io_module_scope_block*(
  scope: ptr GIOModuleScope, basename: cstring
): void {.cdecl, importc: "g_io_module_scope_block".}

proc g_io_module_get_type*(): GType {.cdecl, importc: "g_io_module_get_type".}
proc g_io_module_new*(
  filename: cstring
): ptr GIOModule {.cdecl, importc: "g_io_module_new".}

proc g_io_modules_scan_all_in_directory*(
  dirname: cstring
): void {.cdecl, importc: "g_io_modules_scan_all_in_directory".}

proc g_io_modules_load_all_in_directory*(
  dirname: cstring
): ptr GList {.cdecl, importc: "g_io_modules_load_all_in_directory".}

proc g_io_modules_scan_all_in_directory_with_scope*(
  dirname: cstring, scope: ptr GIOModuleScope
): void {.cdecl, importc: "g_io_modules_scan_all_in_directory_with_scope".}

proc g_io_modules_load_all_in_directory_with_scope*(
  dirname: cstring, scope: ptr GIOModuleScope
): ptr GList {.cdecl, importc: "g_io_modules_load_all_in_directory_with_scope".}

proc g_io_extension_point_register*(
  name: cstring
): ptr GIOExtensionPoint {.cdecl, importc: "g_io_extension_point_register".}

proc g_io_extension_point_lookup*(
  name: cstring
): ptr GIOExtensionPoint {.cdecl, importc: "g_io_extension_point_lookup".}

proc g_io_extension_point_set_required_type*(
  extension_point: ptr GIOExtensionPoint, type_arg: GType
): void {.cdecl, importc: "g_io_extension_point_set_required_type".}

proc g_io_extension_point_get_required_type*(
  extension_point: ptr GIOExtensionPoint
): GType {.cdecl, importc: "g_io_extension_point_get_required_type".}

proc g_io_extension_point_get_extensions*(
  extension_point: ptr GIOExtensionPoint
): ptr GList {.cdecl, importc: "g_io_extension_point_get_extensions".}

proc g_io_extension_point_get_extension_by_name*(
  extension_point: ptr GIOExtensionPoint, name: cstring
): ptr GIOExtension {.cdecl, importc: "g_io_extension_point_get_extension_by_name".}

proc g_io_extension_point_implement*(
  extension_point_name: cstring,
  type_arg: GType,
  extension_name: cstring,
  priority: gint,
): ptr GIOExtension {.cdecl, importc: "g_io_extension_point_implement".}

proc g_io_extension_get_type*(
  extension: ptr GIOExtension
): GType {.cdecl, importc: "g_io_extension_get_type".}

proc g_io_extension_get_name*(
  extension: ptr GIOExtension
): cstring {.cdecl, importc: "g_io_extension_get_name".}

proc g_io_extension_get_priority*(
  extension: ptr GIOExtension
): gint {.cdecl, importc: "g_io_extension_get_priority".}

proc g_io_extension_ref_class*(
  extension: ptr GIOExtension
): ptr GTypeClass {.cdecl, importc: "g_io_extension_ref_class".}

proc g_io_module_load*(
  module: ptr GIOModule
): void {.cdecl, importc: "g_io_module_load".}

proc g_io_module_unload*(
  module: ptr GIOModule
): void {.cdecl, importc: "g_io_module_unload".}

proc g_io_module_query*(): ptr cstring {.cdecl, importc: "g_io_module_query".}
proc g_io_scheduler_push_job*(
  job_func: GIOSchedulerJobFunc,
  user_data: gpointer,
  notify: GDestroyNotify,
  io_priority: gint,
  cancellable: ptr GCancellable,
): void {.cdecl, importc: "g_io_scheduler_push_job".}

proc g_io_scheduler_cancel_all_jobs*(): void {.
  cdecl, importc: "g_io_scheduler_cancel_all_jobs"
.}

proc g_io_scheduler_job_send_to_mainloop*(
  job: ptr GIOSchedulerJob,
  func_arg: GSourceFunc,
  user_data: gpointer,
  notify: GDestroyNotify,
): gboolean {.cdecl, importc: "g_io_scheduler_job_send_to_mainloop".}

proc g_io_scheduler_job_send_to_mainloop_async*(
  job: ptr GIOSchedulerJob,
  func_arg: GSourceFunc,
  user_data: gpointer,
  notify: GDestroyNotify,
): void {.cdecl, importc: "g_io_scheduler_job_send_to_mainloop_async".}

proc g_list_model_get_type*(): GType {.cdecl, importc: "g_list_model_get_type".}
proc g_list_model_get_item_type*(
  list: ptr GListModel
): GType {.cdecl, importc: "g_list_model_get_item_type".}

proc g_list_model_get_n_items*(
  list: ptr GListModel
): guint {.cdecl, importc: "g_list_model_get_n_items".}

proc g_list_model_get_item*(
  list: ptr GListModel, position: guint
): gpointer {.cdecl, importc: "g_list_model_get_item".}

proc g_list_model_get_object*(
  list: ptr GListModel, position: guint
): ptr GObject {.cdecl, importc: "g_list_model_get_object".}

proc g_list_model_items_changed*(
  list: ptr GListModel, position: guint, removed: guint, added: guint
): void {.cdecl, importc: "g_list_model_items_changed".}

proc g_list_store_get_type*(): GType {.cdecl, importc: "g_list_store_get_type".}
proc g_list_store_new*(
  item_type: GType
): ptr GListStore {.cdecl, importc: "g_list_store_new".}

proc g_list_store_insert*(
  store: ptr GListStore, position: guint, item: gpointer
): void {.cdecl, importc: "g_list_store_insert".}

proc g_list_store_insert_sorted*(
  store: ptr GListStore,
  item: gpointer,
  compare_func: GCompareDataFunc,
  user_data: gpointer,
): guint {.cdecl, importc: "g_list_store_insert_sorted".}

proc g_list_store_sort*(
  store: ptr GListStore, compare_func: GCompareDataFunc, user_data: gpointer
): void {.cdecl, importc: "g_list_store_sort".}

proc g_list_store_append*(
  store: ptr GListStore, item: gpointer
): void {.cdecl, importc: "g_list_store_append".}

proc g_list_store_remove*(
  store: ptr GListStore, position: guint
): void {.cdecl, importc: "g_list_store_remove".}

proc g_list_store_remove_all*(
  store: ptr GListStore
): void {.cdecl, importc: "g_list_store_remove_all".}

proc g_list_store_splice*(
  store: ptr GListStore,
  position: guint,
  n_removals: guint,
  additions: ptr gpointer,
  n_additions: guint,
): void {.cdecl, importc: "g_list_store_splice".}

proc g_list_store_find*(
  store: ptr GListStore, item: gpointer, position: ptr guint
): gboolean {.cdecl, importc: "g_list_store_find".}

proc g_list_store_find_with_equal_func*(
  store: ptr GListStore, item: gpointer, equal_func: GEqualFunc, position: ptr guint
): gboolean {.cdecl, importc: "g_list_store_find_with_equal_func".}

proc g_list_store_find_with_equal_func_full*(
  store: ptr GListStore,
  item: gpointer,
  equal_func: GEqualFuncFull,
  user_data: gpointer,
  position: ptr guint,
): gboolean {.cdecl, importc: "g_list_store_find_with_equal_func_full".}

proc g_loadable_icon_get_type*(): GType {.cdecl, importc: "g_loadable_icon_get_type".}
proc g_loadable_icon_load*(
  icon: ptr GLoadableIcon,
  size: cint,
  type_arg: ptr cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GInputStream {.cdecl, importc: "g_loadable_icon_load".}

proc g_loadable_icon_load_async*(
  icon: ptr GLoadableIcon,
  size: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_loadable_icon_load_async".}

proc g_loadable_icon_load_finish*(
  icon: ptr GLoadableIcon,
  res: ptr GAsyncResult,
  type_arg: ptr cstring,
  error: ptr ptr GError,
): ptr GInputStream {.cdecl, importc: "g_loadable_icon_load_finish".}

proc g_memory_input_stream_get_type*(): GType {.
  cdecl, importc: "g_memory_input_stream_get_type"
.}

proc g_memory_input_stream_new*(): ptr GInputStream {.
  cdecl, importc: "g_memory_input_stream_new"
.}

proc g_memory_input_stream_new_from_data*(
  data: pointer, len: gssize, destroy: GDestroyNotify
): ptr GInputStream {.cdecl, importc: "g_memory_input_stream_new_from_data".}

proc g_memory_input_stream_new_from_bytes*(
  bytes: ptr GBytes
): ptr GInputStream {.cdecl, importc: "g_memory_input_stream_new_from_bytes".}

proc g_memory_input_stream_add_data*(
  stream: ptr GMemoryInputStream, data: pointer, len: gssize, destroy: GDestroyNotify
): void {.cdecl, importc: "g_memory_input_stream_add_data".}

proc g_memory_input_stream_add_bytes*(
  stream: ptr GMemoryInputStream, bytes: ptr GBytes
): void {.cdecl, importc: "g_memory_input_stream_add_bytes".}

proc g_memory_monitor_get_type*(): GType {.cdecl, importc: "g_memory_monitor_get_type".}
proc g_memory_monitor_dup_default*(): ptr GMemoryMonitor {.
  cdecl, importc: "g_memory_monitor_dup_default"
.}

proc g_memory_output_stream_get_type*(): GType {.
  cdecl, importc: "g_memory_output_stream_get_type"
.}

proc g_memory_output_stream_new*(
  data: gpointer,
  size: gsize,
  realloc_function: GReallocFunc,
  destroy_function: GDestroyNotify,
): ptr GOutputStream {.cdecl, importc: "g_memory_output_stream_new".}

proc g_memory_output_stream_new_resizable*(): ptr GOutputStream {.
  cdecl, importc: "g_memory_output_stream_new_resizable"
.}

proc g_memory_output_stream_get_data*(
  ostream: ptr GMemoryOutputStream
): gpointer {.cdecl, importc: "g_memory_output_stream_get_data".}

proc g_memory_output_stream_get_size*(
  ostream: ptr GMemoryOutputStream
): gsize {.cdecl, importc: "g_memory_output_stream_get_size".}

proc g_memory_output_stream_get_data_size*(
  ostream: ptr GMemoryOutputStream
): gsize {.cdecl, importc: "g_memory_output_stream_get_data_size".}

proc g_memory_output_stream_steal_data*(
  ostream: ptr GMemoryOutputStream
): gpointer {.cdecl, importc: "g_memory_output_stream_steal_data".}

proc g_memory_output_stream_steal_as_bytes*(
  ostream: ptr GMemoryOutputStream
): ptr GBytes {.cdecl, importc: "g_memory_output_stream_steal_as_bytes".}

proc g_menu_model_get_type*(): GType {.cdecl, importc: "g_menu_model_get_type".}
proc g_menu_model_is_mutable*(
  model: ptr GMenuModel
): gboolean {.cdecl, importc: "g_menu_model_is_mutable".}

proc g_menu_model_get_n_items*(
  model: ptr GMenuModel
): gint {.cdecl, importc: "g_menu_model_get_n_items".}

proc g_menu_model_iterate_item_attributes*(
  model: ptr GMenuModel, item_index: gint
): ptr GMenuAttributeIter {.cdecl, importc: "g_menu_model_iterate_item_attributes".}

proc g_menu_model_get_item_attribute_value*(
  model: ptr GMenuModel,
  item_index: gint,
  attribute: cstring,
  expected_type: ptr GVariantType,
): ptr GVariant {.cdecl, importc: "g_menu_model_get_item_attribute_value".}

proc g_menu_model_get_item_attribute*(
  model: ptr GMenuModel, item_index: gint, attribute: cstring, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_menu_model_get_item_attribute".}

proc g_menu_model_iterate_item_links*(
  model: ptr GMenuModel, item_index: gint
): ptr GMenuLinkIter {.cdecl, importc: "g_menu_model_iterate_item_links".}

proc g_menu_model_get_item_link*(
  model: ptr GMenuModel, item_index: gint, link: cstring
): ptr GMenuModel {.cdecl, importc: "g_menu_model_get_item_link".}

proc g_menu_model_items_changed*(
  model: ptr GMenuModel, position: gint, removed: gint, added: gint
): void {.cdecl, importc: "g_menu_model_items_changed".}

proc g_menu_attribute_iter_get_type*(): GType {.
  cdecl, importc: "g_menu_attribute_iter_get_type"
.}

proc g_menu_attribute_iter_get_next*(
  iter: ptr GMenuAttributeIter, out_name: ptr cstring, value: ptr ptr GVariant
): gboolean {.cdecl, importc: "g_menu_attribute_iter_get_next".}

proc g_menu_attribute_iter_next*(
  iter: ptr GMenuAttributeIter
): gboolean {.cdecl, importc: "g_menu_attribute_iter_next".}

proc g_menu_attribute_iter_get_name*(
  iter: ptr GMenuAttributeIter
): cstring {.cdecl, importc: "g_menu_attribute_iter_get_name".}

proc g_menu_attribute_iter_get_value*(
  iter: ptr GMenuAttributeIter
): ptr GVariant {.cdecl, importc: "g_menu_attribute_iter_get_value".}

proc g_menu_link_iter_get_type*(): GType {.cdecl, importc: "g_menu_link_iter_get_type".}
proc g_menu_link_iter_get_next*(
  iter: ptr GMenuLinkIter, out_link: ptr cstring, value: ptr ptr GMenuModel
): gboolean {.cdecl, importc: "g_menu_link_iter_get_next".}

proc g_menu_link_iter_next*(
  iter: ptr GMenuLinkIter
): gboolean {.cdecl, importc: "g_menu_link_iter_next".}

proc g_menu_link_iter_get_name*(
  iter: ptr GMenuLinkIter
): cstring {.cdecl, importc: "g_menu_link_iter_get_name".}

proc g_menu_link_iter_get_value*(
  iter: ptr GMenuLinkIter
): ptr GMenuModel {.cdecl, importc: "g_menu_link_iter_get_value".}

proc g_menu_get_type*(): GType {.cdecl, importc: "g_menu_get_type".}
proc g_menu_new*(): ptr GMenu {.cdecl, importc: "g_menu_new".}
proc g_menu_freeze*(menu: ptr GMenu): void {.cdecl, importc: "g_menu_freeze".}
proc g_menu_insert_item*(
  menu: ptr GMenu, position: gint, item: ptr GMenuItem
): void {.cdecl, importc: "g_menu_insert_item".}

proc g_menu_prepend_item*(
  menu: ptr GMenu, item: ptr GMenuItem
): void {.cdecl, importc: "g_menu_prepend_item".}

proc g_menu_append_item*(
  menu: ptr GMenu, item: ptr GMenuItem
): void {.cdecl, importc: "g_menu_append_item".}

proc g_menu_remove*(
  menu: ptr GMenu, position: gint
): void {.cdecl, importc: "g_menu_remove".}

proc g_menu_remove_all*(menu: ptr GMenu): void {.cdecl, importc: "g_menu_remove_all".}
proc g_menu_insert*(
  menu: ptr GMenu, position: gint, label: cstring, detailed_action: cstring
): void {.cdecl, importc: "g_menu_insert".}

proc g_menu_prepend*(
  menu: ptr GMenu, label: cstring, detailed_action: cstring
): void {.cdecl, importc: "g_menu_prepend".}

proc g_menu_append*(
  menu: ptr GMenu, label: cstring, detailed_action: cstring
): void {.cdecl, importc: "g_menu_append".}

proc g_menu_insert_section*(
  menu: ptr GMenu, position: gint, label: cstring, section: ptr GMenuModel
): void {.cdecl, importc: "g_menu_insert_section".}

proc g_menu_prepend_section*(
  menu: ptr GMenu, label: cstring, section: ptr GMenuModel
): void {.cdecl, importc: "g_menu_prepend_section".}

proc g_menu_append_section*(
  menu: ptr GMenu, label: cstring, section: ptr GMenuModel
): void {.cdecl, importc: "g_menu_append_section".}

proc g_menu_insert_submenu*(
  menu: ptr GMenu, position: gint, label: cstring, submenu: ptr GMenuModel
): void {.cdecl, importc: "g_menu_insert_submenu".}

proc g_menu_prepend_submenu*(
  menu: ptr GMenu, label: cstring, submenu: ptr GMenuModel
): void {.cdecl, importc: "g_menu_prepend_submenu".}

proc g_menu_append_submenu*(
  menu: ptr GMenu, label: cstring, submenu: ptr GMenuModel
): void {.cdecl, importc: "g_menu_append_submenu".}

proc g_menu_item_get_type*(): GType {.cdecl, importc: "g_menu_item_get_type".}
proc g_menu_item_new*(
  label: cstring, detailed_action: cstring
): ptr GMenuItem {.cdecl, importc: "g_menu_item_new".}

proc g_menu_item_new_from_model*(
  model: ptr GMenuModel, item_index: gint
): ptr GMenuItem {.cdecl, importc: "g_menu_item_new_from_model".}

proc g_menu_item_new_submenu*(
  label: cstring, submenu: ptr GMenuModel
): ptr GMenuItem {.cdecl, importc: "g_menu_item_new_submenu".}

proc g_menu_item_new_section*(
  label: cstring, section: ptr GMenuModel
): ptr GMenuItem {.cdecl, importc: "g_menu_item_new_section".}

proc g_menu_item_get_attribute_value*(
  menu_item: ptr GMenuItem, attribute: cstring, expected_type: ptr GVariantType
): ptr GVariant {.cdecl, importc: "g_menu_item_get_attribute_value".}

proc g_menu_item_get_attribute*(
  menu_item: ptr GMenuItem, attribute: cstring, format_string: cstring
): gboolean {.cdecl, varargs, importc: "g_menu_item_get_attribute".}

proc g_menu_item_get_link*(
  menu_item: ptr GMenuItem, link: cstring
): ptr GMenuModel {.cdecl, importc: "g_menu_item_get_link".}

proc g_menu_item_set_attribute_value*(
  menu_item: ptr GMenuItem, attribute: cstring, value: ptr GVariant
): void {.cdecl, importc: "g_menu_item_set_attribute_value".}

proc g_menu_item_set_attribute*(
  menu_item: ptr GMenuItem, attribute: cstring, format_string: cstring
): void {.cdecl, varargs, importc: "g_menu_item_set_attribute".}

proc g_menu_item_set_link*(
  menu_item: ptr GMenuItem, link: cstring, model: ptr GMenuModel
): void {.cdecl, importc: "g_menu_item_set_link".}

proc g_menu_item_set_label*(
  menu_item: ptr GMenuItem, label: cstring
): void {.cdecl, importc: "g_menu_item_set_label".}

proc g_menu_item_set_submenu*(
  menu_item: ptr GMenuItem, submenu: ptr GMenuModel
): void {.cdecl, importc: "g_menu_item_set_submenu".}

proc g_menu_item_set_section*(
  menu_item: ptr GMenuItem, section: ptr GMenuModel
): void {.cdecl, importc: "g_menu_item_set_section".}

proc g_menu_item_set_action_and_target_value*(
  menu_item: ptr GMenuItem, action: cstring, target_value: ptr GVariant
): void {.cdecl, importc: "g_menu_item_set_action_and_target_value".}

proc g_menu_item_set_action_and_target*(
  menu_item: ptr GMenuItem, action: cstring, format_string: cstring
): void {.cdecl, varargs, importc: "g_menu_item_set_action_and_target".}

proc g_menu_item_set_detailed_action*(
  menu_item: ptr GMenuItem, detailed_action: cstring
): void {.cdecl, importc: "g_menu_item_set_detailed_action".}

proc g_menu_item_set_icon*(
  menu_item: ptr GMenuItem, icon: ptr GIcon
): void {.cdecl, importc: "g_menu_item_set_icon".}

proc g_dbus_connection_export_menu_model*(
  connection: ptr GDBusConnection,
  object_path: cstring,
  menu: ptr GMenuModel,
  error: ptr ptr GError,
): guint {.cdecl, importc: "g_dbus_connection_export_menu_model".}

proc g_dbus_connection_unexport_menu_model*(
  connection: ptr GDBusConnection, export_id: guint
): void {.cdecl, importc: "g_dbus_connection_unexport_menu_model".}

proc g_mount_get_type*(): GType {.cdecl, importc: "g_mount_get_type".}
proc g_mount_get_root*(
  mount: ptr GMount
): ptr GFile {.cdecl, importc: "g_mount_get_root".}

proc g_mount_get_default_location*(
  mount: ptr GMount
): ptr GFile {.cdecl, importc: "g_mount_get_default_location".}

proc g_mount_get_name*(
  mount: ptr GMount
): cstring {.cdecl, importc: "g_mount_get_name".}

proc g_mount_get_icon*(
  mount: ptr GMount
): ptr GIcon {.cdecl, importc: "g_mount_get_icon".}

proc g_mount_get_symbolic_icon*(
  mount: ptr GMount
): ptr GIcon {.cdecl, importc: "g_mount_get_symbolic_icon".}

proc g_mount_get_uuid*(
  mount: ptr GMount
): cstring {.cdecl, importc: "g_mount_get_uuid".}

proc g_mount_get_volume*(
  mount: ptr GMount
): ptr GVolume {.cdecl, importc: "g_mount_get_volume".}

proc g_mount_get_drive*(
  mount: ptr GMount
): ptr GDrive {.cdecl, importc: "g_mount_get_drive".}

proc g_mount_can_unmount*(
  mount: ptr GMount
): gboolean {.cdecl, importc: "g_mount_can_unmount".}

proc g_mount_can_eject*(
  mount: ptr GMount
): gboolean {.cdecl, importc: "g_mount_can_eject".}

proc g_mount_unmount*(
  mount: ptr GMount,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_unmount".}

proc g_mount_unmount_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_mount_unmount_finish".}

proc g_mount_eject*(
  mount: ptr GMount,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_eject".}

proc g_mount_eject_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_mount_eject_finish".}

proc g_mount_remount*(
  mount: ptr GMount,
  flags: GMountMountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_remount".}

proc g_mount_remount_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_mount_remount_finish".}

proc g_mount_guess_content_type*(
  mount: ptr GMount,
  force_rescan: gboolean,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_guess_content_type".}

proc g_mount_guess_content_type_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_mount_guess_content_type_finish".}

proc g_mount_guess_content_type_sync*(
  mount: ptr GMount,
  force_rescan: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_mount_guess_content_type_sync".}

proc g_mount_is_shadowed*(
  mount: ptr GMount
): gboolean {.cdecl, importc: "g_mount_is_shadowed".}

proc g_mount_shadow*(mount: ptr GMount): void {.cdecl, importc: "g_mount_shadow".}
proc g_mount_unshadow*(mount: ptr GMount): void {.cdecl, importc: "g_mount_unshadow".}
proc g_mount_unmount_with_operation*(
  mount: ptr GMount,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_unmount_with_operation".}

proc g_mount_unmount_with_operation_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_mount_unmount_with_operation_finish".}

proc g_mount_eject_with_operation*(
  mount: ptr GMount,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_mount_eject_with_operation".}

proc g_mount_eject_with_operation_finish*(
  mount: ptr GMount, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_mount_eject_with_operation_finish".}

proc g_mount_get_sort_key*(
  mount: ptr GMount
): cstring {.cdecl, importc: "g_mount_get_sort_key".}

proc g_mount_operation_get_type*(): GType {.
  cdecl, importc: "g_mount_operation_get_type"
.}

proc g_mount_operation_new*(): ptr GMountOperation {.
  cdecl, importc: "g_mount_operation_new"
.}

proc g_mount_operation_get_username*(
  op: ptr GMountOperation
): cstring {.cdecl, importc: "g_mount_operation_get_username".}

proc g_mount_operation_set_username*(
  op: ptr GMountOperation, username: cstring
): void {.cdecl, importc: "g_mount_operation_set_username".}

proc g_mount_operation_get_password*(
  op: ptr GMountOperation
): cstring {.cdecl, importc: "g_mount_operation_get_password".}

proc g_mount_operation_set_password*(
  op: ptr GMountOperation, password: cstring
): void {.cdecl, importc: "g_mount_operation_set_password".}

proc g_mount_operation_get_anonymous*(
  op: ptr GMountOperation
): gboolean {.cdecl, importc: "g_mount_operation_get_anonymous".}

proc g_mount_operation_set_anonymous*(
  op: ptr GMountOperation, anonymous: gboolean
): void {.cdecl, importc: "g_mount_operation_set_anonymous".}

proc g_mount_operation_get_domain*(
  op: ptr GMountOperation
): cstring {.cdecl, importc: "g_mount_operation_get_domain".}

proc g_mount_operation_set_domain*(
  op: ptr GMountOperation, domain: cstring
): void {.cdecl, importc: "g_mount_operation_set_domain".}

proc g_mount_operation_get_password_save*(
  op: ptr GMountOperation
): GPasswordSave {.cdecl, importc: "g_mount_operation_get_password_save".}

proc g_mount_operation_set_password_save*(
  op: ptr GMountOperation, save: GPasswordSave
): void {.cdecl, importc: "g_mount_operation_set_password_save".}

proc g_mount_operation_get_choice*(
  op: ptr GMountOperation
): cint {.cdecl, importc: "g_mount_operation_get_choice".}

proc g_mount_operation_set_choice*(
  op: ptr GMountOperation, choice: cint
): void {.cdecl, importc: "g_mount_operation_set_choice".}

proc g_mount_operation_reply*(
  op: ptr GMountOperation, result: GMountOperationResult
): void {.cdecl, importc: "g_mount_operation_reply".}

proc g_mount_operation_get_is_tcrypt_hidden_volume*(
  op: ptr GMountOperation
): gboolean {.cdecl, importc: "g_mount_operation_get_is_tcrypt_hidden_volume".}

proc g_mount_operation_set_is_tcrypt_hidden_volume*(
  op: ptr GMountOperation, hidden_volume: gboolean
): void {.cdecl, importc: "g_mount_operation_set_is_tcrypt_hidden_volume".}

proc g_mount_operation_get_is_tcrypt_system_volume*(
  op: ptr GMountOperation
): gboolean {.cdecl, importc: "g_mount_operation_get_is_tcrypt_system_volume".}

proc g_mount_operation_set_is_tcrypt_system_volume*(
  op: ptr GMountOperation, system_volume: gboolean
): void {.cdecl, importc: "g_mount_operation_set_is_tcrypt_system_volume".}

proc g_mount_operation_get_pim*(
  op: ptr GMountOperation
): guint {.cdecl, importc: "g_mount_operation_get_pim".}

proc g_mount_operation_set_pim*(
  op: ptr GMountOperation, pim: guint
): void {.cdecl, importc: "g_mount_operation_set_pim".}

proc g_native_socket_address_get_type*(): GType {.
  cdecl, importc: "g_native_socket_address_get_type"
.}

proc g_native_socket_address_new*(
  native: gpointer, len: gsize
): ptr GSocketAddress {.cdecl, importc: "g_native_socket_address_new".}

proc g_volume_monitor_get_type*(): GType {.cdecl, importc: "g_volume_monitor_get_type".}
proc g_volume_monitor_get*(): ptr GVolumeMonitor {.
  cdecl, importc: "g_volume_monitor_get"
.}

proc g_volume_monitor_get_connected_drives*(
  volume_monitor: ptr GVolumeMonitor
): ptr GList {.cdecl, importc: "g_volume_monitor_get_connected_drives".}

proc g_volume_monitor_get_volumes*(
  volume_monitor: ptr GVolumeMonitor
): ptr GList {.cdecl, importc: "g_volume_monitor_get_volumes".}

proc g_volume_monitor_get_mounts*(
  volume_monitor: ptr GVolumeMonitor
): ptr GList {.cdecl, importc: "g_volume_monitor_get_mounts".}

proc g_volume_monitor_get_volume_for_uuid*(
  volume_monitor: ptr GVolumeMonitor, uuid: cstring
): ptr GVolume {.cdecl, importc: "g_volume_monitor_get_volume_for_uuid".}

proc g_volume_monitor_get_mount_for_uuid*(
  volume_monitor: ptr GVolumeMonitor, uuid: cstring
): ptr GMount {.cdecl, importc: "g_volume_monitor_get_mount_for_uuid".}

proc g_volume_monitor_adopt_orphan_mount*(
  mount: ptr GMount
): ptr GVolume {.cdecl, importc: "g_volume_monitor_adopt_orphan_mount".}

proc g_native_volume_monitor_get_type*(): GType {.
  cdecl, importc: "g_native_volume_monitor_get_type"
.}

proc g_network_address_get_type*(): GType {.
  cdecl, importc: "g_network_address_get_type"
.}

proc g_network_address_new*(
  hostname: cstring, port: guint16
): ptr GSocketConnectable {.cdecl, importc: "g_network_address_new".}

proc g_network_address_new_loopback*(
  port: guint16
): ptr GSocketConnectable {.cdecl, importc: "g_network_address_new_loopback".}

proc g_network_address_parse*(
  host_and_port: cstring, default_port: guint16, error: ptr ptr GError
): ptr GSocketConnectable {.cdecl, importc: "g_network_address_parse".}

proc g_network_address_parse_uri*(
  uri: cstring, default_port: guint16, error: ptr ptr GError
): ptr GSocketConnectable {.cdecl, importc: "g_network_address_parse_uri".}

proc g_network_address_get_hostname*(
  addr_arg: ptr GNetworkAddress
): cstring {.cdecl, importc: "g_network_address_get_hostname".}

proc g_network_address_get_port*(
  addr_arg: ptr GNetworkAddress
): guint16 {.cdecl, importc: "g_network_address_get_port".}

proc g_network_address_get_scheme*(
  addr_arg: ptr GNetworkAddress
): cstring {.cdecl, importc: "g_network_address_get_scheme".}

proc g_network_monitor_get_type*(): GType {.
  cdecl, importc: "g_network_monitor_get_type"
.}

proc g_network_monitor_get_default*(): ptr GNetworkMonitor {.
  cdecl, importc: "g_network_monitor_get_default"
.}

proc g_network_monitor_get_network_available*(
  monitor: ptr GNetworkMonitor
): gboolean {.cdecl, importc: "g_network_monitor_get_network_available".}

proc g_network_monitor_get_network_metered*(
  monitor: ptr GNetworkMonitor
): gboolean {.cdecl, importc: "g_network_monitor_get_network_metered".}

proc g_network_monitor_get_connectivity*(
  monitor: ptr GNetworkMonitor
): GNetworkConnectivity {.cdecl, importc: "g_network_monitor_get_connectivity".}

proc g_network_monitor_can_reach*(
  monitor: ptr GNetworkMonitor,
  connectable: ptr GSocketConnectable,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_network_monitor_can_reach".}

proc g_network_monitor_can_reach_async*(
  monitor: ptr GNetworkMonitor,
  connectable: ptr GSocketConnectable,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_network_monitor_can_reach_async".}

proc g_network_monitor_can_reach_finish*(
  monitor: ptr GNetworkMonitor, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_network_monitor_can_reach_finish".}

proc g_network_service_get_type*(): GType {.
  cdecl, importc: "g_network_service_get_type"
.}

proc g_network_service_new*(
  service: cstring, protocol: cstring, domain: cstring
): ptr GSocketConnectable {.cdecl, importc: "g_network_service_new".}

proc g_network_service_get_service*(
  srv: ptr GNetworkService
): cstring {.cdecl, importc: "g_network_service_get_service".}

proc g_network_service_get_protocol*(
  srv: ptr GNetworkService
): cstring {.cdecl, importc: "g_network_service_get_protocol".}

proc g_network_service_get_domain*(
  srv: ptr GNetworkService
): cstring {.cdecl, importc: "g_network_service_get_domain".}

proc g_network_service_get_scheme*(
  srv: ptr GNetworkService
): cstring {.cdecl, importc: "g_network_service_get_scheme".}

proc g_network_service_set_scheme*(
  srv: ptr GNetworkService, scheme: cstring
): void {.cdecl, importc: "g_network_service_set_scheme".}

proc g_notification_get_type*(): GType {.cdecl, importc: "g_notification_get_type".}
proc g_notification_new*(
  title: cstring
): ptr GNotification {.cdecl, importc: "g_notification_new".}

proc g_notification_set_title*(
  notification: ptr GNotification, title: cstring
): void {.cdecl, importc: "g_notification_set_title".}

proc g_notification_set_body*(
  notification: ptr GNotification, body: cstring
): void {.cdecl, importc: "g_notification_set_body".}

proc g_notification_set_icon*(
  notification: ptr GNotification, icon: ptr GIcon
): void {.cdecl, importc: "g_notification_set_icon".}

proc g_notification_set_urgent*(
  notification: ptr GNotification, urgent: gboolean
): void {.cdecl, importc: "g_notification_set_urgent".}

proc g_notification_set_priority*(
  notification: ptr GNotification, priority: GNotificationPriority
): void {.cdecl, importc: "g_notification_set_priority".}

proc g_notification_set_category*(
  notification: ptr GNotification, category: cstring
): void {.cdecl, importc: "g_notification_set_category".}

proc g_notification_add_button*(
  notification: ptr GNotification, label: cstring, detailed_action: cstring
): void {.cdecl, importc: "g_notification_add_button".}

proc g_notification_add_button_with_target*(
  notification: ptr GNotification,
  label: cstring,
  action: cstring,
  target_format: cstring,
): void {.cdecl, varargs, importc: "g_notification_add_button_with_target".}

proc g_notification_add_button_with_target_value*(
  notification: ptr GNotification, label: cstring, action: cstring, target: ptr GVariant
): void {.cdecl, importc: "g_notification_add_button_with_target_value".}

proc g_notification_set_default_action*(
  notification: ptr GNotification, detailed_action: cstring
): void {.cdecl, importc: "g_notification_set_default_action".}

proc g_notification_set_default_action_and_target*(
  notification: ptr GNotification, action: cstring, target_format: cstring
): void {.cdecl, varargs, importc: "g_notification_set_default_action_and_target".}

proc g_notification_set_default_action_and_target_value*(
  notification: ptr GNotification, action: cstring, target: ptr GVariant
): void {.cdecl, importc: "g_notification_set_default_action_and_target_value".}

proc g_permission_get_type*(): GType {.cdecl, importc: "g_permission_get_type".}
proc g_permission_acquire*(
  permission: ptr GPermission, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_permission_acquire".}

proc g_permission_acquire_async*(
  permission: ptr GPermission,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_permission_acquire_async".}

proc g_permission_acquire_finish*(
  permission: ptr GPermission, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_permission_acquire_finish".}

proc g_permission_release*(
  permission: ptr GPermission, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_permission_release".}

proc g_permission_release_async*(
  permission: ptr GPermission,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_permission_release_async".}

proc g_permission_release_finish*(
  permission: ptr GPermission, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_permission_release_finish".}

proc g_permission_get_allowed*(
  permission: ptr GPermission
): gboolean {.cdecl, importc: "g_permission_get_allowed".}

proc g_permission_get_can_acquire*(
  permission: ptr GPermission
): gboolean {.cdecl, importc: "g_permission_get_can_acquire".}

proc g_permission_get_can_release*(
  permission: ptr GPermission
): gboolean {.cdecl, importc: "g_permission_get_can_release".}

proc g_permission_impl_update*(
  permission: ptr GPermission,
  allowed: gboolean,
  can_acquire: gboolean,
  can_release: gboolean,
): void {.cdecl, importc: "g_permission_impl_update".}

proc g_pollable_input_stream_get_type*(): GType {.
  cdecl, importc: "g_pollable_input_stream_get_type"
.}

proc g_pollable_input_stream_can_poll*(
  stream: ptr GPollableInputStream
): gboolean {.cdecl, importc: "g_pollable_input_stream_can_poll".}

proc g_pollable_input_stream_is_readable*(
  stream: ptr GPollableInputStream
): gboolean {.cdecl, importc: "g_pollable_input_stream_is_readable".}

proc g_pollable_input_stream_create_source*(
  stream: ptr GPollableInputStream, cancellable: ptr GCancellable
): ptr GSource {.cdecl, importc: "g_pollable_input_stream_create_source".}

proc g_pollable_input_stream_read_nonblocking*(
  stream: ptr GPollableInputStream,
  buffer: pointer,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_pollable_input_stream_read_nonblocking".}

proc g_pollable_output_stream_get_type*(): GType {.
  cdecl, importc: "g_pollable_output_stream_get_type"
.}

proc g_pollable_output_stream_can_poll*(
  stream: ptr GPollableOutputStream
): gboolean {.cdecl, importc: "g_pollable_output_stream_can_poll".}

proc g_pollable_output_stream_is_writable*(
  stream: ptr GPollableOutputStream
): gboolean {.cdecl, importc: "g_pollable_output_stream_is_writable".}

proc g_pollable_output_stream_create_source*(
  stream: ptr GPollableOutputStream, cancellable: ptr GCancellable
): ptr GSource {.cdecl, importc: "g_pollable_output_stream_create_source".}

proc g_pollable_output_stream_write_nonblocking*(
  stream: ptr GPollableOutputStream,
  buffer: pointer,
  count: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_pollable_output_stream_write_nonblocking".}

proc g_pollable_output_stream_writev_nonblocking*(
  stream: ptr GPollableOutputStream,
  vectors: ptr GOutputVector,
  n_vectors: gsize,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GPollableReturn {.cdecl, importc: "g_pollable_output_stream_writev_nonblocking".}

proc g_pollable_source_new*(
  pollable_stream: ptr GObject
): ptr GSource {.cdecl, importc: "g_pollable_source_new".}

proc g_pollable_source_new_full*(
  pollable_stream: gpointer, child_source: ptr GSource, cancellable: ptr GCancellable
): ptr GSource {.cdecl, importc: "g_pollable_source_new_full".}

proc g_pollable_stream_read*(
  stream: ptr GInputStream,
  buffer: pointer,
  count: gsize,
  blocking: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_pollable_stream_read".}

proc g_pollable_stream_write*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  blocking: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_pollable_stream_write".}

proc g_pollable_stream_write_all*(
  stream: ptr GOutputStream,
  buffer: pointer,
  count: gsize,
  blocking: gboolean,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_pollable_stream_write_all".}

proc g_power_profile_monitor_get_type*(): GType {.
  cdecl, importc: "g_power_profile_monitor_get_type"
.}

proc g_power_profile_monitor_dup_default*(): ptr GPowerProfileMonitor {.
  cdecl, importc: "g_power_profile_monitor_dup_default"
.}

proc g_power_profile_monitor_get_power_saver_enabled*(
  monitor: ptr GPowerProfileMonitor
): gboolean {.cdecl, importc: "g_power_profile_monitor_get_power_saver_enabled".}

proc g_property_action_get_type*(): GType {.
  cdecl, importc: "g_property_action_get_type"
.}

proc g_property_action_new*(
  name: cstring, object_arg: gpointer, property_name: cstring
): ptr GPropertyAction {.cdecl, importc: "g_property_action_new".}

proc g_proxy_get_type*(): GType {.cdecl, importc: "g_proxy_get_type".}
proc g_proxy_get_default_for_protocol*(
  protocol: cstring
): ptr GProxy {.cdecl, importc: "g_proxy_get_default_for_protocol".}

proc g_proxy_connect*(
  proxy: ptr GProxy,
  connection: ptr GIOStream,
  proxy_address: ptr GProxyAddress,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GIOStream {.cdecl, importc: "g_proxy_connect".}

proc g_proxy_connect_async*(
  proxy: ptr GProxy,
  connection: ptr GIOStream,
  proxy_address: ptr GProxyAddress,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_proxy_connect_async".}

proc g_proxy_connect_finish*(
  proxy: ptr GProxy, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GIOStream {.cdecl, importc: "g_proxy_connect_finish".}

proc g_proxy_supports_hostname*(
  proxy: ptr GProxy
): gboolean {.cdecl, importc: "g_proxy_supports_hostname".}

proc g_proxy_address_get_type*(): GType {.cdecl, importc: "g_proxy_address_get_type".}
proc g_proxy_address_new*(
  inetaddr: ptr GInetAddress,
  port: guint16,
  protocol: cstring,
  dest_hostname: cstring,
  dest_port: guint16,
  username: cstring,
  password: cstring,
): ptr GSocketAddress {.cdecl, importc: "g_proxy_address_new".}

proc g_proxy_address_get_protocol*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_protocol".}

proc g_proxy_address_get_destination_protocol*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_destination_protocol".}

proc g_proxy_address_get_destination_hostname*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_destination_hostname".}

proc g_proxy_address_get_destination_port*(
  proxy: ptr GProxyAddress
): guint16 {.cdecl, importc: "g_proxy_address_get_destination_port".}

proc g_proxy_address_get_username*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_username".}

proc g_proxy_address_get_password*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_password".}

proc g_proxy_address_get_uri*(
  proxy: ptr GProxyAddress
): cstring {.cdecl, importc: "g_proxy_address_get_uri".}

proc g_socket_address_enumerator_get_type*(): GType {.
  cdecl, importc: "g_socket_address_enumerator_get_type"
.}

proc g_socket_address_enumerator_next*(
  enumerator: ptr GSocketAddressEnumerator,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketAddress {.cdecl, importc: "g_socket_address_enumerator_next".}

proc g_socket_address_enumerator_next_async*(
  enumerator: ptr GSocketAddressEnumerator,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_address_enumerator_next_async".}

proc g_socket_address_enumerator_next_finish*(
  enumerator: ptr GSocketAddressEnumerator,
  result: ptr GAsyncResult,
  error: ptr ptr GError,
): ptr GSocketAddress {.cdecl, importc: "g_socket_address_enumerator_next_finish".}

proc g_proxy_address_enumerator_get_type*(): GType {.
  cdecl, importc: "g_proxy_address_enumerator_get_type"
.}

proc g_proxy_resolver_get_type*(): GType {.cdecl, importc: "g_proxy_resolver_get_type".}
proc g_proxy_resolver_get_default*(): ptr GProxyResolver {.
  cdecl, importc: "g_proxy_resolver_get_default"
.}

proc g_proxy_resolver_is_supported*(
  resolver: ptr GProxyResolver
): gboolean {.cdecl, importc: "g_proxy_resolver_is_supported".}

proc g_proxy_resolver_lookup*(
  resolver: ptr GProxyResolver,
  uri: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_proxy_resolver_lookup".}

proc g_proxy_resolver_lookup_async*(
  resolver: ptr GProxyResolver,
  uri: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_proxy_resolver_lookup_async".}

proc g_proxy_resolver_lookup_finish*(
  resolver: ptr GProxyResolver, result: ptr GAsyncResult, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_proxy_resolver_lookup_finish".}

proc g_remote_action_group_get_type*(): GType {.
  cdecl, importc: "g_remote_action_group_get_type"
.}

proc g_remote_action_group_activate_action_full*(
  remote: ptr GRemoteActionGroup,
  action_name: cstring,
  parameter: ptr GVariant,
  platform_data: ptr GVariant,
): void {.cdecl, importc: "g_remote_action_group_activate_action_full".}

proc g_remote_action_group_change_action_state_full*(
  remote: ptr GRemoteActionGroup,
  action_name: cstring,
  value: ptr GVariant,
  platform_data: ptr GVariant,
): void {.cdecl, importc: "g_remote_action_group_change_action_state_full".}

proc g_resolver_get_type*(): GType {.cdecl, importc: "g_resolver_get_type".}
proc g_resolver_get_default*(): ptr GResolver {.
  cdecl, importc: "g_resolver_get_default"
.}

proc g_resolver_set_default*(
  resolver: ptr GResolver
): void {.cdecl, importc: "g_resolver_set_default".}

proc g_resolver_lookup_by_name*(
  resolver: ptr GResolver,
  hostname: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "g_resolver_lookup_by_name".}

proc g_resolver_lookup_by_name_async*(
  resolver: ptr GResolver,
  hostname: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_resolver_lookup_by_name_async".}

proc g_resolver_lookup_by_name_finish*(
  resolver: ptr GResolver, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_resolver_lookup_by_name_finish".}

proc g_resolver_lookup_by_name_with_flags_async*(
  resolver: ptr GResolver,
  hostname: cstring,
  flags: GResolverNameLookupFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_resolver_lookup_by_name_with_flags_async".}

proc g_resolver_lookup_by_name_with_flags_finish*(
  resolver: ptr GResolver, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_resolver_lookup_by_name_with_flags_finish".}

proc g_resolver_lookup_by_name_with_flags*(
  resolver: ptr GResolver,
  hostname: cstring,
  flags: GResolverNameLookupFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "g_resolver_lookup_by_name_with_flags".}

proc g_resolver_free_addresses*(
  addresses: ptr GList
): void {.cdecl, importc: "g_resolver_free_addresses".}

proc g_resolver_lookup_by_address*(
  resolver: ptr GResolver,
  address: ptr GInetAddress,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): cstring {.cdecl, importc: "g_resolver_lookup_by_address".}

proc g_resolver_lookup_by_address_async*(
  resolver: ptr GResolver,
  address: ptr GInetAddress,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_resolver_lookup_by_address_async".}

proc g_resolver_lookup_by_address_finish*(
  resolver: ptr GResolver, result: ptr GAsyncResult, error: ptr ptr GError
): cstring {.cdecl, importc: "g_resolver_lookup_by_address_finish".}

proc g_resolver_lookup_service*(
  resolver: ptr GResolver,
  service: cstring,
  protocol: cstring,
  domain: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "g_resolver_lookup_service".}

proc g_resolver_lookup_service_async*(
  resolver: ptr GResolver,
  service: cstring,
  protocol: cstring,
  domain: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_resolver_lookup_service_async".}

proc g_resolver_lookup_service_finish*(
  resolver: ptr GResolver, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_resolver_lookup_service_finish".}

proc g_resolver_lookup_records*(
  resolver: ptr GResolver,
  rrname: cstring,
  record_type: GResolverRecordType,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "g_resolver_lookup_records".}

proc g_resolver_lookup_records_async*(
  resolver: ptr GResolver,
  rrname: cstring,
  record_type: GResolverRecordType,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_resolver_lookup_records_async".}

proc g_resolver_lookup_records_finish*(
  resolver: ptr GResolver, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_resolver_lookup_records_finish".}

proc g_resolver_free_targets*(
  targets: ptr GList
): void {.cdecl, importc: "g_resolver_free_targets".}

proc g_resolver_get_timeout*(
  resolver: ptr GResolver
): cuint {.cdecl, importc: "g_resolver_get_timeout".}

proc g_resolver_set_timeout*(
  resolver: ptr GResolver, timeout_ms: cuint
): void {.cdecl, importc: "g_resolver_set_timeout".}

proc g_resolver_error_quark*(): GQuark {.cdecl, importc: "g_resolver_error_quark".}
proc g_resource_error_quark*(): GQuark {.cdecl, importc: "g_resource_error_quark".}
proc g_resource_get_type*(): GType {.cdecl, importc: "g_resource_get_type".}
proc g_resource_new_from_data*(
  data: ptr GBytes, error: ptr ptr GError
): ptr GResource {.cdecl, importc: "g_resource_new_from_data".}

proc g_resource_ref*(
  resource: ptr GResource
): ptr GResource {.cdecl, importc: "g_resource_ref".}

proc g_resource_unref*(
  resource: ptr GResource
): void {.cdecl, importc: "g_resource_unref".}

proc g_resource_load*(
  filename: cstring, error: ptr ptr GError
): ptr GResource {.cdecl, importc: "g_resource_load".}

proc g_resource_open_stream*(
  resource: ptr GResource,
  path: cstring,
  lookup_flags: GResourceLookupFlags,
  error: ptr ptr GError,
): ptr GInputStream {.cdecl, importc: "g_resource_open_stream".}

proc g_resource_lookup_data*(
  resource: ptr GResource,
  path: cstring,
  lookup_flags: GResourceLookupFlags,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_resource_lookup_data".}

proc g_resource_enumerate_children*(
  resource: ptr GResource,
  path: cstring,
  lookup_flags: GResourceLookupFlags,
  error: ptr ptr GError,
): ptr cstring {.cdecl, importc: "g_resource_enumerate_children".}

proc g_resource_get_info*(
  resource: ptr GResource,
  path: cstring,
  lookup_flags: GResourceLookupFlags,
  size: ptr gsize,
  flags: ptr guint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_resource_get_info".}

proc g_resources_register*(
  resource: ptr GResource
): void {.cdecl, importc: "g_resources_register".}

proc g_resources_unregister*(
  resource: ptr GResource
): void {.cdecl, importc: "g_resources_unregister".}

proc g_resources_open_stream*(
  path: cstring, lookup_flags: GResourceLookupFlags, error: ptr ptr GError
): ptr GInputStream {.cdecl, importc: "g_resources_open_stream".}

proc g_resources_lookup_data*(
  path: cstring, lookup_flags: GResourceLookupFlags, error: ptr ptr GError
): ptr GBytes {.cdecl, importc: "g_resources_lookup_data".}

proc g_resources_enumerate_children*(
  path: cstring, lookup_flags: GResourceLookupFlags, error: ptr ptr GError
): ptr cstring {.cdecl, importc: "g_resources_enumerate_children".}

proc g_resources_get_info*(
  path: cstring,
  lookup_flags: GResourceLookupFlags,
  size: ptr gsize,
  flags: ptr guint32,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_resources_get_info".}

proc g_resource_has_children*(
  resource: ptr GResource, path: cstring
): gboolean {.cdecl, importc: "g_resource_has_children".}

proc g_resources_has_children*(
  path: cstring
): gboolean {.cdecl, importc: "g_resources_has_children".}

proc g_static_resource_init*(
  static_resource: ptr GStaticResource
): void {.cdecl, importc: "g_static_resource_init".}

proc g_static_resource_fini*(
  static_resource: ptr GStaticResource
): void {.cdecl, importc: "g_static_resource_fini".}

proc g_static_resource_get_resource*(
  static_resource: ptr GStaticResource
): ptr GResource {.cdecl, importc: "g_static_resource_get_resource".}

proc g_seekable_get_type*(): GType {.cdecl, importc: "g_seekable_get_type".}
proc g_seekable_tell*(
  seekable: ptr GSeekable
): goffset {.cdecl, importc: "g_seekable_tell".}

proc g_seekable_can_seek*(
  seekable: ptr GSeekable
): gboolean {.cdecl, importc: "g_seekable_can_seek".}

proc g_seekable_seek*(
  seekable: ptr GSeekable,
  offset: goffset,
  type_arg: GSeekType,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_seekable_seek".}

proc g_seekable_can_truncate*(
  seekable: ptr GSeekable
): gboolean {.cdecl, importc: "g_seekable_can_truncate".}

proc g_seekable_truncate*(
  seekable: ptr GSeekable,
  offset: goffset,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_seekable_truncate".}

proc g_settings_schema_source_get_type*(): GType {.
  cdecl, importc: "g_settings_schema_source_get_type"
.}

proc g_settings_schema_source_get_default*(): ptr GSettingsSchemaSource {.
  cdecl, importc: "g_settings_schema_source_get_default"
.}

proc g_settings_schema_source_ref*(
  source: ptr GSettingsSchemaSource
): ptr GSettingsSchemaSource {.cdecl, importc: "g_settings_schema_source_ref".}

proc g_settings_schema_source_unref*(
  source: ptr GSettingsSchemaSource
): void {.cdecl, importc: "g_settings_schema_source_unref".}

proc g_settings_schema_source_new_from_directory*(
  directory: cstring,
  parent: ptr GSettingsSchemaSource,
  trusted: gboolean,
  error: ptr ptr GError,
): ptr GSettingsSchemaSource {.
  cdecl, importc: "g_settings_schema_source_new_from_directory"
.}

proc g_settings_schema_source_lookup*(
  source: ptr GSettingsSchemaSource, schema_id: cstring, recursive: gboolean
): ptr GSettingsSchema {.cdecl, importc: "g_settings_schema_source_lookup".}

proc g_settings_schema_source_list_schemas*(
  source: ptr GSettingsSchemaSource,
  recursive: gboolean,
  non_relocatable: ptr ptr cstring,
  relocatable: ptr ptr cstring,
): void {.cdecl, importc: "g_settings_schema_source_list_schemas".}

proc g_settings_schema_get_type*(): GType {.
  cdecl, importc: "g_settings_schema_get_type"
.}

proc g_settings_schema_ref*(
  schema: ptr GSettingsSchema
): ptr GSettingsSchema {.cdecl, importc: "g_settings_schema_ref".}

proc g_settings_schema_unref*(
  schema: ptr GSettingsSchema
): void {.cdecl, importc: "g_settings_schema_unref".}

proc g_settings_schema_get_id*(
  schema: ptr GSettingsSchema
): cstring {.cdecl, importc: "g_settings_schema_get_id".}

proc g_settings_schema_get_path*(
  schema: ptr GSettingsSchema
): cstring {.cdecl, importc: "g_settings_schema_get_path".}

proc g_settings_schema_get_key*(
  schema: ptr GSettingsSchema, name: cstring
): ptr GSettingsSchemaKey {.cdecl, importc: "g_settings_schema_get_key".}

proc g_settings_schema_has_key*(
  schema: ptr GSettingsSchema, name: cstring
): gboolean {.cdecl, importc: "g_settings_schema_has_key".}

proc g_settings_schema_list_keys*(
  schema: ptr GSettingsSchema
): ptr cstring {.cdecl, importc: "g_settings_schema_list_keys".}

proc g_settings_schema_list_children*(
  schema: ptr GSettingsSchema
): ptr cstring {.cdecl, importc: "g_settings_schema_list_children".}

proc g_settings_schema_key_get_type*(): GType {.
  cdecl, importc: "g_settings_schema_key_get_type"
.}

proc g_settings_schema_key_ref*(
  key: ptr GSettingsSchemaKey
): ptr GSettingsSchemaKey {.cdecl, importc: "g_settings_schema_key_ref".}

proc g_settings_schema_key_unref*(
  key: ptr GSettingsSchemaKey
): void {.cdecl, importc: "g_settings_schema_key_unref".}

proc g_settings_schema_key_get_value_type*(
  key: ptr GSettingsSchemaKey
): ptr GVariantType {.cdecl, importc: "g_settings_schema_key_get_value_type".}

proc g_settings_schema_key_get_default_value*(
  key: ptr GSettingsSchemaKey
): ptr GVariant {.cdecl, importc: "g_settings_schema_key_get_default_value".}

proc g_settings_schema_key_get_range*(
  key: ptr GSettingsSchemaKey
): ptr GVariant {.cdecl, importc: "g_settings_schema_key_get_range".}

proc g_settings_schema_key_range_check*(
  key: ptr GSettingsSchemaKey, value: ptr GVariant
): gboolean {.cdecl, importc: "g_settings_schema_key_range_check".}

proc g_settings_schema_key_get_name*(
  key: ptr GSettingsSchemaKey
): cstring {.cdecl, importc: "g_settings_schema_key_get_name".}

proc g_settings_schema_key_get_summary*(
  key: ptr GSettingsSchemaKey
): cstring {.cdecl, importc: "g_settings_schema_key_get_summary".}

proc g_settings_schema_key_get_description*(
  key: ptr GSettingsSchemaKey
): cstring {.cdecl, importc: "g_settings_schema_key_get_description".}

proc g_settings_get_type*(): GType {.cdecl, importc: "g_settings_get_type".}
proc g_settings_list_schemas*(): ptr cstring {.
  cdecl, importc: "g_settings_list_schemas"
.}

proc g_settings_list_relocatable_schemas*(): ptr cstring {.
  cdecl, importc: "g_settings_list_relocatable_schemas"
.}

proc g_settings_new*(
  schema_id: cstring
): ptr GSettings {.cdecl, importc: "g_settings_new".}

proc g_settings_new_with_path*(
  schema_id: cstring, path: cstring
): ptr GSettings {.cdecl, importc: "g_settings_new_with_path".}

proc g_settings_new_with_backend*(
  schema_id: cstring, backend: ptr GSettingsBackend
): ptr GSettings {.cdecl, importc: "g_settings_new_with_backend".}

proc g_settings_new_with_backend_and_path*(
  schema_id: cstring, backend: ptr GSettingsBackend, path: cstring
): ptr GSettings {.cdecl, importc: "g_settings_new_with_backend_and_path".}

proc g_settings_new_full*(
  schema: ptr GSettingsSchema, backend: ptr GSettingsBackend, path: cstring
): ptr GSettings {.cdecl, importc: "g_settings_new_full".}

proc g_settings_list_children*(
  settings: ptr GSettings
): ptr cstring {.cdecl, importc: "g_settings_list_children".}

proc g_settings_list_keys*(
  settings: ptr GSettings
): ptr cstring {.cdecl, importc: "g_settings_list_keys".}

proc g_settings_get_range*(
  settings: ptr GSettings, key: cstring
): ptr GVariant {.cdecl, importc: "g_settings_get_range".}

proc g_settings_range_check*(
  settings: ptr GSettings, key: cstring, value: ptr GVariant
): gboolean {.cdecl, importc: "g_settings_range_check".}

proc g_settings_set_value*(
  settings: ptr GSettings, key: cstring, value: ptr GVariant
): gboolean {.cdecl, importc: "g_settings_set_value".}

proc g_settings_get_value*(
  settings: ptr GSettings, key: cstring
): ptr GVariant {.cdecl, importc: "g_settings_get_value".}

proc g_settings_get_user_value*(
  settings: ptr GSettings, key: cstring
): ptr GVariant {.cdecl, importc: "g_settings_get_user_value".}

proc g_settings_get_default_value*(
  settings: ptr GSettings, key: cstring
): ptr GVariant {.cdecl, importc: "g_settings_get_default_value".}

proc g_settings_set*(
  settings: ptr GSettings, key: cstring, format: cstring
): gboolean {.cdecl, varargs, importc: "g_settings_set".}

proc g_settings_get*(
  settings: ptr GSettings, key: cstring, format: cstring
): void {.cdecl, varargs, importc: "g_settings_get".}

proc g_settings_reset*(
  settings: ptr GSettings, key: cstring
): void {.cdecl, importc: "g_settings_reset".}

proc g_settings_get_int*(
  settings: ptr GSettings, key: cstring
): gint {.cdecl, importc: "g_settings_get_int".}

proc g_settings_set_int*(
  settings: ptr GSettings, key: cstring, value: gint
): gboolean {.cdecl, importc: "g_settings_set_int".}

proc g_settings_get_int64*(
  settings: ptr GSettings, key: cstring
): gint64 {.cdecl, importc: "g_settings_get_int64".}

proc g_settings_set_int64*(
  settings: ptr GSettings, key: cstring, value: gint64
): gboolean {.cdecl, importc: "g_settings_set_int64".}

proc g_settings_get_uint*(
  settings: ptr GSettings, key: cstring
): guint {.cdecl, importc: "g_settings_get_uint".}

proc g_settings_set_uint*(
  settings: ptr GSettings, key: cstring, value: guint
): gboolean {.cdecl, importc: "g_settings_set_uint".}

proc g_settings_get_uint64*(
  settings: ptr GSettings, key: cstring
): guint64 {.cdecl, importc: "g_settings_get_uint64".}

proc g_settings_set_uint64*(
  settings: ptr GSettings, key: cstring, value: guint64
): gboolean {.cdecl, importc: "g_settings_set_uint64".}

proc g_settings_get_string*(
  settings: ptr GSettings, key: cstring
): cstring {.cdecl, importc: "g_settings_get_string".}

proc g_settings_set_string*(
  settings: ptr GSettings, key: cstring, value: cstring
): gboolean {.cdecl, importc: "g_settings_set_string".}

proc g_settings_get_boolean*(
  settings: ptr GSettings, key: cstring
): gboolean {.cdecl, importc: "g_settings_get_boolean".}

proc g_settings_set_boolean*(
  settings: ptr GSettings, key: cstring, value: gboolean
): gboolean {.cdecl, importc: "g_settings_set_boolean".}

proc g_settings_get_double*(
  settings: ptr GSettings, key: cstring
): gdouble {.cdecl, importc: "g_settings_get_double".}

proc g_settings_set_double*(
  settings: ptr GSettings, key: cstring, value: gdouble
): gboolean {.cdecl, importc: "g_settings_set_double".}

proc g_settings_get_strv*(
  settings: ptr GSettings, key: cstring
): ptr cstring {.cdecl, importc: "g_settings_get_strv".}

proc g_settings_set_strv*(
  settings: ptr GSettings, key: cstring, value: ptr cstring
): gboolean {.cdecl, importc: "g_settings_set_strv".}

proc g_settings_get_enum*(
  settings: ptr GSettings, key: cstring
): gint {.cdecl, importc: "g_settings_get_enum".}

proc g_settings_set_enum*(
  settings: ptr GSettings, key: cstring, value: gint
): gboolean {.cdecl, importc: "g_settings_set_enum".}

proc g_settings_get_flags*(
  settings: ptr GSettings, key: cstring
): guint {.cdecl, importc: "g_settings_get_flags".}

proc g_settings_set_flags*(
  settings: ptr GSettings, key: cstring, value: guint
): gboolean {.cdecl, importc: "g_settings_set_flags".}

proc g_settings_get_child*(
  settings: ptr GSettings, name: cstring
): ptr GSettings {.cdecl, importc: "g_settings_get_child".}

proc g_settings_is_writable*(
  settings: ptr GSettings, name: cstring
): gboolean {.cdecl, importc: "g_settings_is_writable".}

proc g_settings_delay*(
  settings: ptr GSettings
): void {.cdecl, importc: "g_settings_delay".}

proc g_settings_apply*(
  settings: ptr GSettings
): void {.cdecl, importc: "g_settings_apply".}

proc g_settings_revert*(
  settings: ptr GSettings
): void {.cdecl, importc: "g_settings_revert".}

proc g_settings_get_has_unapplied*(
  settings: ptr GSettings
): gboolean {.cdecl, importc: "g_settings_get_has_unapplied".}

proc g_settings_sync*(): void {.cdecl, importc: "g_settings_sync".}
proc g_settings_bind*(
  settings: ptr GSettings,
  key: cstring,
  object_arg: gpointer,
  property: cstring,
  flags: GSettingsBindFlags,
): void {.cdecl, importc: "g_settings_bind".}

proc g_settings_bind_with_mapping*(
  settings: ptr GSettings,
  key: cstring,
  object_arg: gpointer,
  property: cstring,
  flags: GSettingsBindFlags,
  get_mapping: GSettingsBindGetMapping,
  set_mapping: GSettingsBindSetMapping,
  user_data: gpointer,
  destroy: GDestroyNotify,
): void {.cdecl, importc: "g_settings_bind_with_mapping".}

proc g_settings_bind_with_mapping_closures*(
  settings: ptr GSettings,
  key: cstring,
  object_arg: ptr GObject,
  property: cstring,
  flags: GSettingsBindFlags,
  get_mapping: ptr GClosure,
  set_mapping: ptr GClosure,
): void {.cdecl, importc: "g_settings_bind_with_mapping_closures".}

proc g_settings_bind_writable*(
  settings: ptr GSettings,
  key: cstring,
  object_arg: gpointer,
  property: cstring,
  inverted: gboolean,
): void {.cdecl, importc: "g_settings_bind_writable".}

proc g_settings_unbind*(
  object_arg: gpointer, property: cstring
): void {.cdecl, importc: "g_settings_unbind".}

proc g_settings_create_action*(
  settings: ptr GSettings, key: cstring
): ptr GAction {.cdecl, importc: "g_settings_create_action".}

proc g_settings_get_mapped*(
  settings: ptr GSettings,
  key: cstring,
  mapping: GSettingsGetMapping,
  user_data: gpointer,
): gpointer {.cdecl, importc: "g_settings_get_mapped".}

proc g_simple_action_get_type*(): GType {.cdecl, importc: "g_simple_action_get_type".}
proc g_simple_action_new*(
  name: cstring, parameter_type: ptr GVariantType
): ptr GSimpleAction {.cdecl, importc: "g_simple_action_new".}

proc g_simple_action_new_stateful*(
  name: cstring, parameter_type: ptr GVariantType, state: ptr GVariant
): ptr GSimpleAction {.cdecl, importc: "g_simple_action_new_stateful".}

proc g_simple_action_set_enabled*(
  simple: ptr GSimpleAction, enabled: gboolean
): void {.cdecl, importc: "g_simple_action_set_enabled".}

proc g_simple_action_set_state*(
  simple: ptr GSimpleAction, value: ptr GVariant
): void {.cdecl, importc: "g_simple_action_set_state".}

proc g_simple_action_set_state_hint*(
  simple: ptr GSimpleAction, state_hint: ptr GVariant
): void {.cdecl, importc: "g_simple_action_set_state_hint".}

proc g_simple_action_group_get_type*(): GType {.
  cdecl, importc: "g_simple_action_group_get_type"
.}

proc g_simple_action_group_new*(): ptr GSimpleActionGroup {.
  cdecl, importc: "g_simple_action_group_new"
.}

proc g_simple_action_group_lookup*(
  simple: ptr GSimpleActionGroup, action_name: cstring
): ptr GAction {.cdecl, importc: "g_simple_action_group_lookup".}

proc g_simple_action_group_insert*(
  simple: ptr GSimpleActionGroup, action: ptr GAction
): void {.cdecl, importc: "g_simple_action_group_insert".}

proc g_simple_action_group_remove*(
  simple: ptr GSimpleActionGroup, action_name: cstring
): void {.cdecl, importc: "g_simple_action_group_remove".}

proc g_simple_action_group_add_entries*(
  simple: ptr GSimpleActionGroup,
  entries: ptr GActionEntry,
  n_entries: gint,
  user_data: gpointer,
): void {.cdecl, importc: "g_simple_action_group_add_entries".}

proc g_simple_async_result_get_type*(): GType {.
  cdecl, importc: "g_simple_async_result_get_type"
.}

proc g_simple_async_result_new*(
  source_object: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  source_tag: gpointer,
): ptr GSimpleAsyncResult {.cdecl, importc: "g_simple_async_result_new".}

proc g_simple_async_result_new_error*(
  source_object: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  domain: GQuark,
  code: gint,
  format: cstring,
): ptr GSimpleAsyncResult {.cdecl, varargs, importc: "g_simple_async_result_new_error".}

proc g_simple_async_result_new_from_error*(
  source_object: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  error: ptr GError,
): ptr GSimpleAsyncResult {.cdecl, importc: "g_simple_async_result_new_from_error".}

proc g_simple_async_result_new_take_error*(
  source_object: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  error: ptr GError,
): ptr GSimpleAsyncResult {.cdecl, importc: "g_simple_async_result_new_take_error".}

proc g_simple_async_result_set_op_res_gpointer*(
  simple: ptr GSimpleAsyncResult, op_res: gpointer, destroy_op_res: GDestroyNotify
): void {.cdecl, importc: "g_simple_async_result_set_op_res_gpointer".}

proc g_simple_async_result_get_op_res_gpointer*(
  simple: ptr GSimpleAsyncResult
): gpointer {.cdecl, importc: "g_simple_async_result_get_op_res_gpointer".}

proc g_simple_async_result_set_op_res_gssize*(
  simple: ptr GSimpleAsyncResult, op_res: gssize
): void {.cdecl, importc: "g_simple_async_result_set_op_res_gssize".}

proc g_simple_async_result_get_op_res_gssize*(
  simple: ptr GSimpleAsyncResult
): gssize {.cdecl, importc: "g_simple_async_result_get_op_res_gssize".}

proc g_simple_async_result_set_op_res_gboolean*(
  simple: ptr GSimpleAsyncResult, op_res: gboolean
): void {.cdecl, importc: "g_simple_async_result_set_op_res_gboolean".}

proc g_simple_async_result_get_op_res_gboolean*(
  simple: ptr GSimpleAsyncResult
): gboolean {.cdecl, importc: "g_simple_async_result_get_op_res_gboolean".}

proc g_simple_async_result_set_check_cancellable*(
  simple: ptr GSimpleAsyncResult, check_cancellable: ptr GCancellable
): void {.cdecl, importc: "g_simple_async_result_set_check_cancellable".}

proc g_simple_async_result_get_source_tag*(
  simple: ptr GSimpleAsyncResult
): gpointer {.cdecl, importc: "g_simple_async_result_get_source_tag".}

proc g_simple_async_result_set_handle_cancellation*(
  simple: ptr GSimpleAsyncResult, handle_cancellation: gboolean
): void {.cdecl, importc: "g_simple_async_result_set_handle_cancellation".}

proc g_simple_async_result_complete*(
  simple: ptr GSimpleAsyncResult
): void {.cdecl, importc: "g_simple_async_result_complete".}

proc g_simple_async_result_complete_in_idle*(
  simple: ptr GSimpleAsyncResult
): void {.cdecl, importc: "g_simple_async_result_complete_in_idle".}

proc g_simple_async_result_run_in_thread*(
  simple: ptr GSimpleAsyncResult,
  func_arg: GSimpleAsyncThreadFunc,
  io_priority: cint,
  cancellable: ptr GCancellable,
): void {.cdecl, importc: "g_simple_async_result_run_in_thread".}

proc g_simple_async_result_set_from_error*(
  simple: ptr GSimpleAsyncResult, error: ptr GError
): void {.cdecl, importc: "g_simple_async_result_set_from_error".}

proc g_simple_async_result_take_error*(
  simple: ptr GSimpleAsyncResult, error: ptr GError
): void {.cdecl, importc: "g_simple_async_result_take_error".}

proc g_simple_async_result_propagate_error*(
  simple: ptr GSimpleAsyncResult, dest: ptr ptr GError
): gboolean {.cdecl, importc: "g_simple_async_result_propagate_error".}

proc g_simple_async_result_set_error*(
  simple: ptr GSimpleAsyncResult, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_simple_async_result_set_error".}

proc g_simple_async_result_set_error_va*(
  simple: ptr GSimpleAsyncResult, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_simple_async_result_set_error_va".}

proc g_simple_async_result_is_valid*(
  result: ptr GAsyncResult, source: ptr GObject, source_tag: gpointer
): gboolean {.cdecl, importc: "g_simple_async_result_is_valid".}

proc g_simple_async_report_error_in_idle*(
  object_arg: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  domain: GQuark,
  code: gint,
  format: cstring,
): void {.cdecl, varargs, importc: "g_simple_async_report_error_in_idle".}

proc g_simple_async_report_gerror_in_idle*(
  object_arg: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  error: ptr GError,
): void {.cdecl, importc: "g_simple_async_report_gerror_in_idle".}

proc g_simple_async_report_take_gerror_in_idle*(
  object_arg: ptr GObject,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
  error: ptr GError,
): void {.cdecl, importc: "g_simple_async_report_take_gerror_in_idle".}

proc g_simple_io_stream_get_type*(): GType {.
  cdecl, importc: "g_simple_io_stream_get_type"
.}

proc g_simple_io_stream_new*(
  input_stream: ptr GInputStream, output_stream: ptr GOutputStream
): ptr GIOStream {.cdecl, importc: "g_simple_io_stream_new".}

proc g_simple_permission_get_type*(): GType {.
  cdecl, importc: "g_simple_permission_get_type"
.}

proc g_simple_permission_new*(
  allowed: gboolean
): ptr GPermission {.cdecl, importc: "g_simple_permission_new".}

proc g_simple_proxy_resolver_get_type*(): GType {.
  cdecl, importc: "g_simple_proxy_resolver_get_type"
.}

proc g_simple_proxy_resolver_new*(
  default_proxy: cstring, ignore_hosts: ptr cstring
): ptr GProxyResolver {.cdecl, importc: "g_simple_proxy_resolver_new".}

proc g_simple_proxy_resolver_set_default_proxy*(
  resolver: ptr GSimpleProxyResolver, default_proxy: cstring
): void {.cdecl, importc: "g_simple_proxy_resolver_set_default_proxy".}

proc g_simple_proxy_resolver_set_ignore_hosts*(
  resolver: ptr GSimpleProxyResolver, ignore_hosts: ptr cstring
): void {.cdecl, importc: "g_simple_proxy_resolver_set_ignore_hosts".}

proc g_simple_proxy_resolver_set_uri_proxy*(
  resolver: ptr GSimpleProxyResolver, uri_scheme: cstring, proxy: cstring
): void {.cdecl, importc: "g_simple_proxy_resolver_set_uri_proxy".}

proc g_socket_get_type*(): GType {.cdecl, importc: "g_socket_get_type".}
proc g_socket_new*(
  family: GSocketFamily,
  type_arg: GSocketType,
  protocol: GSocketProtocol,
  error: ptr ptr GError,
): ptr GSocket {.cdecl, importc: "g_socket_new".}

proc g_socket_new_from_fd*(
  fd: gint, error: ptr ptr GError
): ptr GSocket {.cdecl, importc: "g_socket_new_from_fd".}

proc g_socket_get_fd*(socket: ptr GSocket): cint {.cdecl, importc: "g_socket_get_fd".}
proc g_socket_get_family*(
  socket: ptr GSocket
): GSocketFamily {.cdecl, importc: "g_socket_get_family".}

proc g_socket_get_socket_type*(
  socket: ptr GSocket
): GSocketType {.cdecl, importc: "g_socket_get_socket_type".}

proc g_socket_get_protocol*(
  socket: ptr GSocket
): GSocketProtocol {.cdecl, importc: "g_socket_get_protocol".}

proc g_socket_get_local_address*(
  socket: ptr GSocket, error: ptr ptr GError
): ptr GSocketAddress {.cdecl, importc: "g_socket_get_local_address".}

proc g_socket_get_remote_address*(
  socket: ptr GSocket, error: ptr ptr GError
): ptr GSocketAddress {.cdecl, importc: "g_socket_get_remote_address".}

proc g_socket_set_blocking*(
  socket: ptr GSocket, blocking: gboolean
): void {.cdecl, importc: "g_socket_set_blocking".}

proc g_socket_get_blocking*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_get_blocking".}

proc g_socket_set_keepalive*(
  socket: ptr GSocket, keepalive: gboolean
): void {.cdecl, importc: "g_socket_set_keepalive".}

proc g_socket_get_keepalive*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_get_keepalive".}

proc g_socket_get_listen_backlog*(
  socket: ptr GSocket
): gint {.cdecl, importc: "g_socket_get_listen_backlog".}

proc g_socket_set_listen_backlog*(
  socket: ptr GSocket, backlog: gint
): void {.cdecl, importc: "g_socket_set_listen_backlog".}

proc g_socket_get_timeout*(
  socket: ptr GSocket
): guint {.cdecl, importc: "g_socket_get_timeout".}

proc g_socket_set_timeout*(
  socket: ptr GSocket, timeout: guint
): void {.cdecl, importc: "g_socket_set_timeout".}

proc g_socket_get_ttl*(
  socket: ptr GSocket
): guint {.cdecl, importc: "g_socket_get_ttl".}

proc g_socket_set_ttl*(
  socket: ptr GSocket, ttl: guint
): void {.cdecl, importc: "g_socket_set_ttl".}

proc g_socket_get_broadcast*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_get_broadcast".}

proc g_socket_set_broadcast*(
  socket: ptr GSocket, broadcast: gboolean
): void {.cdecl, importc: "g_socket_set_broadcast".}

proc g_socket_get_multicast_loopback*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_get_multicast_loopback".}

proc g_socket_set_multicast_loopback*(
  socket: ptr GSocket, loopback: gboolean
): void {.cdecl, importc: "g_socket_set_multicast_loopback".}

proc g_socket_get_multicast_ttl*(
  socket: ptr GSocket
): guint {.cdecl, importc: "g_socket_get_multicast_ttl".}

proc g_socket_set_multicast_ttl*(
  socket: ptr GSocket, ttl: guint
): void {.cdecl, importc: "g_socket_set_multicast_ttl".}

proc g_socket_is_connected*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_is_connected".}

proc g_socket_bind*(
  socket: ptr GSocket,
  address: ptr GSocketAddress,
  allow_reuse: gboolean,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_bind".}

proc g_socket_join_multicast_group*(
  socket: ptr GSocket,
  group: ptr GInetAddress,
  source_specific: gboolean,
  iface: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_join_multicast_group".}

proc g_socket_leave_multicast_group*(
  socket: ptr GSocket,
  group: ptr GInetAddress,
  source_specific: gboolean,
  iface: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_leave_multicast_group".}

proc g_socket_join_multicast_group_ssm*(
  socket: ptr GSocket,
  group: ptr GInetAddress,
  source_specific: ptr GInetAddress,
  iface: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_join_multicast_group_ssm".}

proc g_socket_leave_multicast_group_ssm*(
  socket: ptr GSocket,
  group: ptr GInetAddress,
  source_specific: ptr GInetAddress,
  iface: cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_leave_multicast_group_ssm".}

proc g_socket_connect*(
  socket: ptr GSocket,
  address: ptr GSocketAddress,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_connect".}

proc g_socket_check_connect_result*(
  socket: ptr GSocket, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_check_connect_result".}

proc g_socket_get_available_bytes*(
  socket: ptr GSocket
): gssize {.cdecl, importc: "g_socket_get_available_bytes".}

proc g_socket_condition_check*(
  socket: ptr GSocket, condition: GIOCondition
): GIOCondition {.cdecl, importc: "g_socket_condition_check".}

proc g_socket_condition_wait*(
  socket: ptr GSocket,
  condition: GIOCondition,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_condition_wait".}

proc g_socket_condition_timed_wait*(
  socket: ptr GSocket,
  condition: GIOCondition,
  timeout_us: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_condition_timed_wait".}

proc g_socket_accept*(
  socket: ptr GSocket, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GSocket {.cdecl, importc: "g_socket_accept".}

proc g_socket_listen*(
  socket: ptr GSocket, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_listen".}

proc g_socket_receive*(
  socket: ptr GSocket,
  buffer: cstring,
  size: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_receive".}

proc g_socket_receive_bytes*(
  socket: ptr GSocket,
  size: gsize,
  timeout_us: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_socket_receive_bytes".}

proc g_socket_receive_from*(
  socket: ptr GSocket,
  address: ptr ptr GSocketAddress,
  buffer: cstring,
  size: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_receive_from".}

proc g_socket_receive_bytes_from*(
  socket: ptr GSocket,
  address: ptr ptr GSocketAddress,
  size: gsize,
  timeout_us: gint64,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "g_socket_receive_bytes_from".}

proc g_socket_send*(
  socket: ptr GSocket,
  buffer: cstring,
  size: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_send".}

proc g_socket_send_to*(
  socket: ptr GSocket,
  address: ptr GSocketAddress,
  buffer: cstring,
  size: gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_send_to".}

proc g_socket_receive_message*(
  socket: ptr GSocket,
  address: ptr ptr GSocketAddress,
  vectors: ptr GInputVector,
  num_vectors: gint,
  messages: ptr ptr ptr GSocketControlMessage,
  num_messages: ptr gint,
  flags: ptr gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_receive_message".}

proc g_socket_send_message*(
  socket: ptr GSocket,
  address: ptr GSocketAddress,
  vectors: ptr GOutputVector,
  num_vectors: gint,
  messages: ptr ptr GSocketControlMessage,
  num_messages: gint,
  flags: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_send_message".}

proc g_socket_receive_messages*(
  socket: ptr GSocket,
  messages: ptr GInputMessage,
  num_messages: guint,
  flags: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gint {.cdecl, importc: "g_socket_receive_messages".}

proc g_socket_send_messages*(
  socket: ptr GSocket,
  messages: ptr GOutputMessage,
  num_messages: guint,
  flags: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gint {.cdecl, importc: "g_socket_send_messages".}

proc g_socket_close*(
  socket: ptr GSocket, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_close".}

proc g_socket_shutdown*(
  socket: ptr GSocket,
  shutdown_read: gboolean,
  shutdown_write: gboolean,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_shutdown".}

proc g_socket_is_closed*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_is_closed".}

proc g_socket_create_source*(
  socket: ptr GSocket, condition: GIOCondition, cancellable: ptr GCancellable
): ptr GSource {.cdecl, importc: "g_socket_create_source".}

proc g_socket_speaks_ipv4*(
  socket: ptr GSocket
): gboolean {.cdecl, importc: "g_socket_speaks_ipv4".}

proc g_socket_get_credentials*(
  socket: ptr GSocket, error: ptr ptr GError
): ptr GCredentials {.cdecl, importc: "g_socket_get_credentials".}

proc g_socket_receive_with_blocking*(
  socket: ptr GSocket,
  buffer: cstring,
  size: gsize,
  blocking: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_receive_with_blocking".}

proc g_socket_send_with_blocking*(
  socket: ptr GSocket,
  buffer: cstring,
  size: gsize,
  blocking: gboolean,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gssize {.cdecl, importc: "g_socket_send_with_blocking".}

proc g_socket_send_message_with_timeout*(
  socket: ptr GSocket,
  address: ptr GSocketAddress,
  vectors: ptr GOutputVector,
  num_vectors: gint,
  messages: ptr ptr GSocketControlMessage,
  num_messages: gint,
  flags: gint,
  timeout_us: gint64,
  bytes_written: ptr gsize,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GPollableReturn {.cdecl, importc: "g_socket_send_message_with_timeout".}

proc g_socket_get_option*(
  socket: ptr GSocket,
  level: gint,
  optname: gint,
  value: ptr gint,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_get_option".}

proc g_socket_set_option*(
  socket: ptr GSocket, level: gint, optname: gint, value: gint, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_set_option".}

proc g_socket_client_get_type*(): GType {.cdecl, importc: "g_socket_client_get_type".}
proc g_socket_client_new*(): ptr GSocketClient {.cdecl, importc: "g_socket_client_new".}
proc g_socket_client_get_family*(
  client: ptr GSocketClient
): GSocketFamily {.cdecl, importc: "g_socket_client_get_family".}

proc g_socket_client_set_family*(
  client: ptr GSocketClient, family: GSocketFamily
): void {.cdecl, importc: "g_socket_client_set_family".}

proc g_socket_client_get_socket_type*(
  client: ptr GSocketClient
): GSocketType {.cdecl, importc: "g_socket_client_get_socket_type".}

proc g_socket_client_set_socket_type*(
  client: ptr GSocketClient, type_arg: GSocketType
): void {.cdecl, importc: "g_socket_client_set_socket_type".}

proc g_socket_client_get_protocol*(
  client: ptr GSocketClient
): GSocketProtocol {.cdecl, importc: "g_socket_client_get_protocol".}

proc g_socket_client_set_protocol*(
  client: ptr GSocketClient, protocol: GSocketProtocol
): void {.cdecl, importc: "g_socket_client_set_protocol".}

proc g_socket_client_get_local_address*(
  client: ptr GSocketClient
): ptr GSocketAddress {.cdecl, importc: "g_socket_client_get_local_address".}

proc g_socket_client_set_local_address*(
  client: ptr GSocketClient, address: ptr GSocketAddress
): void {.cdecl, importc: "g_socket_client_set_local_address".}

proc g_socket_client_get_timeout*(
  client: ptr GSocketClient
): guint {.cdecl, importc: "g_socket_client_get_timeout".}

proc g_socket_client_set_timeout*(
  client: ptr GSocketClient, timeout: guint
): void {.cdecl, importc: "g_socket_client_set_timeout".}

proc g_socket_client_get_enable_proxy*(
  client: ptr GSocketClient
): gboolean {.cdecl, importc: "g_socket_client_get_enable_proxy".}

proc g_socket_client_set_enable_proxy*(
  client: ptr GSocketClient, enable: gboolean
): void {.cdecl, importc: "g_socket_client_set_enable_proxy".}

proc g_socket_client_get_tls*(
  client: ptr GSocketClient
): gboolean {.cdecl, importc: "g_socket_client_get_tls".}

proc g_socket_client_set_tls*(
  client: ptr GSocketClient, tls: gboolean
): void {.cdecl, importc: "g_socket_client_set_tls".}

proc g_socket_client_get_tls_validation_flags*(
  client: ptr GSocketClient
): GTlsCertificateFlags {.cdecl, importc: "g_socket_client_get_tls_validation_flags".}

proc g_socket_client_set_tls_validation_flags*(
  client: ptr GSocketClient, flags: GTlsCertificateFlags
): void {.cdecl, importc: "g_socket_client_set_tls_validation_flags".}

proc g_socket_client_get_proxy_resolver*(
  client: ptr GSocketClient
): ptr GProxyResolver {.cdecl, importc: "g_socket_client_get_proxy_resolver".}

proc g_socket_client_set_proxy_resolver*(
  client: ptr GSocketClient, proxy_resolver: ptr GProxyResolver
): void {.cdecl, importc: "g_socket_client_set_proxy_resolver".}

proc g_socket_client_connect*(
  client: ptr GSocketClient,
  connectable: ptr GSocketConnectable,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect".}

proc g_socket_client_connect_to_host*(
  client: ptr GSocketClient,
  host_and_port: cstring,
  default_port: guint16,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_host".}

proc g_socket_client_connect_to_service*(
  client: ptr GSocketClient,
  domain: cstring,
  service: cstring,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_service".}

proc g_socket_client_connect_to_uri*(
  client: ptr GSocketClient,
  uri: cstring,
  default_port: guint16,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_uri".}

proc g_socket_client_connect_async*(
  client: ptr GSocketClient,
  connectable: ptr GSocketConnectable,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_client_connect_async".}

proc g_socket_client_connect_finish*(
  client: ptr GSocketClient, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_finish".}

proc g_socket_client_connect_to_host_async*(
  client: ptr GSocketClient,
  host_and_port: cstring,
  default_port: guint16,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_client_connect_to_host_async".}

proc g_socket_client_connect_to_host_finish*(
  client: ptr GSocketClient, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_host_finish".}

proc g_socket_client_connect_to_service_async*(
  client: ptr GSocketClient,
  domain: cstring,
  service: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_client_connect_to_service_async".}

proc g_socket_client_connect_to_service_finish*(
  client: ptr GSocketClient, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_service_finish".}

proc g_socket_client_connect_to_uri_async*(
  client: ptr GSocketClient,
  uri: cstring,
  default_port: guint16,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_client_connect_to_uri_async".}

proc g_socket_client_connect_to_uri_finish*(
  client: ptr GSocketClient, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GSocketConnection {.cdecl, importc: "g_socket_client_connect_to_uri_finish".}

proc g_socket_client_add_application_proxy*(
  client: ptr GSocketClient, protocol: cstring
): void {.cdecl, importc: "g_socket_client_add_application_proxy".}

proc g_socket_connectable_get_type*(): GType {.
  cdecl, importc: "g_socket_connectable_get_type"
.}

proc g_socket_connectable_enumerate*(
  connectable: ptr GSocketConnectable
): ptr GSocketAddressEnumerator {.cdecl, importc: "g_socket_connectable_enumerate".}

proc g_socket_connectable_proxy_enumerate*(
  connectable: ptr GSocketConnectable
): ptr GSocketAddressEnumerator {.
  cdecl, importc: "g_socket_connectable_proxy_enumerate"
.}

proc g_socket_connectable_to_string*(
  connectable: ptr GSocketConnectable
): cstring {.cdecl, importc: "g_socket_connectable_to_string".}

proc g_socket_connection_get_type*(): GType {.
  cdecl, importc: "g_socket_connection_get_type"
.}

proc g_socket_connection_is_connected*(
  connection: ptr GSocketConnection
): gboolean {.cdecl, importc: "g_socket_connection_is_connected".}

proc g_socket_connection_connect*(
  connection: ptr GSocketConnection,
  address: ptr GSocketAddress,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_connection_connect".}

proc g_socket_connection_connect_async*(
  connection: ptr GSocketConnection,
  address: ptr GSocketAddress,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_connection_connect_async".}

proc g_socket_connection_connect_finish*(
  connection: ptr GSocketConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_socket_connection_connect_finish".}

proc g_socket_connection_get_socket*(
  connection: ptr GSocketConnection
): ptr GSocket {.cdecl, importc: "g_socket_connection_get_socket".}

proc g_socket_connection_get_local_address*(
  connection: ptr GSocketConnection, error: ptr ptr GError
): ptr GSocketAddress {.cdecl, importc: "g_socket_connection_get_local_address".}

proc g_socket_connection_get_remote_address*(
  connection: ptr GSocketConnection, error: ptr ptr GError
): ptr GSocketAddress {.cdecl, importc: "g_socket_connection_get_remote_address".}

proc g_socket_connection_factory_register_type*(
  g_type: GType, family: GSocketFamily, type_arg: GSocketType, protocol: gint
): void {.cdecl, importc: "g_socket_connection_factory_register_type".}

proc g_socket_connection_factory_lookup_type*(
  family: GSocketFamily, type_arg: GSocketType, protocol_id: gint
): GType {.cdecl, importc: "g_socket_connection_factory_lookup_type".}

proc g_socket_connection_factory_create_connection*(
  socket: ptr GSocket
): ptr GSocketConnection {.
  cdecl, importc: "g_socket_connection_factory_create_connection"
.}

proc g_socket_control_message_get_type*(): GType {.
  cdecl, importc: "g_socket_control_message_get_type"
.}

proc g_socket_control_message_get_size*(
  message: ptr GSocketControlMessage
): gsize {.cdecl, importc: "g_socket_control_message_get_size".}

proc g_socket_control_message_get_level*(
  message: ptr GSocketControlMessage
): cint {.cdecl, importc: "g_socket_control_message_get_level".}

proc g_socket_control_message_get_msg_type*(
  message: ptr GSocketControlMessage
): cint {.cdecl, importc: "g_socket_control_message_get_msg_type".}

proc g_socket_control_message_serialize*(
  message: ptr GSocketControlMessage, data: gpointer
): void {.cdecl, importc: "g_socket_control_message_serialize".}

proc g_socket_control_message_deserialize*(
  level: cint, type_arg: cint, size: gsize, data: gpointer
): ptr GSocketControlMessage {.cdecl, importc: "g_socket_control_message_deserialize".}

proc g_socket_listener_get_type*(): GType {.
  cdecl, importc: "g_socket_listener_get_type"
.}

proc g_socket_listener_new*(): ptr GSocketListener {.
  cdecl, importc: "g_socket_listener_new"
.}

proc g_socket_listener_set_backlog*(
  listener: ptr GSocketListener, listen_backlog: cint
): void {.cdecl, importc: "g_socket_listener_set_backlog".}

proc g_socket_listener_add_socket*(
  listener: ptr GSocketListener,
  socket: ptr GSocket,
  source_object: ptr GObject,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_listener_add_socket".}

proc g_socket_listener_add_address*(
  listener: ptr GSocketListener,
  address: ptr GSocketAddress,
  type_arg: GSocketType,
  protocol: GSocketProtocol,
  source_object: ptr GObject,
  effective_address: ptr ptr GSocketAddress,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_listener_add_address".}

proc g_socket_listener_add_inet_port*(
  listener: ptr GSocketListener,
  port: guint16,
  source_object: ptr GObject,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_socket_listener_add_inet_port".}

proc g_socket_listener_add_any_inet_port*(
  listener: ptr GSocketListener, source_object: ptr GObject, error: ptr ptr GError
): guint16 {.cdecl, importc: "g_socket_listener_add_any_inet_port".}

proc g_socket_listener_accept_socket*(
  listener: ptr GSocketListener,
  source_object: ptr ptr GObject,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocket {.cdecl, importc: "g_socket_listener_accept_socket".}

proc g_socket_listener_accept_socket_async*(
  listener: ptr GSocketListener,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_listener_accept_socket_async".}

proc g_socket_listener_accept_socket_finish*(
  listener: ptr GSocketListener,
  result: ptr GAsyncResult,
  source_object: ptr ptr GObject,
  error: ptr ptr GError,
): ptr GSocket {.cdecl, importc: "g_socket_listener_accept_socket_finish".}

proc g_socket_listener_accept*(
  listener: ptr GSocketListener,
  source_object: ptr ptr GObject,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_listener_accept".}

proc g_socket_listener_accept_async*(
  listener: ptr GSocketListener,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_socket_listener_accept_async".}

proc g_socket_listener_accept_finish*(
  listener: ptr GSocketListener,
  result: ptr GAsyncResult,
  source_object: ptr ptr GObject,
  error: ptr ptr GError,
): ptr GSocketConnection {.cdecl, importc: "g_socket_listener_accept_finish".}

proc g_socket_listener_close*(
  listener: ptr GSocketListener
): void {.cdecl, importc: "g_socket_listener_close".}

proc g_socket_service_get_type*(): GType {.cdecl, importc: "g_socket_service_get_type".}
proc g_socket_service_new*(): ptr GSocketService {.
  cdecl, importc: "g_socket_service_new"
.}

proc g_socket_service_start*(
  service: ptr GSocketService
): void {.cdecl, importc: "g_socket_service_start".}

proc g_socket_service_stop*(
  service: ptr GSocketService
): void {.cdecl, importc: "g_socket_service_stop".}

proc g_socket_service_is_active*(
  service: ptr GSocketService
): gboolean {.cdecl, importc: "g_socket_service_is_active".}

proc g_srv_target_get_type*(): GType {.cdecl, importc: "g_srv_target_get_type".}
proc g_srv_target_new*(
  hostname: cstring, port: guint16, priority: guint16, weight: guint16
): ptr GSrvTarget {.cdecl, importc: "g_srv_target_new".}

proc g_srv_target_copy*(
  target: ptr GSrvTarget
): ptr GSrvTarget {.cdecl, importc: "g_srv_target_copy".}

proc g_srv_target_free*(
  target: ptr GSrvTarget
): void {.cdecl, importc: "g_srv_target_free".}

proc g_srv_target_get_hostname*(
  target: ptr GSrvTarget
): cstring {.cdecl, importc: "g_srv_target_get_hostname".}

proc g_srv_target_get_port*(
  target: ptr GSrvTarget
): guint16 {.cdecl, importc: "g_srv_target_get_port".}

proc g_srv_target_get_priority*(
  target: ptr GSrvTarget
): guint16 {.cdecl, importc: "g_srv_target_get_priority".}

proc g_srv_target_get_weight*(
  target: ptr GSrvTarget
): guint16 {.cdecl, importc: "g_srv_target_get_weight".}

proc g_srv_target_list_sort*(
  targets: ptr GList
): ptr GList {.cdecl, importc: "g_srv_target_list_sort".}

proc g_subprocess_get_type*(): GType {.cdecl, importc: "g_subprocess_get_type".}
proc g_subprocess_new*(
  flags: GSubprocessFlags, error: ptr ptr GError, argv0: cstring
): ptr GSubprocess {.cdecl, varargs, importc: "g_subprocess_new".}

proc g_subprocess_newv*(
  argv: ptr cstring, flags: GSubprocessFlags, error: ptr ptr GError
): ptr GSubprocess {.cdecl, importc: "g_subprocess_newv".}

proc g_subprocess_get_stdin_pipe*(
  subprocess: ptr GSubprocess
): ptr GOutputStream {.cdecl, importc: "g_subprocess_get_stdin_pipe".}

proc g_subprocess_get_stdout_pipe*(
  subprocess: ptr GSubprocess
): ptr GInputStream {.cdecl, importc: "g_subprocess_get_stdout_pipe".}

proc g_subprocess_get_stderr_pipe*(
  subprocess: ptr GSubprocess
): ptr GInputStream {.cdecl, importc: "g_subprocess_get_stderr_pipe".}

proc g_subprocess_get_identifier*(
  subprocess: ptr GSubprocess
): cstring {.cdecl, importc: "g_subprocess_get_identifier".}

proc g_subprocess_send_signal*(
  subprocess: ptr GSubprocess, signal_num: gint
): void {.cdecl, importc: "g_subprocess_send_signal".}

proc g_subprocess_force_exit*(
  subprocess: ptr GSubprocess
): void {.cdecl, importc: "g_subprocess_force_exit".}

proc g_subprocess_wait*(
  subprocess: ptr GSubprocess, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_subprocess_wait".}

proc g_subprocess_wait_async*(
  subprocess: ptr GSubprocess,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_subprocess_wait_async".}

proc g_subprocess_wait_finish*(
  subprocess: ptr GSubprocess, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_subprocess_wait_finish".}

proc g_subprocess_wait_check*(
  subprocess: ptr GSubprocess, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_subprocess_wait_check".}

proc g_subprocess_wait_check_async*(
  subprocess: ptr GSubprocess,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_subprocess_wait_check_async".}

proc g_subprocess_wait_check_finish*(
  subprocess: ptr GSubprocess, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_subprocess_wait_check_finish".}

proc g_subprocess_get_status*(
  subprocess: ptr GSubprocess
): gint {.cdecl, importc: "g_subprocess_get_status".}

proc g_subprocess_get_successful*(
  subprocess: ptr GSubprocess
): gboolean {.cdecl, importc: "g_subprocess_get_successful".}

proc g_subprocess_get_if_exited*(
  subprocess: ptr GSubprocess
): gboolean {.cdecl, importc: "g_subprocess_get_if_exited".}

proc g_subprocess_get_exit_status*(
  subprocess: ptr GSubprocess
): gint {.cdecl, importc: "g_subprocess_get_exit_status".}

proc g_subprocess_get_if_signaled*(
  subprocess: ptr GSubprocess
): gboolean {.cdecl, importc: "g_subprocess_get_if_signaled".}

proc g_subprocess_get_term_sig*(
  subprocess: ptr GSubprocess
): gint {.cdecl, importc: "g_subprocess_get_term_sig".}

proc g_subprocess_communicate*(
  subprocess: ptr GSubprocess,
  stdin_buf: ptr GBytes,
  cancellable: ptr GCancellable,
  stdout_buf: ptr ptr GBytes,
  stderr_buf: ptr ptr GBytes,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_subprocess_communicate".}

proc g_subprocess_communicate_async*(
  subprocess: ptr GSubprocess,
  stdin_buf: ptr GBytes,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_subprocess_communicate_async".}

proc g_subprocess_communicate_finish*(
  subprocess: ptr GSubprocess,
  result: ptr GAsyncResult,
  stdout_buf: ptr ptr GBytes,
  stderr_buf: ptr ptr GBytes,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_subprocess_communicate_finish".}

proc g_subprocess_communicate_utf8*(
  subprocess: ptr GSubprocess,
  stdin_buf: cstring,
  cancellable: ptr GCancellable,
  stdout_buf: ptr cstring,
  stderr_buf: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_subprocess_communicate_utf8".}

proc g_subprocess_communicate_utf8_async*(
  subprocess: ptr GSubprocess,
  stdin_buf: cstring,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_subprocess_communicate_utf8_async".}

proc g_subprocess_communicate_utf8_finish*(
  subprocess: ptr GSubprocess,
  result: ptr GAsyncResult,
  stdout_buf: ptr cstring,
  stderr_buf: ptr cstring,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_subprocess_communicate_utf8_finish".}

proc g_subprocess_launcher_get_type*(): GType {.
  cdecl, importc: "g_subprocess_launcher_get_type"
.}

proc g_subprocess_launcher_new*(
  flags: GSubprocessFlags
): ptr GSubprocessLauncher {.cdecl, importc: "g_subprocess_launcher_new".}

proc g_subprocess_launcher_spawn*(
  self: ptr GSubprocessLauncher, error: ptr ptr GError, argv0: cstring
): ptr GSubprocess {.cdecl, varargs, importc: "g_subprocess_launcher_spawn".}

proc g_subprocess_launcher_spawnv*(
  self: ptr GSubprocessLauncher, argv: ptr cstring, error: ptr ptr GError
): ptr GSubprocess {.cdecl, importc: "g_subprocess_launcher_spawnv".}

proc g_subprocess_launcher_set_environ*(
  self: ptr GSubprocessLauncher, env: ptr cstring
): void {.cdecl, importc: "g_subprocess_launcher_set_environ".}

proc g_subprocess_launcher_setenv*(
  self: ptr GSubprocessLauncher, variable: cstring, value: cstring, overwrite: gboolean
): void {.cdecl, importc: "g_subprocess_launcher_setenv".}

proc g_subprocess_launcher_unsetenv*(
  self: ptr GSubprocessLauncher, variable: cstring
): void {.cdecl, importc: "g_subprocess_launcher_unsetenv".}

proc g_subprocess_launcher_getenv*(
  self: ptr GSubprocessLauncher, variable: cstring
): cstring {.cdecl, importc: "g_subprocess_launcher_getenv".}

proc g_subprocess_launcher_set_cwd*(
  self: ptr GSubprocessLauncher, cwd: cstring
): void {.cdecl, importc: "g_subprocess_launcher_set_cwd".}

proc g_subprocess_launcher_set_flags*(
  self: ptr GSubprocessLauncher, flags: GSubprocessFlags
): void {.cdecl, importc: "g_subprocess_launcher_set_flags".}

proc g_subprocess_launcher_set_stdin_file_path*(
  self: ptr GSubprocessLauncher, path: cstring
): void {.cdecl, importc: "g_subprocess_launcher_set_stdin_file_path".}

proc g_subprocess_launcher_take_stdin_fd*(
  self: ptr GSubprocessLauncher, fd: gint
): void {.cdecl, importc: "g_subprocess_launcher_take_stdin_fd".}

proc g_subprocess_launcher_set_stdout_file_path*(
  self: ptr GSubprocessLauncher, path: cstring
): void {.cdecl, importc: "g_subprocess_launcher_set_stdout_file_path".}

proc g_subprocess_launcher_take_stdout_fd*(
  self: ptr GSubprocessLauncher, fd: gint
): void {.cdecl, importc: "g_subprocess_launcher_take_stdout_fd".}

proc g_subprocess_launcher_set_stderr_file_path*(
  self: ptr GSubprocessLauncher, path: cstring
): void {.cdecl, importc: "g_subprocess_launcher_set_stderr_file_path".}

proc g_subprocess_launcher_take_stderr_fd*(
  self: ptr GSubprocessLauncher, fd: gint
): void {.cdecl, importc: "g_subprocess_launcher_take_stderr_fd".}

proc g_subprocess_launcher_take_fd*(
  self: ptr GSubprocessLauncher, source_fd: gint, target_fd: gint
): void {.cdecl, importc: "g_subprocess_launcher_take_fd".}

proc g_subprocess_launcher_close*(
  self: ptr GSubprocessLauncher
): void {.cdecl, importc: "g_subprocess_launcher_close".}

proc g_subprocess_launcher_set_child_setup*(
  self: ptr GSubprocessLauncher,
  child_setup: GSpawnChildSetupFunc,
  user_data: gpointer,
  destroy_notify: GDestroyNotify,
): void {.cdecl, importc: "g_subprocess_launcher_set_child_setup".}

proc g_task_get_type*(): GType {.cdecl, importc: "g_task_get_type".}
proc g_task_new*(
  source_object: gpointer,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  callback_data: gpointer,
): ptr GTask {.cdecl, importc: "g_task_new".}

proc g_task_report_error*(
  source_object: gpointer,
  callback: GAsyncReadyCallback,
  callback_data: gpointer,
  source_tag: gpointer,
  error: ptr GError,
): void {.cdecl, importc: "g_task_report_error".}

proc g_task_report_new_error*(
  source_object: gpointer,
  callback: GAsyncReadyCallback,
  callback_data: gpointer,
  source_tag: gpointer,
  domain: GQuark,
  code: gint,
  format: cstring,
): void {.cdecl, varargs, importc: "g_task_report_new_error".}

proc g_task_set_task_data*(
  task: ptr GTask, task_data: gpointer, task_data_destroy: GDestroyNotify
): void {.cdecl, importc: "g_task_set_task_data".}

proc g_task_set_priority*(
  task: ptr GTask, priority: gint
): void {.cdecl, importc: "g_task_set_priority".}

proc g_task_set_check_cancellable*(
  task: ptr GTask, check_cancellable: gboolean
): void {.cdecl, importc: "g_task_set_check_cancellable".}

proc g_task_set_source_tag*(
  task: ptr GTask, source_tag: gpointer
): void {.cdecl, importc: "g_task_set_source_tag".}

proc g_task_set_name*(
  task: ptr GTask, name: cstring
): void {.cdecl, importc: "g_task_set_name".}

proc g_task_set_static_name*(
  task: ptr GTask, name: cstring
): void {.cdecl, importc: "g_task_set_static_name".}

proc g_task_get_source_object*(
  task: ptr GTask
): gpointer {.cdecl, importc: "g_task_get_source_object".}

proc g_task_get_task_data*(
  task: ptr GTask
): gpointer {.cdecl, importc: "g_task_get_task_data".}

proc g_task_get_priority*(
  task: ptr GTask
): gint {.cdecl, importc: "g_task_get_priority".}

proc g_task_get_context*(
  task: ptr GTask
): ptr GMainContext {.cdecl, importc: "g_task_get_context".}

proc g_task_get_cancellable*(
  task: ptr GTask
): ptr GCancellable {.cdecl, importc: "g_task_get_cancellable".}

proc g_task_get_check_cancellable*(
  task: ptr GTask
): gboolean {.cdecl, importc: "g_task_get_check_cancellable".}

proc g_task_get_source_tag*(
  task: ptr GTask
): gpointer {.cdecl, importc: "g_task_get_source_tag".}

proc g_task_get_name*(task: ptr GTask): cstring {.cdecl, importc: "g_task_get_name".}
proc g_task_is_valid*(
  result: gpointer, source_object: gpointer
): gboolean {.cdecl, importc: "g_task_is_valid".}

proc g_task_run_in_thread*(
  task: ptr GTask, task_func: GTaskThreadFunc
): void {.cdecl, importc: "g_task_run_in_thread".}

proc g_task_run_in_thread_sync*(
  task: ptr GTask, task_func: GTaskThreadFunc
): void {.cdecl, importc: "g_task_run_in_thread_sync".}

proc g_task_set_return_on_cancel*(
  task: ptr GTask, return_on_cancel: gboolean
): gboolean {.cdecl, importc: "g_task_set_return_on_cancel".}

proc g_task_get_return_on_cancel*(
  task: ptr GTask
): gboolean {.cdecl, importc: "g_task_get_return_on_cancel".}

proc g_task_attach_source*(
  task: ptr GTask, source: ptr GSource, callback: GSourceFunc
): void {.cdecl, importc: "g_task_attach_source".}

proc g_task_return_pointer*(
  task: ptr GTask, result: gpointer, result_destroy: GDestroyNotify
): void {.cdecl, importc: "g_task_return_pointer".}

proc g_task_return_boolean*(
  task: ptr GTask, result: gboolean
): void {.cdecl, importc: "g_task_return_boolean".}

proc g_task_return_int*(
  task: ptr GTask, result: gssize
): void {.cdecl, importc: "g_task_return_int".}

proc g_task_return_error*(
  task: ptr GTask, error: ptr GError
): void {.cdecl, importc: "g_task_return_error".}

proc g_task_return_prefixed_error*(
  task: ptr GTask, error: ptr GError, format: cstring
): void {.cdecl, varargs, importc: "g_task_return_prefixed_error".}

proc g_task_return_new_error*(
  task: ptr GTask, domain: GQuark, code: gint, format: cstring
): void {.cdecl, varargs, importc: "g_task_return_new_error".}

proc g_task_return_new_error_literal*(
  task: ptr GTask, domain: GQuark, code: gint, message: cstring
): void {.cdecl, importc: "g_task_return_new_error_literal".}

proc g_task_return_value*(
  task: ptr GTask, result: ptr GValue
): void {.cdecl, importc: "g_task_return_value".}

proc g_task_return_error_if_cancelled*(
  task: ptr GTask
): gboolean {.cdecl, importc: "g_task_return_error_if_cancelled".}

proc g_task_propagate_pointer*(
  task: ptr GTask, error: ptr ptr GError
): gpointer {.cdecl, importc: "g_task_propagate_pointer".}

proc g_task_propagate_boolean*(
  task: ptr GTask, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_task_propagate_boolean".}

proc g_task_propagate_int*(
  task: ptr GTask, error: ptr ptr GError
): gssize {.cdecl, importc: "g_task_propagate_int".}

proc g_task_propagate_value*(
  task: ptr GTask, value: ptr GValue, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_task_propagate_value".}

proc g_task_had_error*(task: ptr GTask): gboolean {.cdecl, importc: "g_task_had_error".}
proc g_task_get_completed*(
  task: ptr GTask
): gboolean {.cdecl, importc: "g_task_get_completed".}

proc g_task_print_alive_tasks*(): void {.cdecl, importc: "g_task_print_alive_tasks".}
proc g_tcp_connection_get_type*(): GType {.cdecl, importc: "g_tcp_connection_get_type".}
proc g_tcp_connection_set_graceful_disconnect*(
  connection: ptr GTcpConnection, graceful_disconnect: gboolean
): void {.cdecl, importc: "g_tcp_connection_set_graceful_disconnect".}

proc g_tcp_connection_get_graceful_disconnect*(
  connection: ptr GTcpConnection
): gboolean {.cdecl, importc: "g_tcp_connection_get_graceful_disconnect".}

proc g_tcp_wrapper_connection_get_type*(): GType {.
  cdecl, importc: "g_tcp_wrapper_connection_get_type"
.}

proc g_tcp_wrapper_connection_new*(
  base_io_stream: ptr GIOStream, socket: ptr GSocket
): ptr GSocketConnection {.cdecl, importc: "g_tcp_wrapper_connection_new".}

proc g_tcp_wrapper_connection_get_base_io_stream*(
  conn: ptr GTcpWrapperConnection
): ptr GIOStream {.cdecl, importc: "g_tcp_wrapper_connection_get_base_io_stream".}

proc g_test_dbus_get_type*(): GType {.cdecl, importc: "g_test_dbus_get_type".}
proc g_test_dbus_new*(
  flags: GTestDBusFlags
): ptr GTestDBus {.cdecl, importc: "g_test_dbus_new".}

proc g_test_dbus_get_flags*(
  self: ptr GTestDBus
): GTestDBusFlags {.cdecl, importc: "g_test_dbus_get_flags".}

proc g_test_dbus_get_bus_address*(
  self: ptr GTestDBus
): cstring {.cdecl, importc: "g_test_dbus_get_bus_address".}

proc g_test_dbus_add_service_dir*(
  self: ptr GTestDBus, path: cstring
): void {.cdecl, importc: "g_test_dbus_add_service_dir".}

proc g_test_dbus_up*(self: ptr GTestDBus): void {.cdecl, importc: "g_test_dbus_up".}
proc g_test_dbus_stop*(self: ptr GTestDBus): void {.cdecl, importc: "g_test_dbus_stop".}
proc g_test_dbus_down*(self: ptr GTestDBus): void {.cdecl, importc: "g_test_dbus_down".}
proc g_test_dbus_unset*(): void {.cdecl, importc: "g_test_dbus_unset".}
proc g_themed_icon_get_type*(): GType {.cdecl, importc: "g_themed_icon_get_type".}
proc g_themed_icon_new*(
  iconname: cstring
): ptr GIcon {.cdecl, importc: "g_themed_icon_new".}

proc g_themed_icon_new_with_default_fallbacks*(
  iconname: cstring
): ptr GIcon {.cdecl, importc: "g_themed_icon_new_with_default_fallbacks".}

proc g_themed_icon_new_from_names*(
  iconnames: ptr cstring, len: cint
): ptr GIcon {.cdecl, importc: "g_themed_icon_new_from_names".}

proc g_themed_icon_prepend_name*(
  icon: ptr GThemedIcon, iconname: cstring
): void {.cdecl, importc: "g_themed_icon_prepend_name".}

proc g_themed_icon_append_name*(
  icon: ptr GThemedIcon, iconname: cstring
): void {.cdecl, importc: "g_themed_icon_append_name".}

proc g_themed_icon_get_names*(
  icon: ptr GThemedIcon
): ptr cstring {.cdecl, importc: "g_themed_icon_get_names".}

proc g_threaded_socket_service_get_type*(): GType {.
  cdecl, importc: "g_threaded_socket_service_get_type"
.}

proc g_threaded_socket_service_new*(
  max_threads: cint
): ptr GSocketService {.cdecl, importc: "g_threaded_socket_service_new".}

proc g_tls_backend_get_type*(): GType {.cdecl, importc: "g_tls_backend_get_type".}
proc g_tls_backend_get_default*(): ptr GTlsBackend {.
  cdecl, importc: "g_tls_backend_get_default"
.}

proc g_tls_backend_get_default_database*(
  backend: ptr GTlsBackend
): ptr GTlsDatabase {.cdecl, importc: "g_tls_backend_get_default_database".}

proc g_tls_backend_set_default_database*(
  backend: ptr GTlsBackend, database: ptr GTlsDatabase
): void {.cdecl, importc: "g_tls_backend_set_default_database".}

proc g_tls_backend_supports_tls*(
  backend: ptr GTlsBackend
): gboolean {.cdecl, importc: "g_tls_backend_supports_tls".}

proc g_tls_backend_supports_dtls*(
  backend: ptr GTlsBackend
): gboolean {.cdecl, importc: "g_tls_backend_supports_dtls".}

proc g_tls_backend_get_certificate_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_certificate_type".}

proc g_tls_backend_get_client_connection_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_client_connection_type".}

proc g_tls_backend_get_server_connection_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_server_connection_type".}

proc g_tls_backend_get_file_database_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_file_database_type".}

proc g_tls_backend_get_dtls_client_connection_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_dtls_client_connection_type".}

proc g_tls_backend_get_dtls_server_connection_type*(
  backend: ptr GTlsBackend
): GType {.cdecl, importc: "g_tls_backend_get_dtls_server_connection_type".}

proc g_tls_certificate_get_type*(): GType {.
  cdecl, importc: "g_tls_certificate_get_type"
.}

proc g_tls_certificate_new_from_pem*(
  data: cstring, length: gssize, error: ptr ptr GError
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_new_from_pem".}

proc g_tls_certificate_new_from_pkcs12*(
  data: ptr guint8, length: gsize, password: cstring, error: ptr ptr GError
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_new_from_pkcs12".}

proc g_tls_certificate_new_from_file_with_password*(
  file: cstring, password: cstring, error: ptr ptr GError
): ptr GTlsCertificate {.
  cdecl, importc: "g_tls_certificate_new_from_file_with_password"
.}

proc g_tls_certificate_new_from_file*(
  file: cstring, error: ptr ptr GError
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_new_from_file".}

proc g_tls_certificate_new_from_files*(
  cert_file: cstring, key_file: cstring, error: ptr ptr GError
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_new_from_files".}

proc g_tls_certificate_new_from_pkcs11_uris*(
  pkcs11_uri: cstring, private_key_pkcs11_uri: cstring, error: ptr ptr GError
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_new_from_pkcs11_uris".}

proc g_tls_certificate_list_new_from_file*(
  file: cstring, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_tls_certificate_list_new_from_file".}

proc g_tls_certificate_get_issuer*(
  cert: ptr GTlsCertificate
): ptr GTlsCertificate {.cdecl, importc: "g_tls_certificate_get_issuer".}

proc g_tls_certificate_verify*(
  cert: ptr GTlsCertificate,
  identity: ptr GSocketConnectable,
  trusted_ca: ptr GTlsCertificate,
): GTlsCertificateFlags {.cdecl, importc: "g_tls_certificate_verify".}

proc g_tls_certificate_is_same*(
  cert_one: ptr GTlsCertificate, cert_two: ptr GTlsCertificate
): gboolean {.cdecl, importc: "g_tls_certificate_is_same".}

proc g_tls_certificate_get_not_valid_before*(
  cert: ptr GTlsCertificate
): ptr GDateTime {.cdecl, importc: "g_tls_certificate_get_not_valid_before".}

proc g_tls_certificate_get_not_valid_after*(
  cert: ptr GTlsCertificate
): ptr GDateTime {.cdecl, importc: "g_tls_certificate_get_not_valid_after".}

proc g_tls_certificate_get_subject_name*(
  cert: ptr GTlsCertificate
): cstring {.cdecl, importc: "g_tls_certificate_get_subject_name".}

proc g_tls_certificate_get_issuer_name*(
  cert: ptr GTlsCertificate
): cstring {.cdecl, importc: "g_tls_certificate_get_issuer_name".}

proc g_tls_certificate_get_dns_names*(
  cert: ptr GTlsCertificate
): ptr GPtrArray {.cdecl, importc: "g_tls_certificate_get_dns_names".}

proc g_tls_certificate_get_ip_addresses*(
  cert: ptr GTlsCertificate
): ptr GPtrArray {.cdecl, importc: "g_tls_certificate_get_ip_addresses".}

proc g_tls_connection_get_type*(): GType {.cdecl, importc: "g_tls_connection_get_type".}
proc g_tls_connection_set_use_system_certdb*(
  conn: ptr GTlsConnection, use_system_certdb: gboolean
): void {.cdecl, importc: "g_tls_connection_set_use_system_certdb".}

proc g_tls_connection_get_use_system_certdb*(
  conn: ptr GTlsConnection
): gboolean {.cdecl, importc: "g_tls_connection_get_use_system_certdb".}

proc g_tls_connection_set_database*(
  conn: ptr GTlsConnection, database: ptr GTlsDatabase
): void {.cdecl, importc: "g_tls_connection_set_database".}

proc g_tls_connection_get_database*(
  conn: ptr GTlsConnection
): ptr GTlsDatabase {.cdecl, importc: "g_tls_connection_get_database".}

proc g_tls_connection_set_certificate*(
  conn: ptr GTlsConnection, certificate: ptr GTlsCertificate
): void {.cdecl, importc: "g_tls_connection_set_certificate".}

proc g_tls_connection_get_certificate*(
  conn: ptr GTlsConnection
): ptr GTlsCertificate {.cdecl, importc: "g_tls_connection_get_certificate".}

proc g_tls_connection_set_interaction*(
  conn: ptr GTlsConnection, interaction: ptr GTlsInteraction
): void {.cdecl, importc: "g_tls_connection_set_interaction".}

proc g_tls_connection_get_interaction*(
  conn: ptr GTlsConnection
): ptr GTlsInteraction {.cdecl, importc: "g_tls_connection_get_interaction".}

proc g_tls_connection_get_peer_certificate*(
  conn: ptr GTlsConnection
): ptr GTlsCertificate {.cdecl, importc: "g_tls_connection_get_peer_certificate".}

proc g_tls_connection_get_peer_certificate_errors*(
  conn: ptr GTlsConnection
): GTlsCertificateFlags {.
  cdecl, importc: "g_tls_connection_get_peer_certificate_errors"
.}

proc g_tls_connection_set_require_close_notify*(
  conn: ptr GTlsConnection, require_close_notify: gboolean
): void {.cdecl, importc: "g_tls_connection_set_require_close_notify".}

proc g_tls_connection_get_require_close_notify*(
  conn: ptr GTlsConnection
): gboolean {.cdecl, importc: "g_tls_connection_get_require_close_notify".}

proc g_tls_connection_set_rehandshake_mode*(
  conn: ptr GTlsConnection, mode: GTlsRehandshakeMode
): void {.cdecl, importc: "g_tls_connection_set_rehandshake_mode".}

proc g_tls_connection_get_rehandshake_mode*(
  conn: ptr GTlsConnection
): GTlsRehandshakeMode {.cdecl, importc: "g_tls_connection_get_rehandshake_mode".}

proc g_tls_connection_set_advertised_protocols*(
  conn: ptr GTlsConnection, protocols: ptr cstring
): void {.cdecl, importc: "g_tls_connection_set_advertised_protocols".}

proc g_tls_connection_get_negotiated_protocol*(
  conn: ptr GTlsConnection
): cstring {.cdecl, importc: "g_tls_connection_get_negotiated_protocol".}

proc g_tls_connection_get_channel_binding_data*(
  conn: ptr GTlsConnection,
  type_arg: GTlsChannelBindingType,
  data: ptr GByteArray,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_tls_connection_get_channel_binding_data".}

proc g_tls_connection_handshake*(
  conn: ptr GTlsConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_tls_connection_handshake".}

proc g_tls_connection_handshake_async*(
  conn: ptr GTlsConnection,
  io_priority: cint,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_connection_handshake_async".}

proc g_tls_connection_handshake_finish*(
  conn: ptr GTlsConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_tls_connection_handshake_finish".}

proc g_tls_connection_get_protocol_version*(
  conn: ptr GTlsConnection
): GTlsProtocolVersion {.cdecl, importc: "g_tls_connection_get_protocol_version".}

proc g_tls_connection_get_ciphersuite_name*(
  conn: ptr GTlsConnection
): cstring {.cdecl, importc: "g_tls_connection_get_ciphersuite_name".}

proc g_tls_error_quark*(): GQuark {.cdecl, importc: "g_tls_error_quark".}
proc g_tls_channel_binding_error_quark*(): GQuark {.
  cdecl, importc: "g_tls_channel_binding_error_quark"
.}

proc g_tls_connection_emit_accept_certificate*(
  conn: ptr GTlsConnection, peer_cert: ptr GTlsCertificate, errors: GTlsCertificateFlags
): gboolean {.cdecl, importc: "g_tls_connection_emit_accept_certificate".}

proc g_tls_client_connection_get_type*(): GType {.
  cdecl, importc: "g_tls_client_connection_get_type"
.}

proc g_tls_client_connection_new*(
  base_io_stream: ptr GIOStream,
  server_identity: ptr GSocketConnectable,
  error: ptr ptr GError,
): ptr GIOStream {.cdecl, importc: "g_tls_client_connection_new".}

proc g_tls_client_connection_get_validation_flags*(
  conn: ptr GTlsClientConnection
): GTlsCertificateFlags {.
  cdecl, importc: "g_tls_client_connection_get_validation_flags"
.}

proc g_tls_client_connection_set_validation_flags*(
  conn: ptr GTlsClientConnection, flags: GTlsCertificateFlags
): void {.cdecl, importc: "g_tls_client_connection_set_validation_flags".}

proc g_tls_client_connection_get_server_identity*(
  conn: ptr GTlsClientConnection
): ptr GSocketConnectable {.
  cdecl, importc: "g_tls_client_connection_get_server_identity"
.}

proc g_tls_client_connection_set_server_identity*(
  conn: ptr GTlsClientConnection, identity: ptr GSocketConnectable
): void {.cdecl, importc: "g_tls_client_connection_set_server_identity".}

proc g_tls_client_connection_get_use_ssl3*(
  conn: ptr GTlsClientConnection
): gboolean {.cdecl, importc: "g_tls_client_connection_get_use_ssl3".}

proc g_tls_client_connection_set_use_ssl3*(
  conn: ptr GTlsClientConnection, use_ssl3: gboolean
): void {.cdecl, importc: "g_tls_client_connection_set_use_ssl3".}

proc g_tls_client_connection_get_accepted_cas*(
  conn: ptr GTlsClientConnection
): ptr GList {.cdecl, importc: "g_tls_client_connection_get_accepted_cas".}

proc g_tls_client_connection_copy_session_state*(
  conn: ptr GTlsClientConnection, source: ptr GTlsClientConnection
): void {.cdecl, importc: "g_tls_client_connection_copy_session_state".}

proc g_tls_database_get_type*(): GType {.cdecl, importc: "g_tls_database_get_type".}
proc g_tls_database_verify_chain*(
  self: ptr GTlsDatabase,
  chain: ptr GTlsCertificate,
  purpose: cstring,
  identity: ptr GSocketConnectable,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseVerifyFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GTlsCertificateFlags {.cdecl, importc: "g_tls_database_verify_chain".}

proc g_tls_database_verify_chain_async*(
  self: ptr GTlsDatabase,
  chain: ptr GTlsCertificate,
  purpose: cstring,
  identity: ptr GSocketConnectable,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseVerifyFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_database_verify_chain_async".}

proc g_tls_database_verify_chain_finish*(
  self: ptr GTlsDatabase, result: ptr GAsyncResult, error: ptr ptr GError
): GTlsCertificateFlags {.cdecl, importc: "g_tls_database_verify_chain_finish".}

proc g_tls_database_create_certificate_handle*(
  self: ptr GTlsDatabase, certificate: ptr GTlsCertificate
): cstring {.cdecl, importc: "g_tls_database_create_certificate_handle".}

proc g_tls_database_lookup_certificate_for_handle*(
  self: ptr GTlsDatabase,
  handle: cstring,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GTlsCertificate {.
  cdecl, importc: "g_tls_database_lookup_certificate_for_handle"
.}

proc g_tls_database_lookup_certificate_for_handle_async*(
  self: ptr GTlsDatabase,
  handle: cstring,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_database_lookup_certificate_for_handle_async".}

proc g_tls_database_lookup_certificate_for_handle_finish*(
  self: ptr GTlsDatabase, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GTlsCertificate {.
  cdecl, importc: "g_tls_database_lookup_certificate_for_handle_finish"
.}

proc g_tls_database_lookup_certificate_issuer*(
  self: ptr GTlsDatabase,
  certificate: ptr GTlsCertificate,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GTlsCertificate {.cdecl, importc: "g_tls_database_lookup_certificate_issuer".}

proc g_tls_database_lookup_certificate_issuer_async*(
  self: ptr GTlsDatabase,
  certificate: ptr GTlsCertificate,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_database_lookup_certificate_issuer_async".}

proc g_tls_database_lookup_certificate_issuer_finish*(
  self: ptr GTlsDatabase, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GTlsCertificate {.
  cdecl, importc: "g_tls_database_lookup_certificate_issuer_finish"
.}

proc g_tls_database_lookup_certificates_issued_by*(
  self: ptr GTlsDatabase,
  issuer_raw_dn: ptr GByteArray,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "g_tls_database_lookup_certificates_issued_by".}

proc g_tls_database_lookup_certificates_issued_by_async*(
  self: ptr GTlsDatabase,
  issuer_raw_dn: ptr GByteArray,
  interaction: ptr GTlsInteraction,
  flags: GTlsDatabaseLookupFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_database_lookup_certificates_issued_by_async".}

proc g_tls_database_lookup_certificates_issued_by_finish*(
  self: ptr GTlsDatabase, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GList {.cdecl, importc: "g_tls_database_lookup_certificates_issued_by_finish".}

proc g_tls_file_database_get_type*(): GType {.
  cdecl, importc: "g_tls_file_database_get_type"
.}

proc g_tls_file_database_new*(
  anchors: cstring, error: ptr ptr GError
): ptr GTlsDatabase {.cdecl, importc: "g_tls_file_database_new".}

proc g_tls_interaction_get_type*(): GType {.
  cdecl, importc: "g_tls_interaction_get_type"
.}

proc g_tls_interaction_invoke_ask_password*(
  interaction: ptr GTlsInteraction,
  password: ptr GTlsPassword,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GTlsInteractionResult {.cdecl, importc: "g_tls_interaction_invoke_ask_password".}

proc g_tls_interaction_ask_password*(
  interaction: ptr GTlsInteraction,
  password: ptr GTlsPassword,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GTlsInteractionResult {.cdecl, importc: "g_tls_interaction_ask_password".}

proc g_tls_interaction_ask_password_async*(
  interaction: ptr GTlsInteraction,
  password: ptr GTlsPassword,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_interaction_ask_password_async".}

proc g_tls_interaction_ask_password_finish*(
  interaction: ptr GTlsInteraction, result: ptr GAsyncResult, error: ptr ptr GError
): GTlsInteractionResult {.cdecl, importc: "g_tls_interaction_ask_password_finish".}

proc g_tls_interaction_invoke_request_certificate*(
  interaction: ptr GTlsInteraction,
  connection: ptr GTlsConnection,
  flags: GTlsCertificateRequestFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GTlsInteractionResult {.
  cdecl, importc: "g_tls_interaction_invoke_request_certificate"
.}

proc g_tls_interaction_request_certificate*(
  interaction: ptr GTlsInteraction,
  connection: ptr GTlsConnection,
  flags: GTlsCertificateRequestFlags,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): GTlsInteractionResult {.cdecl, importc: "g_tls_interaction_request_certificate".}

proc g_tls_interaction_request_certificate_async*(
  interaction: ptr GTlsInteraction,
  connection: ptr GTlsConnection,
  flags: GTlsCertificateRequestFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_tls_interaction_request_certificate_async".}

proc g_tls_interaction_request_certificate_finish*(
  interaction: ptr GTlsInteraction, result: ptr GAsyncResult, error: ptr ptr GError
): GTlsInteractionResult {.
  cdecl, importc: "g_tls_interaction_request_certificate_finish"
.}

proc g_tls_password_get_type*(): GType {.cdecl, importc: "g_tls_password_get_type".}
proc g_tls_password_new*(
  flags: GTlsPasswordFlags, description: cstring
): ptr GTlsPassword {.cdecl, importc: "g_tls_password_new".}

proc g_tls_password_get_value*(
  password: ptr GTlsPassword, length: ptr gsize
): ptr guchar {.cdecl, importc: "g_tls_password_get_value".}

proc g_tls_password_set_value*(
  password: ptr GTlsPassword, value: ptr guchar, length: gssize
): void {.cdecl, importc: "g_tls_password_set_value".}

proc g_tls_password_set_value_full*(
  password: ptr GTlsPassword, value: ptr guchar, length: gssize, destroy: GDestroyNotify
): void {.cdecl, importc: "g_tls_password_set_value_full".}

proc g_tls_password_get_flags*(
  password: ptr GTlsPassword
): GTlsPasswordFlags {.cdecl, importc: "g_tls_password_get_flags".}

proc g_tls_password_set_flags*(
  password: ptr GTlsPassword, flags: GTlsPasswordFlags
): void {.cdecl, importc: "g_tls_password_set_flags".}

proc g_tls_password_get_description*(
  password: ptr GTlsPassword
): cstring {.cdecl, importc: "g_tls_password_get_description".}

proc g_tls_password_set_description*(
  password: ptr GTlsPassword, description: cstring
): void {.cdecl, importc: "g_tls_password_set_description".}

proc g_tls_password_get_warning*(
  password: ptr GTlsPassword
): cstring {.cdecl, importc: "g_tls_password_get_warning".}

proc g_tls_password_set_warning*(
  password: ptr GTlsPassword, warning: cstring
): void {.cdecl, importc: "g_tls_password_set_warning".}

proc g_tls_server_connection_get_type*(): GType {.
  cdecl, importc: "g_tls_server_connection_get_type"
.}

proc g_tls_server_connection_new*(
  base_io_stream: ptr GIOStream, certificate: ptr GTlsCertificate, error: ptr ptr GError
): ptr GIOStream {.cdecl, importc: "g_tls_server_connection_new".}

proc g_unix_connection_get_type*(): GType {.
  cdecl, importc: "g_unix_connection_get_type"
.}

proc g_unix_connection_send_fd*(
  connection: ptr GUnixConnection,
  fd: gint,
  cancellable: ptr GCancellable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "g_unix_connection_send_fd".}

proc g_unix_connection_receive_fd*(
  connection: ptr GUnixConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gint {.cdecl, importc: "g_unix_connection_receive_fd".}

proc g_unix_connection_send_credentials*(
  connection: ptr GUnixConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_unix_connection_send_credentials".}

proc g_unix_connection_send_credentials_async*(
  connection: ptr GUnixConnection,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_unix_connection_send_credentials_async".}

proc g_unix_connection_send_credentials_finish*(
  connection: ptr GUnixConnection, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_unix_connection_send_credentials_finish".}

proc g_unix_connection_receive_credentials*(
  connection: ptr GUnixConnection, cancellable: ptr GCancellable, error: ptr ptr GError
): ptr GCredentials {.cdecl, importc: "g_unix_connection_receive_credentials".}

proc g_unix_connection_receive_credentials_async*(
  connection: ptr GUnixConnection,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_unix_connection_receive_credentials_async".}

proc g_unix_connection_receive_credentials_finish*(
  connection: ptr GUnixConnection, result: ptr GAsyncResult, error: ptr ptr GError
): ptr GCredentials {.cdecl, importc: "g_unix_connection_receive_credentials_finish".}

proc g_unix_credentials_message_get_type*(): GType {.
  cdecl, importc: "g_unix_credentials_message_get_type"
.}

proc g_unix_credentials_message_new*(): ptr GSocketControlMessage {.
  cdecl, importc: "g_unix_credentials_message_new"
.}

proc g_unix_credentials_message_new_with_credentials*(
  credentials: ptr GCredentials
): ptr GSocketControlMessage {.
  cdecl, importc: "g_unix_credentials_message_new_with_credentials"
.}

proc g_unix_credentials_message_get_credentials*(
  message: ptr GUnixCredentialsMessage
): ptr GCredentials {.cdecl, importc: "g_unix_credentials_message_get_credentials".}

proc g_unix_credentials_message_is_supported*(): gboolean {.
  cdecl, importc: "g_unix_credentials_message_is_supported"
.}

proc g_unix_fd_list_get_type*(): GType {.cdecl, importc: "g_unix_fd_list_get_type".}
proc g_unix_fd_list_new*(): ptr GUnixFDList {.cdecl, importc: "g_unix_fd_list_new".}
proc g_unix_fd_list_new_from_array*(
  fds: ptr gint, n_fds: gint
): ptr GUnixFDList {.cdecl, importc: "g_unix_fd_list_new_from_array".}

proc g_unix_fd_list_append*(
  list: ptr GUnixFDList, fd: gint, error: ptr ptr GError
): gint {.cdecl, importc: "g_unix_fd_list_append".}

proc g_unix_fd_list_get_length*(
  list: ptr GUnixFDList
): gint {.cdecl, importc: "g_unix_fd_list_get_length".}

proc g_unix_fd_list_get*(
  list: ptr GUnixFDList, index_private: gint, error: ptr ptr GError
): gint {.cdecl, importc: "g_unix_fd_list_get".}

proc g_unix_fd_list_peek_fds*(
  list: ptr GUnixFDList, length: ptr gint
): ptr gint {.cdecl, importc: "g_unix_fd_list_peek_fds".}

proc g_unix_fd_list_steal_fds*(
  list: ptr GUnixFDList, length: ptr gint
): ptr gint {.cdecl, importc: "g_unix_fd_list_steal_fds".}

proc g_unix_socket_address_get_type*(): GType {.
  cdecl, importc: "g_unix_socket_address_get_type"
.}

proc g_unix_socket_address_new*(
  path: cstring
): ptr GSocketAddress {.cdecl, importc: "g_unix_socket_address_new".}

proc g_unix_socket_address_new_abstract*(
  path: cstring, path_len: gint
): ptr GSocketAddress {.cdecl, importc: "g_unix_socket_address_new_abstract".}

proc g_unix_socket_address_new_with_type*(
  path: cstring, path_len: gint, type_arg: GUnixSocketAddressType
): ptr GSocketAddress {.cdecl, importc: "g_unix_socket_address_new_with_type".}

proc g_unix_socket_address_get_path*(
  address: ptr GUnixSocketAddress
): cstring {.cdecl, importc: "g_unix_socket_address_get_path".}

proc g_unix_socket_address_get_path_len*(
  address: ptr GUnixSocketAddress
): gsize {.cdecl, importc: "g_unix_socket_address_get_path_len".}

proc g_unix_socket_address_get_address_type*(
  address: ptr GUnixSocketAddress
): GUnixSocketAddressType {.cdecl, importc: "g_unix_socket_address_get_address_type".}

proc g_unix_socket_address_get_is_abstract*(
  address: ptr GUnixSocketAddress
): gboolean {.cdecl, importc: "g_unix_socket_address_get_is_abstract".}

proc g_unix_socket_address_abstract_names_supported*(): gboolean {.
  cdecl, importc: "g_unix_socket_address_abstract_names_supported"
.}

proc g_vfs_get_type*(): GType {.cdecl, importc: "g_vfs_get_type".}
proc g_vfs_is_active*(vfs: ptr GVfs): gboolean {.cdecl, importc: "g_vfs_is_active".}
proc g_vfs_get_file_for_path*(
  vfs: ptr GVfs, path: cstring
): ptr GFile {.cdecl, importc: "g_vfs_get_file_for_path".}

proc g_vfs_get_file_for_uri*(
  vfs: ptr GVfs, uri: cstring
): ptr GFile {.cdecl, importc: "g_vfs_get_file_for_uri".}

proc g_vfs_get_supported_uri_schemes*(
  vfs: ptr GVfs
): ptr cstring {.cdecl, importc: "g_vfs_get_supported_uri_schemes".}

proc g_vfs_parse_name*(
  vfs: ptr GVfs, parse_name: cstring
): ptr GFile {.cdecl, importc: "g_vfs_parse_name".}

proc g_vfs_get_default*(): ptr GVfs {.cdecl, importc: "g_vfs_get_default".}
proc g_vfs_get_local*(): ptr GVfs {.cdecl, importc: "g_vfs_get_local".}
proc g_vfs_register_uri_scheme*(
  vfs: ptr GVfs,
  scheme: cstring,
  uri_func: GVfsFileLookupFunc,
  uri_data: gpointer,
  uri_destroy: GDestroyNotify,
  parse_name_func: GVfsFileLookupFunc,
  parse_name_data: gpointer,
  parse_name_destroy: GDestroyNotify,
): gboolean {.cdecl, importc: "g_vfs_register_uri_scheme".}

proc g_vfs_unregister_uri_scheme*(
  vfs: ptr GVfs, scheme: cstring
): gboolean {.cdecl, importc: "g_vfs_unregister_uri_scheme".}

proc g_volume_get_type*(): GType {.cdecl, importc: "g_volume_get_type".}
proc g_volume_get_name*(
  volume: ptr GVolume
): cstring {.cdecl, importc: "g_volume_get_name".}

proc g_volume_get_icon*(
  volume: ptr GVolume
): ptr GIcon {.cdecl, importc: "g_volume_get_icon".}

proc g_volume_get_symbolic_icon*(
  volume: ptr GVolume
): ptr GIcon {.cdecl, importc: "g_volume_get_symbolic_icon".}

proc g_volume_get_uuid*(
  volume: ptr GVolume
): cstring {.cdecl, importc: "g_volume_get_uuid".}

proc g_volume_get_drive*(
  volume: ptr GVolume
): ptr GDrive {.cdecl, importc: "g_volume_get_drive".}

proc g_volume_get_mount*(
  volume: ptr GVolume
): ptr GMount {.cdecl, importc: "g_volume_get_mount".}

proc g_volume_can_mount*(
  volume: ptr GVolume
): gboolean {.cdecl, importc: "g_volume_can_mount".}

proc g_volume_can_eject*(
  volume: ptr GVolume
): gboolean {.cdecl, importc: "g_volume_can_eject".}

proc g_volume_should_automount*(
  volume: ptr GVolume
): gboolean {.cdecl, importc: "g_volume_should_automount".}

proc g_volume_mount*(
  volume: ptr GVolume,
  flags: GMountMountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_volume_mount".}

proc g_volume_mount_finish*(
  volume: ptr GVolume, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_volume_mount_finish".}

proc g_volume_eject*(
  volume: ptr GVolume,
  flags: GMountUnmountFlags,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_volume_eject".}

proc g_volume_eject_finish*(
  volume: ptr GVolume, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_volume_eject_finish".}

proc g_volume_get_identifier*(
  volume: ptr GVolume, kind: cstring
): cstring {.cdecl, importc: "g_volume_get_identifier".}

proc g_volume_enumerate_identifiers*(
  volume: ptr GVolume
): ptr cstring {.cdecl, importc: "g_volume_enumerate_identifiers".}

proc g_volume_get_activation_root*(
  volume: ptr GVolume
): ptr GFile {.cdecl, importc: "g_volume_get_activation_root".}

proc g_volume_eject_with_operation*(
  volume: ptr GVolume,
  flags: GMountUnmountFlags,
  mount_operation: ptr GMountOperation,
  cancellable: ptr GCancellable,
  callback: GAsyncReadyCallback,
  user_data: gpointer,
): void {.cdecl, importc: "g_volume_eject_with_operation".}

proc g_volume_eject_with_operation_finish*(
  volume: ptr GVolume, result: ptr GAsyncResult, error: ptr ptr GError
): gboolean {.cdecl, importc: "g_volume_eject_with_operation_finish".}

proc g_volume_get_sort_key*(
  volume: ptr GVolume
): cstring {.cdecl, importc: "g_volume_get_sort_key".}

proc g_zlib_compressor_get_type*(): GType {.
  cdecl, importc: "g_zlib_compressor_get_type"
.}

proc g_zlib_compressor_new*(
  format: GZlibCompressorFormat, level: cint
): ptr GZlibCompressor {.cdecl, importc: "g_zlib_compressor_new".}

proc g_zlib_compressor_get_file_info*(
  compressor: ptr GZlibCompressor
): ptr GFileInfo {.cdecl, importc: "g_zlib_compressor_get_file_info".}

proc g_zlib_compressor_set_file_info*(
  compressor: ptr GZlibCompressor, file_info: ptr GFileInfo
): void {.cdecl, importc: "g_zlib_compressor_set_file_info".}

proc g_zlib_decompressor_get_type*(): GType {.
  cdecl, importc: "g_zlib_decompressor_get_type"
.}

proc g_zlib_decompressor_new*(
  format: GZlibCompressorFormat
): ptr GZlibDecompressor {.cdecl, importc: "g_zlib_decompressor_new".}

proc g_zlib_decompressor_get_file_info*(
  decompressor: ptr GZlibDecompressor
): ptr GFileInfo {.cdecl, importc: "g_zlib_decompressor_get_file_info".}

proc garrow_tensor_get_type*(): GType {.cdecl, importc: "garrow_tensor_get_type".}
proc garrow_tensor_new*(
  data_type: ptr GArrowDataType,
  data: ptr GArrowBuffer,
  shape: ptr gint64,
  n_dimensions: gsize,
  strides: ptr gint64,
  n_strides: gsize,
  dimension_names: ptr cstring,
  n_dimension_names: gsize,
): ptr GArrowTensor {.cdecl, importc: "garrow_tensor_new".}

proc garrow_tensor_equal*(
  tensor: ptr GArrowTensor, other_tensor: ptr GArrowTensor
): gboolean {.cdecl, importc: "garrow_tensor_equal".}

proc garrow_tensor_get_value_data_type*(
  tensor: ptr GArrowTensor
): ptr GArrowDataType {.cdecl, importc: "garrow_tensor_get_value_data_type".}

proc garrow_tensor_get_value_type*(
  tensor: ptr GArrowTensor
): GArrowType {.cdecl, importc: "garrow_tensor_get_value_type".}

proc garrow_tensor_get_buffer*(
  tensor: ptr GArrowTensor
): ptr GArrowBuffer {.cdecl, importc: "garrow_tensor_get_buffer".}

proc garrow_tensor_get_shape*(
  tensor: ptr GArrowTensor, n_dimensions: ptr gint
): ptr gint64 {.cdecl, importc: "garrow_tensor_get_shape".}

proc garrow_tensor_get_strides*(
  tensor: ptr GArrowTensor, n_strides: ptr gint
): ptr gint64 {.cdecl, importc: "garrow_tensor_get_strides".}

proc garrow_tensor_get_n_dimensions*(
  tensor: ptr GArrowTensor
): gint {.cdecl, importc: "garrow_tensor_get_n_dimensions".}

proc garrow_tensor_get_dimension_name*(
  tensor: ptr GArrowTensor, i: gint
): cstring {.cdecl, importc: "garrow_tensor_get_dimension_name".}

proc garrow_tensor_get_size*(
  tensor: ptr GArrowTensor
): gint64 {.cdecl, importc: "garrow_tensor_get_size".}

proc garrow_tensor_is_mutable*(
  tensor: ptr GArrowTensor
): gboolean {.cdecl, importc: "garrow_tensor_is_mutable".}

proc garrow_tensor_is_contiguous*(
  tensor: ptr GArrowTensor
): gboolean {.cdecl, importc: "garrow_tensor_is_contiguous".}

proc garrow_tensor_is_row_major*(
  tensor: ptr GArrowTensor
): gboolean {.cdecl, importc: "garrow_tensor_is_row_major".}

proc garrow_tensor_is_column_major*(
  tensor: ptr GArrowTensor
): gboolean {.cdecl, importc: "garrow_tensor_is_column_major".}

proc garrow_output_stream_get_type*(): GType {.
  cdecl, importc: "garrow_output_stream_get_type"
.}

proc garrow_output_stream_align*(
  stream: ptr GArrowOutputStream, alignment: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_output_stream_align".}

proc garrow_output_stream_write_tensor*(
  stream: ptr GArrowOutputStream, tensor: ptr GArrowTensor, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_output_stream_write_tensor".}

proc garrow_output_stream_write_record_batch*(
  stream: ptr GArrowOutputStream,
  record_batch: ptr GArrowRecordBatch,
  options: ptr GArrowWriteOptions,
  error: ptr ptr GError,
): gint64 {.cdecl, importc: "garrow_output_stream_write_record_batch".}

proc garrow_file_output_stream_get_type*(): GType {.
  cdecl, importc: "garrow_file_output_stream_get_type"
.}

proc garrow_file_output_stream_new*(
  path: cstring, append: gboolean, error: ptr ptr GError
): ptr GArrowFileOutputStream {.cdecl, importc: "garrow_file_output_stream_new".}

proc garrow_buffer_output_stream_get_type*(): GType {.
  cdecl, importc: "garrow_buffer_output_stream_get_type"
.}

proc garrow_buffer_output_stream_new*(
  buffer: ptr GArrowResizableBuffer
): ptr GArrowBufferOutputStream {.cdecl, importc: "garrow_buffer_output_stream_new".}

proc garrow_gio_output_stream_get_type*(): GType {.
  cdecl, importc: "garrow_gio_output_stream_get_type"
.}

proc garrow_gio_output_stream_new*(
  gio_output_stream: ptr GOutputStream
): ptr GArrowGIOOutputStream {.cdecl, importc: "garrow_gio_output_stream_new".}

proc garrow_gio_output_stream_get_raw*(
  output_stream: ptr GArrowGIOOutputStream
): ptr GOutputStream {.cdecl, importc: "garrow_gio_output_stream_get_raw".}

proc garrow_compressed_output_stream_get_type*(): GType {.
  cdecl, importc: "garrow_compressed_output_stream_get_type"
.}

proc garrow_compressed_output_stream_new*(
  codec: ptr GArrowCodec, raw: ptr GArrowOutputStream, error: ptr ptr GError
): ptr GArrowCompressedOutputStream {.
  cdecl, importc: "garrow_compressed_output_stream_new"
.}

proc garrow_table_concatenate_options_get_type*(): GType {.
  cdecl, importc: "garrow_table_concatenate_options_get_type"
.}

proc garrow_table_concatenate_options_new*(): ptr GArrowTableConcatenateOptions {.
  cdecl, importc: "garrow_table_concatenate_options_new"
.}

proc garrow_table_get_type*(): GType {.cdecl, importc: "garrow_table_get_type".}
proc garrow_table_new_values*(
  schema: ptr GArrowSchema, values: ptr GList, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_table_new_values".}

proc garrow_table_new_chunked_arrays*(
  schema: ptr GArrowSchema,
  chunked_arrays: ptr ptr GArrowChunkedArray,
  n_chunked_arrays: gsize,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_new_chunked_arrays".}

proc garrow_table_new_arrays*(
  schema: ptr GArrowSchema,
  arrays: ptr ptr GArrowArray,
  n_arrays: gsize,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_new_arrays".}

proc garrow_table_new_record_batches*(
  schema: ptr GArrowSchema,
  record_batches: ptr ptr GArrowRecordBatch,
  n_record_batches: gsize,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_new_record_batches".}

proc garrow_table_equal*(
  table: ptr GArrowTable, other_table: ptr GArrowTable
): gboolean {.cdecl, importc: "garrow_table_equal".}

proc garrow_table_equal_metadata*(
  table: ptr GArrowTable, other_table: ptr GArrowTable, check_metadata: gboolean
): gboolean {.cdecl, importc: "garrow_table_equal_metadata".}

proc garrow_table_get_schema*(
  table: ptr GArrowTable
): ptr GArrowSchema {.cdecl, importc: "garrow_table_get_schema".}

proc garrow_table_get_column_data*(
  table: ptr GArrowTable, i: gint
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_table_get_column_data".}

proc garrow_table_get_n_columns*(
  table: ptr GArrowTable
): guint {.cdecl, importc: "garrow_table_get_n_columns".}

proc garrow_table_get_n_rows*(
  table: ptr GArrowTable
): guint64 {.cdecl, importc: "garrow_table_get_n_rows".}

proc garrow_table_add_column*(
  table: ptr GArrowTable,
  i: guint,
  field: ptr GArrowField,
  chunked_array: ptr GArrowChunkedArray,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_add_column".}

proc garrow_table_remove_column*(
  table: ptr GArrowTable, i: guint, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_table_remove_column".}

proc garrow_table_replace_column*(
  table: ptr GArrowTable,
  i: guint,
  field: ptr GArrowField,
  chunked_array: ptr GArrowChunkedArray,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_replace_column".}

proc garrow_table_to_string*(
  table: ptr GArrowTable, error: ptr ptr GError
): cstring {.cdecl, importc: "garrow_table_to_string".}

proc garrow_table_concatenate*(
  table: ptr GArrowTable,
  other_tables: ptr GList,
  options: ptr GArrowTableConcatenateOptions,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_concatenate".}

proc garrow_table_slice*(
  table: ptr GArrowTable, offset: gint64, length: gint64
): ptr GArrowTable {.cdecl, importc: "garrow_table_slice".}

proc garrow_table_combine_chunks*(
  table: ptr GArrowTable, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_table_combine_chunks".}

proc garrow_table_validate*(
  table: ptr GArrowTable, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_table_validate".}

proc garrow_table_validate_full*(
  table: ptr GArrowTable, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_table_validate_full".}

proc garrow_feather_write_properties_get_type*(): GType {.
  cdecl, importc: "garrow_feather_write_properties_get_type"
.}

proc garrow_feather_write_properties_new*(): ptr GArrowFeatherWriteProperties {.
  cdecl, importc: "garrow_feather_write_properties_new"
.}

proc garrow_table_write_as_feather*(
  table: ptr GArrowTable,
  sink: ptr GArrowOutputStream,
  properties: ptr GArrowFeatherWriteProperties,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_table_write_as_feather".}

proc garrow_datum_get_type*(): GType {.cdecl, importc: "garrow_datum_get_type".}
proc garrow_datum_is_array*(
  datum: ptr GArrowDatum
): gboolean {.cdecl, importc: "garrow_datum_is_array".}

proc garrow_datum_is_array_like*(
  datum: ptr GArrowDatum
): gboolean {.cdecl, importc: "garrow_datum_is_array_like".}

proc garrow_datum_is_scalar*(
  datum: ptr GArrowDatum
): gboolean {.cdecl, importc: "garrow_datum_is_scalar".}

proc garrow_datum_is_value*(
  datum: ptr GArrowDatum
): gboolean {.cdecl, importc: "garrow_datum_is_value".}

proc garrow_datum_equal*(
  datum: ptr GArrowDatum, other_datum: ptr GArrowDatum
): gboolean {.cdecl, importc: "garrow_datum_equal".}

proc garrow_datum_to_string*(
  datum: ptr GArrowDatum
): cstring {.cdecl, importc: "garrow_datum_to_string".}

proc garrow_scalar_datum_get_type*(): GType {.
  cdecl, importc: "garrow_scalar_datum_get_type"
.}

proc garrow_scalar_datum_new*(
  value: ptr GArrowScalar
): ptr GArrowScalarDatum {.cdecl, importc: "garrow_scalar_datum_new".}

proc garrow_array_datum_get_type*(): GType {.
  cdecl, importc: "garrow_array_datum_get_type"
.}

proc garrow_array_datum_new*(
  value: ptr GArrowArray
): ptr GArrowArrayDatum {.cdecl, importc: "garrow_array_datum_new".}

proc garrow_chunked_array_datum_get_type*(): GType {.
  cdecl, importc: "garrow_chunked_array_datum_get_type"
.}

proc garrow_chunked_array_datum_new*(
  value: ptr GArrowChunkedArray
): ptr GArrowChunkedArrayDatum {.cdecl, importc: "garrow_chunked_array_datum_new".}

proc garrow_record_batch_datum_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_datum_get_type"
.}

proc garrow_record_batch_datum_new*(
  value: ptr GArrowRecordBatch
): ptr GArrowRecordBatchDatum {.cdecl, importc: "garrow_record_batch_datum_new".}

proc garrow_table_datum_get_type*(): GType {.
  cdecl, importc: "garrow_table_datum_get_type"
.}

proc garrow_table_datum_new*(
  value: ptr GArrowTable
): ptr GArrowTableDatum {.cdecl, importc: "garrow_table_datum_new".}

proc garrow_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_input_stream_get_type"
.}

proc garrow_input_stream_advance*(
  input_stream: ptr GArrowInputStream, n_bytes: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_input_stream_advance".}

proc garrow_input_stream_align*(
  input_stream: ptr GArrowInputStream, alignment: gint32, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_input_stream_align".}

proc garrow_input_stream_read_tensor*(
  input_stream: ptr GArrowInputStream, error: ptr ptr GError
): ptr GArrowTensor {.cdecl, importc: "garrow_input_stream_read_tensor".}

proc garrow_input_stream_read_record_batch*(
  input_stream: ptr GArrowInputStream,
  schema: ptr GArrowSchema,
  options: ptr GArrowReadOptions,
  error: ptr ptr GError,
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_input_stream_read_record_batch".}

proc garrow_seekable_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_seekable_input_stream_get_type"
.}

proc garrow_seekable_input_stream_get_size*(
  input_stream: ptr GArrowSeekableInputStream, error: ptr ptr GError
): guint64 {.cdecl, importc: "garrow_seekable_input_stream_get_size".}

proc garrow_seekable_input_stream_get_support_zero_copy*(
  input_stream: ptr GArrowSeekableInputStream
): gboolean {.cdecl, importc: "garrow_seekable_input_stream_get_support_zero_copy".}

proc garrow_seekable_input_stream_read_at*(
  input_stream: ptr GArrowSeekableInputStream,
  position: gint64,
  n_bytes: gint64,
  error: ptr ptr GError,
): ptr GArrowBuffer {.cdecl, importc: "garrow_seekable_input_stream_read_at".}

proc garrow_seekable_input_stream_read_at_bytes*(
  input_stream: ptr GArrowSeekableInputStream,
  position: gint64,
  n_bytes: gint64,
  error: ptr ptr GError,
): ptr GBytes {.cdecl, importc: "garrow_seekable_input_stream_read_at_bytes".}

proc garrow_seekable_input_stream_peek*(
  input_stream: ptr GArrowSeekableInputStream, n_bytes: gint64, error: ptr ptr GError
): ptr GBytes {.cdecl, importc: "garrow_seekable_input_stream_peek".}

proc garrow_buffer_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_buffer_input_stream_get_type"
.}

proc garrow_buffer_input_stream_new*(
  buffer: ptr GArrowBuffer
): ptr GArrowBufferInputStream {.cdecl, importc: "garrow_buffer_input_stream_new".}

proc garrow_buffer_input_stream_get_buffer*(
  input_stream: ptr GArrowBufferInputStream
): ptr GArrowBuffer {.cdecl, importc: "garrow_buffer_input_stream_get_buffer".}

proc garrow_file_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_file_input_stream_get_type"
.}

proc garrow_file_input_stream_new*(
  path: cstring, error: ptr ptr GError
): ptr GArrowFileInputStream {.cdecl, importc: "garrow_file_input_stream_new".}

proc garrow_file_input_stream_new_file_descriptor*(
  file_descriptor: gint, error: ptr ptr GError
): ptr GArrowFileInputStream {.
  cdecl, importc: "garrow_file_input_stream_new_file_descriptor"
.}

proc garrow_file_input_stream_get_file_descriptor*(
  stream: ptr GArrowFileInputStream
): gint {.cdecl, importc: "garrow_file_input_stream_get_file_descriptor".}

proc garrow_memory_mapped_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_memory_mapped_input_stream_get_type"
.}

proc garrow_memory_mapped_input_stream_new*(
  path: cstring, error: ptr ptr GError
): ptr GArrowMemoryMappedInputStream {.
  cdecl, importc: "garrow_memory_mapped_input_stream_new"
.}

proc garrow_gio_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_gio_input_stream_get_type"
.}

proc garrow_gio_input_stream_new*(
  gio_input_stream: ptr GInputStream
): ptr GArrowGIOInputStream {.cdecl, importc: "garrow_gio_input_stream_new".}

proc garrow_gio_input_stream_get_raw*(
  input_stream: ptr GArrowGIOInputStream
): ptr GInputStream {.cdecl, importc: "garrow_gio_input_stream_get_raw".}

proc garrow_compressed_input_stream_get_type*(): GType {.
  cdecl, importc: "garrow_compressed_input_stream_get_type"
.}

proc garrow_compressed_input_stream_new*(
  codec: ptr GArrowCodec, raw: ptr GArrowInputStream, error: ptr ptr GError
): ptr GArrowCompressedInputStream {.
  cdecl, importc: "garrow_compressed_input_stream_new"
.}

proc garrow_timestamp_parser_get_type*(): GType {.
  cdecl, importc: "garrow_timestamp_parser_get_type"
.}

proc garrow_timestamp_parser_get_kind*(
  parser: ptr GArrowTimestampParser
): cstring {.cdecl, importc: "garrow_timestamp_parser_get_kind".}

proc garrow_strptime_timestamp_parser_get_type*(): GType {.
  cdecl, importc: "garrow_strptime_timestamp_parser_get_type"
.}

proc garrow_strptime_timestamp_parser_new*(
  format: cstring
): ptr GArrowStrptimeTimestampParser {.
  cdecl, importc: "garrow_strptime_timestamp_parser_new"
.}

proc garrow_strptime_timestamp_parser_get_format*(
  parser: ptr GArrowStrptimeTimestampParser
): cstring {.cdecl, importc: "garrow_strptime_timestamp_parser_get_format".}

proc garrow_iso8601_timestamp_parser_get_type*(): GType {.
  cdecl, importc: "garrow_iso8601_timestamp_parser_get_type"
.}

proc garrow_iso8601_timestamp_parser_new*(): ptr GArrowISO8601TimestampParser {.
  cdecl, importc: "garrow_iso8601_timestamp_parser_new"
.}

proc garrow_record_batch_reader_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_reader_get_type"
.}

proc garrow_record_batch_reader_import*(
  c_abi_array_stream: gpointer, error: ptr ptr GError
): ptr GArrowRecordBatchReader {.cdecl, importc: "garrow_record_batch_reader_import".}

proc garrow_record_batch_reader_new*(
  record_batches: ptr GList, schema: ptr GArrowSchema, error: ptr ptr GError
): ptr GArrowRecordBatchReader {.cdecl, importc: "garrow_record_batch_reader_new".}

proc garrow_record_batch_reader_export*(
  reader: ptr GArrowRecordBatchReader, error: ptr ptr GError
): gpointer {.cdecl, importc: "garrow_record_batch_reader_export".}

proc garrow_record_batch_reader_get_schema*(
  reader: ptr GArrowRecordBatchReader
): ptr GArrowSchema {.cdecl, importc: "garrow_record_batch_reader_get_schema".}

proc garrow_record_batch_reader_get_next_record_batch*(
  reader: ptr GArrowRecordBatchReader, error: ptr ptr GError
): ptr GArrowRecordBatch {.
  cdecl, importc: "garrow_record_batch_reader_get_next_record_batch"
.}

proc garrow_record_batch_reader_read_next_record_batch*(
  reader: ptr GArrowRecordBatchReader, error: ptr ptr GError
): ptr GArrowRecordBatch {.
  cdecl, importc: "garrow_record_batch_reader_read_next_record_batch"
.}

proc garrow_record_batch_reader_read_next*(
  reader: ptr GArrowRecordBatchReader, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_reader_read_next".}

proc garrow_record_batch_reader_read_all*(
  reader: ptr GArrowRecordBatchReader, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_record_batch_reader_read_all".}

proc garrow_record_batch_reader_get_sources*(
  reader: ptr GArrowRecordBatchReader
): ptr GList {.cdecl, importc: "garrow_record_batch_reader_get_sources".}

proc garrow_table_batch_reader_get_type*(): GType {.
  cdecl, importc: "garrow_table_batch_reader_get_type"
.}

proc garrow_table_batch_reader_new*(
  table: ptr GArrowTable
): ptr GArrowTableBatchReader {.cdecl, importc: "garrow_table_batch_reader_new".}

proc garrow_table_batch_reader_set_max_chunk_size*(
  reader: ptr GArrowTableBatchReader, max_chunk_size: gint64
): void {.cdecl, importc: "garrow_table_batch_reader_set_max_chunk_size".}

proc garrow_record_batch_stream_reader_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_stream_reader_get_type"
.}

proc garrow_record_batch_stream_reader_new*(
  stream: ptr GArrowInputStream, error: ptr ptr GError
): ptr GArrowRecordBatchStreamReader {.
  cdecl, importc: "garrow_record_batch_stream_reader_new"
.}

proc garrow_record_batch_file_reader_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_file_reader_get_type"
.}

proc garrow_record_batch_file_reader_new*(
  file: ptr GArrowSeekableInputStream, error: ptr ptr GError
): ptr GArrowRecordBatchFileReader {.
  cdecl, importc: "garrow_record_batch_file_reader_new"
.}

proc garrow_record_batch_file_reader_get_schema*(
  reader: ptr GArrowRecordBatchFileReader
): ptr GArrowSchema {.cdecl, importc: "garrow_record_batch_file_reader_get_schema".}

proc garrow_record_batch_file_reader_get_n_record_batches*(
  reader: ptr GArrowRecordBatchFileReader
): guint {.cdecl, importc: "garrow_record_batch_file_reader_get_n_record_batches".}

proc garrow_record_batch_file_reader_get_version*(
  reader: ptr GArrowRecordBatchFileReader
): GArrowMetadataVersion {.
  cdecl, importc: "garrow_record_batch_file_reader_get_version"
.}

proc garrow_record_batch_file_reader_get_record_batch*(
  reader: ptr GArrowRecordBatchFileReader, i: guint, error: ptr ptr GError
): ptr GArrowRecordBatch {.
  cdecl, importc: "garrow_record_batch_file_reader_get_record_batch"
.}

proc garrow_record_batch_file_reader_read_record_batch*(
  reader: ptr GArrowRecordBatchFileReader, i: guint, error: ptr ptr GError
): ptr GArrowRecordBatch {.
  cdecl, importc: "garrow_record_batch_file_reader_read_record_batch"
.}

proc garrow_feather_file_reader_get_type*(): GType {.
  cdecl, importc: "garrow_feather_file_reader_get_type"
.}

proc garrow_feather_file_reader_new*(
  file: ptr GArrowSeekableInputStream, error: ptr ptr GError
): ptr GArrowFeatherFileReader {.cdecl, importc: "garrow_feather_file_reader_new".}

proc garrow_feather_file_reader_get_version*(
  reader: ptr GArrowFeatherFileReader
): gint {.cdecl, importc: "garrow_feather_file_reader_get_version".}

proc garrow_feather_file_reader_read*(
  reader: ptr GArrowFeatherFileReader, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_feather_file_reader_read".}

proc garrow_feather_file_reader_read_indices*(
  reader: ptr GArrowFeatherFileReader,
  indices: ptr gint,
  n_indices: guint,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_feather_file_reader_read_indices".}

proc garrow_feather_file_reader_read_names*(
  reader: ptr GArrowFeatherFileReader,
  names: ptr cstring,
  n_names: guint,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_feather_file_reader_read_names".}

proc garrow_csv_read_options_get_type*(): GType {.
  cdecl, importc: "garrow_csv_read_options_get_type"
.}

proc garrow_csv_read_options_new*(): ptr GArrowCSVReadOptions {.
  cdecl, importc: "garrow_csv_read_options_new"
.}

proc garrow_csv_read_options_add_column_type*(
  options: ptr GArrowCSVReadOptions, name: cstring, data_type: ptr GArrowDataType
): void {.cdecl, importc: "garrow_csv_read_options_add_column_type".}

proc garrow_csv_read_options_add_schema*(
  options: ptr GArrowCSVReadOptions, schema: ptr GArrowSchema
): void {.cdecl, importc: "garrow_csv_read_options_add_schema".}

proc garrow_csv_read_options_get_column_types*(
  options: ptr GArrowCSVReadOptions
): ptr GHashTable {.cdecl, importc: "garrow_csv_read_options_get_column_types".}

proc garrow_csv_read_options_set_null_values*(
  options: ptr GArrowCSVReadOptions, null_values: ptr cstring, n_null_values: gsize
): void {.cdecl, importc: "garrow_csv_read_options_set_null_values".}

proc garrow_csv_read_options_get_null_values*(
  options: ptr GArrowCSVReadOptions
): ptr cstring {.cdecl, importc: "garrow_csv_read_options_get_null_values".}

proc garrow_csv_read_options_add_null_value*(
  options: ptr GArrowCSVReadOptions, null_value: cstring
): void {.cdecl, importc: "garrow_csv_read_options_add_null_value".}

proc garrow_csv_read_options_set_true_values*(
  options: ptr GArrowCSVReadOptions, true_values: ptr cstring, n_true_values: gsize
): void {.cdecl, importc: "garrow_csv_read_options_set_true_values".}

proc garrow_csv_read_options_get_true_values*(
  options: ptr GArrowCSVReadOptions
): ptr cstring {.cdecl, importc: "garrow_csv_read_options_get_true_values".}

proc garrow_csv_read_options_add_true_value*(
  options: ptr GArrowCSVReadOptions, true_value: cstring
): void {.cdecl, importc: "garrow_csv_read_options_add_true_value".}

proc garrow_csv_read_options_set_false_values*(
  options: ptr GArrowCSVReadOptions, false_values: ptr cstring, n_false_values: gsize
): void {.cdecl, importc: "garrow_csv_read_options_set_false_values".}

proc garrow_csv_read_options_get_false_values*(
  options: ptr GArrowCSVReadOptions
): ptr cstring {.cdecl, importc: "garrow_csv_read_options_get_false_values".}

proc garrow_csv_read_options_add_false_value*(
  options: ptr GArrowCSVReadOptions, false_value: cstring
): void {.cdecl, importc: "garrow_csv_read_options_add_false_value".}

proc garrow_csv_read_options_set_column_names*(
  options: ptr GArrowCSVReadOptions, column_names: ptr cstring, n_column_names: gsize
): void {.cdecl, importc: "garrow_csv_read_options_set_column_names".}

proc garrow_csv_read_options_get_column_names*(
  options: ptr GArrowCSVReadOptions
): ptr cstring {.cdecl, importc: "garrow_csv_read_options_get_column_names".}

proc garrow_csv_read_options_add_column_name*(
  options: ptr GArrowCSVReadOptions, column_name: cstring
): void {.cdecl, importc: "garrow_csv_read_options_add_column_name".}

proc garrow_csv_read_options_set_timestamp_parsers*(
  options: ptr GArrowCSVReadOptions, parsers: ptr GList
): void {.cdecl, importc: "garrow_csv_read_options_set_timestamp_parsers".}

proc garrow_csv_read_options_get_timestamp_parsers*(
  options: ptr GArrowCSVReadOptions
): ptr GList {.cdecl, importc: "garrow_csv_read_options_get_timestamp_parsers".}

proc garrow_csv_read_options_add_timestamp_parser*(
  options: ptr GArrowCSVReadOptions, parser: ptr GArrowTimestampParser
): void {.cdecl, importc: "garrow_csv_read_options_add_timestamp_parser".}

proc garrow_csv_reader_get_type*(): GType {.
  cdecl, importc: "garrow_csv_reader_get_type"
.}

proc garrow_csv_reader_new*(
  input: ptr GArrowInputStream, options: ptr GArrowCSVReadOptions, error: ptr ptr GError
): ptr GArrowCSVReader {.cdecl, importc: "garrow_csv_reader_new".}

proc garrow_csv_reader_read*(
  reader: ptr GArrowCSVReader, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_csv_reader_read".}

proc garrow_json_read_options_get_type*(): GType {.
  cdecl, importc: "garrow_json_read_options_get_type"
.}

proc garrow_json_read_options_new*(): ptr GArrowJSONReadOptions {.
  cdecl, importc: "garrow_json_read_options_new"
.}

proc garrow_json_reader_get_type*(): GType {.
  cdecl, importc: "garrow_json_reader_get_type"
.}

proc garrow_json_reader_new*(
  input: ptr GArrowInputStream,
  options: ptr GArrowJSONReadOptions,
  error: ptr ptr GError,
): ptr GArrowJSONReader {.cdecl, importc: "garrow_json_reader_new".}

proc garrow_json_reader_read*(
  reader: ptr GArrowJSONReader, error: ptr ptr GError
): ptr GArrowTable {.cdecl, importc: "garrow_json_reader_read".}

proc garrow_compute_initialize*(
  error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_compute_initialize".}

proc garrow_execute_context_get_type*(): GType {.
  cdecl, importc: "garrow_execute_context_get_type"
.}

proc garrow_execute_context_new*(): ptr GArrowExecuteContext {.
  cdecl, importc: "garrow_execute_context_new"
.}

proc garrow_function_options_equal*(
  options: ptr GArrowFunctionOptions, other_options: ptr GArrowFunctionOptions
): gboolean {.cdecl, importc: "garrow_function_options_equal".}

proc garrow_function_options_to_string*(
  options: ptr GArrowFunctionOptions
): cstring {.cdecl, importc: "garrow_function_options_to_string".}

proc garrow_function_doc_get_type*(): GType {.
  cdecl, importc: "garrow_function_doc_get_type"
.}

proc garrow_function_doc_get_summary*(
  doc: ptr GArrowFunctionDoc
): cstring {.cdecl, importc: "garrow_function_doc_get_summary".}

proc garrow_function_doc_get_description*(
  doc: ptr GArrowFunctionDoc
): cstring {.cdecl, importc: "garrow_function_doc_get_description".}

proc garrow_function_doc_get_arg_names*(
  doc: ptr GArrowFunctionDoc
): ptr cstring {.cdecl, importc: "garrow_function_doc_get_arg_names".}

proc garrow_function_doc_get_options_class_name*(
  doc: ptr GArrowFunctionDoc
): cstring {.cdecl, importc: "garrow_function_doc_get_options_class_name".}

proc garrow_function_get_type*(): GType {.cdecl, importc: "garrow_function_get_type".}
proc garrow_function_find*(
  name: cstring
): ptr GArrowFunction {.cdecl, importc: "garrow_function_find".}

proc garrow_function_all*(): ptr GList {.cdecl, importc: "garrow_function_all".}
proc garrow_function_execute*(
  function: ptr GArrowFunction,
  args: ptr GList,
  options: ptr GArrowFunctionOptions,
  context: ptr GArrowExecuteContext,
  error: ptr ptr GError,
): ptr GArrowDatum {.cdecl, importc: "garrow_function_execute".}

proc garrow_function_get_name*(
  function: ptr GArrowFunction
): cstring {.cdecl, importc: "garrow_function_get_name".}

proc garrow_function_get_doc*(
  function: ptr GArrowFunction
): ptr GArrowFunctionDoc {.cdecl, importc: "garrow_function_get_doc".}

proc garrow_function_get_default_options*(
  function: ptr GArrowFunction
): ptr GArrowFunctionOptions {.cdecl, importc: "garrow_function_get_default_options".}

proc garrow_function_get_options_type*(
  function: ptr GArrowFunction
): GType {.cdecl, importc: "garrow_function_get_options_type".}

proc garrow_function_equal*(
  function: ptr GArrowFunction, other_function: ptr GArrowFunction
): gboolean {.cdecl, importc: "garrow_function_equal".}

proc garrow_function_to_string*(
  function: ptr GArrowFunction
): cstring {.cdecl, importc: "garrow_function_to_string".}

proc garrow_execute_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_execute_node_options_get_type"
.}

proc garrow_source_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_source_node_options_get_type"
.}

proc garrow_source_node_options_new_record_batch_reader*(
  reader: ptr GArrowRecordBatchReader
): ptr GArrowSourceNodeOptions {.
  cdecl, importc: "garrow_source_node_options_new_record_batch_reader"
.}

proc garrow_source_node_options_new_record_batch*(
  record_batch: ptr GArrowRecordBatch
): ptr GArrowSourceNodeOptions {.
  cdecl, importc: "garrow_source_node_options_new_record_batch"
.}

proc garrow_source_node_options_new_table*(
  table: ptr GArrowTable
): ptr GArrowSourceNodeOptions {.
  cdecl, importc: "garrow_source_node_options_new_table"
.}

proc garrow_filter_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_filter_node_options_get_type"
.}

proc garrow_filter_node_options_new*(
  expression: ptr GArrowExpression
): ptr GArrowFilterNodeOptions {.cdecl, importc: "garrow_filter_node_options_new".}

proc garrow_project_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_project_node_options_get_type"
.}

proc garrow_project_node_options_new*(
  expressions: ptr GList, names: ptr cstring, n_names: gsize
): ptr GArrowProjectNodeOptions {.cdecl, importc: "garrow_project_node_options_new".}

proc garrow_aggregation_get_type*(): GType {.
  cdecl, importc: "garrow_aggregation_get_type"
.}

proc garrow_aggregation_new*(
  function: cstring, options: ptr GArrowFunctionOptions, input: cstring, output: cstring
): ptr GArrowAggregation {.cdecl, importc: "garrow_aggregation_new".}

proc garrow_aggregate_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_aggregate_node_options_get_type"
.}

proc garrow_aggregate_node_options_new*(
  aggregations: ptr GList, keys: ptr cstring, n_keys: gsize, error: ptr ptr GError
): ptr GArrowAggregateNodeOptions {.
  cdecl, importc: "garrow_aggregate_node_options_new"
.}

proc garrow_sink_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_sink_node_options_get_type"
.}

proc garrow_sink_node_options_new*(): ptr GArrowSinkNodeOptions {.
  cdecl, importc: "garrow_sink_node_options_new"
.}

proc garrow_sink_node_options_get_reader*(
  options: ptr GArrowSinkNodeOptions, schema: ptr GArrowSchema
): ptr GArrowRecordBatchReader {.cdecl, importc: "garrow_sink_node_options_get_reader".}

proc garrow_hash_join_node_options_get_type*(): GType {.
  cdecl, importc: "garrow_hash_join_node_options_get_type"
.}

proc garrow_hash_join_node_options_new*(
  type_arg: GArrowJoinType,
  left_keys: ptr cstring,
  n_left_keys: gsize,
  right_keys: ptr cstring,
  n_right_keys: gsize,
  error: ptr ptr GError,
): ptr GArrowHashJoinNodeOptions {.cdecl, importc: "garrow_hash_join_node_options_new".}

proc garrow_hash_join_node_options_set_left_outputs*(
  options: ptr GArrowHashJoinNodeOptions,
  outputs: ptr cstring,
  n_outputs: gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_hash_join_node_options_set_left_outputs".}

proc garrow_hash_join_node_options_set_right_outputs*(
  options: ptr GArrowHashJoinNodeOptions,
  outputs: ptr cstring,
  n_outputs: gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_hash_join_node_options_set_right_outputs".}

proc garrow_execute_node_get_type*(): GType {.
  cdecl, importc: "garrow_execute_node_get_type"
.}

proc garrow_execute_node_get_kind_name*(
  node: ptr GArrowExecuteNode
): cstring {.cdecl, importc: "garrow_execute_node_get_kind_name".}

proc garrow_execute_node_get_output_schema*(
  node: ptr GArrowExecuteNode
): ptr GArrowSchema {.cdecl, importc: "garrow_execute_node_get_output_schema".}

proc garrow_execute_plan_get_type*(): GType {.
  cdecl, importc: "garrow_execute_plan_get_type"
.}

proc garrow_execute_plan_new*(
  error: ptr ptr GError
): ptr GArrowExecutePlan {.cdecl, importc: "garrow_execute_plan_new".}

proc garrow_execute_plan_build_node*(
  plan: ptr GArrowExecutePlan,
  factory_name: cstring,
  inputs: ptr GList,
  options: ptr GArrowExecuteNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_node".}

proc garrow_execute_plan_build_source_node*(
  plan: ptr GArrowExecutePlan,
  options: ptr GArrowSourceNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_source_node".}

proc garrow_execute_plan_build_filter_node*(
  plan: ptr GArrowExecutePlan,
  input: ptr GArrowExecuteNode,
  options: ptr GArrowFilterNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_filter_node".}

proc garrow_execute_plan_build_project_node*(
  plan: ptr GArrowExecutePlan,
  input: ptr GArrowExecuteNode,
  options: ptr GArrowProjectNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_project_node".}

proc garrow_execute_plan_build_aggregate_node*(
  plan: ptr GArrowExecutePlan,
  input: ptr GArrowExecuteNode,
  options: ptr GArrowAggregateNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_aggregate_node".}

proc garrow_execute_plan_build_sink_node*(
  plan: ptr GArrowExecutePlan,
  input: ptr GArrowExecuteNode,
  options: ptr GArrowSinkNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_sink_node".}

proc garrow_execute_plan_build_hash_join_node*(
  plan: ptr GArrowExecutePlan,
  left: ptr GArrowExecuteNode,
  right: ptr GArrowExecuteNode,
  options: ptr GArrowHashJoinNodeOptions,
  error: ptr ptr GError,
): ptr GArrowExecuteNode {.cdecl, importc: "garrow_execute_plan_build_hash_join_node".}

proc garrow_execute_plan_get_nodes*(
  plan: ptr GArrowExecutePlan
): ptr GList {.cdecl, importc: "garrow_execute_plan_get_nodes".}

proc garrow_execute_plan_validate*(
  plan: ptr GArrowExecutePlan, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_execute_plan_validate".}

proc garrow_execute_plan_start*(
  plan: ptr GArrowExecutePlan
): void {.cdecl, importc: "garrow_execute_plan_start".}

proc garrow_execute_plan_stop*(
  plan: ptr GArrowExecutePlan
): void {.cdecl, importc: "garrow_execute_plan_stop".}

proc garrow_execute_plan_wait*(
  plan: ptr GArrowExecutePlan, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_execute_plan_wait".}

proc garrow_cast_options_new*(): ptr GArrowCastOptions {.
  cdecl, importc: "garrow_cast_options_new"
.}

proc garrow_scalar_aggregate_options_get_type*(): GType {.
  cdecl, importc: "garrow_scalar_aggregate_options_get_type"
.}

proc garrow_scalar_aggregate_options_new*(): ptr GArrowScalarAggregateOptions {.
  cdecl, importc: "garrow_scalar_aggregate_options_new"
.}

proc garrow_count_options_get_type*(): GType {.
  cdecl, importc: "garrow_count_options_get_type"
.}

proc garrow_count_options_new*(): ptr GArrowCountOptions {.
  cdecl, importc: "garrow_count_options_new"
.}

proc garrow_filter_options_get_type*(): GType {.
  cdecl, importc: "garrow_filter_options_get_type"
.}

proc garrow_filter_options_new*(): ptr GArrowFilterOptions {.
  cdecl, importc: "garrow_filter_options_new"
.}

proc garrow_take_options_get_type*(): GType {.
  cdecl, importc: "garrow_take_options_get_type"
.}

proc garrow_take_options_new*(): ptr GArrowTakeOptions {.
  cdecl, importc: "garrow_take_options_new"
.}

proc garrow_array_sort_options_get_type*(): GType {.
  cdecl, importc: "garrow_array_sort_options_get_type"
.}

proc garrow_array_sort_options_new*(
  order: GArrowSortOrder
): ptr GArrowArraySortOptions {.cdecl, importc: "garrow_array_sort_options_new".}

proc garrow_array_sort_options_equal*(
  options: ptr GArrowArraySortOptions, other_options: ptr GArrowArraySortOptions
): gboolean {.cdecl, importc: "garrow_array_sort_options_equal".}

proc garrow_sort_key_get_type*(): GType {.cdecl, importc: "garrow_sort_key_get_type".}
proc garrow_sort_key_new*(
  target: cstring, order: GArrowSortOrder, error: ptr ptr GError
): ptr GArrowSortKey {.cdecl, importc: "garrow_sort_key_new".}

proc garrow_sort_key_equal*(
  sort_key: ptr GArrowSortKey, other_sort_key: ptr GArrowSortKey
): gboolean {.cdecl, importc: "garrow_sort_key_equal".}

proc garrow_sort_options_get_type*(): GType {.
  cdecl, importc: "garrow_sort_options_get_type"
.}

proc garrow_sort_options_new*(
  sort_keys: ptr GList
): ptr GArrowSortOptions {.cdecl, importc: "garrow_sort_options_new".}

proc garrow_sort_options_equal*(
  options: ptr GArrowSortOptions, other_options: ptr GArrowSortOptions
): gboolean {.cdecl, importc: "garrow_sort_options_equal".}

proc garrow_sort_options_get_sort_keys*(
  options: ptr GArrowSortOptions
): ptr GList {.cdecl, importc: "garrow_sort_options_get_sort_keys".}

proc garrow_sort_options_set_sort_keys*(
  options: ptr GArrowSortOptions, sort_keys: ptr GList
): void {.cdecl, importc: "garrow_sort_options_set_sort_keys".}

proc garrow_sort_options_add_sort_key*(
  options: ptr GArrowSortOptions, sort_key: ptr GArrowSortKey
): void {.cdecl, importc: "garrow_sort_options_add_sort_key".}

proc garrow_set_lookup_options_get_type*(): GType {.
  cdecl, importc: "garrow_set_lookup_options_get_type"
.}

proc garrow_set_lookup_options_new*(
  value_set: ptr GArrowDatum
): ptr GArrowSetLookupOptions {.cdecl, importc: "garrow_set_lookup_options_new".}

proc garrow_variance_options_get_type*(): GType {.
  cdecl, importc: "garrow_variance_options_get_type"
.}

proc garrow_variance_options_new*(): ptr GArrowVarianceOptions {.
  cdecl, importc: "garrow_variance_options_new"
.}

proc garrow_round_options_get_type*(): GType {.
  cdecl, importc: "garrow_round_options_get_type"
.}

proc garrow_round_options_new*(): ptr GArrowRoundOptions {.
  cdecl, importc: "garrow_round_options_new"
.}

proc garrow_round_to_multiple_options_get_type*(): GType {.
  cdecl, importc: "garrow_round_to_multiple_options_get_type"
.}

proc garrow_round_to_multiple_options_new*(): ptr GArrowRoundToMultipleOptions {.
  cdecl, importc: "garrow_round_to_multiple_options_new"
.}

proc garrow_match_substring_options_get_type*(): GType {.
  cdecl, importc: "garrow_match_substring_options_get_type"
.}

proc garrow_match_substring_options_new*(): ptr GArrowMatchSubstringOptions {.
  cdecl, importc: "garrow_match_substring_options_new"
.}

proc garrow_utf8_normalize_options_get_type*(): GType {.
  cdecl, importc: "garrow_utf8_normalize_options_get_type"
.}

proc garrow_utf8_normalize_options_new*(): ptr GArrowUTF8NormalizeOptions {.
  cdecl, importc: "garrow_utf8_normalize_options_new"
.}

proc garrow_quantile_options_get_type*(): GType {.
  cdecl, importc: "garrow_quantile_options_get_type"
.}

proc garrow_quantile_options_new*(): ptr GArrowQuantileOptions {.
  cdecl, importc: "garrow_quantile_options_new"
.}

proc garrow_quantile_options_get_qs*(
  options: ptr GArrowQuantileOptions, n: ptr gsize
): ptr gdouble {.cdecl, importc: "garrow_quantile_options_get_qs".}

proc garrow_quantile_options_set_q*(
  options: ptr GArrowQuantileOptions, q: gdouble
): void {.cdecl, importc: "garrow_quantile_options_set_q".}

proc garrow_quantile_options_set_qs*(
  options: ptr GArrowQuantileOptions, qs: ptr gdouble, n: gsize
): void {.cdecl, importc: "garrow_quantile_options_set_qs".}

proc garrow_index_options_get_type*(): GType {.
  cdecl, importc: "garrow_index_options_get_type"
.}

proc garrow_index_options_new*(): ptr GArrowIndexOptions {.
  cdecl, importc: "garrow_index_options_new"
.}

proc garrow_rank_options_get_type*(): GType {.
  cdecl, importc: "garrow_rank_options_get_type"
.}

proc garrow_rank_options_new*(): ptr GArrowRankOptions {.
  cdecl, importc: "garrow_rank_options_new"
.}

proc garrow_rank_options_equal*(
  options: ptr GArrowRankOptions, other_options: ptr GArrowRankOptions
): gboolean {.cdecl, importc: "garrow_rank_options_equal".}

proc garrow_rank_options_get_sort_keys*(
  options: ptr GArrowRankOptions
): ptr GList {.cdecl, importc: "garrow_rank_options_get_sort_keys".}

proc garrow_rank_options_set_sort_keys*(
  options: ptr GArrowRankOptions, sort_keys: ptr GList
): void {.cdecl, importc: "garrow_rank_options_set_sort_keys".}

proc garrow_rank_options_add_sort_key*(
  options: ptr GArrowRankOptions, sort_key: ptr GArrowSortKey
): void {.cdecl, importc: "garrow_rank_options_add_sort_key".}

proc garrow_array_cast*(
  array: ptr GArrowArray,
  target_data_type: ptr GArrowDataType,
  options: ptr GArrowCastOptions,
  error: ptr ptr GError,
): ptr GArrowArray {.cdecl, importc: "garrow_array_cast".}

proc garrow_array_unique*(
  array: ptr GArrowArray, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_array_unique".}

proc garrow_array_dictionary_encode*(
  array: ptr GArrowArray, error: ptr ptr GError
): ptr GArrowDictionaryArray {.cdecl, importc: "garrow_array_dictionary_encode".}

proc garrow_array_count*(
  array: ptr GArrowArray, options: ptr GArrowCountOptions, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_array_count".}

proc garrow_array_count_values*(
  array: ptr GArrowArray, error: ptr ptr GError
): ptr GArrowStructArray {.cdecl, importc: "garrow_array_count_values".}

proc garrow_boolean_array_invert*(
  array: ptr GArrowBooleanArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_boolean_array_invert".}

proc garrow_boolean_array_and*(
  left: ptr GArrowBooleanArray, right: ptr GArrowBooleanArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_boolean_array_and".}

proc garrow_boolean_array_or*(
  left: ptr GArrowBooleanArray, right: ptr GArrowBooleanArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_boolean_array_or".}

proc garrow_boolean_array_xor*(
  left: ptr GArrowBooleanArray, right: ptr GArrowBooleanArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_boolean_array_xor".}

proc garrow_numeric_array_mean*(
  array: ptr GArrowNumericArray, error: ptr ptr GError
): gdouble {.cdecl, importc: "garrow_numeric_array_mean".}

proc garrow_int8_array_sum*(
  array: ptr GArrowInt8Array, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_int8_array_sum".}

proc garrow_uint8_array_sum*(
  array: ptr GArrowUInt8Array, error: ptr ptr GError
): guint64 {.cdecl, importc: "garrow_uint8_array_sum".}

proc garrow_int16_array_sum*(
  array: ptr GArrowInt16Array, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_int16_array_sum".}

proc garrow_uint16_array_sum*(
  array: ptr GArrowUInt16Array, error: ptr ptr GError
): guint64 {.cdecl, importc: "garrow_uint16_array_sum".}

proc garrow_int32_array_sum*(
  array: ptr GArrowInt32Array, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_int32_array_sum".}

proc garrow_uint32_array_sum*(
  array: ptr GArrowUInt32Array, error: ptr ptr GError
): guint64 {.cdecl, importc: "garrow_uint32_array_sum".}

proc garrow_int64_array_sum*(
  array: ptr GArrowInt64Array, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_int64_array_sum".}

proc garrow_uint64_array_sum*(
  array: ptr GArrowUInt64Array, error: ptr ptr GError
): guint64 {.cdecl, importc: "garrow_uint64_array_sum".}

proc garrow_float_array_sum*(
  array: ptr GArrowFloatArray, error: ptr ptr GError
): gdouble {.cdecl, importc: "garrow_float_array_sum".}

proc garrow_double_array_sum*(
  array: ptr GArrowDoubleArray, error: ptr ptr GError
): gdouble {.cdecl, importc: "garrow_double_array_sum".}

proc garrow_array_take*(
  array: ptr GArrowArray,
  indices: ptr GArrowArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowArray {.cdecl, importc: "garrow_array_take".}

proc garrow_array_take_chunked_array*(
  array: ptr GArrowArray,
  indices: ptr GArrowChunkedArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_array_take_chunked_array".}

proc garrow_table_take*(
  table: ptr GArrowTable,
  indices: ptr GArrowArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_take".}

proc garrow_table_take_chunked_array*(
  table: ptr GArrowTable,
  indices: ptr GArrowChunkedArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_take_chunked_array".}

proc garrow_chunked_array_take*(
  chunked_array: ptr GArrowChunkedArray,
  indices: ptr GArrowArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_take".}

proc garrow_chunked_array_take_chunked_array*(
  chunked_array: ptr GArrowChunkedArray,
  indices: ptr GArrowChunkedArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_take_chunked_array".}

proc garrow_record_batch_take*(
  record_batch: ptr GArrowRecordBatch,
  indices: ptr GArrowArray,
  options: ptr GArrowTakeOptions,
  error: ptr ptr GError,
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_take".}

proc garrow_array_filter*(
  array: ptr GArrowArray,
  filter: ptr GArrowBooleanArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowArray {.cdecl, importc: "garrow_array_filter".}

proc garrow_array_is_in*(
  left: ptr GArrowArray, right: ptr GArrowArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_array_is_in".}

proc garrow_array_is_in_chunked_array*(
  left: ptr GArrowArray, right: ptr GArrowChunkedArray, error: ptr ptr GError
): ptr GArrowBooleanArray {.cdecl, importc: "garrow_array_is_in_chunked_array".}

proc garrow_array_sort_indices*(
  array: ptr GArrowArray, order: GArrowSortOrder, error: ptr ptr GError
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_array_sort_indices".}

proc garrow_array_sort_to_indices*(
  array: ptr GArrowArray, error: ptr ptr GError
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_array_sort_to_indices".}

proc garrow_chunked_array_sort_indices*(
  chunked_array: ptr GArrowChunkedArray, order: GArrowSortOrder, error: ptr ptr GError
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_chunked_array_sort_indices".}

proc garrow_record_batch_sort_indices*(
  record_batch: ptr GArrowRecordBatch,
  options: ptr GArrowSortOptions,
  error: ptr ptr GError,
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_record_batch_sort_indices".}

proc garrow_table_sort_indices*(
  table: ptr GArrowTable, options: ptr GArrowSortOptions, error: ptr ptr GError
): ptr GArrowUInt64Array {.cdecl, importc: "garrow_table_sort_indices".}

proc garrow_table_filter*(
  table: ptr GArrowTable,
  filter: ptr GArrowBooleanArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_filter".}

proc garrow_table_filter_chunked_array*(
  table: ptr GArrowTable,
  filter: ptr GArrowChunkedArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowTable {.cdecl, importc: "garrow_table_filter_chunked_array".}

proc garrow_chunked_array_filter*(
  chunked_array: ptr GArrowChunkedArray,
  filter: ptr GArrowBooleanArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowChunkedArray {.cdecl, importc: "garrow_chunked_array_filter".}

proc garrow_chunked_array_filter_chunked_array*(
  chunked_array: ptr GArrowChunkedArray,
  filter: ptr GArrowChunkedArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowChunkedArray {.
  cdecl, importc: "garrow_chunked_array_filter_chunked_array"
.}

proc garrow_record_batch_filter*(
  record_batch: ptr GArrowRecordBatch,
  filter: ptr GArrowBooleanArray,
  options: ptr GArrowFilterOptions,
  error: ptr ptr GError,
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_filter".}

proc garrow_run_end_encode_options_get_type*(): GType {.
  cdecl, importc: "garrow_run_end_encode_options_get_type"
.}

proc garrow_run_end_encode_options_new*(
  run_end_data_type: ptr GArrowDataType
): ptr GArrowRunEndEncodeOptions {.cdecl, importc: "garrow_run_end_encode_options_new".}

proc garrow_array_run_end_encode*(
  array: ptr GArrowArray, options: ptr GArrowRunEndEncodeOptions, error: ptr ptr GError
): ptr GArrowRunEndEncodedArray {.cdecl, importc: "garrow_array_run_end_encode".}

proc garrow_run_end_encoded_array_decode*(
  array: ptr GArrowRunEndEncodedArray, error: ptr ptr GError
): ptr GArrowArray {.cdecl, importc: "garrow_run_end_encoded_array_decode".}

proc garrow_strptime_options_get_type*(): GType {.
  cdecl, importc: "garrow_strptime_options_get_type"
.}

proc garrow_strptime_options_new*(): ptr GArrowStrptimeOptions {.
  cdecl, importc: "garrow_strptime_options_new"
.}

proc garrow_strftime_options_get_type*(): GType {.
  cdecl, importc: "garrow_strftime_options_get_type"
.}

proc garrow_strftime_options_new*(): ptr GArrowStrftimeOptions {.
  cdecl, importc: "garrow_strftime_options_new"
.}

proc garrow_split_pattern_options_get_type*(): GType {.
  cdecl, importc: "garrow_split_pattern_options_get_type"
.}

proc garrow_split_pattern_options_new*(): ptr GArrowSplitPatternOptions {.
  cdecl, importc: "garrow_split_pattern_options_new"
.}

proc garrow_struct_field_options_get_type*(): GType {.
  cdecl, importc: "garrow_struct_field_options_get_type"
.}

proc garrow_struct_field_options_set_field_ref*(
  options: ptr GArrowStructFieldOptions, field_ref: cstring, error: ptr ptr GError
): void {.cdecl, importc: "garrow_struct_field_options_set_field_ref".}

proc garrow_struct_field_options_new*(): ptr GArrowStructFieldOptions {.
  cdecl, importc: "garrow_struct_field_options_new"
.}

proc garrow_stream_listener_get_type*(): GType {.
  cdecl, importc: "garrow_stream_listener_get_type"
.}

proc garrow_stream_listener_on_eos*(
  listener: ptr GArrowStreamListener, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_stream_listener_on_eos".}

proc garrow_stream_listener_on_record_batch_decoded*(
  listener: ptr GArrowStreamListener,
  record_batch: ptr GArrowRecordBatch,
  metadata: ptr GHashTable,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_stream_listener_on_record_batch_decoded".}

proc garrow_stream_listener_on_schema_decoded*(
  listener: ptr GArrowStreamListener,
  schema: ptr GArrowSchema,
  filtered_schema: ptr GArrowSchema,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_stream_listener_on_schema_decoded".}

proc garrow_stream_decoder_get_type*(): GType {.
  cdecl, importc: "garrow_stream_decoder_get_type"
.}

proc garrow_stream_decoder_new*(
  listener: ptr GArrowStreamListener, options: ptr GArrowReadOptions
): ptr GArrowStreamDecoder {.cdecl, importc: "garrow_stream_decoder_new".}

proc garrow_stream_decoder_consume_bytes*(
  decoder: ptr GArrowStreamDecoder, bytes: ptr GBytes, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_stream_decoder_consume_bytes".}

proc garrow_stream_decoder_consume_buffer*(
  decoder: ptr GArrowStreamDecoder, buffer: ptr GArrowBuffer, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_stream_decoder_consume_buffer".}

proc garrow_stream_decoder_reset*(
  decoder: ptr GArrowStreamDecoder, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_stream_decoder_reset".}

proc garrow_stream_decoder_get_schema*(
  decoder: ptr GArrowStreamDecoder
): ptr GArrowSchema {.cdecl, importc: "garrow_stream_decoder_get_schema".}

proc garrow_stream_decoder_get_next_required_size*(
  decoder: ptr GArrowStreamDecoder
): gsize {.cdecl, importc: "garrow_stream_decoder_get_next_required_size".}

proc garrow_compression_type_get_type*(): GType {.
  cdecl, importc: "garrow_compression_type_get_type"
.}

proc garrow_join_type_get_type*(): GType {.cdecl, importc: "garrow_join_type_get_type".}
proc garrow_count_mode_get_type*(): GType {.
  cdecl, importc: "garrow_count_mode_get_type"
.}

proc garrow_filter_null_selection_behavior_get_type*(): GType {.
  cdecl, importc: "garrow_filter_null_selection_behavior_get_type"
.}

proc garrow_sort_order_get_type*(): GType {.
  cdecl, importc: "garrow_sort_order_get_type"
.}

proc garrow_null_placement_get_type*(): GType {.
  cdecl, importc: "garrow_null_placement_get_type"
.}

proc garrow_round_mode_get_type*(): GType {.
  cdecl, importc: "garrow_round_mode_get_type"
.}

proc garrow_utf8_normalize_form_get_type*(): GType {.
  cdecl, importc: "garrow_utf8_normalize_form_get_type"
.}

proc garrow_quantile_interpolation_get_type*(): GType {.
  cdecl, importc: "garrow_quantile_interpolation_get_type"
.}

proc garrow_rank_tiebreaker_get_type*(): GType {.
  cdecl, importc: "garrow_rank_tiebreaker_get_type"
.}

proc garrow_error_get_type*(): GType {.cdecl, importc: "garrow_error_get_type".}
proc garrow_file_mode_get_type*(): GType {.cdecl, importc: "garrow_file_mode_get_type".}
proc garrow_file_type_get_type*(): GType {.cdecl, importc: "garrow_file_type_get_type".}
proc garrow_s3_log_level_get_type*(): GType {.
  cdecl, importc: "garrow_s3_log_level_get_type"
.}

proc garrow_metadata_version_get_type*(): GType {.
  cdecl, importc: "garrow_metadata_version_get_type"
.}

proc garrow_json_read_unexpected_field_behavior_get_type*(): GType {.
  cdecl, importc: "garrow_json_read_unexpected_field_behavior_get_type"
.}

proc garrow_type_get_type*(): GType {.cdecl, importc: "garrow_type_get_type".}
proc garrow_time_unit_get_type*(): GType {.cdecl, importc: "garrow_time_unit_get_type".}
proc garrow_interval_type_get_type*(): GType {.
  cdecl, importc: "garrow_interval_type_get_type"
.}

proc garrow_error_quark*(): GQuark {.cdecl, importc: "garrow_error_quark".}
proc garrow_expression_to_string*(
  expression: ptr GArrowExpression
): cstring {.cdecl, importc: "garrow_expression_to_string".}

proc garrow_expression_equal*(
  expression: ptr GArrowExpression, other_expression: ptr GArrowExpression
): gboolean {.cdecl, importc: "garrow_expression_equal".}

proc garrow_literal_expression_get_type*(): GType {.
  cdecl, importc: "garrow_literal_expression_get_type"
.}

proc garrow_literal_expression_new*(
  datum: ptr GArrowDatum
): ptr GArrowLiteralExpression {.cdecl, importc: "garrow_literal_expression_new".}

proc garrow_field_expression_get_type*(): GType {.
  cdecl, importc: "garrow_field_expression_get_type"
.}

proc garrow_field_expression_new*(
  reference: cstring, error: ptr ptr GError
): ptr GArrowFieldExpression {.cdecl, importc: "garrow_field_expression_new".}

proc garrow_call_expression_get_type*(): GType {.
  cdecl, importc: "garrow_call_expression_get_type"
.}

proc garrow_call_expression_new*(
  function: cstring, arguments: ptr GList, options: ptr GArrowFunctionOptions
): ptr GArrowCallExpression {.cdecl, importc: "garrow_call_expression_new".}

proc garrow_memory_pool_get_type*(): GType {.
  cdecl, importc: "garrow_memory_pool_get_type"
.}

proc garrow_memory_pool_default*(): ptr GArrowMemoryPool {.
  cdecl, importc: "garrow_memory_pool_default"
.}

proc garrow_memory_pool_get_bytes_allocated*(
  memory_pool: ptr GArrowMemoryPool
): gint64 {.cdecl, importc: "garrow_memory_pool_get_bytes_allocated".}

proc garrow_memory_pool_get_max_memory*(
  memory_pool: ptr GArrowMemoryPool
): gint64 {.cdecl, importc: "garrow_memory_pool_get_max_memory".}

proc garrow_memory_pool_get_backend_name*(
  memory_pool: ptr GArrowMemoryPool
): cstring {.cdecl, importc: "garrow_memory_pool_get_backend_name".}

proc garrow_record_batch_builder_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_builder_get_type"
.}

proc garrow_record_batch_builder_new*(
  schema: ptr GArrowSchema, error: ptr ptr GError
): ptr GArrowRecordBatchBuilder {.cdecl, importc: "garrow_record_batch_builder_new".}

proc garrow_record_batch_builder_get_initial_capacity*(
  builder: ptr GArrowRecordBatchBuilder
): gint64 {.cdecl, importc: "garrow_record_batch_builder_get_initial_capacity".}

proc garrow_record_batch_builder_set_initial_capacity*(
  builder: ptr GArrowRecordBatchBuilder, capacity: gint64
): void {.cdecl, importc: "garrow_record_batch_builder_set_initial_capacity".}

proc garrow_record_batch_builder_get_schema*(
  builder: ptr GArrowRecordBatchBuilder
): ptr GArrowSchema {.cdecl, importc: "garrow_record_batch_builder_get_schema".}

proc garrow_record_batch_builder_get_n_fields*(
  builder: ptr GArrowRecordBatchBuilder
): gint {.cdecl, importc: "garrow_record_batch_builder_get_n_fields".}

proc garrow_record_batch_builder_get_n_columns*(
  builder: ptr GArrowRecordBatchBuilder
): gint {.cdecl, importc: "garrow_record_batch_builder_get_n_columns".}

proc garrow_record_batch_builder_get_field*(
  builder: ptr GArrowRecordBatchBuilder, i: gint
): ptr GArrowArrayBuilder {.cdecl, importc: "garrow_record_batch_builder_get_field".}

proc garrow_record_batch_builder_get_column_builder*(
  builder: ptr GArrowRecordBatchBuilder, i: gint
): ptr GArrowArrayBuilder {.
  cdecl, importc: "garrow_record_batch_builder_get_column_builder"
.}

proc garrow_record_batch_builder_flush*(
  builder: ptr GArrowRecordBatchBuilder, error: ptr ptr GError
): ptr GArrowRecordBatch {.cdecl, importc: "garrow_record_batch_builder_flush".}

proc garrow_file_get_type*(): GType {.cdecl, importc: "garrow_file_get_type".}
proc garrow_file_close*(
  file: ptr GArrowFile, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_close".}

proc garrow_file_is_closed*(
  file: ptr GArrowFile
): gboolean {.cdecl, importc: "garrow_file_is_closed".}

proc garrow_file_tell*(
  file: ptr GArrowFile, error: ptr ptr GError
): gint64 {.cdecl, importc: "garrow_file_tell".}

proc garrow_file_get_mode*(
  file: ptr GArrowFile
): GArrowFileMode {.cdecl, importc: "garrow_file_get_mode".}

proc garrow_readable_get_type*(): GType {.cdecl, importc: "garrow_readable_get_type".}
proc garrow_readable_read*(
  readable: ptr GArrowReadable, n_bytes: gint64, error: ptr ptr GError
): ptr GArrowBuffer {.cdecl, importc: "garrow_readable_read".}

proc garrow_readable_read_bytes*(
  readable: ptr GArrowReadable, n_bytes: gint64, error: ptr ptr GError
): ptr GBytes {.cdecl, importc: "garrow_readable_read_bytes".}

proc garrow_writable_get_type*(): GType {.cdecl, importc: "garrow_writable_get_type".}
proc garrow_writable_write*(
  writable: ptr GArrowWritable, data: ptr guint8, n_bytes: gint64, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_writable_write".}

proc garrow_writable_flush*(
  writable: ptr GArrowWritable, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_writable_flush".}

proc garrow_writable_file_get_type*(): GType {.
  cdecl, importc: "garrow_writable_file_get_type"
.}

proc garrow_writable_file_write_at*(
  writable_file: ptr GArrowWritableFile,
  position: gint64,
  data: ptr guint8,
  n_bytes: gint64,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_writable_file_write_at".}

proc garrow_record_batch_writer_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_writer_get_type"
.}

proc garrow_record_batch_writer_write_record_batch*(
  writer: ptr GArrowRecordBatchWriter,
  record_batch: ptr GArrowRecordBatch,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_record_batch_writer_write_record_batch".}

proc garrow_record_batch_writer_write_table*(
  writer: ptr GArrowRecordBatchWriter, table: ptr GArrowTable, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_record_batch_writer_write_table".}

proc garrow_record_batch_writer_close*(
  writer: ptr GArrowRecordBatchWriter, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_record_batch_writer_close".}

proc garrow_record_batch_writer_is_closed*(
  writer: ptr GArrowRecordBatchWriter
): gboolean {.cdecl, importc: "garrow_record_batch_writer_is_closed".}

proc garrow_record_batch_stream_writer_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_stream_writer_get_type"
.}

proc garrow_record_batch_stream_writer_new*(
  sink: ptr GArrowOutputStream, schema: ptr GArrowSchema, error: ptr ptr GError
): ptr GArrowRecordBatchStreamWriter {.
  cdecl, importc: "garrow_record_batch_stream_writer_new"
.}

proc garrow_record_batch_file_writer_get_type*(): GType {.
  cdecl, importc: "garrow_record_batch_file_writer_get_type"
.}

proc garrow_record_batch_file_writer_new*(
  sink: ptr GArrowOutputStream, schema: ptr GArrowSchema, error: ptr ptr GError
): ptr GArrowRecordBatchFileWriter {.
  cdecl, importc: "garrow_record_batch_file_writer_new"
.}

proc garrow_file_info_get_type*(): GType {.cdecl, importc: "garrow_file_info_get_type".}
proc garrow_file_info_new*(): ptr GArrowFileInfo {.
  cdecl, importc: "garrow_file_info_new"
.}

proc garrow_file_info_equal*(
  file_info: ptr GArrowFileInfo, other_file_info: ptr GArrowFileInfo
): gboolean {.cdecl, importc: "garrow_file_info_equal".}

proc garrow_file_info_is_file*(
  file_info: ptr GArrowFileInfo
): gboolean {.cdecl, importc: "garrow_file_info_is_file".}

proc garrow_file_info_is_dir*(
  file_info: ptr GArrowFileInfo
): gboolean {.cdecl, importc: "garrow_file_info_is_dir".}

proc garrow_file_info_to_string*(
  file_info: ptr GArrowFileInfo
): cstring {.cdecl, importc: "garrow_file_info_to_string".}

proc garrow_file_selector_get_type*(): GType {.
  cdecl, importc: "garrow_file_selector_get_type"
.}

proc garrow_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_file_system_get_type"
.}

proc garrow_file_system_create*(
  uri: cstring, error: ptr ptr GError
): ptr GArrowFileSystem {.cdecl, importc: "garrow_file_system_create".}

proc garrow_file_system_get_type_name*(
  file_system: ptr GArrowFileSystem
): cstring {.cdecl, importc: "garrow_file_system_get_type_name".}

proc garrow_file_system_get_file_info*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): ptr GArrowFileInfo {.cdecl, importc: "garrow_file_system_get_file_info".}

proc garrow_file_system_get_file_infos_paths*(
  file_system: ptr GArrowFileSystem,
  paths: ptr cstring,
  n_paths: gsize,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "garrow_file_system_get_file_infos_paths".}

proc garrow_file_system_get_file_infos_selector*(
  file_system: ptr GArrowFileSystem,
  file_selector: ptr GArrowFileSelector,
  error: ptr ptr GError,
): ptr GList {.cdecl, importc: "garrow_file_system_get_file_infos_selector".}

proc garrow_file_system_create_dir*(
  file_system: ptr GArrowFileSystem,
  path: cstring,
  recursive: gboolean,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_file_system_create_dir".}

proc garrow_file_system_delete_dir*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_system_delete_dir".}

proc garrow_file_system_delete_dir_contents*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_system_delete_dir_contents".}

proc garrow_file_system_delete_file*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_system_delete_file".}

proc garrow_file_system_delete_files*(
  file_system: ptr GArrowFileSystem,
  paths: ptr cstring,
  n_paths: gsize,
  error: ptr ptr GError,
): gboolean {.cdecl, importc: "garrow_file_system_delete_files".}

proc garrow_file_system_move*(
  file_system: ptr GArrowFileSystem, src: cstring, dest: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_system_move".}

proc garrow_file_system_copy_file*(
  file_system: ptr GArrowFileSystem, src: cstring, dest: cstring, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_file_system_copy_file".}

proc garrow_file_system_open_input_stream*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): ptr GArrowInputStream {.cdecl, importc: "garrow_file_system_open_input_stream".}

proc garrow_file_system_open_input_file*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): ptr GArrowSeekableInputStream {.
  cdecl, importc: "garrow_file_system_open_input_file"
.}

proc garrow_file_system_open_output_stream*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): ptr GArrowOutputStream {.cdecl, importc: "garrow_file_system_open_output_stream".}

proc garrow_file_system_open_append_stream*(
  file_system: ptr GArrowFileSystem, path: cstring, error: ptr ptr GError
): ptr GArrowOutputStream {.cdecl, importc: "garrow_file_system_open_append_stream".}

proc garrow_sub_tree_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_sub_tree_file_system_get_type"
.}

proc garrow_sub_tree_file_system_new*(
  base_path: cstring, base_file_system: ptr GArrowFileSystem
): ptr GArrowSubTreeFileSystem {.cdecl, importc: "garrow_sub_tree_file_system_new".}

proc garrow_slow_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_slow_file_system_get_type"
.}

proc garrow_slow_file_system_new_average_latency*(
  base_file_system: ptr GArrowFileSystem, average_latency: gdouble
): ptr GArrowSlowFileSystem {.
  cdecl, importc: "garrow_slow_file_system_new_average_latency"
.}

proc garrow_slow_file_system_new_average_latency_and_seed*(
  base_file_system: ptr GArrowFileSystem, average_latency: gdouble, seed: gint32
): ptr GArrowSlowFileSystem {.
  cdecl, importc: "garrow_slow_file_system_new_average_latency_and_seed"
.}

proc garrow_mock_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_mock_file_system_get_type"
.}

proc garrow_hdfs_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_hdfs_file_system_get_type"
.}

proc garrow_s3_global_options_get_type*(): GType {.
  cdecl, importc: "garrow_s3_global_options_get_type"
.}

proc garrow_s3_global_options_new*(): ptr GArrowS3GlobalOptions {.
  cdecl, importc: "garrow_s3_global_options_new"
.}

proc garrow_s3_is_enabled*(): gboolean {.cdecl, importc: "garrow_s3_is_enabled".}
proc garrow_s3_initialize*(
  options: ptr GArrowS3GlobalOptions, error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_s3_initialize".}

proc garrow_s3_finalize*(
  error: ptr ptr GError
): gboolean {.cdecl, importc: "garrow_s3_finalize".}

proc garrow_s3_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_s3_file_system_get_type"
.}

proc garrow_gcs_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_gcs_file_system_get_type"
.}

proc garrow_azure_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_azure_file_system_get_type"
.}

proc garrow_local_file_system_options_get_type*(): GType {.
  cdecl, importc: "garrow_local_file_system_options_get_type"
.}

proc garrow_local_file_system_options_new*(): ptr GArrowLocalFileSystemOptions {.
  cdecl, importc: "garrow_local_file_system_options_new"
.}

proc garrow_local_file_system_get_type*(): GType {.
  cdecl, importc: "garrow_local_file_system_get_type"
.}

proc garrow_local_file_system_new*(
  options: ptr GArrowLocalFileSystemOptions
): ptr GArrowLocalFileSystem {.cdecl, importc: "garrow_local_file_system_new".}
